/** 
 * Iris 0.2.10
 *
 * @license Copyright (c) 2012-2013 The Silvan Group
 * For more information, see: http://github.com/silvn/iris
 */

(function () {
var Iris;(function () { if (!Iris || !Iris.requirejs) {
if (!Iris) { Iris = {}; } else { require = Iris; }
/** vim: et:ts=4:sw=4:sts=4
 * @license RequireJS 2.1.9 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/requirejs for details
 */
//Not using strict: uneven strict support in browsers, #392, and causes
//problems with requirejs.exec()/transpiler plugins that may not be strict.
/*jslint regexp: true, nomen: true, sloppy: true */
/*global window, navigator, document, importScripts, setTimeout, opera */

var requirejs, require, define;
(function (global) {
    var req, s, head, baseElement, dataMain, src,
        interactiveScript, currentlyAddingScript, mainScript, subPath,
        version = '2.1.9',
        commentRegExp = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
        cjsRequireRegExp = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
        jsSuffixRegExp = /\.js$/,
        currDirRegExp = /^\.\//,
        op = Object.prototype,
        ostring = op.toString,
        hasOwn = op.hasOwnProperty,
        ap = Array.prototype,
        apsp = ap.splice,
        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),
        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',
        //PS3 indicates loaded and complete, but need to wait for complete
        //specifically. Sequence is 'loading', 'loaded', execution,
        // then 'complete'. The UA check is unfortunate, but not sure how
        //to feature test w/o causing perf issues.
        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?
                      /^complete$/ : /^(complete|loaded)$/,
        defContextName = '_',
        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.
        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',
        contexts = {},
        cfg = {},
        globalDefQueue = [],
        useInteractive = false;

    function isFunction(it) {
        return ostring.call(it) === '[object Function]';
    }

    function isArray(it) {
        return ostring.call(it) === '[object Array]';
    }

    /**
     * Helper function for iterating over an array. If the func returns
     * a true value, it will break out of the loop.
     */
    function each(ary, func) {
        if (ary) {
            var i;
            for (i = 0; i < ary.length; i += 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    /**
     * Helper function for iterating over an array backwards. If the func
     * returns a true value, it will break out of the loop.
     */
    function eachReverse(ary, func) {
        if (ary) {
            var i;
            for (i = ary.length - 1; i > -1; i -= 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    function getOwn(obj, prop) {
        return hasProp(obj, prop) && obj[prop];
    }

    /**
     * Cycles over properties in an object and calls a function for each
     * property value. If the function returns a truthy value, then the
     * iteration is stopped.
     */
    function eachProp(obj, func) {
        var prop;
        for (prop in obj) {
            if (hasProp(obj, prop)) {
                if (func(obj[prop], prop)) {
                    break;
                }
            }
        }
    }

    /**
     * Simple function to mix in properties from source into target,
     * but only if target does not already have a property of the same name.
     */
    function mixin(target, source, force, deepStringMixin) {
        if (source) {
            eachProp(source, function (value, prop) {
                if (force || !hasProp(target, prop)) {
                    if (deepStringMixin && typeof value !== 'string') {
                        if (!target[prop]) {
                            target[prop] = {};
                        }
                        mixin(target[prop], value, force, deepStringMixin);
                    } else {
                        target[prop] = value;
                    }
                }
            });
        }
        return target;
    }

    //Similar to Function.prototype.bind, but the 'this' object is specified
    //first, since it is easier to read/figure out what 'this' will be.
    function bind(obj, fn) {
        return function () {
            return fn.apply(obj, arguments);
        };
    }

    function scripts() {
        return document.getElementsByTagName('script');
    }

    function defaultOnError(err) {
        throw err;
    }

    //Allow getting a global that expressed in
    //dot notation, like 'a.b.c'.
    function getGlobal(value) {
        if (!value) {
            return value;
        }
        var g = global;
        each(value.split('.'), function (part) {
            g = g[part];
        });
        return g;
    }

    /**
     * Constructs an error with a pointer to an URL with more information.
     * @param {String} id the error ID that maps to an ID on a web page.
     * @param {String} message human readable error.
     * @param {Error} [err] the original error, if there is one.
     *
     * @returns {Error}
     */
    function makeError(id, msg, err, requireModules) {
        var e = new Error(msg + '\nhttp://requirejs.org/docs/errors.html#' + id);
        e.requireType = id;
        e.requireModules = requireModules;
        if (err) {
            e.originalError = err;
        }
        return e;
    }

    if (typeof define !== 'undefined') {
        //If a define is already in play via another AMD loader,
        //do not overwrite.
        return;
    }

    if (typeof requirejs !== 'undefined') {
        if (isFunction(requirejs)) {
            //Do not overwrite and existing requirejs instance.
            return;
        }
        cfg = requirejs;
        requirejs = undefined;
    }

    //Allow for a require config object
    if (typeof require !== 'undefined' && !isFunction(require)) {
        //assume it is a config object.
        cfg = require;
        require = undefined;
    }

    function newContext(contextName) {
        var inCheckLoaded, Module, context, handlers,
            checkLoadedTimeoutId,
            config = {
                //Defaults. Do not set a default for map
                //config to speed up normalize(), which
                //will run faster if there is no default.
                waitSeconds: 7,
                baseUrl: './',
                paths: {},
                pkgs: {},
                shim: {},
                config: {}
            },
            registry = {},
            //registry of just enabled modules, to speed
            //cycle breaking code when lots of modules
            //are registered, but not activated.
            enabledRegistry = {},
            undefEvents = {},
            defQueue = [],
            defined = {},
            urlFetched = {},
            requireCounter = 1,
            unnormalizedCounter = 1;

        /**
         * Trims the . and .. from an array of path segments.
         * It will keep a leading path segment if a .. will become
         * the first path segment, to help with module name lookups,
         * which act like paths, but can be remapped. But the end result,
         * all paths that use this function should look normalized.
         * NOTE: this method MODIFIES the input array.
         * @param {Array} ary the array of path segments.
         */
        function trimDots(ary) {
            var i, part;
            for (i = 0; ary[i]; i += 1) {
                part = ary[i];
                if (part === '.') {
                    ary.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {
                        //End of the line. Keep at least one non-dot
                        //path segment at the front so it can be mapped
                        //correctly to disk. Otherwise, there is likely
                        //no path mapping for a path starting with '..'.
                        //This can still fail, but catches the most reasonable
                        //uses of ..
                        break;
                    } else if (i > 0) {
                        ary.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
        }

        /**
         * Given a relative module name, like ./something, normalize it to
         * a real name that can be mapped to a path.
         * @param {String} name the relative name
         * @param {String} baseName a real name that the name arg is relative
         * to.
         * @param {Boolean} applyMap apply the map config to the value. Should
         * only be done if this normalization is for a dependency ID.
         * @returns {String} normalized name
         */
        function normalize(name, baseName, applyMap) {
            var pkgName, pkgConfig, mapValue, nameParts, i, j, nameSegment,
                foundMap, foundI, foundStarMap, starI,
                baseParts = baseName && baseName.split('/'),
                normalizedBaseParts = baseParts,
                map = config.map,
                starMap = map && map['*'];

            //Adjust any relative paths.
            if (name && name.charAt(0) === '.') {
                //If have a base name, try to normalize against it,
                //otherwise, assume it is a top-level require that will
                //be relative to baseUrl in the end.
                if (baseName) {
                    if (getOwn(config.pkgs, baseName)) {
                        //If the baseName is a package name, then just treat it as one
                        //name to concat the name with.
                        normalizedBaseParts = baseParts = [baseName];
                    } else {
                        //Convert baseName to array, and lop off the last part,
                        //so that . matches that 'directory' and not name of the baseName's
                        //module. For instance, baseName of 'one/two/three', maps to
                        //'one/two/three.js', but we want the directory, 'one/two' for
                        //this normalization.
                        normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                    }

                    name = normalizedBaseParts.concat(name.split('/'));
                    trimDots(name);

                    //Some use of packages may use a . path to reference the
                    //'main' module name, so normalize for that.
                    pkgConfig = getOwn(config.pkgs, (pkgName = name[0]));
                    name = name.join('/');
                    if (pkgConfig && name === pkgName + '/' + pkgConfig.main) {
                        name = pkgName;
                    }
                } else if (name.indexOf('./') === 0) {
                    // No baseName, so this is ID is resolved relative
                    // to baseUrl, pull off the leading dot.
                    name = name.substring(2);
                }
            }

            //Apply map config if available.
            if (applyMap && map && (baseParts || starMap)) {
                nameParts = name.split('/');

                for (i = nameParts.length; i > 0; i -= 1) {
                    nameSegment = nameParts.slice(0, i).join('/');

                    if (baseParts) {
                        //Find the longest baseName segment match in the config.
                        //So, do joins on the biggest to smallest lengths of baseParts.
                        for (j = baseParts.length; j > 0; j -= 1) {
                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));

                            //baseName segment has config, find if it has one for
                            //this name.
                            if (mapValue) {
                                mapValue = getOwn(mapValue, nameSegment);
                                if (mapValue) {
                                    //Match, update name to the new value.
                                    foundMap = mapValue;
                                    foundI = i;
                                    break;
                                }
                            }
                        }
                    }

                    if (foundMap) {
                        break;
                    }

                    //Check for a star map match, but just hold on to it,
                    //if there is a shorter segment match later in a matching
                    //config, then favor over this star map.
                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {
                        foundStarMap = getOwn(starMap, nameSegment);
                        starI = i;
                    }
                }

                if (!foundMap && foundStarMap) {
                    foundMap = foundStarMap;
                    foundI = starI;
                }

                if (foundMap) {
                    nameParts.splice(0, foundI, foundMap);
                    name = nameParts.join('/');
                }
            }

            return name;
        }

        function removeScript(name) {
            if (isBrowser) {
                each(scripts(), function (scriptNode) {
                    if (scriptNode.getAttribute('data-requiremodule') === name &&
                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {
                        scriptNode.parentNode.removeChild(scriptNode);
                        return true;
                    }
                });
            }
        }

        function hasPathFallback(id) {
            var pathConfig = getOwn(config.paths, id);
            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {
                //Pop off the first array value, since it failed, and
                //retry
                pathConfig.shift();
                context.require.undef(id);
                context.require([id]);
                return true;
            }
        }

        //Turns a plugin!resource to [plugin, resource]
        //with the plugin being undefined if the name
        //did not have a plugin prefix.
        function splitPrefix(name) {
            var prefix,
                index = name ? name.indexOf('!') : -1;
            if (index > -1) {
                prefix = name.substring(0, index);
                name = name.substring(index + 1, name.length);
            }
            return [prefix, name];
        }

        /**
         * Creates a module mapping that includes plugin prefix, module
         * name, and path. If parentModuleMap is provided it will
         * also normalize the name via require.normalize()
         *
         * @param {String} name the module name
         * @param {String} [parentModuleMap] parent module map
         * for the module name, used to resolve relative names.
         * @param {Boolean} isNormalized: is the ID already normalized.
         * This is true if this call is done for a define() module ID.
         * @param {Boolean} applyMap: apply the map config to the ID.
         * Should only be true if this map is for a dependency.
         *
         * @returns {Object}
         */
        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {
            var url, pluginModule, suffix, nameParts,
                prefix = null,
                parentName = parentModuleMap ? parentModuleMap.name : null,
                originalName = name,
                isDefine = true,
                normalizedName = '';

            //If no name, then it means it is a require call, generate an
            //internal name.
            if (!name) {
                isDefine = false;
                name = '_@r' + (requireCounter += 1);
            }

            nameParts = splitPrefix(name);
            prefix = nameParts[0];
            name = nameParts[1];

            if (prefix) {
                prefix = normalize(prefix, parentName, applyMap);
                pluginModule = getOwn(defined, prefix);
            }

            //Account for relative paths if there is a base name.
            if (name) {
                if (prefix) {
                    if (pluginModule && pluginModule.normalize) {
                        //Plugin is loaded, use its normalize method.
                        normalizedName = pluginModule.normalize(name, function (name) {
                            return normalize(name, parentName, applyMap);
                        });
                    } else {
                        normalizedName = normalize(name, parentName, applyMap);
                    }
                } else {
                    //A regular module.
                    normalizedName = normalize(name, parentName, applyMap);

                    //Normalized name may be a plugin ID due to map config
                    //application in normalize. The map config values must
                    //already be normalized, so do not need to redo that part.
                    nameParts = splitPrefix(normalizedName);
                    prefix = nameParts[0];
                    normalizedName = nameParts[1];
                    isNormalized = true;

                    url = context.nameToUrl(normalizedName);
                }
            }

            //If the id is a plugin id that cannot be determined if it needs
            //normalization, stamp it with a unique ID so two matching relative
            //ids that may conflict can be separate.
            suffix = prefix && !pluginModule && !isNormalized ?
                     '_unnormalized' + (unnormalizedCounter += 1) :
                     '';

            return {
                prefix: prefix,
                name: normalizedName,
                parentMap: parentModuleMap,
                unnormalized: !!suffix,
                url: url,
                originalName: originalName,
                isDefine: isDefine,
                id: (prefix ?
                        prefix + '!' + normalizedName :
                        normalizedName) + suffix
            };
        }

        function getModule(depMap) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (!mod) {
                mod = registry[id] = new context.Module(depMap);
            }

            return mod;
        }

        function on(depMap, name, fn) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (hasProp(defined, id) &&
                    (!mod || mod.defineEmitComplete)) {
                if (name === 'defined') {
                    fn(defined[id]);
                }
            } else {
                mod = getModule(depMap);
                if (mod.error && name === 'error') {
                    fn(mod.error);
                } else {
                    mod.on(name, fn);
                }
            }
        }

        function onError(err, errback) {
            var ids = err.requireModules,
                notified = false;

            if (errback) {
                errback(err);
            } else {
                each(ids, function (id) {
                    var mod = getOwn(registry, id);
                    if (mod) {
                        //Set error on module, so it skips timeout checks.
                        mod.error = err;
                        if (mod.events.error) {
                            notified = true;
                            mod.emit('error', err);
                        }
                    }
                });

                if (!notified) {
                    req.onError(err);
                }
            }
        }

        /**
         * Internal method to transfer globalQueue items to this context's
         * defQueue.
         */
        function takeGlobalQueue() {
            //Push all the globalDefQueue items into the context's defQueue
            if (globalDefQueue.length) {
                //Array splice in the values since the context code has a
                //local var ref to defQueue, so cannot just reassign the one
                //on context.
                apsp.apply(defQueue,
                           [defQueue.length - 1, 0].concat(globalDefQueue));
                globalDefQueue = [];
            }
        }

        handlers = {
            'require': function (mod) {
                if (mod.require) {
                    return mod.require;
                } else {
                    return (mod.require = context.makeRequire(mod.map));
                }
            },
            'exports': function (mod) {
                mod.usingExports = true;
                if (mod.map.isDefine) {
                    if (mod.exports) {
                        return mod.exports;
                    } else {
                        return (mod.exports = defined[mod.map.id] = {});
                    }
                }
            },
            'module': function (mod) {
                if (mod.module) {
                    return mod.module;
                } else {
                    return (mod.module = {
                        id: mod.map.id,
                        uri: mod.map.url,
                        config: function () {
                            var c,
                                pkg = getOwn(config.pkgs, mod.map.id);
                            // For packages, only support config targeted
                            // at the main module.
                            c = pkg ? getOwn(config.config, mod.map.id + '/' + pkg.main) :
                                      getOwn(config.config, mod.map.id);
                            return  c || {};
                        },
                        exports: defined[mod.map.id]
                    });
                }
            }
        };

        function cleanRegistry(id) {
            //Clean up machinery used for waiting modules.
            delete registry[id];
            delete enabledRegistry[id];
        }

        function breakCycle(mod, traced, processed) {
            var id = mod.map.id;

            if (mod.error) {
                mod.emit('error', mod.error);
            } else {
                traced[id] = true;
                each(mod.depMaps, function (depMap, i) {
                    var depId = depMap.id,
                        dep = getOwn(registry, depId);

                    //Only force things that have not completed
                    //being defined, so still in the registry,
                    //and only if it has not been matched up
                    //in the module already.
                    if (dep && !mod.depMatched[i] && !processed[depId]) {
                        if (getOwn(traced, depId)) {
                            mod.defineDep(i, defined[depId]);
                            mod.check(); //pass false?
                        } else {
                            breakCycle(dep, traced, processed);
                        }
                    }
                });
                processed[id] = true;
            }
        }

        function checkLoaded() {
            var map, modId, err, usingPathFallback,
                waitInterval = config.waitSeconds * 1000,
                //It is possible to disable the wait interval by using waitSeconds of 0.
                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),
                noLoads = [],
                reqCalls = [],
                stillLoading = false,
                needCycleCheck = true;

            //Do not bother if this call was a result of a cycle break.
            if (inCheckLoaded) {
                return;
            }

            inCheckLoaded = true;

            //Figure out the state of all the modules.
            eachProp(enabledRegistry, function (mod) {
                map = mod.map;
                modId = map.id;

                //Skip things that are not enabled or in error state.
                if (!mod.enabled) {
                    return;
                }

                if (!map.isDefine) {
                    reqCalls.push(mod);
                }

                if (!mod.error) {
                    //If the module should be executed, and it has not
                    //been inited and time is up, remember it.
                    if (!mod.inited && expired) {
                        if (hasPathFallback(modId)) {
                            usingPathFallback = true;
                            stillLoading = true;
                        } else {
                            noLoads.push(modId);
                            removeScript(modId);
                        }
                    } else if (!mod.inited && mod.fetched && map.isDefine) {
                        stillLoading = true;
                        if (!map.prefix) {
                            //No reason to keep looking for unfinished
                            //loading. If the only stillLoading is a
                            //plugin resource though, keep going,
                            //because it may be that a plugin resource
                            //is waiting on a non-plugin cycle.
                            return (needCycleCheck = false);
                        }
                    }
                }
            });

            if (expired && noLoads.length) {
                //If wait time expired, throw error of unloaded modules.
                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);
                err.contextName = context.contextName;
                return onError(err);
            }

            //Not expired, check for a cycle.
            if (needCycleCheck) {
                each(reqCalls, function (mod) {
                    breakCycle(mod, {}, {});
                });
            }

            //If still waiting on loads, and the waiting load is something
            //other than a plugin resource, or there are still outstanding
            //scripts, then just try back later.
            if ((!expired || usingPathFallback) && stillLoading) {
                //Something is still waiting to load. Wait for it, but only
                //if a timeout is not already in effect.
                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {
                    checkLoadedTimeoutId = setTimeout(function () {
                        checkLoadedTimeoutId = 0;
                        checkLoaded();
                    }, 50);
                }
            }

            inCheckLoaded = false;
        }

        Module = function (map) {
            this.events = getOwn(undefEvents, map.id) || {};
            this.map = map;
            this.shim = getOwn(config.shim, map.id);
            this.depExports = [];
            this.depMaps = [];
            this.depMatched = [];
            this.pluginMaps = {};
            this.depCount = 0;

            /* this.exports this.factory
               this.depMaps = [],
               this.enabled, this.fetched
            */
        };

        Module.prototype = {
            init: function (depMaps, factory, errback, options) {
                options = options || {};

                //Do not do more inits if already done. Can happen if there
                //are multiple define calls for the same module. That is not
                //a normal, common case, but it is also not unexpected.
                if (this.inited) {
                    return;
                }

                this.factory = factory;

                if (errback) {
                    //Register for errors on this module.
                    this.on('error', errback);
                } else if (this.events.error) {
                    //If no errback already, but there are error listeners
                    //on this module, set up an errback to pass to the deps.
                    errback = bind(this, function (err) {
                        this.emit('error', err);
                    });
                }

                //Do a copy of the dependency array, so that
                //source inputs are not modified. For example
                //"shim" deps are passed in here directly, and
                //doing a direct modification of the depMaps array
                //would affect that config.
                this.depMaps = depMaps && depMaps.slice(0);

                this.errback = errback;

                //Indicate this module has be initialized
                this.inited = true;

                this.ignore = options.ignore;

                //Could have option to init this module in enabled mode,
                //or could have been previously marked as enabled. However,
                //the dependencies are not known until init is called. So
                //if enabled previously, now trigger dependencies as enabled.
                if (options.enabled || this.enabled) {
                    //Enable this module and dependencies.
                    //Will call this.check()
                    this.enable();
                } else {
                    this.check();
                }
            },

            defineDep: function (i, depExports) {
                //Because of cycles, defined callback for a given
                //export can be called more than once.
                if (!this.depMatched[i]) {
                    this.depMatched[i] = true;
                    this.depCount -= 1;
                    this.depExports[i] = depExports;
                }
            },

            fetch: function () {
                if (this.fetched) {
                    return;
                }
                this.fetched = true;

                context.startTime = (new Date()).getTime();

                var map = this.map;

                //If the manager is for a plugin managed resource,
                //ask the plugin to load it now.
                if (this.shim) {
                    context.makeRequire(this.map, {
                        enableBuildCallback: true
                    })(this.shim.deps || [], bind(this, function () {
                        return map.prefix ? this.callPlugin() : this.load();
                    }));
                } else {
                    //Regular dependency.
                    return map.prefix ? this.callPlugin() : this.load();
                }
            },

            load: function () {
                var url = this.map.url;

                //Regular dependency.
                if (!urlFetched[url]) {
                    urlFetched[url] = true;
                    context.load(this.map.id, url);
                }
            },

            /**
             * Checks if the module is ready to define itself, and if so,
             * define it.
             */
            check: function () {
                if (!this.enabled || this.enabling) {
                    return;
                }

                var err, cjsModule,
                    id = this.map.id,
                    depExports = this.depExports,
                    exports = this.exports,
                    factory = this.factory;

                if (!this.inited) {
                    this.fetch();
                } else if (this.error) {
                    this.emit('error', this.error);
                } else if (!this.defining) {
                    //The factory could trigger another require call
                    //that would result in checking this module to
                    //define itself again. If already in the process
                    //of doing that, skip this work.
                    this.defining = true;

                    if (this.depCount < 1 && !this.defined) {
                        if (isFunction(factory)) {
                            //If there is an error listener, favor passing
                            //to that instead of throwing an error. However,
                            //only do it for define()'d  modules. require
                            //errbacks should not be called for failures in
                            //their callbacks (#699). However if a global
                            //onError is set, use that.
                            if ((this.events.error && this.map.isDefine) ||
                                req.onError !== defaultOnError) {
                                try {
                                    exports = context.execCb(id, factory, depExports, exports);
                                } catch (e) {
                                    err = e;
                                }
                            } else {
                                exports = context.execCb(id, factory, depExports, exports);
                            }

                            if (this.map.isDefine) {
                                //If setting exports via 'module' is in play,
                                //favor that over return value and exports. After that,
                                //favor a non-undefined return value over exports use.
                                cjsModule = this.module;
                                if (cjsModule &&
                                        cjsModule.exports !== undefined &&
                                        //Make sure it is not already the exports value
                                        cjsModule.exports !== this.exports) {
                                    exports = cjsModule.exports;
                                } else if (exports === undefined && this.usingExports) {
                                    //exports already set the defined value.
                                    exports = this.exports;
                                }
                            }

                            if (err) {
                                err.requireMap = this.map;
                                err.requireModules = this.map.isDefine ? [this.map.id] : null;
                                err.requireType = this.map.isDefine ? 'define' : 'require';
                                return onError((this.error = err));
                            }

                        } else {
                            //Just a literal value
                            exports = factory;
                        }

                        this.exports = exports;

                        if (this.map.isDefine && !this.ignore) {
                            defined[id] = exports;

                            if (req.onResourceLoad) {
                                req.onResourceLoad(context, this.map, this.depMaps);
                            }
                        }

                        //Clean up
                        cleanRegistry(id);

                        this.defined = true;
                    }

                    //Finished the define stage. Allow calling check again
                    //to allow define notifications below in the case of a
                    //cycle.
                    this.defining = false;

                    if (this.defined && !this.defineEmitted) {
                        this.defineEmitted = true;
                        this.emit('defined', this.exports);
                        this.defineEmitComplete = true;
                    }

                }
            },

            callPlugin: function () {
                var map = this.map,
                    id = map.id,
                    //Map already normalized the prefix.
                    pluginMap = makeModuleMap(map.prefix);

                //Mark this as a dependency for this plugin, so it
                //can be traced for cycles.
                this.depMaps.push(pluginMap);

                on(pluginMap, 'defined', bind(this, function (plugin) {
                    var load, normalizedMap, normalizedMod,
                        name = this.map.name,
                        parentName = this.map.parentMap ? this.map.parentMap.name : null,
                        localRequire = context.makeRequire(map.parentMap, {
                            enableBuildCallback: true
                        });

                    //If current map is not normalized, wait for that
                    //normalized name to load instead of continuing.
                    if (this.map.unnormalized) {
                        //Normalize the ID if the plugin allows it.
                        if (plugin.normalize) {
                            name = plugin.normalize(name, function (name) {
                                return normalize(name, parentName, true);
                            }) || '';
                        }

                        //prefix and name should already be normalized, no need
                        //for applying map config again either.
                        normalizedMap = makeModuleMap(map.prefix + '!' + name,
                                                      this.map.parentMap);
                        on(normalizedMap,
                            'defined', bind(this, function (value) {
                                this.init([], function () { return value; }, null, {
                                    enabled: true,
                                    ignore: true
                                });
                            }));

                        normalizedMod = getOwn(registry, normalizedMap.id);
                        if (normalizedMod) {
                            //Mark this as a dependency for this plugin, so it
                            //can be traced for cycles.
                            this.depMaps.push(normalizedMap);

                            if (this.events.error) {
                                normalizedMod.on('error', bind(this, function (err) {
                                    this.emit('error', err);
                                }));
                            }
                            normalizedMod.enable();
                        }

                        return;
                    }

                    load = bind(this, function (value) {
                        this.init([], function () { return value; }, null, {
                            enabled: true
                        });
                    });

                    load.error = bind(this, function (err) {
                        this.inited = true;
                        this.error = err;
                        err.requireModules = [id];

                        //Remove temp unnormalized modules for this module,
                        //since they will never be resolved otherwise now.
                        eachProp(registry, function (mod) {
                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {
                                cleanRegistry(mod.map.id);
                            }
                        });

                        onError(err);
                    });

                    //Allow plugins to load other code without having to know the
                    //context or how to 'complete' the load.
                    load.fromText = bind(this, function (text, textAlt) {
                        /*jslint evil: true */
                        var moduleName = map.name,
                            moduleMap = makeModuleMap(moduleName),
                            hasInteractive = useInteractive;

                        //As of 2.1.0, support just passing the text, to reinforce
                        //fromText only being called once per resource. Still
                        //support old style of passing moduleName but discard
                        //that moduleName in favor of the internal ref.
                        if (textAlt) {
                            text = textAlt;
                        }

                        //Turn off interactive script matching for IE for any define
                        //calls in the text, then turn it back on at the end.
                        if (hasInteractive) {
                            useInteractive = false;
                        }

                        //Prime the system by creating a module instance for
                        //it.
                        getModule(moduleMap);

                        //Transfer any config to this other module.
                        if (hasProp(config.config, id)) {
                            config.config[moduleName] = config.config[id];
                        }

                        try {
                            req.exec(text);
                        } catch (e) {
                            return onError(makeError('fromtexteval',
                                             'fromText eval for ' + id +
                                            ' failed: ' + e,
                                             e,
                                             [id]));
                        }

                        if (hasInteractive) {
                            useInteractive = true;
                        }

                        //Mark this as a dependency for the plugin
                        //resource
                        this.depMaps.push(moduleMap);

                        //Support anonymous modules.
                        context.completeLoad(moduleName);

                        //Bind the value of that module to the value for this
                        //resource ID.
                        localRequire([moduleName], load);
                    });

                    //Use parentName here since the plugin's name is not reliable,
                    //could be some weird string with no path that actually wants to
                    //reference the parentName's path.
                    plugin.load(map.name, localRequire, load, config);
                }));

                context.enable(pluginMap, this);
                this.pluginMaps[pluginMap.id] = pluginMap;
            },

            enable: function () {
                enabledRegistry[this.map.id] = this;
                this.enabled = true;

                //Set flag mentioning that the module is enabling,
                //so that immediate calls to the defined callbacks
                //for dependencies do not trigger inadvertent load
                //with the depCount still being zero.
                this.enabling = true;

                //Enable each dependency
                each(this.depMaps, bind(this, function (depMap, i) {
                    var id, mod, handler;

                    if (typeof depMap === 'string') {
                        //Dependency needs to be converted to a depMap
                        //and wired up to this module.
                        depMap = makeModuleMap(depMap,
                                               (this.map.isDefine ? this.map : this.map.parentMap),
                                               false,
                                               !this.skipMap);
                        this.depMaps[i] = depMap;

                        handler = getOwn(handlers, depMap.id);

                        if (handler) {
                            this.depExports[i] = handler(this);
                            return;
                        }

                        this.depCount += 1;

                        on(depMap, 'defined', bind(this, function (depExports) {
                            this.defineDep(i, depExports);
                            this.check();
                        }));

                        if (this.errback) {
                            on(depMap, 'error', bind(this, this.errback));
                        }
                    }

                    id = depMap.id;
                    mod = registry[id];

                    //Skip special modules like 'require', 'exports', 'module'
                    //Also, don't call enable if it is already enabled,
                    //important in circular dependency cases.
                    if (!hasProp(handlers, id) && mod && !mod.enabled) {
                        context.enable(depMap, this);
                    }
                }));

                //Enable each plugin that is used in
                //a dependency
                eachProp(this.pluginMaps, bind(this, function (pluginMap) {
                    var mod = getOwn(registry, pluginMap.id);
                    if (mod && !mod.enabled) {
                        context.enable(pluginMap, this);
                    }
                }));

                this.enabling = false;

                this.check();
            },

            on: function (name, cb) {
                var cbs = this.events[name];
                if (!cbs) {
                    cbs = this.events[name] = [];
                }
                cbs.push(cb);
            },

            emit: function (name, evt) {
                each(this.events[name], function (cb) {
                    cb(evt);
                });
                if (name === 'error') {
                    //Now that the error handler was triggered, remove
                    //the listeners, since this broken Module instance
                    //can stay around for a while in the registry.
                    delete this.events[name];
                }
            }
        };

        function callGetModule(args) {
            //Skip modules already defined.
            if (!hasProp(defined, args[0])) {
                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);
            }
        }

        function removeListener(node, func, name, ieName) {
            //Favor detachEvent because of IE9
            //issue, see attachEvent/addEventListener comment elsewhere
            //in this file.
            if (node.detachEvent && !isOpera) {
                //Probably IE. If not it will throw an error, which will be
                //useful to know.
                if (ieName) {
                    node.detachEvent(ieName, func);
                }
            } else {
                node.removeEventListener(name, func, false);
            }
        }

        /**
         * Given an event from a script node, get the requirejs info from it,
         * and then removes the event listeners on the node.
         * @param {Event} evt
         * @returns {Object}
         */
        function getScriptData(evt) {
            //Using currentTarget instead of target for Firefox 2.0's sake. Not
            //all old browsers will be supported, but this one was easy enough
            //to support and still makes sense.
            var node = evt.currentTarget || evt.srcElement;

            //Remove the listeners once here.
            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');
            removeListener(node, context.onScriptError, 'error');

            return {
                node: node,
                id: node && node.getAttribute('data-requiremodule')
            };
        }

        function intakeDefines() {
            var args;

            //Any defined modules in the global queue, intake them now.
            takeGlobalQueue();

            //Make sure any remaining defQueue items get properly processed.
            while (defQueue.length) {
                args = defQueue.shift();
                if (args[0] === null) {
                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));
                } else {
                    //args are id, deps, factory. Should be normalized by the
                    //define() function.
                    callGetModule(args);
                }
            }
        }

        context = {
            config: config,
            contextName: contextName,
            registry: registry,
            defined: defined,
            urlFetched: urlFetched,
            defQueue: defQueue,
            Module: Module,
            makeModuleMap: makeModuleMap,
            nextTick: req.nextTick,
            onError: onError,

            /**
             * Set a configuration for the context.
             * @param {Object} cfg config object to integrate.
             */
            configure: function (cfg) {
                //Make sure the baseUrl ends in a slash.
                if (cfg.baseUrl) {
                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {
                        cfg.baseUrl += '/';
                    }
                }

                //Save off the paths and packages since they require special processing,
                //they are additive.
                var pkgs = config.pkgs,
                    shim = config.shim,
                    objs = {
                        paths: true,
                        config: true,
                        map: true
                    };

                eachProp(cfg, function (value, prop) {
                    if (objs[prop]) {
                        if (prop === 'map') {
                            if (!config.map) {
                                config.map = {};
                            }
                            mixin(config[prop], value, true, true);
                        } else {
                            mixin(config[prop], value, true);
                        }
                    } else {
                        config[prop] = value;
                    }
                });

                //Merge shim
                if (cfg.shim) {
                    eachProp(cfg.shim, function (value, id) {
                        //Normalize the structure
                        if (isArray(value)) {
                            value = {
                                deps: value
                            };
                        }
                        if ((value.exports || value.init) && !value.exportsFn) {
                            value.exportsFn = context.makeShimExports(value);
                        }
                        shim[id] = value;
                    });
                    config.shim = shim;
                }

                //Adjust packages if necessary.
                if (cfg.packages) {
                    each(cfg.packages, function (pkgObj) {
                        var location;

                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;
                        location = pkgObj.location;

                        //Create a brand new object on pkgs, since currentPackages can
                        //be passed in again, and config.pkgs is the internal transformed
                        //state for all package configs.
                        pkgs[pkgObj.name] = {
                            name: pkgObj.name,
                            location: location || pkgObj.name,
                            //Remove leading dot in main, so main paths are normalized,
                            //and remove any trailing .js, since different package
                            //envs have different conventions: some use a module name,
                            //some use a file name.
                            main: (pkgObj.main || 'main')
                                  .replace(currDirRegExp, '')
                                  .replace(jsSuffixRegExp, '')
                        };
                    });

                    //Done with modifications, assing packages back to context config
                    config.pkgs = pkgs;
                }

                //If there are any "waiting to execute" modules in the registry,
                //update the maps for them, since their info, like URLs to load,
                //may have changed.
                eachProp(registry, function (mod, id) {
                    //If module already has init called, since it is too
                    //late to modify them, and ignore unnormalized ones
                    //since they are transient.
                    if (!mod.inited && !mod.map.unnormalized) {
                        mod.map = makeModuleMap(id);
                    }
                });

                //If a deps array or a config callback is specified, then call
                //require with those args. This is useful when require is defined as a
                //config object before require.js is loaded.
                if (cfg.deps || cfg.callback) {
                    context.require(cfg.deps || [], cfg.callback);
                }
            },

            makeShimExports: function (value) {
                function fn() {
                    var ret;
                    if (value.init) {
                        ret = value.init.apply(global, arguments);
                    }
                    return ret || (value.exports && getGlobal(value.exports));
                }
                return fn;
            },

            makeRequire: function (relMap, options) {
                options = options || {};

                function localRequire(deps, callback, errback) {
                    var id, map, requireMod;

                    if (options.enableBuildCallback && callback && isFunction(callback)) {
                        callback.__requireJsBuild = true;
                    }

                    if (typeof deps === 'string') {
                        if (isFunction(callback)) {
                            //Invalid call
                            return onError(makeError('requireargs', 'Invalid require call'), errback);
                        }

                        //If require|exports|module are requested, get the
                        //value for them from the special handlers. Caveat:
                        //this only works while module is being defined.
                        if (relMap && hasProp(handlers, deps)) {
                            return handlers[deps](registry[relMap.id]);
                        }

                        //Synchronous access to one module. If require.get is
                        //available (as in the Node adapter), prefer that.
                        if (req.get) {
                            return req.get(context, deps, relMap, localRequire);
                        }

                        //Normalize module name, if it contains . or ..
                        map = makeModuleMap(deps, relMap, false, true);
                        id = map.id;

                        if (!hasProp(defined, id)) {
                            return onError(makeError('notloaded', 'Module name "' +
                                        id +
                                        '" has not been loaded yet for context: ' +
                                        contextName +
                                        (relMap ? '' : '. Use require([])')));
                        }
                        return defined[id];
                    }

                    //Grab defines waiting in the global queue.
                    intakeDefines();

                    //Mark all the dependencies as needing to be loaded.
                    context.nextTick(function () {
                        //Some defines could have been added since the
                        //require call, collect them.
                        intakeDefines();

                        requireMod = getModule(makeModuleMap(null, relMap));

                        //Store if map config should be applied to this require
                        //call for dependencies.
                        requireMod.skipMap = options.skipMap;

                        requireMod.init(deps, callback, errback, {
                            enabled: true
                        });

                        checkLoaded();
                    });

                    return localRequire;
                }

                mixin(localRequire, {
                    isBrowser: isBrowser,

                    /**
                     * Converts a module name + .extension into an URL path.
                     * *Requires* the use of a module name. It does not support using
                     * plain URLs like nameToUrl.
                     */
                    toUrl: function (moduleNamePlusExt) {
                        var ext,
                            index = moduleNamePlusExt.lastIndexOf('.'),
                            segment = moduleNamePlusExt.split('/')[0],
                            isRelative = segment === '.' || segment === '..';

                        //Have a file extension alias, and it is not the
                        //dots from a relative path.
                        if (index !== -1 && (!isRelative || index > 1)) {
                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);
                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);
                        }

                        return context.nameToUrl(normalize(moduleNamePlusExt,
                                                relMap && relMap.id, true), ext,  true);
                    },

                    defined: function (id) {
                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);
                    },

                    specified: function (id) {
                        id = makeModuleMap(id, relMap, false, true).id;
                        return hasProp(defined, id) || hasProp(registry, id);
                    }
                });

                //Only allow undef on top level require calls
                if (!relMap) {
                    localRequire.undef = function (id) {
                        //Bind any waiting define() calls to this context,
                        //fix for #408
                        takeGlobalQueue();

                        var map = makeModuleMap(id, relMap, true),
                            mod = getOwn(registry, id);

                        removeScript(id);

                        delete defined[id];
                        delete urlFetched[map.url];
                        delete undefEvents[id];

                        if (mod) {
                            //Hold on to listeners in case the
                            //module will be attempted to be reloaded
                            //using a different config.
                            if (mod.events.defined) {
                                undefEvents[id] = mod.events;
                            }

                            cleanRegistry(id);
                        }
                    };
                }

                return localRequire;
            },

            /**
             * Called to enable a module if it is still in the registry
             * awaiting enablement. A second arg, parent, the parent module,
             * is passed in for context, when this method is overriden by
             * the optimizer. Not shown here to keep code compact.
             */
            enable: function (depMap) {
                var mod = getOwn(registry, depMap.id);
                if (mod) {
                    getModule(depMap).enable();
                }
            },

            /**
             * Internal method used by environment adapters to complete a load event.
             * A load event could be a script load or just a load pass from a synchronous
             * load call.
             * @param {String} moduleName the name of the module to potentially complete.
             */
            completeLoad: function (moduleName) {
                var found, args, mod,
                    shim = getOwn(config.shim, moduleName) || {},
                    shExports = shim.exports;

                takeGlobalQueue();

                while (defQueue.length) {
                    args = defQueue.shift();
                    if (args[0] === null) {
                        args[0] = moduleName;
                        //If already found an anonymous module and bound it
                        //to this name, then this is some other anon module
                        //waiting for its completeLoad to fire.
                        if (found) {
                            break;
                        }
                        found = true;
                    } else if (args[0] === moduleName) {
                        //Found matching define call for this script!
                        found = true;
                    }

                    callGetModule(args);
                }

                //Do this after the cycle of callGetModule in case the result
                //of those calls/init calls changes the registry.
                mod = getOwn(registry, moduleName);

                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {
                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {
                        if (hasPathFallback(moduleName)) {
                            return;
                        } else {
                            return onError(makeError('nodefine',
                                             'No define call for ' + moduleName,
                                             null,
                                             [moduleName]));
                        }
                    } else {
                        //A script that does not call define(), so just simulate
                        //the call for it.
                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);
                    }
                }

                checkLoaded();
            },

            /**
             * Converts a module name to a file path. Supports cases where
             * moduleName may actually be just an URL.
             * Note that it **does not** call normalize on the moduleName,
             * it is assumed to have already been normalized. This is an
             * internal API, not a public one. Use toUrl for the public API.
             */
            nameToUrl: function (moduleName, ext, skipExt) {
                var paths, pkgs, pkg, pkgPath, syms, i, parentModule, url,
                    parentPath;

                //If a colon is in the URL, it indicates a protocol is used and it is just
                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)
                //or ends with .js, then assume the user meant to use an url and not a module id.
                //The slash is important for protocol-less URLs as well as full paths.
                if (req.jsExtRegExp.test(moduleName)) {
                    //Just a plain path, not module name lookup, so just return it.
                    //Add extension if it is included. This is a bit wonky, only non-.js things pass
                    //an extension, this method probably needs to be reworked.
                    url = moduleName + (ext || '');
                } else {
                    //A module that needs to be converted to a path.
                    paths = config.paths;
                    pkgs = config.pkgs;

                    syms = moduleName.split('/');
                    //For each module name segment, see if there is a path
                    //registered for it. Start with most specific name
                    //and work up from it.
                    for (i = syms.length; i > 0; i -= 1) {
                        parentModule = syms.slice(0, i).join('/');
                        pkg = getOwn(pkgs, parentModule);
                        parentPath = getOwn(paths, parentModule);
                        if (parentPath) {
                            //If an array, it means there are a few choices,
                            //Choose the one that is desired
                            if (isArray(parentPath)) {
                                parentPath = parentPath[0];
                            }
                            syms.splice(0, i, parentPath);
                            break;
                        } else if (pkg) {
                            //If module name is just the package name, then looking
                            //for the main module.
                            if (moduleName === pkg.name) {
                                pkgPath = pkg.location + '/' + pkg.main;
                            } else {
                                pkgPath = pkg.location;
                            }
                            syms.splice(0, i, pkgPath);
                            break;
                        }
                    }

                    //Join the path parts together, then figure out if baseUrl is needed.
                    url = syms.join('/');
                    url += (ext || (/^data\:|\?/.test(url) || skipExt ? '' : '.js'));
                    url = (url.charAt(0) === '/' || url.match(/^[\w\+\.\-]+:/) ? '' : config.baseUrl) + url;
                }

                return config.urlArgs ? url +
                                        ((url.indexOf('?') === -1 ? '?' : '&') +
                                         config.urlArgs) : url;
            },

            //Delegates to req.load. Broken out as a separate function to
            //allow overriding in the optimizer.
            load: function (id, url) {
                req.load(context, id, url);
            },

            /**
             * Executes a module callback function. Broken out as a separate function
             * solely to allow the build system to sequence the files in the built
             * layer in the right sequence.
             *
             * @private
             */
            execCb: function (name, callback, args, exports) {
                return callback.apply(exports, args);
            },

            /**
             * callback for script loads, used to check status of loading.
             *
             * @param {Event} evt the event from the browser for the script
             * that was loaded.
             */
            onScriptLoad: function (evt) {
                //Using currentTarget instead of target for Firefox 2.0's sake. Not
                //all old browsers will be supported, but this one was easy enough
                //to support and still makes sense.
                if (evt.type === 'load' ||
                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {
                    //Reset interactive script so a script node is not held onto for
                    //to long.
                    interactiveScript = null;

                    //Pull out the name of the module and the context.
                    var data = getScriptData(evt);
                    context.completeLoad(data.id);
                }
            },

            /**
             * Callback for script errors.
             */
            onScriptError: function (evt) {
                var data = getScriptData(evt);
                if (!hasPathFallback(data.id)) {
                    return onError(makeError('scripterror', 'Script error for: ' + data.id, evt, [data.id]));
                }
            }
        };

        context.require = context.makeRequire();
        return context;
    }

    /**
     * Main entry point.
     *
     * If the only argument to require is a string, then the module that
     * is represented by that string is fetched for the appropriate context.
     *
     * If the first argument is an array, then it will be treated as an array
     * of dependency string names to fetch. An optional function callback can
     * be specified to execute when all of those dependencies are available.
     *
     * Make a local req variable to help Caja compliance (it assumes things
     * on a require that are not standardized), and to give a short
     * name for minification/local scope use.
     */
    req = requirejs = function (deps, callback, errback, optional) {

        //Find the right context, use default
        var context, config,
            contextName = defContextName;

        // Determine if have config object in the call.
        if (!isArray(deps) && typeof deps !== 'string') {
            // deps is a config object
            config = deps;
            if (isArray(callback)) {
                // Adjust args if there are dependencies
                deps = callback;
                callback = errback;
                errback = optional;
            } else {
                deps = [];
            }
        }

        if (config && config.context) {
            contextName = config.context;
        }

        context = getOwn(contexts, contextName);
        if (!context) {
            context = contexts[contextName] = req.s.newContext(contextName);
        }

        if (config) {
            context.configure(config);
        }

        return context.require(deps, callback, errback);
    };

    /**
     * Support Iris.require.config() to make it easier to cooperate with other
     * AMD loaders on globally agreed names.
     */
    req.config = function (config) {
        return req(config);
    };

    /**
     * Execute something after the current tick
     * of the event loop. Override for other envs
     * that have a better solution than setTimeout.
     * @param  {Function} fn function to execute later.
     */
    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {
        setTimeout(fn, 4);
    } : function (fn) { fn(); };

    /**
     * Export require as a global, but only if it does not already exist.
     */
    if (!require) {
        require = req;
    }

    req.version = version;

    //Used to filter out dependencies that are already paths.
    req.jsExtRegExp = /^\/|:|\?|\.js$/;
    req.isBrowser = isBrowser;
    s = req.s = {
        contexts: contexts,
        newContext: newContext
    };

    //Create default context.
    req({});

    //Exports some context-sensitive methods on global require.
    each([
        'toUrl',
        'undef',
        'defined',
        'specified'
    ], function (prop) {
        //Reference from contexts instead of early binding to default context,
        //so that during builds, the latest instance of the default context
        //with its config gets used.
        req[prop] = function () {
            var ctx = contexts[defContextName];
            return ctx.require[prop].apply(ctx, arguments);
        };
    });

    if (isBrowser) {
        head = s.head = document.getElementsByTagName('head')[0];
        //If BASE tag is in play, using appendChild is a problem for IE6.
        //When that browser dies, this can be removed. Details in this jQuery bug:
        //http://dev.jquery.com/ticket/2709
        baseElement = document.getElementsByTagName('base')[0];
        if (baseElement) {
            head = s.head = baseElement.parentNode;
        }
    }

    /**
     * Any errors that require explicitly generates will be passed to this
     * function. Intercept/override it if you want custom error handling.
     * @param {Error} err the error object.
     */
    req.onError = defaultOnError;

    /**
     * Creates the node for the load command. Only used in browser envs.
     */
    req.createNode = function (config, moduleName, url) {
        var node = config.xhtml ?
                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :
                document.createElement('script');
        node.type = config.scriptType || 'text/javascript';
        node.charset = 'utf-8';
        node.async = true;
        return node;
    };

    /**
     * Does the request to load a module for the browser case.
     * Make this a separate function to allow other environments
     * to override it.
     *
     * @param {Object} context the require context to find state.
     * @param {String} moduleName the name of the module.
     * @param {Object} url the URL to the module.
     */
    req.load = function (context, moduleName, url) {
        var config = (context && context.config) || {},
            node;
        if (isBrowser) {
            //In the browser so use a script tag
            node = req.createNode(config, moduleName, url);

            node.setAttribute('data-requirecontext', context.contextName);
            node.setAttribute('data-requiremodule', moduleName);

            //Set up load listener. Test attachEvent first because IE9 has
            //a subtle issue in its addEventListener and script onload firings
            //that do not match the behavior of all other browsers with
            //addEventListener support, which fire the onload event for a
            //script right after the script execution. See:
            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution
            //UNFORTUNATELY Opera implements attachEvent but does not follow the script
            //script execution mode.
            if (node.attachEvent &&
                    //Check if node.attachEvent is artificially added by custom script or
                    //natively supported by browser
                    //read https://github.com/jrburke/requirejs/issues/187
                    //if we can NOT find [native code] then it must NOT natively supported.
                    //in IE8, node.attachEvent does not have toString()
                    //Note the test for "[native code" with no closing brace, see:
                    //https://github.com/jrburke/requirejs/issues/273
                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&
                    !isOpera) {
                //Probably IE. IE (at least 6-8) do not fire
                //script onload right after executing the script, so
                //we cannot tie the anonymous define call to a name.
                //However, IE reports the script as being in 'interactive'
                //readyState at the time of the define call.
                useInteractive = true;

                node.attachEvent('onreadystatechange', context.onScriptLoad);
                //It would be great to add an error handler here to catch
                //404s in IE9+. However, onreadystatechange will fire before
                //the error handler, so that does not help. If addEventListener
                //is used, then IE will fire error before load, but we cannot
                //use that pathway given the connect.microsoft.com issue
                //mentioned above about not doing the 'script execute,
                //then fire the script load event listener before execute
                //next script' that other browsers do.
                //Best hope: IE10 fixes the issues,
                //and then destroys all installs of IE 6-9.
                //node.attachEvent('onerror', context.onScriptError);
            } else {
                node.addEventListener('load', context.onScriptLoad, false);
                node.addEventListener('error', context.onScriptError, false);
            }
            node.src = url;

            //For some cache cases in IE 6-8, the script executes before the end
            //of the appendChild execution, so to tie an anonymous define
            //call to the module name (which is stored on the node), hold on
            //to a reference to this node, but clear after the DOM insertion.
            currentlyAddingScript = node;
            if (baseElement) {
                head.insertBefore(node, baseElement);
            } else {
                head.appendChild(node);
            }
            currentlyAddingScript = null;

            return node;
        } else if (isWebWorker) {
            try {
                //In a web worker, use importScripts. This is not a very
                //efficient use of importScripts, importScripts will block until
                //its script is downloaded and evaluated. However, if web workers
                //are in play, the expectation that a build has been done so that
                //only one script needs to be loaded anyway. This may need to be
                //reevaluated if other use cases become common.
                importScripts(url);

                //Account for anonymous modules
                context.completeLoad(moduleName);
            } catch (e) {
                context.onError(makeError('importscripts',
                                'importScripts failed for ' +
                                    moduleName + ' at ' + url,
                                e,
                                [moduleName]));
            }
        }
    };

    function getInteractiveScript() {
        if (interactiveScript && interactiveScript.readyState === 'interactive') {
            return interactiveScript;
        }

        eachReverse(scripts(), function (script) {
            if (script.readyState === 'interactive') {
                return (interactiveScript = script);
            }
        });
        return interactiveScript;
    }

    //Look for a data-main script attribute, which could also adjust the baseUrl.
    if (isBrowser && !cfg.skipDataMain) {
        //Figure out baseUrl. Get it from the script tag with require.js in it.
        eachReverse(scripts(), function (script) {
            //Set the 'head' where we can append children by
            //using the script's parent.
            if (!head) {
                head = script.parentNode;
            }

            //Look for a data-main attribute to set main script for the page
            //to load. If it is there, the path to data main becomes the
            //baseUrl, if it is not already set.
            dataMain = script.getAttribute('data-main');
            if (dataMain) {
                //Preserve dataMain in case it is a path (i.e. contains '?')
                mainScript = dataMain;

                //Set final baseUrl if there is not already an explicit one.
                if (!cfg.baseUrl) {
                    //Pull off the directory of data-main for use as the
                    //baseUrl.
                    src = mainScript.split('/');
                    mainScript = src.pop();
                    subPath = src.length ? src.join('/')  + '/' : './';

                    cfg.baseUrl = subPath;
                }

                //Strip off any trailing .js since mainScript is now
                //like a module name.
                mainScript = mainScript.replace(jsSuffixRegExp, '');

                 //If mainScript is still a path, fall back to dataMain
                if (req.jsExtRegExp.test(mainScript)) {
                    mainScript = dataMain;
                }

                //Put the data-main script in the files to load.
                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];

                return true;
            }
        });
    }

    /**
     * The function that handles definitions of modules. Differs from
     * require() in that a string for the module should be the first argument,
     * and the function to execute after dependencies are loaded should
     * return a value to define the module corresponding to the first argument's
     * name.
     */
    define = function (name, deps, callback) {
        var node, context;

        //Allow for anonymous modules
        if (typeof name !== 'string') {
            //Adjust args appropriately
            callback = deps;
            deps = name;
            name = null;
        }

        //This module may not have dependencies
        if (!isArray(deps)) {
            callback = deps;
            deps = null;
        }

        //If no name, and callback is a function, then figure out if it a
        //CommonJS thing with dependencies.
        if (!deps && isFunction(callback)) {
            deps = [];
            //Remove comments from the callback string,
            //look for require calls, and pull them into the dependencies,
            //but only if there are function args.
            if (callback.length) {
                callback
                    .toString()
                    .replace(commentRegExp, '')
                    .replace(cjsRequireRegExp, function (match, dep) {
                        deps.push(dep);
                    });

                //May be a CommonJS thing even without require calls, but still
                //could use exports, and module. Avoid doing exports and module
                //work though if it just needs require.
                //REQUIRES the function to expect the CommonJS variables in the
                //order listed below.
                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);
            }
        }

        //If in IE 6-8 and hit an anonymous define() call, do the interactive
        //work.
        if (useInteractive) {
            node = currentlyAddingScript || getInteractiveScript();
            if (node) {
                if (!name) {
                    name = node.getAttribute('data-requiremodule');
                }
                context = contexts[node.getAttribute('data-requirecontext')];
            }
        }

        //Always save off evaluating the def call until the script onload handler.
        //This allows multiple modules to be in a file without prematurely
        //tracing dependencies, and allows for anonymous module support,
        //where the module name is not known until the script onload event
        //occurs. If no context, use the global queue, and get it processed
        //in the onscript load callback.
        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);
    };

    define.amd = {
        jQuery: true
    };


    /**
     * Executes the text. Normally just uses eval, but can be modified
     * to use a better, environment-specific call. Only used for transpiling
     * loader plugins, not for plain JS modules.
     * @param {String} text the text to execute/evaluate.
     */
    req.exec = function (text) {
        /*jslint evil: true */
        return eval(text);
    };

    //Set up with config info.
    req(cfg);
}(this));

Iris.requirejs = requirejs;Iris.require = require;Iris.define = define;
}
}());
Iris.define("requireLib", function(){});

/*!
 * jQuery JavaScript Library v1.8.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: Tue Nov 13 2012 08:20:33 GMT-0500 (Eastern Standard Time)
 */
(function( window, undefined ) {
var
	// A central reference to the root jQuery(document)
	rootjQuery,

	// The deferred used on DOM ready
	readyList,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,
	location = window.location,
	navigator = window.navigator,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// Save a reference to some core methods
	core_push = Array.prototype.push,
	core_slice = Array.prototype.slice,
	core_indexOf = Array.prototype.indexOf,
	core_toString = Object.prototype.toString,
	core_hasOwn = Object.prototype.hasOwnProperty,
	core_trim = String.prototype.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,

	// Used for detecting and trimming whitespace
	core_rnotwhite = /\S/,
	core_rspace = /\s+/,

	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	rquickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// The ready event handler and self cleanup method
	DOMContentLoaded = function() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
			jQuery.ready();
		} else if ( document.readyState === "complete" ) {
			// we're here because readyState === "complete" in oldIE
			// which is good enough for us to call the dom ready!
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	},

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context && context.nodeType ? context.ownerDocument || context : document );

					// scripts is true for back-compat
					selector = jQuery.parseHTML( match[1], doc, true );
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						this.attr.call( selector, context, true );
					}

					return jQuery.merge( this, selector );

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.8.3",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ),
			"slice", core_slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready, 1 );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ core_toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!core_hasOwn.call(obj, "constructor") &&
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || core_hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// scripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, scripts ) {
		var parsed;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			scripts = context;
			context = 0;
		}
		context = context || document;

		// Single tag
		if ( (parsed = rsingleTag.exec( data )) ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );
		return jQuery.merge( [],
			(parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );
	},

	parseJSON: function( data ) {
		if ( !data || typeof data !== "string") {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && core_rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var name,
			i = 0,
			length = obj.length,
			isObj = length === undefined || jQuery.isFunction( obj );

		if ( args ) {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.apply( obj[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( obj[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Use native String.trim function wherever possible
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
		function( text ) {
			return text == null ?
				"" :
				core_trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var type,
			ret = results || [];

		if ( arr != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			type = jQuery.type( arr );

			if ( arr.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( arr ) ) {
				core_push.call( ret, arr );
			} else {
				jQuery.merge( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( core_indexOf ) {
				return core_indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key,
			ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
		var exec,
			bulk = key == null,
			i = 0,
			length = elems.length;

		// Sets many values
		if ( key && typeof key === "object" ) {
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
			}
			chainable = 1;

		// Sets one value
		} else if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = pass === undefined && jQuery.isFunction( value );

			if ( bulk ) {
				// Bulk operations only iterate when executing function values
				if ( exec ) {
					exec = fn;
					fn = function( elem, key, value ) {
						return exec.call( jQuery( elem ), value );
					};

				// Otherwise they run against the entire set
				} else {
					fn.call( elems, value );
					fn = null;
				}
			}

			if ( fn ) {
				for (; i < length; i++ ) {
					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
				}
			}

			chainable = 1;
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready, 1 );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.split( core_rspace ), function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				return jQuery.inArray( fn, list ) > -1;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				args = args || [];
				args = [ context, args.slice ? args.slice() : args ];
				if ( list && ( !fired || stack ) ) {
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?
								function() {
									var returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								} :
								newDefer[ action ]
							);
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ] = list.fire
			deferred[ tuple[0] ] = list.fire;
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		fragment,
		eventName,
		i,
		isSupported,
		clickFn,
		div = document.createElement("div");

	// Setup
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// Support tests won't run in some limited or non-browser environments
	all = div.getElementsByTagName("*");
	a = div.getElementsByTagName("a")[ 0 ];
	if ( !all || !a || !all.length ) {
		return {};
	}

	// First batch of tests
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px;float:left;opacity:.5";
	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.5/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form (#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode
		boxModel: ( document.compatMode === "CSS1Compat" ),

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true,
		boxSizingReliable: true,
		pixelPosition: false
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", clickFn = function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent("onclick");
		div.detachEvent( "onclick", clickFn );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";

	input.setAttribute( "checked", "checked" );

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "name", "t" );

	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for ( i in {
			submit: true,
			change: true,
			focusin: true
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, div, tds, marginDiv,
			divReset = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName("td");
		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check box-sizing and margin behavior
		div.innerHTML = "";
		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
		support.boxSizing = ( div.offsetWidth === 4 );
		support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );

		// NOTE: To any future maintainer, we've window.getComputedStyle
		// because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. For more
			// info see bug #3333
			// Fails in WebKit before Feb 2011 nightlies
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = document.createElement("div");
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			div.appendChild( marginDiv );
			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.innerHTML = "";
			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "block";
			div.style.overflow = "visible";
			div.innerHTML = "<div></div>";
			div.firstChild.style.width = "5px";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

			container.style.zoom = 1;
		}

		// Null elements to avoid leaks in IE
		body.removeChild( container );
		container = div = tds = marginDiv = null;
	});

	// Null elements to avoid leaks in IE
	fragment.removeChild( div );
	all = a = select = opt = input = fragment = div = null;

	return support;
})();
var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	deletedIds: [],

	// Remove at next major release (1.9/2.0)
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = jQuery.deletedIds.pop() || jQuery.guid++;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split(" ");
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject( cache[ id ] ) ) {
				return;
			}
		}

		// Destroy the cache
		if ( isNode ) {
			jQuery.cleanData( [ elem ], true );

		// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
		} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
			delete cache[ id ];

		// When all else fails, null
		} else {
			cache[ id ] = null;
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

		// nodes accept data unless otherwise specified; rejection can be conditional
		return !noData || noData !== true && elem.getAttribute("classid") === noData;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, part, attr, name, l,
			elem = this[0],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attr = elem.attributes;
					for ( l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( !name.indexOf( "data-" ) ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split( ".", 2 );
		parts[1] = parts[1] ? "." + parts[1] : "";
		part = parts[1] + "!";

		return jQuery.access( this, function( value ) {

			if ( value === undefined ) {
				data = this.triggerHandler( "getData" + part, [ parts[0] ] );

				// Try to fetch any internally stored data first
				if ( data === undefined && elem ) {
					data = jQuery.data( elem, key );
					data = dataAttr( elem, key, data );
				}

				return data === undefined && parts[1] ?
					this.data( parts[0] ) :
					data;
			}

			parts[1] = value;
			this.each(function() {
				var self = jQuery( this );

				self.triggerHandler( "setData" + part, parts );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + part, parts );
			});
		}, null, value, arguments.length > 1, null, false );
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				// Only convert to a number if it doesn't change the string
				+data + "" === data ? +data :
				rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery.removeData( elem, type + "queue", true );
				jQuery.removeData( elem, key, true );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook, fixSpecified,
	rclass = /[\t\r\n]/g,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea|)$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( setClass.indexOf( " " + classNames[ c ] + " " ) < 0 ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var removes, className, elem, c, cl, i, l;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}
		if ( (value && typeof value === "string") || value === undefined ) {
			removes = ( value || "" ).split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];
				if ( elem.nodeType === 1 && elem.className ) {

					className = (" " + elem.className + " ").replace( rclass, " " );

					// loop over each item in the removal list
					for ( c = 0, cl = removes.length; c < cl; c++ ) {
						// Remove until there is nothing to remove,
						while ( className.indexOf(" " + removes[ c ] + " ") >= 0 ) {
							className = className.replace( " " + removes[ c ] + " " , " " );
						}
					}
					elem.className = value ? jQuery.trim( className ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( core_rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val,
				self = jQuery(this);

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	// Unused in 1.8, left in so attrFn-stabbers won't die; remove in 1.9
	attrFn: {},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, isBool,
			i = 0;

		if ( value && elem.nodeType === 1 ) {

			attrNames = value.split( core_rspace );

			for ( ; i < attrNames.length; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;
					isBool = rboolean.test( name );

					// See #9699 for explanation of this approach (setting first, then removal)
					// Do not do this for boolean attributes (see #10870)
					if ( !isBool ) {
						jQuery.attr( elem, name, "" );
					}
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( isBool && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true,
		coords: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.value !== "" : ret.specified ) ?
				ret.value :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.value = value + "" );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});
var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*|)(?:\.(.+)|)$/,
	rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var t, tns, type, origType, namespaces, origCount,
			j, events, special, eventType, handleObj,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, "events", true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,
			type = event.type || event,
			namespaces = [];

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			for ( old = elem; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old === (elem.ownerDocument || document) ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,
			handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = core_slice.call( arguments ),
			run_all = !event.exclusive && !event.namespace,
			special = jQuery.event.special[ event.type ] || {},
			handlerQueue = [];

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers that should run if there are delegated events
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !(event.button && event.type === "click") ) {

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

				// Don't process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					selMatch = {};
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						sel = handleObj.selector;

						if ( selMatch[ sel ] === undefined ) {
							selMatch[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( selMatch[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, matches: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328; IE6/7/8)
		event.metaKey = !!event.metaKey;

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "_submit_attached" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "_submit_attached", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "_change_attached" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "_change_attached", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) { // && selector != null
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});
/*!
 * Sizzle CSS Selector Engine
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://sizzlejs.com/
 */
(function( window, undefined ) {

var cachedruns,
	assertGetIdNotName,
	Expr,
	getText,
	isXML,
	contains,
	compile,
	sortOrder,
	hasDuplicate,
	outermostContext,

	baseHasDuplicate = true,
	strundefined = "undefined",

	expando = ( "sizcache" + Math.random() ).replace( ".", "" ),

	Token = String,
	document = window.document,
	docElem = document.documentElement,
	dirruns = 0,
	done = 0,
	pop = [].pop,
	push = [].push,
	slice = [].slice,
	// Use a stripped-down indexOf if a native one is unavailable
	indexOf = [].indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	// Augment a function for special use by Sizzle
	markFunction = function( fn, value ) {
		fn[ expando ] = value == null || value;
		return fn;
	},

	createCache = function() {
		var cache = {},
			keys = [];

		return markFunction(function( key, value ) {
			// Only keep the most recent entries
			if ( keys.push( key ) > Expr.cacheLength ) {
				delete cache[ keys.shift() ];
			}

			// Retrieve with (key + " ") to avoid collision with native Object.prototype properties (see Issue #157)
			return (cache[ key + " " ] = value);
		}, cache );
	},

	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),

	// Regex

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	operators = "([*^$|!~]?=)",
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments not in parens/brackets,
	//   then attribute selectors and non-pseudos (denoted by :),
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + attributes + ")|[^:]|\\\\.)*|.*))\\)|)",

	// For matchExpr.POS and matchExpr.needsContext
	pos = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
		"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*" ),
	rpseudo = new RegExp( pseudos ),

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,

	rnot = /^:not/,
	rsibling = /[\x20\t\r\n\f]*[+~]/,
	rendsWithNot = /:not\($/,

	rheader = /h\d/i,
	rinputs = /input|select|textarea|button/i,

	rbackslash = /\\(?!\\)/g,

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"NAME": new RegExp( "^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"POS": new RegExp( pos, "i" ),
		"CHILD": new RegExp( "^:(only|nth|first|last)-child(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		// For use in libraries implementing .is()
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|" + pos, "i" )
	},

	// Support

	// Used for testing something on an element
	assert = function( fn ) {
		var div = document.createElement("div");

		try {
			return fn( div );
		} catch (e) {
			return false;
		} finally {
			// release memory in IE
			div = null;
		}
	},

	// Check if getElementsByTagName("*") returns only elements
	assertTagNameNoComments = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	}),

	// Check if getAttribute returns normalized href attributes
	assertHrefNotNormalized = assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&
			div.firstChild.getAttribute("href") === "#";
	}),

	// Check if attributes should be retrieved by attribute nodes
	assertAttributes = assert(function( div ) {
		div.innerHTML = "<select></select>";
		var type = typeof div.lastChild.getAttribute("multiple");
		// IE8 returns a string for some attributes even when not present
		return type !== "boolean" && type !== "string";
	}),

	// Check if getElementsByClassName can be trusted
	assertUsableClassName = assert(function( div ) {
		// Opera can't find a second classname (in 9.6)
		div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
		if ( !div.getElementsByClassName || !div.getElementsByClassName("e").length ) {
			return false;
		}

		// Safari 3.2 caches class attributes and doesn't catch changes
		div.lastChild.className = "e";
		return div.getElementsByClassName("e").length === 2;
	}),

	// Check if getElementById returns elements by name
	// Check if getElementsByName privileges form controls or returns elements by ID
	assertUsableName = assert(function( div ) {
		// Inject content
		div.id = expando + 0;
		div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
		docElem.insertBefore( div, docElem.firstChild );

		// Test
		var pass = document.getElementsByName &&
			// buggy browsers will return fewer than the correct 2
			document.getElementsByName( expando ).length === 2 +
			// buggy browsers will return more than the correct 0
			document.getElementsByName( expando + 0 ).length;
		assertGetIdNotName = !document.getElementById( expando );

		// Cleanup
		docElem.removeChild( div );

		return pass;
	});

// If slice is not available, provide a backup
try {
	slice.call( docElem.childNodes, 0 )[0].nodeType;
} catch ( e ) {
	slice = function( i ) {
		var elem,
			results = [];
		for ( ; (elem = this[i]); i++ ) {
			results.push( elem );
		}
		return results;
	};
}

function Sizzle( selector, context, results, seed ) {
	results = results || [];
	context = context || document;
	var match, elem, xml, m,
		nodeType = context.nodeType;

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( nodeType !== 1 && nodeType !== 9 ) {
		return [];
	}

	xml = isXML( context );

	if ( !xml && !seed ) {
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {
				push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );
				return results;
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed, xml );
}

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	return Sizzle( expr, null, null, [ elem ] ).length > 0;
};

// Returns a function to use in pseudos for input types
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

// Returns a function to use in pseudos for buttons
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

// Returns a function to use in pseudos for positionals
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (see #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes
	} else {

		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	}
	return ret;
};

isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Element contains another
contains = Sizzle.contains = docElem.contains ?
	function( a, b ) {
		var adown = a.nodeType === 9 ? a.documentElement : a,
			bup = b && b.parentNode;
		return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );
	} :
	docElem.compareDocumentPosition ?
	function( a, b ) {
		return b && !!( a.compareDocumentPosition( b ) & 16 );
	} :
	function( a, b ) {
		while ( (b = b.parentNode) ) {
			if ( b === a ) {
				return true;
			}
		}
		return false;
	};

Sizzle.attr = function( elem, name ) {
	var val,
		xml = isXML( elem );

	if ( !xml ) {
		name = name.toLowerCase();
	}
	if ( (val = Expr.attrHandle[ name ]) ) {
		return val( elem );
	}
	if ( xml || assertAttributes ) {
		return elem.getAttribute( name );
	}
	val = elem.getAttributeNode( name );
	return val ?
		typeof elem[ name ] === "boolean" ?
			elem[ name ] ? name : null :
			val.specified ? val.value : null :
		null;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	// IE6/7 return a modified href
	attrHandle: assertHrefNotNormalized ?
		{} :
		{
			"href": function( elem ) {
				return elem.getAttribute( "href", 2 );
			},
			"type": function( elem ) {
				return elem.getAttribute("type");
			}
		},

	find: {
		"ID": assertGetIdNotName ?
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [m] : [];
				}
			} :
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );

					return m ?
						m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ?
							[m] :
							undefined :
						[];
				}
			},

		"TAG": assertTagNameNoComments ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== strundefined ) {
					return context.getElementsByTagName( tag );
				}
			} :
			function( tag, context ) {
				var results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					var elem,
						tmp = [],
						i = 0;

					for ( ; (elem = results[i]); i++ ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			},

		"NAME": assertUsableName && function( tag, context ) {
			if ( typeof context.getElementsByName !== strundefined ) {
				return context.getElementsByName( name );
			}
		},

		"CLASS": assertUsableClassName && function( className, context, xml ) {
			if ( typeof context.getElementsByClassName !== strundefined && !xml ) {
				return context.getElementsByClassName( className );
			}
		}
	},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( rbackslash, "" );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( rbackslash, "" );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				3 xn-component of xn+y argument ([+-]?\d*n|)
				4 sign of xn-component
				5 x of xn-component
				6 sign of y-component
				7 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1] === "nth" ) {
				// nth-child requires argument
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === "even" || match[2] === "odd" ) );
				match[4] = +( ( match[6] + match[7] ) || match[2] === "odd" );

			// other types prohibit arguments
			} else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var unquoted, excess;
			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			if ( match[3] ) {
				match[2] = match[3];
			} else if ( (unquoted = match[4]) ) {
				// Only check arguments that contain a pseudo
				if ( rpseudo.test(unquoted) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					unquoted = unquoted.slice( 0, excess );
					match[0] = match[0].slice( 0, excess );
				}
				match[2] = unquoted;
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {
		"ID": assertGetIdNotName ?
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					return elem.getAttribute("id") === id;
				};
			} :
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
					return node && node.value === id;
				};
			},

		"TAG": function( nodeName ) {
			if ( nodeName === "*" ) {
				return function() { return true; };
			}
			nodeName = nodeName.replace( rbackslash, "" ).toLowerCase();

			return function( elem ) {
				return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
			};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ expando ][ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem, context ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.substr( result.length - check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.substr( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, argument, first, last ) {

			if ( type === "nth" ) {
				return function( elem ) {
					var node, diff,
						parent = elem.parentNode;

					if ( first === 1 && last === 0 ) {
						return true;
					}

					if ( parent ) {
						diff = 0;
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								diff++;
								if ( elem === node ) {
									break;
								}
							}
						}
					}

					// Incorporate the offset (or cast to NaN), then check against cycle size
					diff -= last;
					return diff === first || ( diff % first === 0 && diff / first >= 0 );
				};
			}

			return function( elem ) {
				var node = elem;

				switch ( type ) {
					case "only":
					case "first":
						while ( (node = node.previousSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						if ( type === "first" ) {
							return true;
						}

						node = elem;

						/* falls through */
					case "last":
						while ( (node = node.nextSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						return true;
				}
			};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			var nodeType;
			elem = elem.firstChild;
			while ( elem ) {
				if ( elem.nodeName > "@" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {
					return false;
				}
				elem = elem.nextSibling;
			}
			return true;
		},

		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"text": function( elem ) {
			var type, attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				(type = elem.type) === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type );
		},

		// Input types
		"radio": createInputPseudo("radio"),
		"checkbox": createInputPseudo("checkbox"),
		"file": createInputPseudo("file"),
		"password": createInputPseudo("password"),
		"image": createInputPseudo("image"),

		"submit": createButtonPseudo("submit"),
		"reset": createButtonPseudo("reset"),

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"focus": function( elem ) {
			var doc = elem.ownerDocument;
			return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		"active": function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		},

		// Positional types
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			for ( var i = 0; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			for ( var i = 1; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

function siblingCheck( a, b, ret ) {
	if ( a === b ) {
		return ret;
	}

	var cur = a.nextSibling;

	while ( cur ) {
		if ( cur === b ) {
			return -1;
		}

		cur = cur.nextSibling;
	}

	return 1;
}

sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?
			a.compareDocumentPosition :
			a.compareDocumentPosition(b) & 4
		) ? -1 : 1;
	} :
	function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

// Always assume the presence of duplicates if sort doesn't
// pass them to our comparison function (as in Google Chrome).
[0, 0].sort( sortOrder );
baseHasDuplicate = !hasDuplicate;

// Document sorting and removing duplicates
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		i = 1,
		j = 0;

	hasDuplicate = baseHasDuplicate;
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		for ( ; (elem = results[i]); i++ ) {
			if ( elem === results[ i - 1 ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	return results;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ expando ][ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( tokens = [] );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			tokens.push( matched = new Token( match.shift() ) );
			soFar = soFar.slice( matched.length );

			// Cast descendant combinators to space
			matched.type = match[0].replace( rtrim, " " );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {

				tokens.push( matched = new Token( match.shift() ) );
				soFar = soFar.slice( matched.length );
				matched.type = type;
				matched.matches = match;
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && combinator.dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( checkNonElements || elem.nodeType === 1  ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( !xml ) {
				var cache,
					dirkey = dirruns + " " + doneName + " ",
					cachedkey = dirkey + cachedruns;
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( (cache = elem[ expando ]) === cachedkey ) {
							return elem.sizset;
						} else if ( typeof cache === "string" && cache.indexOf(dirkey) === 0 ) {
							if ( elem.sizset ) {
								return elem;
							}
						} else {
							elem[ expando ] = cachedkey;
							if ( matcher( elem, context, xml ) ) {
								elem.sizset = true;
								return elem;
							}
							elem.sizset = false;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( matcher( elem, context, xml ) ) {
							return elem;
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && tokens.slice( 0, i - 1 ).join("").replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && tokens.join("")
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, expandContext ) {
			var elem, j, matcher,
				setMatched = [],
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				outermost = expandContext != null,
				contextBackup = outermostContext,
				// We must always have either seed elements or context
				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
				// Nested matchers should use non-integer dirruns
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);

			if ( outermost ) {
				outermostContext = context !== document && context;
				cachedruns = superMatcher.el;
			}

			// Add elements passing elementMatchers directly to results
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					for ( j = 0; (matcher = elementMatchers[j]); j++ ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
						cachedruns = ++superMatcher.el;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				for ( j = 0; (matcher = setMatchers[j]); j++ ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	superMatcher.el = 0;
	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ expando ][ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !group ) {
			group = tokenize( selector );
		}
		i = group.length;
		while ( i-- ) {
			cached = matcherFromTokens( group[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	}
	return cached;
};

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function select( selector, context, results, seed, xml ) {
	var i, tokens, token, type, find,
		match = tokenize( selector ),
		j = match.length;

	if ( !seed ) {
		// Try to minimize operations if there is only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					context.nodeType === 9 && !xml &&
					Expr.relative[ tokens[1].type ] ) {

				context = Expr.find["ID"]( token.matches[0].replace( rbackslash, "" ), context, xml )[0];
				if ( !context ) {
					return results;
				}

				selector = selector.slice( tokens.shift().length );
			}

			// Fetch a seed set for right-to-left matching
			for ( i = matchExpr["POS"].test( selector ) ? -1 : tokens.length - 1; i >= 0; i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( rbackslash, "" ),
						rsibling.test( tokens[0].type ) && context.parentNode || context,
						xml
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && tokens.join("");
						if ( !selector ) {
							push.apply( results, slice.call( seed, 0 ) );
							return results;
						}

						break;
					}
				}
			}
		}
	}

	// Compile and execute a filtering function
	// Provide `match` to avoid retokenization if we modified the selector above
	compile( selector, match )(
		seed,
		context,
		xml,
		results,
		rsibling.test( selector )
	);
	return results;
}

if ( document.querySelectorAll ) {
	(function() {
		var disconnectedMatch,
			oldSelect = select,
			rescape = /'|\\/g,
			rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,

			// qSa(:focus) reports false when true (Chrome 21), no need to also add to buggyMatches since matches checks buggyQSA
			// A support test would require too much code (would include document ready)
			rbuggyQSA = [ ":focus" ],

			// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
			// A support test would require too much code (would include document ready)
			// just skip matchesSelector for :active
			rbuggyMatches = [ ":active" ],
			matches = docElem.matchesSelector ||
				docElem.mozMatchesSelector ||
				docElem.webkitMatchesSelector ||
				docElem.oMatchesSelector ||
				docElem.msMatchesSelector;

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explictly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// IE8 - Some boolean attributes are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here (do not put tests after this one)
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Opera 10-12/IE9 - ^= $= *= and empty values
			// Should not select anything
			div.innerHTML = "<p test=''></p>";
			if ( div.querySelectorAll("[test^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:\"\"|'')" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here (do not put tests after this one)
			div.innerHTML = "<input type='hidden'/>";
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push(":enabled", ":disabled");
			}
		});

		// rbuggyQSA always contains :focus, so no need for a length check
		rbuggyQSA = /* rbuggyQSA.length && */ new RegExp( rbuggyQSA.join("|") );

		select = function( selector, context, results, seed, xml ) {
			// Only use querySelectorAll when not filtering,
			// when this is not xml,
			// and when no QSA bugs apply
			if ( !seed && !xml && !rbuggyQSA.test( selector ) ) {
				var groups, i,
					old = true,
					nid = expando,
					newContext = context,
					newSelector = context.nodeType === 9 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + groups[i].join("");
					}
					newContext = rsibling.test( selector ) && context.parentNode || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results, slice.call( newContext.querySelectorAll(
							newSelector
						), 0 ) );
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}

			return oldSelect( selector, context, results, seed, xml );
		};

		if ( matches ) {
			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				try {
					matches.call( div, "[test!='']:sizzle" );
					rbuggyMatches.push( "!=", pseudos );
				} catch ( e ) {}
			});

			// rbuggyMatches always contains :active and :focus, so no need for a length check
			rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join("|") );

			Sizzle.matchesSelector = function( elem, expr ) {
				// Make sure that attribute selectors are quoted
				expr = expr.replace( rattributeQuotes, "='$1']" );

				// rbuggyMatches always contains :active, so no need for an existence check
				if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && !rbuggyQSA.test( expr ) ) {
					try {
						var ret = matches.call( elem, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9
								elem.document && elem.document.nodeType !== 11 ) {
							return ret;
						}
					} catch(e) {}
				}

				return Sizzle( expr, null, null, [ elem ] ).length > 0;
			};
		}
	})();
}

// Deprecated
Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Back-compat
function setFilters() {}
Expr.filters = setFilters.prototype = Expr.pseudos;
Expr.setFilters = new setFilters();

// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
var runtil = /Until$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	isSimple = /^.[^:#\[\.,]*$/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i, l, length, n, r, ret,
			self = this;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		ret = this.pushStack( "", "find", selector );

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && (
			typeof selector === "string" ?
				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				rneedsContext.test( selector ) ?
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			ret = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			cur = this[i];

			while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;
				}
				cur = cur.parentNode;
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

jQuery.fn.andSelf = jQuery.fn.addBack;

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( this.length > 1 && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, core_slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}
function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rcheckableType = /^(?:checkbox|radio)$/,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
// unless wrapped in a div with non-breaking characters in front of it.
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "X<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( set, this ), "before", this.selector );
		}
	},

	after: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( this, set ), "after", this.selector );
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( elem.getElementsByTagName( "*" ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function( value ) {
		if ( !isDisconnected( this[0] ) ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		}

		return this.length ?
			this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
			this;
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {

		// Flatten any nested arrays
		args = [].concat.apply( [], args );

		var results, first, fragment, iNoClone,
			i = 0,
			value = args[0],
			scripts = [],
			l = this.length;

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call( this, i, table ? self.html() : undefined );
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			results = jQuery.buildFragment( args, this, scripts );
			fragment = results.fragment;
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				// Fragments from the fragment cache must always be cloned and never used in place.
				for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {
					callback.call(
						table && jQuery.nodeName( this[i], "table" ) ?
							findOrAppend( this[i], "tbody" ) :
							this[i],
						i === iNoClone ?
							fragment :
							jQuery.clone( fragment, true, true )
					);
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;

			if ( scripts.length ) {
				jQuery.each( scripts, function( i, elem ) {
					if ( elem.src ) {
						if ( jQuery.ajax ) {
							jQuery.ajax({
								url: elem.src,
								type: "GET",
								dataType: "script",
								async: false,
								global: false,
								"throws": true
							});
						} else {
							jQuery.error("no ajax");
						}
					} else {
						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "" ) );
					}

					if ( elem.parentNode ) {
						elem.parentNode.removeChild( elem );
					}
				});
			}
		}

		return this;
	}
});

function findOrAppend( elem, tag ) {
	return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	if ( nodeName === "object" ) {
		// IE6-10 improperly clones children of object elements using classid.
		// IE10 throws NoModificationAllowedError if parent is null, #12132.
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;

	// IE blanks contents when cloning scripts
	} else if ( nodeName === "script" && dest.text !== src.text ) {
		dest.text = src.text;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, context, scripts ) {
	var fragment, cacheable, cachehit,
		first = args[ 0 ];

	// Set context from what may come in as undefined or a jQuery collection or a node
	// Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &
	// also doubles as fix for #8950 where plain objects caused createDocumentFragment exception
	context = context || document;
	context = !context.nodeType && context[0] || context;
	context = context.ownerDocument || context;

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && context === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		// Mark cacheable and look for a hit
		cacheable = true;
		fragment = jQuery.fragments[ first ];
		cachehit = fragment !== undefined;
	}

	if ( !fragment ) {
		fragment = context.createDocumentFragment();
		jQuery.clean( args, context, fragment, scripts );

		// Update the cache, but only store false
		// unless this is a second parsing of the same content
		if ( cacheable ) {
			jQuery.fragments[ first ] = cachehit && fragment;
		}
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			l = insert.length,
			parent = this.length === 1 && this[0].parentNode;

		if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {
			insert[ original ]( this[0] );
			return this;
		} else {
			for ( ; i < l; i++ ) {
				elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			clone;

		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,
			safe = context === document && safeFragment,
			ret = [];

		// Ensure that context is a document
		if ( !context || typeof context.createDocumentFragment === "undefined" ) {
			context = document;
		}

		// Use the already-created safe fragment if context permits
		for ( i = 0; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Ensure a safe container in which to render the html
					safe = safe || createSafeFragment( context );
					div = context.createElement("div");
					safe.appendChild( div );

					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Go to html and back, then peel off extra wrappers
					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					depth = wrap[0];
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						hasBody = rtbody.test(elem);
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;

					// Take out of fragment container (we need a fresh div each time)
					div.parentNode.removeChild( div );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				jQuery.merge( ret, elem );
			}
		}

		// Fix #11356: Clear elements from safeFragment
		if ( div ) {
			elem = div = safe = null;
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !jQuery.support.appendChecked ) {
			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				if ( jQuery.nodeName( elem, "input" ) ) {
					fixDefaultChecked( elem );
				} else if ( typeof elem.getElementsByTagName !== "undefined" ) {
					jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
				}
			}
		}

		// Append elements to a provided document fragment
		if ( fragment ) {
			// Special handling of each script element
			handleScript = function( elem ) {
				// Check if we consider it executable
				if ( !elem.type || rscriptType.test( elem.type ) ) {
					// Detach the script and store it in the scripts array (if provided) or the fragment
					// Return truthy to indicate that it has been handled
					return scripts ?
						scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
						fragment.appendChild( elem );
				}
			};

			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				// Check if we're done after handling an executable script
				if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
					// Append to fragment and handle embedded scripts
					fragment.appendChild( elem );
					if ( typeof elem.getElementsByTagName !== "undefined" ) {
						// handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
						jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

						// Splice the scripts into ret after their former ancestor and advance our index beyond them
						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
						i += jsTags.length;
					}
				}
			}
		}

		return ret;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var data, id, elem, type,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = jQuery.support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( elem.removeAttribute ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						jQuery.deletedIds.push( id );
					}
				}
			}
		}
	}
});
// Limit scope pollution from any deprecated API
(function() {

var matched, browser;

// Use of jQuery.browser is frowned upon.
// More details: http://api.jquery.com/jQuery.browser
// jQuery.uaMatch maintained for back-compat
jQuery.uaMatch = function( ua ) {
	ua = ua.toLowerCase();

	var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
		/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
		/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
		/(msie) ([\w.]+)/.exec( ua ) ||
		ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
		[];

	return {
		browser: match[ 1 ] || "",
		version: match[ 2 ] || "0"
	};
};

matched = jQuery.uaMatch( navigator.userAgent );
browser = {};

if ( matched.browser ) {
	browser[ matched.browser ] = true;
	browser.version = matched.version;
}

// Chrome is Webkit, but Webkit is also Safari.
if ( browser.chrome ) {
	browser.webkit = true;
} else if ( browser.webkit ) {
	browser.safari = true;
}

jQuery.browser = browser;

jQuery.sub = function() {
	function jQuerySub( selector, context ) {
		return new jQuerySub.fn.init( selector, context );
	}
	jQuery.extend( true, jQuerySub, this );
	jQuerySub.superclass = this;
	jQuerySub.fn = jQuerySub.prototype = this();
	jQuerySub.fn.constructor = jQuerySub;
	jQuerySub.sub = this.sub;
	jQuerySub.fn.init = function init( selector, context ) {
		if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
			context = jQuerySub( context );
		}

		return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
	};
	jQuerySub.fn.init.prototype = jQuerySub.fn;
	var rootjQuerySub = jQuerySub(document);
	return jQuerySub;
};

})();
var curCSS, iframe, iframeDoc,
	ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	rposition = /^(top|right|bottom|left)$/,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([-+])=(" + core_pnum + ")", "i" ),
	elemdisplay = { BODY: "block" },

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],

	eventsToggle = jQuery.fn.toggle;

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
	var elem, display,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		values[ index ] = jQuery._data( elem, "olddisplay" );
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && elem.style.display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {
			display = curCSS( elem, "display" );

			if ( !values[ index ] && display !== "none" ) {
				jQuery._data( elem, "olddisplay", display );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state, fn2 ) {
		var bool = typeof state === "boolean";

		if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {
			return eventsToggle.apply( this, arguments );
		}

		return this.each(function() {
			if ( bool ? state : isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;

				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, numeric, extra ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( numeric || extra !== undefined ) {
			num = parseFloat( val );
			return numeric || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

// NOTE: To any future maintainer, we've window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
	curCSS = function( elem, name ) {
		var ret, width, minWidth, maxWidth,
			computed = window.getComputedStyle( elem, null ),
			style = elem.style;

		if ( computed ) {

			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
			ret = computed.getPropertyValue( name ) || computed[ name ];

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};
} else if ( document.documentElement.currentStyle ) {
	curCSS = function( elem, name ) {
		var left, rsLeft,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			// we use jQuery.css instead of curCSS here
			// because of the reliableMarginRight CSS hook!
			val += jQuery.css( elem, extra + cssExpand[ i ], true );
		}

		// From this point on we use curCSS for maximum performance (relevant in animations)
		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		valueIsBorderBox = true,
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox
		)
	) + "px";
}


// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	if ( elemdisplay[ nodeName ] ) {
		return elemdisplay[ nodeName ];
	}

	var elem = jQuery( "<" + nodeName + ">" ).appendTo( document.body ),
		display = elem.css("display");
	elem.remove();

	// If the simple way fails,
	// get element's real default display by attaching it to a temp iframe
	if ( display === "none" || display === "" ) {
		// Use the already-created iframe if possible
		iframe = document.body.appendChild(
			iframe || jQuery.extend( document.createElement("iframe"), {
				frameBorder: 0,
				width: 0,
				height: 0
			})
		);

		// Create a cacheable copy of the iframe document on first call.
		// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
		// document to it; WebKit & Firefox won't allow reusing the iframe document.
		if ( !iframeDoc || !iframe.createElement ) {
			iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
			iframeDoc.write("<!doctype html><html><body>");
			iframeDoc.close();
		}

		elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );

		display = curCSS( elem, "display" );
		document.body.removeChild( iframe );
	}

	// Store the correct default display
	elemdisplay[ nodeName ] = display;

	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, "display" ) ) ) {
					return jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					});
				} else {
					return getWidthOrHeight( elem, name, extra );
				}
			}
		},

		set: function( elem, value, extra ) {
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box"
				) : 0
			);
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
				style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				return jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						return curCSS( elem, "marginRight" );
					}
				});
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						var ret = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + "px" : ret;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i,

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ],
				expanded = {};

			for ( i = 0; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	rselectTextarea = /^(?:select|textarea)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType, list, placeBefore,
			dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),
			i = 0,
			length = dataTypes.length;

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var selection,
		list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters );

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	// Don't do a request if no elements are being requested
	if ( !this.length ) {
		return this;
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off, url.length );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// Request the remote document
	jQuery.ajax({
		url: url,

		// if "type" variable is undefined, then "GET" method will be used
		type: type,
		dataType: "html",
		data: params,
		complete: function( jqXHR, status ) {
			if ( callback ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			}
		}
	}).done(function( responseText ) {

		// Save response for use in complete callback
		response = arguments;

		// See if a selector was specified
		self.html( selector ?

			// Create a dummy div to hold the results
			jQuery("<div>")

				// inject the contents of the document in, removing the scripts
				// to avoid any 'Permission Denied' errors in IE
				.append( responseText.replace( rscript, "" ) )

				// Locate the specified elements
				.find( selector ) :

			// If not, just inject the full result
			responseText );

	});

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // ifModified key
			ifModifiedKey,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || strAbort;
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ ifModifiedKey ] = modified;
					}
					modified = jqXHR.getResponseHeader("Etag");
					if ( modified ) {
						jQuery.etag[ ifModifiedKey ] = modified;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					isSuccess = ajaxConvert( s, response );
					statusText = isSuccess.state;
					success = isSuccess.data;
					error = isSuccess.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.always( tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( core_rspace );

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();

		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	var conv, conv2, current, tmp,
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice(),
		prev = dataTypes[ 0 ],
		converters = {},
		i = 0;

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	// Convert to each sequential dataType, tolerating list modification
	for ( ; (current = dataTypes[++i]); ) {

		// There's only work to do if current dataType is non-auto
		if ( current !== "*" ) {

			// Convert response if prev dataType is non-auto and differs from current
			if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split(" ");
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.splice( i--, 0, current );
								}

								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s["throws"] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}

			// Update prev for next iteration
			prev = current;
		}
	}

	return { state: "success", data: response };
}
var oldCallbacks = [],
	rquestion = /\?/,
	rjsonp = /(=)\?(?=&|$)|\?\?/,
	nonce = jQuery.now();

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		data = s.data,
		url = s.url,
		hasCallback = s.jsonp !== false,
		replaceInUrl = hasCallback && rjsonp.test( url ),
		replaceInData = hasCallback && !replaceInUrl && typeof data === "string" &&
			!( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &&
			rjsonp.test( data );

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( s.dataTypes[ 0 ] === "jsonp" || replaceInUrl || replaceInData ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;
		overwritten = window[ callbackName ];

		// Insert callback into url or form data
		if ( replaceInUrl ) {
			s.url = url.replace( rjsonp, "$1" + callbackName );
		} else if ( replaceInData ) {
			s.data = data.replace( rjsonp, "$1" + callbackName );
		} else if ( hasCallback ) {
			s.url += ( rquestion.test( url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});
var xhrCallbacks,
	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var handle, i,
						xhr = s.xhr();

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occurred
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									try {
										responses.text = xhr.responseText;
									} catch( e ) {
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					if ( !s.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback, 0 );
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([-+])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var end, unit,
				tween = this.createTween( prop, value ),
				parts = rfxnum.exec( value ),
				target = tween.cur(),
				start = +target || 0,
				scale = 1,
				maxIterations = 20;

			if ( parts ) {
				end = +parts[2];
				unit = parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );

				// We need to compute starting value
				if ( unit !== "px" && start ) {
					// Iteratively approximate from a nonzero starting point
					// Prefer the current property, because this process will be trivial if it uses the same units
					// Fallback to end or a simple constant
					start = jQuery.css( tween.elem, prop, true ) || end || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*
						// Use a string for doubling factor so we don't accidentally see scale as unchanged below
						scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

					// Update scale, tolerating zero or NaN from tween.cur()
					// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}

				tween.unit = unit;
				tween.start = start;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;
			}
			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	}, 0 );
	return ( fxNow = jQuery.now() );
}

function createTweens( animation, props ) {
	jQuery.each( props, function( prop, value ) {
		var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( collection[ index ].call( animation, prop, value ) ) {

				// we're done with this property
				return;
			}
		}
	});
}

function Animation( elem, properties, options ) {
	var result,
		index = 0,
		tweenerIndex = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end, easing ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	createTweens( animation, props );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			anim: animation,
			queue: animation.opts.queue,
			elem: elem
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	var index, prop, value, length, dataShow, toggle, tween, hooks, oldfire,
		anim = this,
		style = elem.style,
		orig = {},
		handled = [],
		hidden = elem.nodeType && isHidden( elem );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";

			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !jQuery.support.shrinkWrapBlocks ) {
			anim.done(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}


	// show/hide pass
	for ( index in props ) {
		value = props[ index ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ index ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {
				continue;
			}
			handled.push( index );
		}
	}

	length = handled.length;
	if ( length ) {
		dataShow = jQuery._data( elem, "fxshow" ) || jQuery._data( elem, "fxshow", {} );
		if ( "hidden" in dataShow ) {
			hidden = dataShow.hidden;
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery.removeData( elem, "fxshow", true );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( index = 0 ; index < length ; index++ ) {
			prop = handled[ index ];
			tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );
			orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing any value as a 4th parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, false, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Remove in 2.0 - this supports IE8's panic based approach
// to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ||
			// special check for .toggle( handler, handler, ... )
			( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations resolve immediately
				if ( empty ) {
					anim.stop( true );
				}
			};

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) && !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.interval = 13;

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
var rroot = /^(?:body|html)$/i;

jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft,
		box = { top: 0, left: 0 },
		elem = this[ 0 ],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	if ( (body = doc.body) === elem ) {
		return jQuery.offset.bodyOffset( elem );
	}

	docElem = doc.documentElement;

	// Make sure it's not a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return box;
	}

	// If we don't have gBCR, just use 0,0 rather than error
	// BlackBerry 5, iOS 3 (original iPhone)
	if ( typeof elem.getBoundingClientRect !== "undefined" ) {
		box = elem.getBoundingClientRect();
	}
	win = getWindow( doc );
	clientTop  = docElem.clientTop  || body.clientTop  || 0;
	clientLeft = docElem.clientLeft || body.clientLeft || 0;
	scrollTop  = win.pageYOffset || docElem.scrollTop;
	scrollLeft = win.pageXOffset || docElem.scrollLeft;
	return {
		top: box.top  + scrollTop  - clientTop,
		left: box.left + scrollLeft - clientLeft
	};
};

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || document.body;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					 top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, value, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof Iris.define === 'function' && Iris.define.amd && Iris.define.amd.jQuery ) {
	Iris.define( "jquery", [], function () { return jQuery; } );
}

})( window );

Iris.define('noconflict',["jquery"], function (JQ) {
	return JQ.noConflict(false);
});
d3 = function() {
  var d3 = {
    version: "3.2.8"
  };
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
  try {
    d3_document.createElement("div").style.setProperty("opacity", 0, "");
  } catch (error) {
    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
    d3_element_prototype.setAttribute = function(name, value) {
      d3_element_setAttribute.call(this, name, value + "");
    };
    d3_element_prototype.setAttributeNS = function(space, local, value) {
      d3_element_setAttributeNS.call(this, space, local, value + "");
    };
    d3_style_prototype.setProperty = function(name, value, priority) {
      d3_style_setProperty.call(this, name, value + "", priority);
    };
  }
  d3.ascending = function(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  };
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (!isNaN(a = +array[i])) s += a;
    } else {
      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  function d3_number(x) {
    return x != null && !isNaN(x);
  }
  d3.mean = function(array, f) {
    var n = array.length, a, m = 0, i = -1, j = 0;
    if (arguments.length === 1) {
      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;
    } else {
      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;
    }
    return j ? m : undefined;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    if (arguments.length > 1) array = array.map(f);
    array = array.filter(d3_number);
    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;
  };
  d3.bisector = function(f) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  };
  var d3_bisector = d3.bisector(function(d) {
    return d;
  });
  d3.bisectLeft = d3_bisector.left;
  d3.bisect = d3.bisectRight = d3_bisector.right;
  d3.shuffle = function(array) {
    var m = array.length, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m], array[m] = array[i], array[i] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.zip = function() {
    if (!(n = arguments.length)) return [];
    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
        zip[j] = arguments[j][i];
      }
    }
    return zips;
  };
  function d3_zipLength(d) {
    return d.length;
  }
  d3.transpose = function(matrix) {
    return d3.zip.apply(d3, matrix);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    return Array.prototype.concat.apply([], arrays);
  };
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(Math.abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    try {
      for (var key in properties) {
        Object.defineProperty(ctor.prototype, key, {
          value: properties[key],
          enumerable: false
        });
      }
    } catch (e) {
      ctor.prototype = properties;
    }
  }
  d3.map = function(object) {
    var map = new d3_Map();
    if (object instanceof d3_Map) object.forEach(function(key, value) {
      map.set(key, value);
    }); else for (var key in object) map.set(key, object[key]);
    return map;
  };
  function d3_Map() {}
  d3_class(d3_Map, {
    has: function(key) {
      return d3_map_prefix + key in this;
    },
    get: function(key) {
      return this[d3_map_prefix + key];
    },
    set: function(key, value) {
      return this[d3_map_prefix + key] = value;
    },
    remove: function(key) {
      key = d3_map_prefix + key;
      return key in this && delete this[key];
    },
    keys: function() {
      var keys = [];
      this.forEach(function(key) {
        keys.push(key);
      });
      return keys;
    },
    values: function() {
      var values = [];
      this.forEach(function(key, value) {
        values.push(value);
      });
      return values;
    },
    entries: function() {
      var entries = [];
      this.forEach(function(key, value) {
        entries.push({
          key: key,
          value: value
        });
      });
      return entries;
    },
    forEach: function(f) {
      for (var key in this) {
        if (key.charCodeAt(0) === d3_map_prefixCode) {
          f.call(this, key.substring(1), this[key]);
        }
      }
    }
  });
  var d3_map_prefix = "\0", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {}
  d3_class(d3_Set, {
    has: function(value) {
      return d3_map_prefix + value in this;
    },
    add: function(value) {
      this[d3_map_prefix + value] = true;
      return value;
    },
    remove: function(value) {
      value = d3_map_prefix + value;
      return value in this && delete this[value];
    },
    values: function() {
      var values = [];
      this.forEach(function(value) {
        values.push(value);
      });
      return values;
    },
    forEach: function(f) {
      for (var value in this) {
        if (value.charCodeAt(0) === d3_map_prefixCode) {
          f.call(this, value.substring(1));
        }
      }
    }
  });
  d3.behavior = {};
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.substring(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  var d3_array = d3_arraySlice;
  function d3_arrayCopy(pseudoarray) {
    var i = pseudoarray.length, array = new Array(i);
    while (i--) array[i] = pseudoarray[i];
    return array;
  }
  function d3_arraySlice(pseudoarray) {
    return Array.prototype.slice.call(pseudoarray);
  }
  try {
    d3_array(d3_documentElement.childNodes)[0].nodeType;
  } catch (e) {
    d3_array = d3_arrayCopy;
  }
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.substring(i + 1);
      type = type.substring(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
    return d3_selectMatcher.call(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = function(s, n) {
      return Sizzle.uniqueSort(Sizzle(s, n));
    };
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3_selectionRoot;
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0) {
        prefix = name.substring(0, i);
        name = name.substring(i + 1);
      }
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = name.trim().split(/^|\s+/g)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classed(name, value) {
    name = name.trim().split(/\s+/).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
      return d3_document.createElementNS(name.space, name.local);
    } : function() {
      return d3_document.createElementNS(this.namespaceURI, name);
    };
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments));
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(function() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    });
  };
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;
        for (i = -1; ++i < n; ) {
          keyValue = key.call(node = group[i], node.__data__, i);
          if (nodeByKeyValue.has(keyValue)) {
            exitNodes[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }
          keyValues.push(keyValue);
        }
        for (i = -1; ++i < m; ) {
          keyValue = key.call(groupData, nodeData = groupData[i], i);
          if (node = nodeByKeyValue.get(keyValue)) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          } else if (!dataByKeyValue.has(keyValue)) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
          dataByKeyValue.set(keyValue, nodeData);
          nodeByKeyValue.remove(keyValue);
        }
        for (i = -1; ++i < n; ) {
          if (nodeByKeyValue.has(keyValues[i])) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3.ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    this.each(function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3_selectionPrototype.transition = function() {
    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id);
  };
  d3.select = function(node) {
    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  var d3_selectionRoot = d3.select(d3_documentElement);
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.substring(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  d3_selection_onFilters.forEach(function(k) {
    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
  });
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect = d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
  function d3_event_dragSuppress() {
    var name = ".dragsuppress-" + ++d3_event_dragId, touchmove = "touchmove" + name, selectstart = "selectstart" + name, dragstart = "dragstart" + name, click = "click" + name, w = d3.select(d3_window).on(touchmove, d3_eventPreventDefault).on(selectstart, d3_eventPreventDefault).on(dragstart, d3_eventPreventDefault), style = d3_documentElement.style, select = style[d3_event_dragSelect];
    style[d3_event_dragSelect] = "none";
    return function(suppressClick) {
      w.on(name, null);
      style[d3_event_dragSelect] = select;
      if (suppressClick) {
        function off() {
          w.on(click, null);
        }
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;
  function d3_mousePoint(container, e) {
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {
        svg = d3.select("body").append("svg").style({
          position: "absolute",
          top: 0,
          left: 0,
          margin: 0,
          padding: 0,
          border: "none"
        }, "important");
        var ctm = svg[0][0].getScreenCTM();
        d3_mouse_bug44083 = !(ctm.f || ctm.e);
        svg.remove();
      }
      if (d3_mouse_bug44083) {
        point.x = e.pageX;
        point.y = e.pageY;
      } else {
        point.x = e.clientX;
        point.y = e.clientY;
      }
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, "mousemove", "mouseup"), touchstart = dragstart(touchid, touchposition, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function touchid() {
      return d3.event.changedTouches[0].identifier;
    }
    function touchposition(parent, id) {
      return d3.touches(parent).filter(function(p) {
        return p.identifier === id;
      })[0];
    }
    function dragstart(id, position, move, end) {
      return function() {
        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? "drag" : "drag-" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + "." + drag, moved).on(end + "." + drag, ended), dragRestore = d3_event_dragSuppress();
        if (origin) {
          offset = origin.apply(target, arguments);
          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];
        } else {
          offset = [ 0, 0 ];
        }
        event_({
          type: "dragstart"
        });
        function moved() {
          if (!parent) return ended();
          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];
          dragged |= dx | dy;
          origin_ = p;
          event_({
            type: "drag",
            x: p[0] + offset[0],
            y: p[1] + offset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          w.on(move + "." + drag, null).on(end + "." + drag, null);
          dragRestore(dragged && d3.event.target === eventTarget);
          event_({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  d3.behavior.zoom = function() {
    var translate = [ 0, 0 ], translate0, scale = 1, scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", touchstart = "touchstart.zoom", touchmove = "touchmove.zoom", touchend = "touchend.zoom", touchtime, event = d3_eventDispatch(zoom, "zoom"), x0, x1, y0, y1;
    function zoom() {
      this.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on(mousemove, mousewheelreset).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.translate = function(x) {
      if (!arguments.length) return translate;
      translate = x.map(Number);
      rescale();
      return zoom;
    };
    zoom.scale = function(x) {
      if (!arguments.length) return scale;
      scale = +x;
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(x) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = x == null ? d3_behavior_zoomInfinity : x.map(Number);
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      translate = [ 0, 0 ];
      scale = 1;
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      translate = [ 0, 0 ];
      scale = 1;
      return zoom;
    };
    function location(p) {
      return [ (p[0] - translate[0]) / scale, (p[1] - translate[1]) / scale ];
    }
    function point(l) {
      return [ l[0] * scale + translate[0], l[1] * scale + translate[1] ];
    }
    function scaleTo(s) {
      scale = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      translate[0] += p[0] - l[0];
      translate[1] += p[1] - l[1];
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - translate[0]) / scale;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - translate[1]) / scale;
      }).map(y0.invert));
    }
    function dispatch(event) {
      rescale();
      event({
        type: "zoom",
        scale: scale,
        translate: translate
      });
    }
    function mousedowned() {
      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(target), l);
        dispatch(event_);
      }
      function ended() {
        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);
        dragRestore(dragged && d3.event.target === eventTarget);
      }
    }
    function touchstarted() {
      var target = this, event_ = event.of(target, arguments), locations0, distance0 = 0, scale0, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();
      started();
      function relocate() {
        var touches = d3.touches(target);
        scale0 = scale;
        locations0 = {};
        touches.forEach(function(t) {
          locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var now = Date.now(), touches = relocate();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0], l = locations0[p.identifier];
            scaleTo(scale * 2);
            translateTo(p, l);
            d3_eventPreventDefault();
            dispatch(event_);
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(target), p0 = touches[0], l0 = locations0[p0.identifier];
        if (p1 = touches[1]) {
          var p1, l1 = locations0[p1.identifier], scale1 = d3.event.scale;
          if (scale1 == null) {
            var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1;
            scale1 = distance0 && Math.sqrt(distance1 / distance0);
          }
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        dispatch(event_);
      }
      function ended() {
        if (d3.event.touches.length) {
          relocate();
        } else {
          w.on(touchmove, null).on(touchend, null);
          t.on(mousedown, mousedowned).on(touchstart, touchstarted);
          dragRestore();
        }
      }
    }
    function mousewheeled() {
      d3_eventPreventDefault();
      if (!translate0) translate0 = location(d3.mouse(this));
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * scale);
      translateTo(d3.mouse(this), translate0);
      dispatch(event.of(this, arguments));
    }
    function mousewheelreset() {
      translate0 = null;
    }
    function dblclicked() {
      var p = d3.mouse(this), l = location(p), k = Math.log(scale) / Math.LN2;
      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
      translateTo(p, l);
      dispatch(event.of(this, arguments));
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ];
  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return d3.event.wheelDelta;
  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
    return -d3.event.detail;
  }, "MozMousePixelScroll");
  function d3_Color() {}
  d3_Color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = function(h, s, l) {
    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);
  };
  function d3_hsl(h, s, l) {
    return new d3_Hsl(h, s, l);
  }
  function d3_Hsl(h, s, l) {
    this.h = h;
    this.s = s;
    this.l = l;
  }
  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  var π = Math.PI, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? π / 2 : x < -1 ? -π / 2 : Math.asin(x);
  }
  function d3_sinh(x) {
    return (Math.exp(x) - Math.exp(-x)) / 2;
  }
  function d3_cosh(x) {
    return (Math.exp(x) + Math.exp(-x)) / 2;
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  d3.hcl = function(h, c, l) {
    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);
  };
  function d3_hcl(h, c, l) {
    return new d3_Hcl(h, c, l);
  }
  function d3_Hcl(h, c, l) {
    this.h = h;
    this.c = c;
    this.l = l;
  }
  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();
  d3_hclPrototype.brighter = function(k) {
    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = function(l, a, b) {
    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);
  };
  function d3_lab(l, a, b) {
    return new d3_Lab(l, a, b);
  }
  function d3_Lab(l, a, b) {
    this.l = l;
    this.a = a;
    this.b = b;
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_Lab.prototype = new d3_Color();
  d3_labPrototype.brighter = function(k) {
    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = function(r, g, b) {
    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);
  };
  function d3_rgbNumber(value) {
    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  function d3_rgb(r, g, b) {
    return new d3_Rgb(r, g, b);
  }
  function d3_Rgb(r, g, b) {
    this.r = r;
    this.g = g;
    this.b = b;
  }
  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, name;
    m1 = /([a-z]+)\((.*)\)/i.exec(format);
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);
    if (format != null && format.charAt(0) === "#") {
      if (format.length === 4) {
        r = format.charAt(1);
        r += r;
        g = format.charAt(2);
        g += g;
        b = format.charAt(3);
        b += b;
      } else if (format.length === 7) {
        r = format.substring(1, 3);
        g = format.substring(3, 5);
        b = format.substring(5, 7);
      }
      r = parseInt(r, 16);
      g = parseInt(g, 16);
      b = parseInt(b, 16);
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  function d3_identity(d) {
    return d;
  }
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3.xhr(url, mimeType, callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr.row(row);
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.substring(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.substring(j, I - k);
        }
        return text.substring(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && !(a = f(a, n++))) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      callback: callback,
      time: time,
      next: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.next = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  };
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_replace(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    d3_timer_active.callback = callback;
    d3_timer_active.time = then + delay;
  }
  function d3_timer_mark() {
    var now = Date.now();
    d3_timer_active = d3_timer_queueHead;
    while (d3_timer_active) {
      if (now >= d3_timer_active.time) d3_timer_active.flush = d3_timer_active.callback(now - d3_timer_active.time);
      d3_timer_active = d3_timer_active.next;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.flush) {
        t1 = t0 ? t0.next = t1.next : d3_timer_queueHead = t1.next;
      } else {
        if (t1.time < time) time = t1.time;
        t1 = (t0 = t1).next;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  var d3_format_decimalPoint = ".", d3_format_thousandsSeparator = ",", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = "$";
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, Math.abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  d3.format = function(specifier) {
    var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = "", integer = false;
    if (precision) precision = +precision.substring(1);
    if (zfill || fill === "0" && align === "=") {
      zfill = fill = "0";
      align = "=";
      if (comma) width -= Math.floor((width - 1) / 4);
    }
    switch (type) {
     case "n":
      comma = true;
      type = "g";
      break;

     case "%":
      scale = 100;
      suffix = "%";
      type = "f";
      break;

     case "p":
      scale = 100;
      suffix = "%";
      type = "r";
      break;

     case "b":
     case "o":
     case "x":
     case "X":
      if (symbol === "#") symbol = "0" + type.toLowerCase();

     case "c":
     case "d":
      integer = true;
      precision = 0;
      break;

     case "s":
      scale = -1;
      type = "r";
      break;
    }
    if (symbol === "#") symbol = ""; else if (symbol === "$") symbol = d3_format_currencySymbol;
    if (type == "r" && !precision) type = "g";
    if (precision != null) {
      if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
    }
    type = d3_format_types.get(type) || d3_format_typeDefault;
    var zcomma = zfill && comma;
    return function(value) {
      if (integer && value % 1) return "";
      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign;
      if (scale < 0) {
        var prefix = d3.formatPrefix(value, precision);
        value = prefix.scale(value);
        suffix = prefix.symbol;
      } else {
        value *= scale;
      }
      value = type(value, precision);
      var i = value.lastIndexOf("."), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? "" : d3_format_decimalPoint + value.substring(i + 1);
      if (!zfill && comma) before = d3_format_group(before);
      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
      if (zcomma) before = d3_format_group(padding + before);
      negative += symbol;
      value = before + after;
      return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;
    };
  };
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_format_group = d3_identity;
  if (d3_format_grouping) {
    var d3_format_groupingLength = d3_format_grouping.length;
    d3_format_group = function(value) {
      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];
      while (i > 0 && g > 0) {
        t.push(value.substring(i -= g, i + g));
        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];
      }
      return t.reverse().join(d3_format_thousandsSeparator);
    };
  }
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      var coordinate = object.coordinates;
      listener.point(coordinate[0], coordinate[1]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length, coordinate;
      while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = Math.abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += Math.abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (Math.abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, inside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = {
        point: p0,
        points: segment,
        other: null,
        visited: false,
        entry: true,
        subject: true
      }, b = {
        point: p0,
        points: [ p0 ],
        other: a,
        visited: false,
        entry: false,
        subject: false
      };
      a.other = b;
      subject.push(a);
      clip.push(b);
      a = {
        point: p1,
        points: [ p1 ],
        other: null,
        visited: false,
        entry: false,
        subject: true
      };
      b = {
        point: p1,
        points: [ p1 ],
        other: a,
        visited: false,
        entry: true,
        subject: false
      };
      a.other = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    if (inside) for (var i = 1, e = !inside(clip[0].point), n = clip.length; i < n; ++i) {
      clip[i].entry = e = !e;
    }
    var start = subject[0], current, points, point;
    while (1) {
      current = start;
      while (current.visited) if ((current = current.next) === start) return;
      points = current.points;
      listener.lineStart();
      do {
        current.visited = current.other.visited = true;
        if (current.entry) {
          if (current.subject) {
            for (var i = 0; i < points.length; i++) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.point, current.next.point, 1, listener);
          }
          current = current.next;
        } else {
          if (current.subject) {
            points = current.prev.points;
            for (var i = points.length; --i >= 0; ) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.point, current.prev.point, -1, listener);
          }
          current = current.prev;
        }
        current = current.other;
        points = current.points;
      } while (!current.visited);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.next = b = array[i];
      b.prev = a;
      a = b;
    }
    a.next = b = array[0];
    b.prev = a;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, polygonContains) {
    return function(listener) {
      var line = clipLine(listener);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
          listener.polygonStart();
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          if (segments.length) {
            d3_geo_clipPolygon(segments, d3_geo_clipSort, null, interpolate, listener);
          } else if (polygonContains(polygon)) {
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          listener.polygonEnd();
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        if (pointVisible(λ, φ)) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        line.point(λ, φ);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;
      function pointRing(λ, φ) {
        ringListener.point(λ, φ);
        ring.push([ λ, φ ]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          listener.lineStart();
          while (++i < n) listener.point((point = segment[i])[0], point[1]);
          listener.lineEnd();
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.point)[0] < 0 ? a[1] - π / 2 - ε : π / 2 - a[1]) - ((b = b.point)[0] < 0 ? b[1] - π / 2 - ε : π / 2 - b[1]);
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, polar = false, southPole = false, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = Math.abs(dλ) > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));
        if (Math.abs(φ) < ε) southPole = true;
        polarAngle += antimeridian ? dλ + (dλ >= 0 ? 2 : -2) * π : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
      if (Math.abs(polarAngle) > ε) polar = true;
    }
    return (!southPole && !polar && d3_geo_areaRingSum < 0 || polarAngle < -ε) ^ winding & 1;
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, d3_geo_clipAntimeridianPolygonContains);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = Math.abs(λ1 - λ0);
        if (Math.abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? π / 2 : -π / 2);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (Math.abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (Math.abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return Math.abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * π / 2;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (Math.abs(from[0] - to[0]) > ε) {
      var s = (from[0] < to[0] ? 1 : -1) * π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  var d3_geo_clipAntimeridianPoint = [ -π, 0 ];
  function d3_geo_clipAntimeridianPolygonContains(polygon) {
    return d3_geo_pointInPolygon(d3_geo_clipAntimeridianPoint, polygon);
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, point = [ radius, 0 ], notHemisphere = Math.abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, polygonContains);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = Math.abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (Math.abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
    function polygonContains(polygon) {
      return d3_geo_pointInPolygon(point, polygon);
    }
  }
  var d3_geo_clipViewMAX = 1e9;
  function d3_geo_clipView(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          listener = listener_;
          if ((segments = d3.merge(segments)).length) {
            listener.polygonStart();
            d3_geo_clipPolygon(segments, compare, inside, interpolate, listener);
            listener.polygonEnd();
          } else if (insidePolygon([ x0, y0 ])) {
            listener.polygonStart(), listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd(), listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function inside(point) {
        var a = corner(point, -1), i = insidePolygon([ a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0 ]);
        return i;
      }
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function isLeft(a, b, c) {
        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function visible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (visible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, x));
        y = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, y));
        var v = visible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var a = [ x_, y_ ], b = [ x, y ];
            if (clipLine(a, b)) {
              if (!v_) {
                listener.lineStart();
                listener.point(a[0], a[1]);
              }
              listener.point(b[0], b[1]);
              if (!v) listener.lineEnd();
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return Math.abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : Math.abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : Math.abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.point, b.point);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
    function clipLine(a, b) {
      var dx = b[0] - a[0], dy = b[1] - a[1], t = [ 0, 1 ];
      if (Math.abs(dx) < ε && Math.abs(dy) < ε) return x0 <= a[0] && a[0] <= x1 && y0 <= a[1] && a[1] <= y1;
      if (d3_geo_clipViewT(x0 - a[0], dx, t) && d3_geo_clipViewT(a[0] - x1, -dx, t) && d3_geo_clipViewT(y0 - a[1], dy, t) && d3_geo_clipViewT(a[1] - y1, -dy, t)) {
        if (t[1] < 1) {
          b[0] = a[0] + t[1] * dx;
          b[1] = a[1] + t[1] * dy;
        }
        if (t[0] > 0) {
          a[0] += t[0] * dx;
          a[1] += t[0] * dy;
        }
        return true;
      }
      return false;
    }
  }
  function d3_geo_clipViewT(num, denominator, t) {
    if (Math.abs(denominator) < ε) return num <= 0;
    var u = num / denominator;
    if (denominator > 0) {
      if (u > t[1]) return false;
      if (u > t[0]) t[0] = u;
    } else {
      if (u < t[0]) return false;
      if (u < t[1]) t[1] = u;
    }
    return true;
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += Math.abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x, y);
      context.arc(x, y, pointRadius, 0, 2 * π);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = Math.abs(Math.abs(c) - 1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || Math.abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(λ, φ) {
      return project([ λ * d3_degrees, φ * d3_degrees ]);
    });
    return function(stream) {
      stream = resample(stream);
      return {
        point: function(λ, φ) {
          stream.point(λ * d3_radians, φ * d3_radians);
        },
        sphere: function() {
          stream.sphere();
        },
        lineStart: function() {
          stream.lineStart();
        },
        lineEnd: function() {
          stream.lineEnd();
        },
        polygonStart: function() {
          stream.polygonStart();
        },
        polygonEnd: function() {
          stream.polygonEnd();
        }
      };
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadiansRotate(rotate, preclip(projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ == null ? d3_identity : d3_geo_clipView(_[0][0], _[0][1], _[1][0], _[1][1]);
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) {
        stream.valid = false;
        stream = null;
      }
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadiansRotate(rotate, stream) {
    return {
      point: function(x, y) {
        y = rotate(x * d3_radians, y * d3_radians), x = y[0];
        stream.point(x > π ? x - 2 * π : x < -π ? x + 2 * π : x, y[1]);
      },
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_equirectangular;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - 2 * π : λ < -π ? λ + 2 * π : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * 2 * π;
      } else {
        from = radius + direction * 2 * π;
        to = radius;
      }
      var point;
      for (var step = direction * precision, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return Math.abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return Math.abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = Math.abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      var ρ = Math.abs(Math.abs(φ) - π / 2) < ε ? 0 : F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - π / 2 ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (Math.abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - π / 2 ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    var B = Math.cos(φ) * Math.sin(λ);
    return [ Math.log((1 + B) / (1 - B)) / 2, Math.atan2(Math.tan(φ), Math.cos(λ)) ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ Math.atan2(d3_sinh(x), Math.cos(y)), d3_asin(Math.sin(y) / d3_cosh(x)) ];
  };
  (d3.geo.transverseMercator = function() {
    return d3_geo_mercatorProjection(d3_geo_transverseMercator);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  d3.svg = {};
  function d3_svg_line(projection) {
    var x = d3_svg_lineX, y = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  function d3_svg_lineX(d) {
    return d[0];
  }
  function d3_svg_lineY(d) {
    return d[1];
  }
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.join("L");
  }
  function d3_svg_lineLinearClosed(points) {
    return d3_svg_lineLinear(points) + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (Math.abs(d) < 1e-6) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.geom.hull = function(vertices) {
    var x = d3_svg_lineX, y = d3_svg_lineY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;
      if (fx === d3_svg_lineX && y === d3_svg_lineY) vertices = data; else for (i = 0, 
      vertices = []; i < n; ++i) {
        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);
      }
      for (i = 1; i < n; ++i) {
        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;
      }
      for (i = 0; i < n; ++i) {
        if (i === h) continue;
        y1 = vertices[i][1] - vertices[h][1];
        x1 = vertices[i][0] - vertices[h][0];
        points.push({
          angle: Math.atan2(y1, x1),
          index: i
        });
      }
      points.sort(function(a, b) {
        return a.angle - b.angle;
      });
      a = points[0].angle;
      v = points[0].index;
      u = 0;
      for (i = 1; i < plen; ++i) {
        j = points[i].index;
        if (a == points[i].angle) {
          x1 = vertices[v][0] - vertices[h][0];
          y1 = vertices[v][1] - vertices[h][1];
          x2 = vertices[j][0] - vertices[h][0];
          y2 = vertices[j][1] - vertices[h][1];
          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {
            points[i].index = -1;
            continue;
          } else {
            points[u].index = -1;
          }
        }
        a = points[i].angle;
        u = i;
        v = j;
      }
      stack.push(h);
      for (i = 0, j = 0; i < 2; ++j) {
        if (points[j].index > -1) {
          stack.push(points[j].index);
          i++;
        }
      }
      sp = stack.length;
      for (;j < plen; ++j) {
        if (points[j].index < 0) continue;
        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {
          --sp;
        }
        stack[sp++] = points[j].index;
      }
      var poly = [];
      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);
      return poly;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullCCW(i1, i2, i3, v) {
    var t, a, b, c, d, e, f;
    t = v[i1];
    a = t[0];
    b = t[1];
    t = v[i2];
    c = t[0];
    d = t[1];
    t = v[i3];
    e = t[0];
    f = t[1];
    return (f - b) * (c - a) - (d - b) * (e - a) > 0;
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  d3.geom.delaunay = function(vertices) {
    var edges = vertices.map(function() {
      return [];
    }), triangles = [];
    d3_geom_voronoiTessellate(vertices, function(e) {
      edges[e.region.l.index].push(vertices[e.region.r.index]);
    });
    edges.forEach(function(edge, i) {
      var v = vertices[i], cx = v[0], cy = v[1];
      edge.forEach(function(v) {
        v.angle = Math.atan2(v[0] - cx, v[1] - cy);
      });
      edge.sort(function(a, b) {
        return a.angle - b.angle;
      });
      for (var j = 0, m = edge.length - 1; j < m; j++) {
        triangles.push([ v, edge[j], edge[j + 1] ]);
      }
    });
    return triangles;
  };
  d3.geom.voronoi = function(points) {
    var x = d3_svg_lineX, y = d3_svg_lineY, clipPolygon = null;
    if (arguments.length) return voronoi(points);
    function voronoi(data) {
      var points, polygons = data.map(function() {
        return [];
      }), fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length, Z = 1e6;
      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n), 
      i = 0; i < n; ++i) {
        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];
      }
      d3_geom_voronoiTessellate(points, function(e) {
        var s1, s2, x1, x2, y1, y2;
        if (e.a === 1 && e.b >= 0) {
          s1 = e.ep.r;
          s2 = e.ep.l;
        } else {
          s1 = e.ep.l;
          s2 = e.ep.r;
        }
        if (e.a === 1) {
          y1 = s1 ? s1.y : -Z;
          x1 = e.c - e.b * y1;
          y2 = s2 ? s2.y : Z;
          x2 = e.c - e.b * y2;
        } else {
          x1 = s1 ? s1.x : -Z;
          y1 = e.c - e.a * x1;
          x2 = s2 ? s2.x : Z;
          y2 = e.c - e.a * x2;
        }
        var v1 = [ x1, y1 ], v2 = [ x2, y2 ];
        polygons[e.region.l.index].push(v1, v2);
        polygons[e.region.r.index].push(v1, v2);
      });
      polygons = polygons.map(function(polygon, i) {
        var cx = points[i][0], cy = points[i][1], angle = polygon.map(function(v) {
          return Math.atan2(v[0] - cx, v[1] - cy);
        }), order = d3.range(polygon.length).sort(function(a, b) {
          return angle[a] - angle[b];
        });
        return order.filter(function(d, i) {
          return !i || angle[d] - angle[order[i - 1]] > ε;
        }).map(function(d) {
          return polygon[d];
        });
      });
      polygons.forEach(function(polygon, i) {
        var n = polygon.length;
        if (!n) return polygon.push([ -Z, -Z ], [ -Z, Z ], [ Z, Z ], [ Z, -Z ]);
        if (n > 2) return;
        var p0 = points[i], p1 = polygon[0], p2 = polygon[1], x0 = p0[0], y0 = p0[1], x1 = p1[0], y1 = p1[1], x2 = p2[0], y2 = p2[1], dx = Math.abs(x2 - x1), dy = y2 - y1;
        if (Math.abs(dy) < ε) {
          var y = y0 < y1 ? -Z : Z;
          polygon.push([ -Z, y ], [ Z, y ]);
        } else if (dx < ε) {
          var x = x0 < x1 ? -Z : Z;
          polygon.push([ x, -Z ], [ x, Z ]);
        } else {
          var y = (x2 - x1) * (y1 - y0) < (x1 - x0) * (y2 - y1) ? Z : -Z, z = Math.abs(dy) - dx;
          if (Math.abs(z) < ε) {
            polygon.push([ dy < 0 ? y : -y, y ]);
          } else {
            if (z > 0) y *= -1;
            polygon.push([ -Z, y ], [ Z, y ]);
          }
        }
      });
      if (clipPolygon) for (i = 0; i < n; ++i) clipPolygon.clip(polygons[i]);
      for (i = 0; i < n; ++i) polygons[i].point = data[i];
      return polygons;
    }
    voronoi.x = function(_) {
      return arguments.length ? (x = _, voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (y = _, voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipPolygon && [ clipPolygon[0], clipPolygon[2] ];
      if (_ == null) clipPolygon = null; else {
        var x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];
        clipPolygon = d3.geom.polygon([ [ x1, y1 ], [ x1, y2 ], [ x2, y2 ], [ x2, y1 ] ]);
      }
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipPolygon && clipPolygon[2];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    voronoi.links = function(data) {
      var points, graph = data.map(function() {
        return [];
      }), links = [], fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length;
      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n), 
      i = 0; i < n; ++i) {
        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];
      }
      d3_geom_voronoiTessellate(points, function(e) {
        var l = e.region.l.index, r = e.region.r.index;
        if (graph[l][r]) return;
        graph[l][r] = graph[r][l] = true;
        links.push({
          source: data[l],
          target: data[r]
        });
      });
      return links;
    };
    voronoi.triangles = function(data) {
      if (x === d3_svg_lineX && y === d3_svg_lineY) return d3.geom.delaunay(data);
      var points = new Array(n), fx = d3_functor(x), fy = d3_functor(y), d, i = -1, n = data.length;
      while (++i < n) {
        (points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]).data = d;
      }
      return d3.geom.delaunay(points).map(function(triangle) {
        return triangle.map(function(point) {
          return point.data;
        });
      });
    };
    return voronoi;
  };
  var d3_geom_voronoiOpposite = {
    l: "r",
    r: "l"
  };
  function d3_geom_voronoiTessellate(points, callback) {
    var Sites = {
      list: points.map(function(v, i) {
        return {
          index: i,
          x: v[0],
          y: v[1]
        };
      }).sort(function(a, b) {
        return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0;
      }),
      bottomSite: null
    };
    var EdgeList = {
      list: [],
      leftEnd: null,
      rightEnd: null,
      init: function() {
        EdgeList.leftEnd = EdgeList.createHalfEdge(null, "l");
        EdgeList.rightEnd = EdgeList.createHalfEdge(null, "l");
        EdgeList.leftEnd.r = EdgeList.rightEnd;
        EdgeList.rightEnd.l = EdgeList.leftEnd;
        EdgeList.list.unshift(EdgeList.leftEnd, EdgeList.rightEnd);
      },
      createHalfEdge: function(edge, side) {
        return {
          edge: edge,
          side: side,
          vertex: null,
          l: null,
          r: null
        };
      },
      insert: function(lb, he) {
        he.l = lb;
        he.r = lb.r;
        lb.r.l = he;
        lb.r = he;
      },
      leftBound: function(p) {
        var he = EdgeList.leftEnd;
        do {
          he = he.r;
        } while (he != EdgeList.rightEnd && Geom.rightOf(he, p));
        he = he.l;
        return he;
      },
      del: function(he) {
        he.l.r = he.r;
        he.r.l = he.l;
        he.edge = null;
      },
      right: function(he) {
        return he.r;
      },
      left: function(he) {
        return he.l;
      },
      leftRegion: function(he) {
        return he.edge == null ? Sites.bottomSite : he.edge.region[he.side];
      },
      rightRegion: function(he) {
        return he.edge == null ? Sites.bottomSite : he.edge.region[d3_geom_voronoiOpposite[he.side]];
      }
    };
    var Geom = {
      bisect: function(s1, s2) {
        var newEdge = {
          region: {
            l: s1,
            r: s2
          },
          ep: {
            l: null,
            r: null
          }
        };
        var dx = s2.x - s1.x, dy = s2.y - s1.y, adx = dx > 0 ? dx : -dx, ady = dy > 0 ? dy : -dy;
        newEdge.c = s1.x * dx + s1.y * dy + (dx * dx + dy * dy) * .5;
        if (adx > ady) {
          newEdge.a = 1;
          newEdge.b = dy / dx;
          newEdge.c /= dx;
        } else {
          newEdge.b = 1;
          newEdge.a = dx / dy;
          newEdge.c /= dy;
        }
        return newEdge;
      },
      intersect: function(el1, el2) {
        var e1 = el1.edge, e2 = el2.edge;
        if (!e1 || !e2 || e1.region.r == e2.region.r) {
          return null;
        }
        var d = e1.a * e2.b - e1.b * e2.a;
        if (Math.abs(d) < 1e-10) {
          return null;
        }
        var xint = (e1.c * e2.b - e2.c * e1.b) / d, yint = (e2.c * e1.a - e1.c * e2.a) / d, e1r = e1.region.r, e2r = e2.region.r, el, e;
        if (e1r.y < e2r.y || e1r.y == e2r.y && e1r.x < e2r.x) {
          el = el1;
          e = e1;
        } else {
          el = el2;
          e = e2;
        }
        var rightOfSite = xint >= e.region.r.x;
        if (rightOfSite && el.side === "l" || !rightOfSite && el.side === "r") {
          return null;
        }
        return {
          x: xint,
          y: yint
        };
      },
      rightOf: function(he, p) {
        var e = he.edge, topsite = e.region.r, rightOfSite = p.x > topsite.x;
        if (rightOfSite && he.side === "l") {
          return 1;
        }
        if (!rightOfSite && he.side === "r") {
          return 0;
        }
        if (e.a === 1) {
          var dyp = p.y - topsite.y, dxp = p.x - topsite.x, fast = 0, above = 0;
          if (!rightOfSite && e.b < 0 || rightOfSite && e.b >= 0) {
            above = fast = dyp >= e.b * dxp;
          } else {
            above = p.x + p.y * e.b > e.c;
            if (e.b < 0) {
              above = !above;
            }
            if (!above) {
              fast = 1;
            }
          }
          if (!fast) {
            var dxs = topsite.x - e.region.l.x;
            above = e.b * (dxp * dxp - dyp * dyp) < dxs * dyp * (1 + 2 * dxp / dxs + e.b * e.b);
            if (e.b < 0) {
              above = !above;
            }
          }
        } else {
          var yl = e.c - e.a * p.x, t1 = p.y - yl, t2 = p.x - topsite.x, t3 = yl - topsite.y;
          above = t1 * t1 > t2 * t2 + t3 * t3;
        }
        return he.side === "l" ? above : !above;
      },
      endPoint: function(edge, side, site) {
        edge.ep[side] = site;
        if (!edge.ep[d3_geom_voronoiOpposite[side]]) return;
        callback(edge);
      },
      distance: function(s, t) {
        var dx = s.x - t.x, dy = s.y - t.y;
        return Math.sqrt(dx * dx + dy * dy);
      }
    };
    var EventQueue = {
      list: [],
      insert: function(he, site, offset) {
        he.vertex = site;
        he.ystar = site.y + offset;
        for (var i = 0, list = EventQueue.list, l = list.length; i < l; i++) {
          var next = list[i];
          if (he.ystar > next.ystar || he.ystar == next.ystar && site.x > next.vertex.x) {
            continue;
          } else {
            break;
          }
        }
        list.splice(i, 0, he);
      },
      del: function(he) {
        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l && ls[i] != he; ++i) {}
        ls.splice(i, 1);
      },
      empty: function() {
        return EventQueue.list.length === 0;
      },
      nextEvent: function(he) {
        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l; ++i) {
          if (ls[i] == he) return ls[i + 1];
        }
        return null;
      },
      min: function() {
        var elem = EventQueue.list[0];
        return {
          x: elem.vertex.x,
          y: elem.ystar
        };
      },
      extractMin: function() {
        return EventQueue.list.shift();
      }
    };
    EdgeList.init();
    Sites.bottomSite = Sites.list.shift();
    var newSite = Sites.list.shift(), newIntStar;
    var lbnd, rbnd, llbnd, rrbnd, bisector;
    var bot, top, temp, p, v;
    var e, pm;
    while (true) {
      if (!EventQueue.empty()) {
        newIntStar = EventQueue.min();
      }
      if (newSite && (EventQueue.empty() || newSite.y < newIntStar.y || newSite.y == newIntStar.y && newSite.x < newIntStar.x)) {
        lbnd = EdgeList.leftBound(newSite);
        rbnd = EdgeList.right(lbnd);
        bot = EdgeList.rightRegion(lbnd);
        e = Geom.bisect(bot, newSite);
        bisector = EdgeList.createHalfEdge(e, "l");
        EdgeList.insert(lbnd, bisector);
        p = Geom.intersect(lbnd, bisector);
        if (p) {
          EventQueue.del(lbnd);
          EventQueue.insert(lbnd, p, Geom.distance(p, newSite));
        }
        lbnd = bisector;
        bisector = EdgeList.createHalfEdge(e, "r");
        EdgeList.insert(lbnd, bisector);
        p = Geom.intersect(bisector, rbnd);
        if (p) {
          EventQueue.insert(bisector, p, Geom.distance(p, newSite));
        }
        newSite = Sites.list.shift();
      } else if (!EventQueue.empty()) {
        lbnd = EventQueue.extractMin();
        llbnd = EdgeList.left(lbnd);
        rbnd = EdgeList.right(lbnd);
        rrbnd = EdgeList.right(rbnd);
        bot = EdgeList.leftRegion(lbnd);
        top = EdgeList.rightRegion(rbnd);
        v = lbnd.vertex;
        Geom.endPoint(lbnd.edge, lbnd.side, v);
        Geom.endPoint(rbnd.edge, rbnd.side, v);
        EdgeList.del(lbnd);
        EventQueue.del(rbnd);
        EdgeList.del(rbnd);
        pm = "l";
        if (bot.y > top.y) {
          temp = bot;
          bot = top;
          top = temp;
          pm = "r";
        }
        e = Geom.bisect(bot, top);
        bisector = EdgeList.createHalfEdge(e, pm);
        EdgeList.insert(llbnd, bisector);
        Geom.endPoint(e, d3_geom_voronoiOpposite[pm], v);
        p = Geom.intersect(llbnd, bisector);
        if (p) {
          EventQueue.del(llbnd);
          EventQueue.insert(llbnd, p, Geom.distance(p, bot));
        }
        p = Geom.intersect(bisector, rrbnd);
        if (p) {
          EventQueue.insert(bisector, p, Geom.distance(p, bot));
        }
      } else {
        break;
      }
    }
    for (lbnd = EdgeList.right(EdgeList.leftEnd); lbnd != EdgeList.rightEnd; lbnd = EdgeList.right(lbnd)) {
      callback(lbnd.edge);
    }
  }
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_svg_lineX, y = d3_svg_lineY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          if (nx != null) {
            if (Math.abs(nx - x) + Math.abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = sx; else x2 = sx;
        if (bottom) y1 = sy; else y2 = sy;
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;
      return root;
    }
    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    b -= a = +a;
    return function(t) {
      return a + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;
    a = a + "", b = b + "";
    d3_interpolate_number.lastIndex = 0;
    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {
      if (m.index) s.push(b.substring(s0, s1 = m.index));
      q.push({
        i: s.length,
        x: m[0]
      });
      s.push(null);
      s0 = d3_interpolate_number.lastIndex;
    }
    if (s0 < b.length) s.push(b.substring(s0));
    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {
      o = q[i];
      if (o.x == m[0]) {
        if (o.i) {
          if (s[o.i + 1] == null) {
            s[o.i - 1] += o.x;
            s.splice(o.i, 1);
            for (j = i + 1; j < n; ++j) q[j].i--;
          } else {
            s[o.i - 1] += o.x + s[o.i + 1];
            s.splice(o.i, 2);
            for (j = i + 1; j < n; ++j) q[j].i -= 2;
          }
        } else {
          if (s[o.i + 1] == null) {
            s[o.i] = o.x;
          } else {
            s[o.i] = o.x + s[o.i + 1];
            s.splice(o.i + 1, 1);
            for (j = i + 1; j < n; ++j) q[j].i--;
          }
        }
        q.splice(i, 1);
        n--;
        i--;
      } else {
        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));
      }
    }
    while (i < n) {
      o = q.pop();
      if (s[o.i + 1] == null) {
        s[o.i] = o.x;
      } else {
        s[o.i] = o.x + s[o.i + 1];
        s.splice(o.i + 1, 1);
      }
      n--;
    }
    if (s.length === 1) {
      return s[0] == null ? (o = q[0].x, function(t) {
        return o(t) + "";
      }) : function() {
        return b;
      };
    }
    return function(t) {
      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  var d3_interpolate_number = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === "object" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, Array.prototype.slice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * π / 2);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / (2 * π) * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, 10 * -t) * Math.sin((t - s) * 2 * π / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransform(a, b) {
    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
    if (ta[0] != tb[0] || ta[1] != tb[1]) {
      s.push("translate(", null, ",", null, ")");
      q.push({
        i: 1,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: 3,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    } else {
      s.push("");
    }
    if (ra != rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(s.pop() + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(s.pop() + "rotate(" + rb + ")");
    }
    if (wa != wb) {
      q.push({
        i: s.push(s.pop() + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(s.pop() + "skewX(" + wb + ")");
    }
    if (ka[0] != kb[0] || ka[1] != kb[1]) {
      n = s.push(s.pop() + "scale(", null, ",", null, ")");
      q.push({
        i: n - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: n - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] != 1 || kb[1] != 1) {
      s.push(s.pop() + "scale(" + kb + ")");
    }
    n = q.length;
    return function(t) {
      var i = -1, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return (x - a) * b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) * b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (2 * π - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: (x - x0) / k
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);
          if ((x2 - x1) * dn < theta) {
            var k = quad.charge * dn * dn;
            node.px -= dx * k;
            node.py -= dy * k;
            return true;
          }
          if (quad.point && isFinite(dn)) {
            var k = quad.pointCharge * dn * dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight / (t.weight + s.weight));
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return theta;
      theta = +x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) alpha = x; else alpha = 0;
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        d3.timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, j, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        var neighbors = neighbor(i), j = -1, m = neighbors.length, x;
        while (++j < m) if (!isNaN(x = neighbors[j][dimension])) return x;
        return Math.random() * size;
      }
      function neighbor() {
        if (!neighbors) {
          neighbors = [];
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        return neighbors[i];
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function recurse(node, depth, nodes) {
      var childs = children.call(hierarchy, node, depth);
      node.depth = depth;
      nodes.push(node);
      if (childs && (n = childs.length)) {
        var i = -1, n, c = node.children = [], v = 0, j = depth + 1, d;
        while (++i < n) {
          d = recurse(childs[i], j, nodes);
          d.parent = node;
          c.push(d);
          v += d.value;
        }
        if (sort) c.sort(sort);
        if (value) node.value = v;
      } else if (value) {
        node.value = +value.call(hierarchy, node, depth) || 0;
      }
      return node;
    }
    function revalue(node, depth) {
      var children = node.children, v = 0;
      if (children && (n = children.length)) {
        var i = -1, n, j = depth + 1;
        while (++i < n) v += revalue(children[i], j);
      } else if (value) {
        v = +value.call(hierarchy, node, depth) || 0;
      }
      if (value) node.value = v;
      return v;
    }
    function hierarchy(d) {
      var nodes = [];
      recurse(d, 0, nodes);
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      revalue(root, 0);
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = 2 * π;
    function pie(data) {
      var values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      });
      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
      var index = d3.range(data.length);
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      var arcs = [];
      index.forEach(function(i) {
        var d;
        arcs[i] = {
          data: data[i],
          value: d = values[i],
          startAngle: a,
          endAngle: a += d * k
        };
      });
      return arcs;
    }
    pie.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return pie;
    };
    pie.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return pie;
    };
    pie.startAngle = function(x) {
      if (!arguments.length) return startAngle;
      startAngle = x;
      return pie;
    };
    pie.endAngle = function(x) {
      if (!arguments.length) return endAngle;
      endAngle = x;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var n = series.length, m = series[0].length, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0];
      function firstWalk(node, previousSibling) {
        var children = node.children, layout = node._tree;
        if (children && (n = children.length)) {
          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;
          while (++i < n) {
            child = children[i];
            firstWalk(child, previousChild);
            ancestor = apportion(child, previousChild, ancestor);
            previousChild = child;
          }
          d3_layout_treeShift(node);
          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);
          if (previousSibling) {
            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);
            layout.mod = layout.prelim - midpoint;
          } else {
            layout.prelim = midpoint;
          }
        } else {
          if (previousSibling) {
            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);
          }
        }
      }
      function secondWalk(node, x) {
        node.x = node._tree.prelim + x;
        var children = node.children;
        if (children && (n = children.length)) {
          var i = -1, n;
          x += node._tree.mod;
          while (++i < n) {
            secondWalk(children[i], x);
          }
        }
      }
      function apportion(node, previousSibling, ancestor) {
        if (previousSibling) {
          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;
          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
            vom = d3_layout_treeLeft(vom);
            vop = d3_layout_treeRight(vop);
            vop._tree.ancestor = node;
            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);
            if (shift > 0) {
              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);
              sip += shift;
              sop += shift;
            }
            sim += vim._tree.mod;
            sip += vip._tree.mod;
            som += vom._tree.mod;
            sop += vop._tree.mod;
          }
          if (vim && !d3_layout_treeRight(vop)) {
            vop._tree.thread = vim;
            vop._tree.mod += sim - sop;
          }
          if (vip && !d3_layout_treeLeft(vom)) {
            vom._tree.thread = vip;
            vom._tree.mod += sip - som;
            ancestor = node;
          }
        }
        return ancestor;
      }
      d3_layout_treeVisitAfter(root, function(node, previousSibling) {
        node._tree = {
          ancestor: node,
          prelim: 0,
          mod: 0,
          change: 0,
          shift: 0,
          number: previousSibling ? previousSibling._tree.number + 1 : 0
        };
      });
      firstWalk(root);
      secondWalk(root, -root._tree.prelim);
      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;
      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {
        node.x *= size[0];
        node.y = node.depth * size[1];
        delete node._tree;
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = node.depth / y1 * size[1];
        delete node._tree;
      });
      return nodes;
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(node) {
    var children = node.children;
    return children && children.length ? children[0] : node._tree.thread;
  }
  function d3_layout_treeRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? children[n - 1] : node._tree.thread;
  }
  function d3_layout_treeSearch(node, compare) {
    var children = node.children;
    if (children && (n = children.length)) {
      var child, n, i = -1;
      while (++i < n) {
        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {
          node = child;
        }
      }
    }
    return node;
  }
  function d3_layout_treeRightmost(a, b) {
    return a.x - b.x;
  }
  function d3_layout_treeLeftmost(a, b) {
    return b.x - a.x;
  }
  function d3_layout_treeDeepest(a, b) {
    return a.depth - b.depth;
  }
  function d3_layout_treeVisitAfter(node, callback) {
    function visit(node, previousSibling) {
      var children = node.children;
      if (children && (n = children.length)) {
        var child, previousChild = null, i = -1, n;
        while (++i < n) {
          child = children[i];
          visit(child, previousChild);
          previousChild = child;
        }
      }
      callback(node, previousSibling);
    }
    visit(node, null);
  }
  function d3_layout_treeShift(node) {
    var shift = 0, change = 0, children = node.children, i = children.length, child;
    while (--i >= 0) {
      child = children[i]._tree;
      child.prelim += shift;
      child.mod += shift;
      shift += child.shift + (change += child.change);
    }
  }
  function d3_layout_treeMove(ancestor, node, shift) {
    ancestor = ancestor._tree;
    node = node._tree;
    var change = shift / (node.number - ancestor.number);
    ancestor.change += change;
    node.change -= change;
    node.shift += shift;
    node.prelim += shift;
    node.mod += shift;
  }
  function d3_layout_treeAncestor(vim, node, ancestor) {
    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_treeVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_treeVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);
        d3_layout_treeVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_treeVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = 0;
      root.y = 0;
      root.dx = size[0];
      root.dy = size[1];
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s / m;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    return d3_scale_nice(domain, d3_scale_niceStep(m ? d3_scale_linearTickRange(domain, m)[2] : d3_scale_linearNiceStep(domain)));
  }
  function d3_scale_linearNiceStep(domain) {
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0];
    return Math.pow(10, Math.round(Math.log(span) / Math.LN10) - 1);
  }
  function d3_scale_linearTickRange(domain, m) {
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var precision = -Math.floor(Math.log(d3_scale_linearTickRange(domain, m)[2]) / Math.LN10 + .01);
    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {
      return [ b, c, d, e, f, g, h, i || "." + (precision - (j === "%") * 2), j ].join("");
    }) : ",." + precision + "f");
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
      Math.floor), e;
      return function(d) {
        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || index.set(x, domain.push(x))) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
      range = steps(start + Math.round(error / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.filter(function(d) {
        return !isNaN(d);
      }).sort(d3.ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function arc() {
      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, 
      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcOffset = -π / 2, d3_svg_arcMax = 2 * π - 1e-6;
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] + d3_svg_arcOffset;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_svg_lineX, x1 = d3_svg_lineX, y0 = 0, y1 = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  function d3_transition(groups, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection) {
    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, id, node.__transition__[id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node.__transition__[id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id;
    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node.__transition__[id].tween.remove(name);
    } : function(node) {
      node.__transition__[id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node.__transition__[id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    return this.each("end.transition", function() {
      var p;
      if (!this.__transition__ && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node.__transition__[id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].delay = value.call(node, node.__data__, i, j) | 0;
    } : (value |= 0, function(node) {
      node.__transition__[id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j) | 0);
    } : (value = Math.max(1, value | 0), function(node) {
      node.__transition__[id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      d3_transitionInheritId = id;
      d3_selection_each(this, function(node, i, j) {
        d3_transitionInherit = node.__transition__[id];
        type.call(node, node.__data__, i, j);
      });
      d3_transitionInherit = inherit;
      d3_transitionInheritId = inheritId;
    } else {
      d3_selection_each(this, function(node) {
        var transition = node.__transition__[id];
        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = Object.create(node.__transition__[id0]);
          transition.delay += transition.duration;
          d3_transitionNode(node, i, id1, transition);
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id1);
  };
  function d3_transitionNode(node, i, id, inherit) {
    var lock = node.__transition__ || (node.__transition__ = {
      active: 0,
      count: 0
    }), transition = lock[id];
    if (!transition) {
      var time = inherit.time;
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        ease: inherit.ease,
        delay: inherit.delay,
        duration: inherit.duration
      };
      ++lock.count;
      d3.timer(function(elapsed) {
        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, tweened = [];
        if (delay <= elapsed) return start(elapsed);
        d3_timer_replace(start, delay, time);
        function start(elapsed) {
          if (lock.active > id) return stop();
          lock.active = id;
          transition.event && transition.event.start.call(node, d, i);
          transition.tween.forEach(function(key, value) {
            if (value = value.call(node, d, i)) {
              tweened.push(value);
            }
          });
          if (tick(elapsed)) return 1;
          d3_timer_replace(tick, 0, time);
        }
        function tick(elapsed) {
          if (lock.active !== id) return stop();
          var t = (elapsed - delay) / duration, e = ease(t), n = tweened.length;
          while (n > 0) {
            tweened[--n].call(node, e);
          }
          if (t >= 1) {
            stop();
            transition.event && transition.event.end.call(node, d, i);
            return 1;
          }
        }
        function stop() {
          if (--lock.count) delete lock[id]; else delete node.__transition__;
          return 1;
        }
      }, 0, time);
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, tickMajorSize = 6, tickMinorSize = 6, tickEndSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_, tickSubdivide = 0;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments_) : scale.domain() : tickValues, tickFormat = tickFormat_ == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments_) : String : tickFormat_;
        var subticks = d3_svg_axisSubdivide(scale, ticks, tickSubdivide), subtick = g.selectAll(".tick.minor").data(subticks, String), subtickEnter = subtick.enter().insert("line", ".tick").attr("class", "tick minor").style("opacity", 1e-6), subtickExit = d3.transition(subtick.exit()).style("opacity", 1e-6).remove(), subtickUpdate = d3.transition(subtick).style("opacity", 1);
        var tick = g.selectAll(".tick.major").data(ticks, String), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick major").style("opacity", 1e-6), tickExit = d3.transition(tick.exit()).style("opacity", 1e-6).remove(), tickUpdate = d3.transition(tick).style("opacity", 1), tickTransform;
        var range = d3_scaleRange(scale), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
        d3.transition(path));
        var scale1 = scale.copy(), scale0 = this.__chart__ || scale1;
        this.__chart__ = scale1;
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text");
        switch (orient) {
         case "bottom":
          {
            tickTransform = d3_svg_axisX;
            subtickEnter.attr("y2", tickMinorSize);
            subtickUpdate.attr("x2", 0).attr("y2", tickMinorSize);
            lineEnter.attr("y2", tickMajorSize);
            textEnter.attr("y", Math.max(tickMajorSize, 0) + tickPadding);
            lineUpdate.attr("x2", 0).attr("y2", tickMajorSize);
            textUpdate.attr("x", 0).attr("y", Math.max(tickMajorSize, 0) + tickPadding);
            text.attr("dy", ".71em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + tickEndSize + "V0H" + range[1] + "V" + tickEndSize);
            break;
          }

         case "top":
          {
            tickTransform = d3_svg_axisX;
            subtickEnter.attr("y2", -tickMinorSize);
            subtickUpdate.attr("x2", 0).attr("y2", -tickMinorSize);
            lineEnter.attr("y2", -tickMajorSize);
            textEnter.attr("y", -(Math.max(tickMajorSize, 0) + tickPadding));
            lineUpdate.attr("x2", 0).attr("y2", -tickMajorSize);
            textUpdate.attr("x", 0).attr("y", -(Math.max(tickMajorSize, 0) + tickPadding));
            text.attr("dy", "0em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + -tickEndSize + "V0H" + range[1] + "V" + -tickEndSize);
            break;
          }

         case "left":
          {
            tickTransform = d3_svg_axisY;
            subtickEnter.attr("x2", -tickMinorSize);
            subtickUpdate.attr("x2", -tickMinorSize).attr("y2", 0);
            lineEnter.attr("x2", -tickMajorSize);
            textEnter.attr("x", -(Math.max(tickMajorSize, 0) + tickPadding));
            lineUpdate.attr("x2", -tickMajorSize).attr("y2", 0);
            textUpdate.attr("x", -(Math.max(tickMajorSize, 0) + tickPadding)).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "end");
            pathUpdate.attr("d", "M" + -tickEndSize + "," + range[0] + "H0V" + range[1] + "H" + -tickEndSize);
            break;
          }

         case "right":
          {
            tickTransform = d3_svg_axisY;
            subtickEnter.attr("x2", tickMinorSize);
            subtickUpdate.attr("x2", tickMinorSize).attr("y2", 0);
            lineEnter.attr("x2", tickMajorSize);
            textEnter.attr("x", Math.max(tickMajorSize, 0) + tickPadding);
            lineUpdate.attr("x2", tickMajorSize).attr("y2", 0);
            textUpdate.attr("x", Math.max(tickMajorSize, 0) + tickPadding).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "start");
            pathUpdate.attr("d", "M" + tickEndSize + "," + range[0] + "H0V" + range[1] + "H" + tickEndSize);
            break;
          }
        }
        if (scale.rangeBand) {
          var dx = scale1.rangeBand() / 2, x = function(d) {
            return scale1(d) + dx;
          };
          tickEnter.call(tickTransform, x);
          tickUpdate.call(tickTransform, x);
        } else {
          tickEnter.call(tickTransform, scale0);
          tickUpdate.call(tickTransform, scale1);
          tickExit.call(tickTransform, scale1);
          subtickEnter.call(tickTransform, scale0);
          subtickUpdate.call(tickTransform, scale1);
          subtickExit.call(tickTransform, scale1);
        }
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = arguments;
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x, y) {
      if (!arguments.length) return tickMajorSize;
      var n = arguments.length - 1;
      tickMajorSize = +x;
      tickMinorSize = n > 1 ? +y : tickMajorSize;
      tickEndSize = n > 0 ? +arguments[n] : tickMajorSize;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function(x) {
      if (!arguments.length) return tickSubdivide;
      tickSubdivide = +x;
      return axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x) {
    selection.attr("transform", function(d) {
      return "translate(" + x(d) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y) {
    selection.attr("transform", function(d) {
      return "translate(0," + y(d) + ")";
    });
  }
  function d3_svg_axisSubdivide(scale, ticks, m) {
    subticks = [];
    if (m && ticks.length > 1) {
      var extent = d3_scaleExtent(scale.domain()), subticks, i = -1, n = ticks.length, d = (ticks[1] - ticks[0]) / ++m, j, v;
      while (++i < n) {
        for (j = m; --j > 0; ) {
          if ((v = +ticks[i] - j * d) >= extent[0]) {
            subticks.push(v);
          }
        }
      }
      for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1]; ) {
        subticks.push(v);
      }
    }
    return subticks;
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, resizes = d3_svg_brushResizes[0], extent = [ [ 0, 0 ], [ 0, 0 ] ], clamp = [ true, true ], extentDomain;
    function brush(g) {
      g.each(function() {
        var g = d3.select(this), bg = g.selectAll(".background").data([ 0 ]), fg = g.selectAll(".extent").data([ 0 ]), tz = g.selectAll(".resize").data(resizes, String), e;
        g.style("pointer-events", "all").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        bg.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        fg.enter().append("rect").attr("class", "extent").style("cursor", "move");
        tz.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        tz.style("display", brush.empty() ? "none" : null);
        tz.exit().remove();
        if (x) {
          e = d3_scaleRange(x);
          bg.attr("x", e[0]).attr("width", e[1] - e[0]);
          redrawX(g);
        }
        if (y) {
          e = d3_scaleRange(y);
          bg.attr("y", e[0]).attr("height", e[1] - e[0]);
          redrawY(g);
        }
        redraw(g);
      });
    }
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + extent[+/e$/.test(d)][0] + "," + extent[+/^s/.test(d)][1] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", extent[0][0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", extent[1][0] - extent[0][0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", extent[0][1]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", extent[1][1] - extent[0][1]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = mouse(), offset;
      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      if (dragging) {
        origin[0] = extent[0][0] - origin[0];
        origin[1] = extent[0][1] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ extent[1 - ex][0] - origin[0], extent[1 - ey][1] - origin[1] ];
        origin[0] = extent[ex][0];
        origin[1] = extent[ey][1];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function mouse() {
        var touches = d3.event.changedTouches;
        return touches ? d3.touches(target, touches)[0] : d3.mouse(target);
      }
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= extent[1][0];
            origin[1] -= extent[1][1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += extent[1][0];
          origin[1] += extent[1][1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = mouse(), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (extent[0][0] + extent[1][0]) / 2, (extent[0][1] + extent[1][1]) / 2 ];
            origin[0] = extent[+(point[0] < center[0])][0];
            origin[1] = extent[+(point[1] < center[1])][1];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], size = extent[1][i] - extent[0][i], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = clamp[i] ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0][i] !== min || extent[1][i] !== max) {
          extentDomain = null;
          extent[0][i] = min;
          extent[1][i] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? clamp : x || y ? clamp[+!x] : null;
      if (x && y) clamp = [ !!z[0], !!z[1] ]; else if (x || y) clamp[+!x] = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        z = extentDomain || extent;
        if (x) {
          x0 = z[0][0], x1 = z[1][0];
          if (!extentDomain) {
            x0 = extent[0][0], x1 = extent[1][0];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          y0 = z[0][1], y1 = z[1][1];
          if (!extentDomain) {
            y0 = extent[0][1], y1 = extent[1][1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      extentDomain = [ [ 0, 0 ], [ 0, 0 ] ];
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        extentDomain[0][0] = x0, extentDomain[1][0] = x1;
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        extent[0][0] = x0 | 0, extent[1][0] = x1 | 0;
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        extentDomain[0][1] = y0, extentDomain[1][1] = y1;
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        extent[0][1] = y0 | 0, extent[1][1] = y1 | 0;
      }
      return brush;
    };
    brush.clear = function() {
      extentDomain = null;
      extent[0][0] = extent[0][1] = extent[1][0] = extent[1][1] = 0;
      return brush;
    };
    brush.empty = function() {
      return x && extent[0][0] === extent[1][0] || y && extent[0][1] === extent[1][1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  d3.time = {};
  var d3_time = Date, d3_time_daySymbols = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
  function d3_time_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_time_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  var d3_time_formatDateTime = "%a %b %e %X %Y", d3_time_formatDate = "%m/%d/%Y", d3_time_formatTime = "%H:%M:%S";
  var d3_time_days = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], d3_time_dayAbbreviations = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], d3_time_months = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ], d3_time_monthAbbreviations = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_time(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_time(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_time = d3_time_utc;
        var utc = new d3_time_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_time = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_time = d3_time_utc;
        var utc = new d3_time_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_time = Date;
      }
    };
  }
  d3.time.year = d3_time_interval(function(date) {
    date = d3.time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3.time.years = d3.time.year.range;
  d3.time.years.utc = d3.time.year.utc.range;
  d3.time.day = d3_time_interval(function(date) {
    var day = new d3_time(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3.time.days = d3.time.day.range;
  d3.time.days.utc = d3.time.day.utc.range;
  d3.time.dayOfYear = function(date) {
    var year = d3.time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  d3_time_daySymbols.forEach(function(day, i) {
    day = day.toLowerCase();
    i = 7 - i;
    var interval = d3.time[day] = d3_time_interval(function(date) {
      (date = d3.time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3.time.year(date).getDay();
      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3.time[day + "s"] = interval.range;
    d3.time[day + "s"].utc = interval.utc.range;
    d3.time[day + "OfYear"] = function(date) {
      var day = d3.time.year(date).getDay();
      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3.time.week = d3.time.sunday;
  d3.time.weeks = d3.time.sunday.range;
  d3.time.weeks.utc = d3.time.sunday.utc.range;
  d3.time.weekOfYear = d3.time.sundayOfYear;
  d3.time.format = function(template) {
    var n = template.length;
    function format(date) {
      var string = [], i = -1, j = 0, c, p, f;
      while (++i < n) {
        if (template.charCodeAt(i) === 37) {
          string.push(template.substring(j, i));
          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
          if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
          string.push(c);
          j = i + 1;
        }
      }
      string.push(template.substring(j, i));
      return string.join("");
    }
    format.parse = function(string) {
      var d = {
        y: 1900,
        m: 0,
        d: 1,
        H: 0,
        M: 0,
        S: 0,
        L: 0
      }, i = d3_time_parse(d, template, string, 0);
      if (i != string.length) return null;
      if ("p" in d) d.H = d.H % 12 + d.p * 12;
      var date = new d3_time();
      if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
        date.setFullYear(d.y, 0, 1);
        date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
      } else date.setFullYear(d.y, d.m, d.d);
      date.setHours(d.H, d.M, d.S, d.L);
      return date;
    };
    format.toString = function() {
      return template;
    };
    return format;
  };
  function d3_time_parse(date, template, string, j) {
    var c, p, i = 0, n = template.length, m = string.length;
    while (i < n) {
      if (j >= m) return -1;
      c = template.charCodeAt(i++);
      if (c === 37) {
        p = d3_time_parsers[template.charAt(i++)];
        if (!p || (j = p(date, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }
    return j;
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  };
  var d3_time_formats = {
    a: function(d) {
      return d3_time_dayAbbreviations[d.getDay()];
    },
    A: function(d) {
      return d3_time_days[d.getDay()];
    },
    b: function(d) {
      return d3_time_monthAbbreviations[d.getMonth()];
    },
    B: function(d) {
      return d3_time_months[d.getMonth()];
    },
    c: d3.time.format(d3_time_formatDateTime),
    d: function(d, p) {
      return d3_time_formatPad(d.getDate(), p, 2);
    },
    e: function(d, p) {
      return d3_time_formatPad(d.getDate(), p, 2);
    },
    H: function(d, p) {
      return d3_time_formatPad(d.getHours(), p, 2);
    },
    I: function(d, p) {
      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
    },
    j: function(d, p) {
      return d3_time_formatPad(1 + d3.time.dayOfYear(d), p, 3);
    },
    L: function(d, p) {
      return d3_time_formatPad(d.getMilliseconds(), p, 3);
    },
    m: function(d, p) {
      return d3_time_formatPad(d.getMonth() + 1, p, 2);
    },
    M: function(d, p) {
      return d3_time_formatPad(d.getMinutes(), p, 2);
    },
    p: function(d) {
      return d.getHours() >= 12 ? "PM" : "AM";
    },
    S: function(d, p) {
      return d3_time_formatPad(d.getSeconds(), p, 2);
    },
    U: function(d, p) {
      return d3_time_formatPad(d3.time.sundayOfYear(d), p, 2);
    },
    w: function(d) {
      return d.getDay();
    },
    W: function(d, p) {
      return d3_time_formatPad(d3.time.mondayOfYear(d), p, 2);
    },
    x: d3.time.format(d3_time_formatDate),
    X: d3.time.format(d3_time_formatTime),
    y: function(d, p) {
      return d3_time_formatPad(d.getFullYear() % 100, p, 2);
    },
    Y: function(d, p) {
      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
    },
    Z: d3_time_zone,
    "%": function() {
      return "%";
    }
  };
  var d3_time_parsers = {
    a: d3_time_parseWeekdayAbbrev,
    A: d3_time_parseWeekday,
    b: d3_time_parseMonthAbbrev,
    B: d3_time_parseMonth,
    c: d3_time_parseLocaleFull,
    d: d3_time_parseDay,
    e: d3_time_parseDay,
    H: d3_time_parseHour24,
    I: d3_time_parseHour24,
    j: d3_time_parseDayOfYear,
    L: d3_time_parseMilliseconds,
    m: d3_time_parseMonthNumber,
    M: d3_time_parseMinutes,
    p: d3_time_parseAmPm,
    S: d3_time_parseSeconds,
    U: d3_time_parseWeekNumberSunday,
    w: d3_time_parseWeekdayNumber,
    W: d3_time_parseWeekNumberMonday,
    x: d3_time_parseLocaleDate,
    X: d3_time_parseLocaleTime,
    y: d3_time_parseYear,
    Y: d3_time_parseFullYear,
    "%": d3_time_parseLiteralPercent
  };
  function d3_time_parseWeekdayAbbrev(date, string, i) {
    d3_time_dayAbbrevRe.lastIndex = 0;
    var n = d3_time_dayAbbrevRe.exec(string.substring(i));
    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function d3_time_parseWeekday(date, string, i) {
    d3_time_dayRe.lastIndex = 0;
    var n = d3_time_dayRe.exec(string.substring(i));
    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMonthAbbrev(date, string, i) {
    d3_time_monthAbbrevRe.lastIndex = 0;
    var n = d3_time_monthAbbrevRe.exec(string.substring(i));
    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function d3_time_parseMonth(date, string, i) {
    d3_time_monthRe.lastIndex = 0;
    var n = d3_time_monthRe.exec(string.substring(i));
    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function d3_time_parseLocaleFull(date, string, i) {
    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
  }
  function d3_time_parseLocaleDate(date, string, i) {
    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
  }
  function d3_time_parseLocaleTime(date, string, i) {
    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  var d3_time_numberRe = /^\s*\d+/;
  function d3_time_parseAmPm(date, string, i) {
    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());
    return n == null ? -1 : (date.p = n, i);
  }
  var d3_time_amPmLookup = d3.map({
    am: 0,
    pm: 1
  });
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = ~~(Math.abs(z) / 60), zm = Math.abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.substring(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  d3.time.format.utc = function(template) {
    var local = d3.time.format(template);
    function format(date) {
      try {
        d3_time = d3_time_utc;
        var utc = new d3_time();
        utc._ = date;
        return local(utc);
      } finally {
        d3_time = Date;
      }
    }
    format.parse = function(string) {
      try {
        d3_time = d3_time_utc;
        var date = local.parse(string);
        return date && date._;
      } finally {
        d3_time = Date;
      }
    };
    format.toString = local.toString;
    return format;
  };
  var d3_time_formatIso = d3.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3.time.format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3.time.second = d3_time_interval(function(date) {
    return new d3_time(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3.time.seconds = d3.time.second.range;
  d3.time.seconds.utc = d3.time.second.utc.range;
  d3.time.minute = d3_time_interval(function(date) {
    return new d3_time(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3.time.minutes = d3.time.minute.range;
  d3.time.minutes.utc = d3.time.minute.utc.range;
  d3.time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_time((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3.time.hours = d3.time.hour.range;
  d3.time.hours.utc = d3.time.hour.utc.range;
  d3.time.month = d3_time_interval(function(date) {
    date = d3.time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3.time.months = d3.time.month.range;
  d3.time.months.utc = d3.time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_nice(scale.domain(), m));
    };
    scale.ticks = function(m, k) {
      var extent = d3_scaleExtent(scale.domain());
      if (typeof m !== "function") {
        var span = extent[1] - extent[0], target = span / m, i = d3.bisect(d3_time_scaleSteps, target);
        if (i == d3_time_scaleSteps.length) return methods.year(extent, m);
        if (!i) return linear.ticks(m).map(d3_time_scaleDate);
        if (target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target) --i;
        m = methods[i];
        k = m[1];
        m = m[0].range;
      }
      return m(extent[0], new Date(+extent[1] + 1), k);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  function d3_time_scaleFormat(formats) {
    return function(date) {
      var i = formats.length - 1, f = formats[i];
      while (!f[1](date)) f = formats[--i];
      return f[0](date);
    };
  }
  function d3_time_scaleSetYear(y) {
    var d = new Date(y, 0, 1);
    d.setFullYear(y);
    return d;
  }
  function d3_time_scaleGetYear(d) {
    var y = d.getFullYear(), d0 = d3_time_scaleSetYear(y), d1 = d3_time_scaleSetYear(y + 1);
    return y + (d - d0) / (d1 - d0);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3.time.second, 1 ], [ d3.time.second, 5 ], [ d3.time.second, 15 ], [ d3.time.second, 30 ], [ d3.time.minute, 1 ], [ d3.time.minute, 5 ], [ d3.time.minute, 15 ], [ d3.time.minute, 30 ], [ d3.time.hour, 1 ], [ d3.time.hour, 3 ], [ d3.time.hour, 6 ], [ d3.time.hour, 12 ], [ d3.time.day, 1 ], [ d3.time.day, 2 ], [ d3.time.week, 1 ], [ d3.time.month, 1 ], [ d3.time.month, 3 ], [ d3.time.year, 1 ] ];
  var d3_time_scaleLocalFormats = [ [ d3.time.format("%Y"), d3_true ], [ d3.time.format("%B"), function(d) {
    return d.getMonth();
  } ], [ d3.time.format("%b %d"), function(d) {
    return d.getDate() != 1;
  } ], [ d3.time.format("%a %d"), function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ d3.time.format("%I %p"), function(d) {
    return d.getHours();
  } ], [ d3.time.format("%I:%M"), function(d) {
    return d.getMinutes();
  } ], [ d3.time.format(":%S"), function(d) {
    return d.getSeconds();
  } ], [ d3.time.format(".%L"), function(d) {
    return d.getMilliseconds();
  } ] ];
  var d3_time_scaleLinear = d3.scale.linear(), d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);
  d3_time_scaleLocalMethods.year = function(extent, m) {
    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleGetYear)).ticks(m).map(d3_time_scaleSetYear);
  };
  d3.time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUTCFormats = [ [ d3.time.format.utc("%Y"), d3_true ], [ d3.time.format.utc("%B"), function(d) {
    return d.getUTCMonth();
  } ], [ d3.time.format.utc("%b %d"), function(d) {
    return d.getUTCDate() != 1;
  } ], [ d3.time.format.utc("%a %d"), function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ d3.time.format.utc("%I %p"), function(d) {
    return d.getUTCHours();
  } ], [ d3.time.format.utc("%I:%M"), function(d) {
    return d.getUTCMinutes();
  } ], [ d3.time.format.utc(":%S"), function(d) {
    return d.getUTCSeconds();
  } ], [ d3.time.format.utc(".%L"), function(d) {
    return d.getUTCMilliseconds();
  } ] ];
  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);
  function d3_time_scaleUTCSetYear(y) {
    var d = new Date(Date.UTC(y, 0, 1));
    d.setUTCFullYear(y);
    return d;
  }
  function d3_time_scaleUTCGetYear(d) {
    var y = d.getUTCFullYear(), d0 = d3_time_scaleUTCSetYear(y), d1 = d3_time_scaleUTCSetYear(y + 1);
    return y + (d - d0) / (d1 - d0);
  }
  d3_time_scaleUTCMethods.year = function(extent, m) {
    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleUTCGetYear)).ticks(m).map(d3_time_scaleUTCSetYear);
  };
  d3.time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  return d3;
}();
Iris.define("d3", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.d3;
    };
}(this)));

//     Underscore.js 1.5.2
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,w=Object.keys,_=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION="1.5.2";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a=j.keys(n),u=0,i=a.length;i>u;u++)if(t.call(e,n[a[u]],a[u],n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E="Reduce of empty array with no initial value";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?"find":"filter"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e},j.sample=function(n,t,r){return arguments.length<2||r?n[j.random(n.length-1)]:j.shuffle(n).slice(0,Math.max(0,t))};var k=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=k(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={},i=null==r?j.identity:k(r);return A(t,function(r,a){var o=i.call(e,r,a,t);n(u,o,r)}),u}};j.groupBy=F(function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)}),j.indexBy=F(function(n,t,r){n[t]=r}),j.countBy=F(function(n,t){j.has(n,t)?n[t]++:n[t]=1}),j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var M=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):M(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return M(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,"length").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,""+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var R=function(){};j.bind=function(n,t){var r,e;if(_&&n.bind===_)return _.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));R.prototype=n.prototype;var u=new R;R.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u,i,a,o;return function(){i=this,u=arguments,a=new Date;var c=function(){var l=new Date-a;t>l?e=setTimeout(c,t-l):(e=null,r||(o=n.apply(i,u)))},l=r&&!e;return e||(e=setTimeout(c,t)),l&&(o=n.apply(i,u)),o}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=w||function(n){if(n!==Object(n))throw new TypeError("Invalid object");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},j.pairs=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},j.invert=function(n){for(var t={},r=j.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==String(t);case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if("[object Array]"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return"[object Array]"==l.call(n)},j.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){j["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,"callee"))}),"function"!=typeof/./&&(j.isFunction=function(n){return"function"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp("["+j.keys(I.escape).join("")+"]","g"),unescape:new RegExp("("+j.keys(I.unescape).join("|")+")","g")};j.each(["escape","unescape"],function(n){j[n]=function(t){return null==t?"":(""+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+"";return n?n+t:t},j.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return"\\"+B[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=new Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);
//# sourceMappingURL=underscore-min.map;
Iris.define("underscore", (function (global) {
    return function () {
        var ret, fn;
        return ret || global._;
    };
}(this)));

Iris.define('util/eventemitter',['jquery'], function (JQ) {
    var jq = JQ(this);
    return {
        emit: function (evt, data) {
            jq.trigger(evt, data);
            return this;
        },
        on: function (evt, callback) {
            jq.bind(evt, callback);
            return this;
        },
        off: function (evt, callback) {
            jq.unbind(evt, callback);
            return this;
        }
    };
});
Iris.define('util/dragbox',['jquery', 'util/eventemitter'], function (JQ, EventEmitter) {
    var FGCOLOR = "red";
    function DragBox(element, options) {
        var self = this;
        options = (options || {})
        element = JQ(element);

        var tool = new Object();
        tool.started = false;
        
        var handlers = {
            selection: function () {},
            pinpoint:  function () {},
            text:      null
        };

        var canvas = JQ("<canvas>")
            .attr("width", element.width())
            .attr("height", element.height())
            .css("position", "absolute")
            .css("left", 0)
            .css("top", 0)
            .css("z-index", options.z || 10)
            .addClass("dragbox");
        element.append(canvas);
        
        canvas.on('mousedown', startDrag);
        canvas.on('mousemove', moveDragEvent);
        canvas.on('mouseup',   releaseDragEvent);
        
        var offset = element.offset();
        var context = canvas[0].getContext('2d');
        context.strokeStyle = FGCOLOR;
        context.lineWidth = 0.5;
        context.fillStyle = "rgba(255,0,0,0.2)";

        function boxInfo(text, x, y) {
            context.save();
            context.textBaseline = 'middle';
            context.textAlign = 'center';
            context.fillStyle = FGCOLOR;
            context.fillText(text, x, y);
            context.restore();
        }
        
        function drawDragBox(x, y, w, h) {
            context.clearRect(0, 0, element.width(), element.height());
            context.fillRect(x, y, w, h);
            context.strokeRect(x, y, w, h);
            if (handlers.text && typeof(handlers.text) === 'function') {
                var text = handlers.text(x, y, w, h);
                boxInfo(text, x + w / 2, y + h / 2);
            }
        }

        function startDrag(ev) {
            ev.preventDefault();
            offset = element.offset();
            if (tool.clicked) {
                tool.clicked = false;
                return;
            }
            ev._x = ev.pageX - offset.left;
            ev._y = ev.pageY - offset.top;
            tool.clicked = true;
            tool.started = false;
            tool.x = ev._x;
            tool.y = ev._y;
        }
        

        function moveDragEvent(ev) {
            ev.preventDefault();
            if (!tool.clicked) return;
            tool.started = true;
            ev._x = ev.pageX - offset.left;
            ev._y = ev.pageY - offset.top;
            var x = Math.min(tool.x, ev._x);
            var y = Math.min(tool.y, ev._y);
            var width = Math.abs(ev._x - tool.x + 1);
            var height = Math.abs(ev._y - tool.y + 1);
            drawDragBox(x, y, width, height);
        }

        function releaseDragEvent(ev) {
            context.clearRect(0, 0, element.width(), element.height());
            ev._x = ev.pageX - offset.left;
            ev._y = ev.pageY - offset.top;
            var x1 = Math.min(tool.x, ev._x);
            var x2 = Math.max(tool.x, ev._x);
            var y1 = Math.min(tool.y, ev._y);
            var y2 = Math.max(tool.y, ev._y);
            if (!tool.started) {
                handlers.pinpoint(x2, y2);
            } else {
                drawDragBox(x1, y1, x2 - x1 + 1, y2 - y1 + 1)
                tool.started = false;
                handlers.selection(x1, y1, x2, y2);
            }
            tool.clicked = false;
        };
        self.selectionHandler = function (callback) {
            handlers.selection = callback;
        };
        self.pinpointHandler = function (callback) {
            handlers.pinpoint = callback;
        };
        self.textHandler = function (callback) {
            handlers.text = callback;
        }
    }
    JQ.extend(DragBox.prototype, EventEmitter);
    return DragBox;
    
});
Iris.define('renderers/heatmap',['jquery', 'd3', 'underscore', 'util/dragbox'],
function (JQ, d3, _, DragBox) {
    var MAX_CELLS = 24000;
    var MIN_CELL_SIZE = 4;
    var MAX_CELL_SIZE = 60;
    var M = { y: 65, x: 70 };

    var defaults = {
        borderWidth: 1,
        colorscheme: 'RdYlBu',
        element: 'body'
    };
    function Heatmap(options) {
        var self = this;
        options = options ? _.clone(options) : {};
        _.defaults(options, defaults);
        var element = JQ(options.element);
        
        var matrix = [], row, columns;
        var maxScore;

        var cellSize = options.cellSize || 5;

        var width, height, minDim;
        
        function maxStrLen(strarr) {
            return _.reduce(strarr, function (m, str) {
                return Math.max(m, str.length)
            }, 0);
        }
        
        self.setData = function (data) {
            if (data == null) return;
            function requiredProperty(prop) {
                if (!data.hasOwnProperty(prop)) {
                    throw new Error("setData(): Required property '"
                        + prop + "' not found");
                }
            }
            requiredProperty('matrix');
            requiredProperty('rows');
            rows = data.rows;
            if (!data.hasOwnProperty('columns')) {
                columns = rows;
            } else {
                columns = data.columns;
            }
            matrix = data.matrix;
            if (matrix == null) {
                throw new Error("Empty matrix");
            }
            if (matrix.length > MAX_CELLS) {
                throw new Error("Too many cells");
            }
            M.x = Math.max(M.x, 6 * maxStrLen(rows));
            M.y = Math.max(M.y, 6 * maxStrLen(columns));
            maxScore = data.maxScore || 1;
        };
        self.getData = function () {
            return {
                rows: rows,
                columns: columns,
                matrix: matrix
            };
        }
        
        function adjustedDim(arr) {
            return Math.floor(arr.length * (cellSize + options.borderWidth));
        }
        self.render = function () {
            width = element.width();
            height = element.height();
            minDim = Math.min(width, height);
            element.empty();
            element.css("position", "relative");
            cellSize = Math.min(MAX_CELL_SIZE,
                Math.max(MIN_CELL_SIZE,
                    (minDim - Math.min(M.y, M.x) -
                        options.borderWidth * (rows.length+1)) / rows.length)
                );
            var adjWidth  = adjustedDim(columns);
            var adjHeight = adjustedDim(rows);
            var containerId = element.attr('id') + "-container";
            var container = JQ("<div>").attr("id", containerId)
                .css("position", "relative")
                .width(width)
                .height(height);
            element.append(container);

            var svg  = d3.select("#" + containerId).append("svg")
                .attr("width", width)
                .attr("height", height);

            var xLabels = d3.scale.ordinal()
                .domain(columns).rangeBands([0, adjWidth]);
            var yLabels = d3.scale.ordinal()
                .domain(rows).rangeBands([0, adjHeight]);
            var xAxis =d3.svg.axis().scale(xLabels)
                .ticks(columns.length).orient("top");
            var yAxis = d3.svg.axis().scale(yLabels)
                .ticks(rows.length).orient("left");
            
            var plot = svg.append("g")
                .attr("class", options.colorscheme)
                .attr("id", element.attr('id') + "-plotarea")
                .attr("width", adjWidth)
                .attr("height", adjHeight)
                .attr("transform", "translate(" + M.x + "," + M.y +")");

            var yAxisG = svg.append("g")
                .attr("class", "y axis")
                .attr("transform", "translate(" + M.x + "," + M.y + ")")
                .call(yAxis);
            var xAxisG = svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(" + M.x +"," + M.y + ")")
                .call(xAxis).selectAll("text")
                    .attr("transform", function (d, i) {
                        var bbox = this.getBBox();
                        return [
                            "rotate(-90)translate(", bbox.width/2 + 6,
                            ",", bbox.height,")"
                        ].join("")
                    });
            

            var quantize = d3.scale
                .quantile().domain([0, maxScore]).range(d3.range(9));
            var dragbox =
                new DragBox(JQ("#" + element.attr('id') + "-plotarea"));
            dragbox.textHandler(function (x, y, w, h) {
                return [w, h].join(" ");
            })

            for (var i = 0; i < matrix.length; i++) {
                var cell = matrix[i];
                var row = cell[0];
                var col = cell[1];
                plot.append("rect")
                    .attr("width", cellSize).attr("height", cellSize)
                    .attr("x", options.borderWidth * (row + 1) + cellSize * row)
                    .attr("y", options.borderWidth * (col + 1) + cellSize * col)
                    .attr("class", "q" + quantize(cell[2]) + "-9")
                    .append("title").text(cell[2]);
            }
            var schemeIndex = 0;
            var schemes = 'RdYlBu Spectral BrBG YlGnBu'.split(" ");
            for (var i in schemes) {
                if (schemes[i] == options.colorscheme) {
                    schemes.splice(i, 1);
                    break;
                }
            }
            schemes.unshift(options.colorscheme);
        }
        return self;
    }
    return Heatmap;
});
//     Backbone.js 1.1.0

//     (c) 2010-2011 Jeremy Ashkenas, DocumentCloud Inc.
//     (c) 2011-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(){

  // Initial Setup
  // -------------

  // Save a reference to the global object (`window` in the browser, `exports`
  // on the server).
  var root = this;

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create local references to array methods we'll want to use later.
  var array = [];
  var push = array.push;
  var slice = array.slice;
  var splice = array.splice;

  // The top-level namespace. All public Backbone classes and modules will
  // be attached to this. Exported for both the browser and the server.
  var Backbone;
  if (typeof exports !== 'undefined') {
    Backbone = exports;
  } else {
    Backbone = root.Backbone = {};
  }

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '1.1.0';

  // Require Underscore, if we're on the server, and it's not already present.
  var _ = root._;
  if (!_ && (typeof require !== 'undefined')) _ = require('underscore');

  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
  // the `$` variable.
  Backbone.$ = root.jQuery || root.Zepto || root.ender || root.$;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Backbone.Events
  // ---------------

  // A module that can be mixed in to *any object* in order to provide it with
  // custom events. You may bind with `on` or remove with `off` callback
  // functions to an event; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {

    // Bind an event to a `callback` function. Passing `"all"` will bind
    // the callback to all events fired.
    on: function(name, callback, context) {
      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;
      this._events || (this._events = {});
      var events = this._events[name] || (this._events[name] = []);
      events.push({callback: callback, context: context, ctx: context || this});
      return this;
    },

    // Bind an event to only be triggered a single time. After the first time
    // the callback is invoked, it will be removed.
    once: function(name, callback, context) {
      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;
      var self = this;
      var once = _.once(function() {
        self.off(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
      return this.on(name, once, context);
    },

    // Remove one or many callbacks. If `context` is null, removes all
    // callbacks with that function. If `callback` is null, removes all
    // callbacks for the event. If `name` is null, removes all bound
    // callbacks for all events.
    off: function(name, callback, context) {
      var retain, ev, events, names, i, l, j, k;
      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;
      if (!name && !callback && !context) {
        this._events = {};
        return this;
      }
      names = name ? [name] : _.keys(this._events);
      for (i = 0, l = names.length; i < l; i++) {
        name = names[i];
        if (events = this._events[name]) {
          this._events[name] = retain = [];
          if (callback || context) {
            for (j = 0, k = events.length; j < k; j++) {
              ev = events[j];
              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||
                  (context && context !== ev.context)) {
                retain.push(ev);
              }
            }
          }
          if (!retain.length) delete this._events[name];
        }
      }

      return this;
    },

    // Trigger one or many events, firing all bound callbacks. Callbacks are
    // passed the same arguments as `trigger` is, apart from the event name
    // (unless you're listening on `"all"`, which will cause your callback to
    // receive the true name of the event as the first argument).
    trigger: function(name) {
      if (!this._events) return this;
      var args = slice.call(arguments, 1);
      if (!eventsApi(this, 'trigger', name, args)) return this;
      var events = this._events[name];
      var allEvents = this._events.all;
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, arguments);
      return this;
    },

    // Tell this object to stop listening to either specific events ... or
    // to every object it's currently listening to.
    stopListening: function(obj, name, callback) {
      var listeningTo = this._listeningTo;
      if (!listeningTo) return this;
      var remove = !name && !callback;
      if (!callback && typeof name === 'object') callback = this;
      if (obj) (listeningTo = {})[obj._listenId] = obj;
      for (var id in listeningTo) {
        obj = listeningTo[id];
        obj.off(name, callback, this);
        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];
      }
      return this;
    }

  };

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Implement fancy features of the Events API such as multiple event
  // names `"change blur"` and jQuery-style event maps `{change: action}`
  // in terms of the existing API.
  var eventsApi = function(obj, action, name, rest) {
    if (!name) return true;

    // Handle event maps.
    if (typeof name === 'object') {
      for (var key in name) {
        obj[action].apply(obj, [key, name[key]].concat(rest));
      }
      return false;
    }

    // Handle space separated event names.
    if (eventSplitter.test(name)) {
      var names = name.split(eventSplitter);
      for (var i = 0, l = names.length; i < l; i++) {
        obj[action].apply(obj, [names[i]].concat(rest));
      }
      return false;
    }

    return true;
  };

  // A difficult-to-believe, but optimized internal dispatch function for
  // triggering events. Tries to keep the usual cases speedy (most internal
  // Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
    switch (args.length) {
      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);
    }
  };

  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};

  // Inversion-of-control versions of `on` and `once`. Tell *this* object to
  // listen to an event in another object ... keeping track of what it's
  // listening to.
  _.each(listenMethods, function(implementation, method) {
    Events[method] = function(obj, name, callback) {
      var listeningTo = this._listeningTo || (this._listeningTo = {});
      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
      listeningTo[id] = obj;
      if (!callback && typeof name === 'object') callback = this;
      obj[implementation](name, callback, this);
      return this;
    };
  });

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Backbone **Models** are the basic data object in the framework --
  // frequently representing a row in a table in a database on your server.
  // A discrete chunk of data and a bunch of useful, related methods for
  // performing computations and transformations on that data.

  // Create a new model with the specified attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var attrs = attributes || {};
    options || (options = {});
    this.cid = _.uniqueId('c');
    this.attributes = {};
    if (options.collection) this.collection = options.collection;
    if (options.parse) attrs = this.parse(attrs, options) || {};
    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The value returned during the last failed validation.
    validationError: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default -- but override this if you need
    // custom syncing semantics for *this* particular model.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Set a hash of model attributes on the object, firing `"change"`. This is
    // the core primitive operation of a model, updating the data and notifying
    // anyone who needs to know about the change in state. The heart of the beast.
    set: function(key, val, options) {
      var attr, attrs, unset, changes, silent, changing, prev, current;
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      unset           = options.unset;
      silent          = options.silent;
      changes         = [];
      changing        = this._changing;
      this._changing  = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }
      current = this.attributes, prev = this._previousAttributes;

      // Check for changes of `id`.
      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];

      // For each `set` attribute, update or delete the current value.
      for (attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          this.changed[attr] = val;
        } else {
          delete this.changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = true;
        for (var i = 0, l = changes.length; i < l; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      // You might be wondering why there's a `while` loop here. Changes can
      // be recursively nested within `"change"` events.
      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
    // if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"`.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var val, changed = false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      for (var attr in diff) {
        if (_.isEqual(old[attr], (val = diff[attr]))) continue;
        (changed || (changed = {}))[attr] = val;
      }
      return changed;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Fetch the model from the server. If the server's representation of the
    // model differs from its current attributes, they will be overridden,
    // triggering a `"change"` event.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === void 0) options.parse = true;
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        if (!model.set(model.parse(resp, options), options)) return false;
        if (success) success(model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      var attrs, method, xhr, attributes = this.attributes;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options = _.extend({validate: true}, options);

      // If we're not waiting and attributes exist, save acts as
      // `set(attr).save(null, opts)` with validation. Otherwise, check if
      // the model will be valid when the attributes, if any, are set.
      if (attrs && !options.wait) {
        if (!this.set(attrs, options)) return false;
      } else {
        if (!this._validate(attrs, options)) return false;
      }

      // Set temporary attributes if `{wait: true}`.
      if (attrs && options.wait) {
        this.attributes = _.extend({}, attributes, attrs);
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      if (options.parse === void 0) options.parse = true;
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = model.parse(resp, options);
        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);
        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {
          return false;
        }
        if (success) success(model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);

      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch') options.attrs = attrs;
      xhr = this.sync(method, this, options);

      // Restore attributes.
      if (attrs && options.wait) this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;

      var destroy = function() {
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(resp) {
        if (options.wait || model.isNew()) destroy();
        if (success) success(model, resp, options);
        if (!model.isNew()) model.trigger('sync', model, resp, options);
      };

      if (this.isNew()) {
        options.success();
        return false;
      }
      wrapError(this, options);

      var xhr = this.sync('delete', this, options);
      if (!options.wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();
      if (this.isNew()) return base;
      return base + (base.charAt(base.length - 1) === '/' ? '' : '/') + encodeURIComponent(this.id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return this.id == null;
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return this._validate({}, _.extend(options || {}, { validate: true }));
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
      return false;
    }

  });

  // Underscore methods that we want to implement on the Model.
  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];

  // Mix in each Underscore method as a proxy to `Model#attributes`.
  _.each(modelMethods, function(method) {
    Model.prototype[method] = function() {
      var args = slice.call(arguments);
      args.unshift(this.attributes);
      return _[method].apply(_, args);
    };
  });

  // Backbone.Collection
  // -------------------

  // If models tend to represent a single row of data, a Backbone Collection is
  // more analagous to a table full of data ... or a small slice or page of that
  // table, or a collection of rows that belong together for a particular reason
  // -- all of the messages in this particular folder, all of the documents
  // belonging to this particular author, and so on. Collections maintain
  // indexes of their models, both in order, and for lookup by `id`.

  // Create a new **Collection**, perhaps to contain a specific type of `model`.
  // If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Default options for `Collection#set`.
  var setOptions = {add: true, remove: true, merge: true};
  var addOptions = {add: true, remove: false};

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model){ return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set.
    add: function(models, options) {
      return this.set(models, _.extend({merge: false}, options, addOptions));
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      var singular = !_.isArray(models);
      models = singular ? [models] : _.clone(models);
      options || (options = {});
      var i, l, index, model;
      for (i = 0, l = models.length; i < l; i++) {
        model = models[i] = this.get(models[i]);
        if (!model) continue;
        delete this._byId[model.id];
        delete this._byId[model.cid];
        index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;
        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }
        this._removeReference(model);
      }
      return singular ? models[0] : models;
    },

    // Update a collection by `set`-ing a new list of models, adding new ones,
    // removing models that are no longer present, and merging models that
    // already exist in the collection, as necessary. Similar to **Model#set**,
    // the core operation for updating the data contained by the collection.
    set: function(models, options) {
      options = _.defaults({}, options, setOptions);
      if (options.parse) models = this.parse(models, options);
      var singular = !_.isArray(models);
      models = singular ? (models ? [models] : []) : _.clone(models);
      var i, l, id, model, attrs, existing, sort;
      var at = options.at;
      var targetModel = this.model;
      var sortable = this.comparator && (at == null) && options.sort !== false;
      var sortAttr = _.isString(this.comparator) ? this.comparator : null;
      var toAdd = [], toRemove = [], modelMap = {};
      var add = options.add, merge = options.merge, remove = options.remove;
      var order = !sortable && add && remove ? [] : false;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      for (i = 0, l = models.length; i < l; i++) {
        attrs = models[i];
        if (attrs instanceof Model) {
          id = model = attrs;
        } else {
          id = attrs[targetModel.prototype.idAttribute];
        }

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        if (existing = this.get(id)) {
          if (remove) modelMap[existing.cid] = true;
          if (merge) {
            attrs = attrs === model ? model.attributes : attrs;
            if (options.parse) attrs = existing.parse(attrs, options);
            existing.set(attrs, options);
            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;
          }
          models[i] = existing;

        // If this is a new, valid model, push it to the `toAdd` list.
        } else if (add) {
          model = models[i] = this._prepareModel(attrs, options);
          if (!model) continue;
          toAdd.push(model);

          // Listen to added models' events, and index models for lookup by
          // `id` and by `cid`.
          model.on('all', this._onModelEvent, this);
          this._byId[model.cid] = model;
          if (model.id != null) this._byId[model.id] = model;
        }
        if (order) order.push(existing || model);
      }

      // Remove nonexistent models if appropriate.
      if (remove) {
        for (i = 0, l = this.length; i < l; ++i) {
          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);
        }
        if (toRemove.length) this.remove(toRemove, options);
      }

      // See if sorting is needed, update `length` and splice in new models.
      if (toAdd.length || (order && order.length)) {
        if (sortable) sort = true;
        this.length += toAdd.length;
        if (at != null) {
          for (i = 0, l = toAdd.length; i < l; i++) {
            this.models.splice(at + i, 0, toAdd[i]);
          }
        } else {
          if (order) this.models.length = 0;
          var orderedModels = order || toAdd;
          for (i = 0, l = orderedModels.length; i < l; i++) {
            this.models.push(orderedModels[i]);
          }
        }
      }

      // Silently sort the collection if appropriate.
      if (sort) this.sort({silent: true});

      // Unless silenced, it's time to fire all appropriate add/sort events.
      if (!options.silent) {
        for (i = 0, l = toAdd.length; i < l; i++) {
          (model = toAdd[i]).trigger('add', model, this, options);
        }
        if (sort || (order && order.length)) this.trigger('sort', this, options);
      }
      
      // Return the added (or merged) model (or models).
      return singular ? models[0] : models;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any granular `add` or `remove` events. Fires `reset` when finished.
    // Useful for bulk operations and optimizations.
    reset: function(models, options) {
      options || (options = {});
      for (var i = 0, l = this.models.length; i < l; i++) {
        this._removeReference(this.models[i]);
      }
      options.previousModels = this.models;
      this._reset();
      models = this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return models;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      return this.add(model, _.extend({at: this.length}, options));
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      this.remove(model, options);
      return model;
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      return this.add(model, _.extend({at: 0}, options));
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      this.remove(model, options);
      return model;
    },

    // Slice out a sub-array of models from the collection.
    slice: function() {
      return slice.apply(this.models, arguments);
    },

    // Get a model from the set by id.
    get: function(obj) {
      if (obj == null) return void 0;
      return this._byId[obj.id] || this._byId[obj.cid] || this._byId[obj];
    },

    // Get the model at the given index.
    at: function(index) {
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of
    // `filter`.
    where: function(attrs, first) {
      if (_.isEmpty(attrs)) return first ? void 0 : [];
      return this[first ? 'find' : 'filter'](function(model) {
        for (var key in attrs) {
          if (attrs[key] !== model.get(key)) return false;
        }
        return true;
      });
    },

    // Return the first model with matching attributes. Useful for simple cases
    // of `find`.
    findWhere: function(attrs) {
      return this.where(attrs, true);
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
      options || (options = {});

      // Run sort based on type of `comparator`.
      if (_.isString(this.comparator) || this.comparator.length === 1) {
        this.models = this.sortBy(this.comparator, this);
      } else {
        this.models.sort(_.bind(this.comparator, this));
      }

      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return _.invoke(this.models, 'get', attr);
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `reset: true` is passed, the response
    // data will be passed through the `reset` method instead of `set`.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === void 0) options.parse = true;
      var success = options.success;
      var collection = this;
      options.success = function(resp) {
        var method = options.reset ? 'reset' : 'set';
        collection[method](resp, options);
        if (success) success(collection, resp, options);
        collection.trigger('sync', collection, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      if (!(model = this._prepareModel(model, options))) return false;
      if (!options.wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(model, resp, options) {
        if (options.wait) collection.add(model, options);
        if (success) success(model, resp, options);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models);
    },

    // Private method to reset all internal state. Called when the collection
    // is first initialized or reset.
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId  = {};
    },

    // Prepare a hash of attributes (or other model) to be added to this
    // collection.
    _prepareModel: function(attrs, options) {
      if (attrs instanceof Model) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options = options ? _.clone(options) : {};
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model.validationError) return model;
      this.trigger('invalid', this, model.validationError, options);
      return false;
    },

    // Internal method to sever a model's ties to a collection.
    _removeReference: function(model) {
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if ((event === 'add' || event === 'remove') && collection !== this) return;
      if (event === 'destroy') this.remove(model, options);
      if (model && event === 'change:' + model.idAttribute) {
        delete this._byId[model.previous(model.idAttribute)];
        if (model.id != null) this._byId[model.id] = model;
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  // 90% of the core usefulness of Backbone Collections is actually implemented
  // right here:
  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',
    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',
    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',
    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',
    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',
    'lastIndexOf', 'isEmpty', 'chain'];

  // Mix in each Underscore method as a proxy to `Collection#models`.
  _.each(methods, function(method) {
    Collection.prototype[method] = function() {
      var args = slice.call(arguments);
      args.unshift(this.models);
      return _[method].apply(_, args);
    };
  });

  // Underscore methods that take a property name as an argument.
  var attributeMethods = ['groupBy', 'countBy', 'sortBy'];

  // Use attributes instead of properties.
  _.each(attributeMethods, function(method) {
    Collection.prototype[method] = function(value, context) {
      var iterator = _.isFunction(value) ? value : function(model) {
        return model.get(value);
      };
      return _[method](this.models, iterator, context);
    };
  });

  // Backbone.View
  // -------------

  // Backbone Views are almost more convention than they are actual code. A View
  // is simply a JavaScript object that represents a logical chunk of UI in the
  // DOM. This might be a single item, an entire list, a sidebar or panel, or
  // even the surrounding frame which wraps your whole app. Defining a chunk of
  // UI as a **View** allows you to define your DOM events declaratively, without
  // having to worry about render order ... and makes it easy for the view to
  // react to specific changes in the state of your models.

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    options || (options = {});
    _.extend(this, _.pick(options, viewOptions));
    this._ensureElement();
    this.initialize.apply(this, arguments);
    this.delegateEvents();
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be merged as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be preferred to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this.$el.remove();
      this.stopListening();
      return this;
    },

    // Change the view's element (`this.el` property), including event
    // re-delegation.
    setElement: function(element, delegate) {
      if (this.$el) this.undelegateEvents();
      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);
      this.el = this.$el[0];
      if (delegate !== false) this.delegateEvents();
      return this;
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save',
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    // This only works for delegate-able events: not `focus`, `blur`, and
    // not `change`, `submit`, and `reset` in Internet Explorer.
    delegateEvents: function(events) {
      if (!(events || (events = _.result(this, 'events')))) return this;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[events[key]];
        if (!method) continue;

        var match = key.match(delegateEventSplitter);
        var eventName = match[1], selector = match[2];
        method = _.bind(method, this);
        eventName += '.delegateEvents' + this.cid;
        if (selector === '') {
          this.$el.on(eventName, method);
        } else {
          this.$el.on(eventName, selector, method);
        }
      }
      return this;
    },

    // Clears all callbacks previously bound to the view with `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      this.$el.off('.delegateEvents' + this.cid);
      return this;
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);
        this.setElement($el, false);
      } else {
        this.setElement(_.result(this, 'el'), false);
      }
    }

  });

  // Backbone.sync
  // -------------

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    // If we're sending a `PATCH` request, and we're in an old Internet Explorer
    // that still has ActiveX enabled by default, override jQuery to use that
    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.
    if (params.type === 'PATCH' && noXhrPatch) {
      params.xhr = function() {
        return new ActiveXObject("Microsoft.XMLHTTP");
      };
    }

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  var noXhrPatch = typeof window !== 'undefined' && !!window.ActiveXObject && !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch':  'PATCH',
    'delete': 'DELETE',
    'read':   'GET'
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  // Override this if you'd like to use a different library.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (_.isFunction(name)) {
        callback = name;
        name = '';
      }
      if (!callback) callback = this[name];
      var router = this;
      Backbone.history.route(route, function(fragment) {
        var args = router._extractParameters(route, fragment);
        callback && callback.apply(router, args);
        router.trigger.apply(router, ['route:' + name].concat(args));
        router.trigger('route', name, args);
        Backbone.history.trigger('route', router, name, args);
      });
      return this;
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      this.routes = _.result(this, 'routes');
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional) {
                     return optional ? match : '([^\/]+)';
                   })
                   .replace(splatParam, '(.*?)');
      return new RegExp('^' + route + '$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted decoded parameters. Empty or unmatched parameters will be
    // treated as `null` to normalize cross-browser behavior.
    _extractParameters: function(route, fragment) {
      var params = route.exec(fragment).slice(1);
      return _.map(params, function(param) {
        return param ? decodeURIComponent(param) : null;
      });
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on either
  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
  // and URL fragments. If the browser supports neither (old IE, natch),
  // falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    _.bindAll(this, 'checkUrl');

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for detecting MSIE.
  var isExplorer = /msie [\w.]+/;

  // Cached regex for removing a trailing slash.
  var trailingSlash = /\/$/;

  // Cached regex for stripping urls of hash and query.
  var pathStripper = /[?#].*$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the cross-browser normalized URL fragment, either from the URL,
    // the hash, or the override.
    getFragment: function(fragment, forcePushState) {
      if (fragment == null) {
        if (this._hasPushState || !this._wantsHashChange || forcePushState) {
          fragment = this.location.pathname;
          var root = this.root.replace(trailingSlash, '');
          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error("Backbone.history has already been started");
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);
      var fragment          = this.getFragment();
      var docMode           = document.documentMode;
      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      if (oldIE && this._wantsHashChange) {
        this.iframe = Backbone.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;
        this.navigate(fragment);
      }

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._hasPushState) {
        Backbone.$(window).on('popstate', this.checkUrl);
      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {
        Backbone.$(window).on('hashchange', this.checkUrl);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      // Determine if we need to change the base url, for a pushState link
      // opened by a non-pushState browser.
      this.fragment = fragment;
      var loc = this.location;
      var atRoot = loc.pathname.replace(/[^\/]$/, '$&/') === this.root;

      // Transition from hashChange to pushState or vice versa if both are
      // requested.
      if (this._wantsHashChange && this._wantsPushState) {

        // If we've started off with a route from a `pushState`-enabled
        // browser, but we're currently in a browser that doesn't support it...
        if (!this._hasPushState && !atRoot) {
          this.fragment = this.getFragment(null, true);
          this.location.replace(this.root + this.location.search + '#' + this.fragment);
          // Return immediately as browser will do redirect to new url
          return true;

        // Or if we've started out with a hash-based route, but we're currently
        // in a browser where it could be `pushState`-based instead...
        } else if (this._hasPushState && atRoot && loc.hash) {
          this.fragment = this.getHash().replace(routeStripper, '');
          this.history.replaceState({}, document.title, this.root + this.fragment + loc.search);
        }

      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);
      clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();
      if (current === this.fragment && this.iframe) {
        current = this.getFragment(this.getHash(this.iframe));
      }
      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl();
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragment) {
      fragment = this.fragment = this.getFragment(fragment);
      return _.any(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: !!options};

      var url = this.root + (fragment = this.getFragment(fragment || ''));

      // Strip the fragment of the query and hash for matching.
      fragment = fragment.replace(pathStripper, '');

      if (this.fragment === fragment) return;
      this.fragment = fragment;

      // Don't include a trailing slash on the root.
      if (fragment === '' && url !== '/') url = url.slice(0, -1);

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._hasPushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {
          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if(!options.replace) this.iframe.document.open().close();
          this._updateHash(this.iframe.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) return this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent's constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    var Surrogate = function(){ this.constructor = child; };
    Surrogate.prototype = parent.prototype;
    child.prototype = new Surrogate;

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) _.extend(child.prototype, protoProps);

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

  // Wrap an optional error callback with a fallback error event.
  var wrapError = function(model, options) {
    var error = options.error;
    options.error = function(resp) {
      if (error) error(model, resp, options);
      model.trigger('error', model, resp, options);
    };
  };

}).call(this);

Iris.define("backbone", ["underscore","jquery"], (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Backbone;
    };
}(this)));

/**
 * @class Root
 * 
 * Root class for all Iris classes.
 * 
 * @singleton
 */
Iris.define('iris/root',["backbone", "underscore"], function (Backbone, _) {
    /** 
     * @constructor
     * @param {Object} options Constructor options.
     */
    var Root = function (options) {
        this.options = options ? _.clone(options) : {};
        var args = _.toArray(arguments);
        if (this.defaults) {
            _.defaults(this.options, this.defaults);
            args[0] = this.options;
        }
        this.initialize.apply(this, args);
    };
    _.extend(Root.prototype, Backbone.Events, {
        /**
         * @method initialize
         * Initializes the object. Invoked after constructor has already
         * processed parameters.
         */
        initialize: function () {},
        about: {}
    });

    /**
     * @method extend
     * Extends the class.
     * @param {Object} object
     *        A hash of functions and object that extend the class
     * @return {Object} A new subclass of this class.
     */
    Root.extend = Backbone.View.extend;
    
    /**
     * @method register
     * Registers an object within this namespace.
     * @param {String} name The name of the object
     * @param {Object} object The object to register
     */
    Root.register = function (name, object) {
        this[name] = object;
    };
    return Root;
});

/**
 * @class Widget
 * 
 * Iris.Widget. A controller class for managing data and renderers for
 * visualization
 * 
 *     @example
 *     var MyWidget = Iris.Widget.extend({});
 *     var widget = new MyWidget();
 * 
 * Or:
 * 
 *     @example
 *     iris.require(["widget"], function (Widget) {
 *         var widget = Widget.extend({});
 *     });
 *
 * @extends Root
 * @singleton
 */
Iris.define('iris/widget',["iris/root"], function (Root) {
    return Root.extend({
        defaults: {
            element: "body"
        },
        /**
         * @method initialize
         * @inheritdoc Root#initialize
         */
        initialize: function (options) {
            this.element = options.element;
        }
        /**
         * @method register
         * @inheritdoc Root#register
         * @param {String} name The name of the widget
         * @param {Object} widget The widget to register
         */
    });
});

Iris.define('iris/util',[],function () {
    var Util = {};

    Util.each = function (array, func) {
        for (var i = 0; i < array.length; i++) {
            func(array[i]);
        }
        return array;
    };

    Util.extend = function (object) {
        Util.each(arguments, function (src) {
            for (var key in src) {
                if (! object.hasOwnProperty(key)) {
                    object[key] = src[key];
                }
            }
        });
        return object;
    };
    
    Util.keys = function (object) {
        if (object !== Object(object)) throw new TypeError('Invalid object');
        var keys = [];
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                keys[keys.length] = key;
            }
        }
        return keys;
    };

    // Retrieve the values of an object's properties.
    Util.values = function (object) {
        var values = [];
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                values[values.length] = object[key];
            }
        }
        return values;
    };
    
    Util.validate = function (obj, schema) {
        return window.json.validate(obj, schema);
    }

    function capitalize(string) {
        if (string == null || string == "") return string;
        return string[0].toUpperCase() + string.slice(1);
    }

    Util.normalizeName = function (string) {
        // var capitalized = capitalize(string);
        return string.split(/\s/).join('');
    };    
    
    Util.syntaxHighlight = function (json) {
        json = json
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;');
        return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g
            , function (match) {
                var cls = 'number';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'key';
                    } else {
                        cls = 'string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'boolean';
                } else if (/null/.test(match)) {
                    cls = 'null';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
    }

    return Util;
});
/**
 * @class Renderer
 * @extends Root
 *
 * A base class that handles the display of specific data.
 *
 *     @example
 *     // Create instance
 *     var renderer = new Iris.Renderer({ foo: "bar" });
 * Or:
 *
 *     @example
 *     // Extend Iris.Renderer
 *     var MyRenderer = Iris.Renderer.extend({
 *         render: function () {}
 *     });
 *     var renderer = new MyRenderer({ element: "#datavis" }); 
 * 
 * @singleton
 */
Iris.define('iris/renderer',["iris/root", "iris/util", "underscore"], function (Root, Util, _) {
    var renderer = {
        schema: { // uses revalidator.js to check args
            properties: {
                data:    { required: true, type: 'any' },
                element: { required: true, type: 'any' }
            }
        },
        defaults: {
            element: "body"
        },

        /**
         * Returns example data, used to demo renderer.
         * @method exampleData
         * @deprecated
         */
        exampleData: function () {
            console.log(this.about.name +
                ": exampleData() function not implemented");
        },

        /**
         * @method render
         * Renders a data visualization.
         * @param {Object} args Runtime rendering arguments.
         */
        render: function (args) {
            console.log(this.about.name +
                ": render() function not implemented");
        },

        /**
         * @method update
         * Updates the visualization. Used for handling changes to underlying
         * data.
         * @param {Object} args Runtime update arguments.
         */
        update: function (args) {
            console.log(this.about.name +
                ": update() function not implemented");
        },

        /**
         * @method setData
         * Sets the data used for rendering.
         * @param {Object} The data
         */
        setData: function (data) {
            this.data = data;
        },

        /**
         * @method getData
         * Get the data used for rendering.
         * @return {Object} The data
         */
        getData: function () {
            return this.data;
        },

        /**
         * @method set
         * Set renderer options.
         * @param {Object} args - key-value pair of options.
         */
        set: function (args) {
        }
        /**
         * @method register
         * @inheritdoc Root#register
         * @param {String} name The name of the renderer
         * @param {Object} renderer The renderer to register
         */
    };

    return Root.extend(renderer);
});
/**
 * @class Iris
 * 
 * The Iris object.
 *
 * @singleton
 */
Iris.define('iris',['require','iris/widget','iris/renderer'],function (require) {
    var Core = {};

    /**
     * The Widget container
     * @property {Widget}
     */
    Core.Widget = require("iris/widget");

    /**
     * The Renderer container
     * @property {Renderer}
     */
    Core.Renderer = require("iris/renderer");

    return Core;
});
Iris.define('util/scale',[],function () {
    /**
     * @class Scale
     * Map between two numerical coordinate systems.
     *
     * @constructor
     */
    function Scale() {
        var self = this;
        var _domain = [0, 1];
        var _range  = [0, 1];
        var _ratio  = 1;
        function sign(n) {
            return n > 0 ? 1 : n < 0 ? -1 : 0;
        }
        function resetRatio() {
            _ratio = (_range[1] - _range[0]) / (_domain[1] - _domain[0]);
        }
        /**
         * @method domain
         * Converts a range into its domain values.
         * 
         * @param {Number[]} args A pair of start and end values for the domain
         * @return {Number[]} the domain array
         */
        self.domain = function (args) {
            if (args != null) {
                _domain[0] = args[0];
                _domain[1] = args[1];
                resetRatio();
            }
            return _domain;
        };
        self.range = function (args) {
            if (args != null) {
                _range[0] = args[0];
                _range[1] = args[1];
                resetRatio();
            }
            return _range;
        };
        self.toDomain = function (value) {
            return (_ratio > 0 ? _domain[0] : _domain[1]) + value / _ratio;
        };
        self.toRange = function (value) {
            return _range[0] + value * _ratio;
        };
		return this;
	};
	return Scale;
});
/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

Iris.define('text',['module'], function (module) {
    

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.10',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.indexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1, name.length);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file.indexOf('\uFEFF') === 0) {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                errback(e);
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes,
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});

Iris.define('text!examples/manhattan.json',[],function () { return '{"contigs":[{"id":"1","name":"1","len":30427671},{"id":"2","name":"2","len":19698289},{"id":"3","name":"3","len":23459830},{"id":"4","name":"4","len":18585056},{"id":"5","name":"5","len":26975502}],"variations":[[0,4214644,3.943734,1],[0,8532083,2.501279,1],[0,21689995,2.163683,1],[0,14288670,0.383632,1],[0,4214644,3.913043,1],[0,2158720,1.488491,1],[0,18811702,4.127877,1],[0,10588007,2.654731,1],[0,21689995,2.439898,1],[0,3392274,1.948849,1],[0,10588007,2.716113,1],[0,4214644,3.7289,1],[0,18811702,4.005115,1],[0,10588007,2.102302,1],[0,3392274,1.918159,1],[0,27240989,2.378517,1],[0,14288670,0.598465,1],[0,3392274,1.856777,1],[0,27857766,1.089514,1],[0,4214644,3.759591,1],[0,25185066,3.268542,1],[0,27240989,2.317136,1],[0,14905447,0.782609,1],[0,4214644,0.29156,1],[0,19839664,3.207161,1],[0,27240989,0.997442,1],[0,27240989,2.808184,1],[0,3392274,1.703325,1],[0,4009051,9.836317,1],[0,27240989,2.716113,1],[0,14288670,0.475703,1],[0,10588007,3.606138,1],[0,27857766,1.672634,1],[0,21689995,2.624041,1],[0,4214644,4.219949,1],[0,4214644,5.723785,1],[0,14288670,0.26087,1],[0,18811702,0.84399,1],[0,18811702,3.11509,1],[0,19839664,2.961637,1],[0,18811702,3.084399,1],[0,14288670,0.168798,1],[0,4009051,8.731458,1],[0,27240989,2.961637,1],[0,3392274,1.212276,1],[0,2158720,1.396419,1],[0,18811702,0.87468,1],[0,18811702,3.053708,1],[0,13466300,5.539642,1],[0,10588007,1.856777,1],[0,10588007,1.826087,1],[0,10588007,1.212276,1],[0,4214644,3.974425,1],[0,27857766,1.549872,1],[0,4214644,5.846547,1],[0,25185066,3.084399,1],[0,18811702,2.071611,1],[0,3392274,0.322251,1],[0,10588007,2.746803,1],[0,4214644,4.035806,1],[0,4214644,2.685422,1],[0,27240989,2.286445,1],[0,27857766,1.611253,1],[0,10588007,3.237852,1],[0,925166,0.107417,1],[0,4214644,4.158568,1],[0,6476160,7.227621,1],[0,4214644,2.654731,1],[0,4214644,0.751918,1],[0,18811702,5.355499,1],[0,3392274,1.42711,1],[0,10588007,2.286445,1],[0,6476160,6.828645,1],[0,3392274,2.071611,1],[0,21689995,1.918159,1],[0,10588007,3.053708,1],[0,14905447,3.7289,1],[0,18811702,3.790281,1],[0,21689995,2.225064,1],[0,2775497,8.424552,1],[0,19839664,3.69821,1],[0,21689995,1.273657,1],[0,4214644,3.023018,1],[0,10588007,2.501279,1],[0,27240989,2.470588,1],[0,27857766,2.992327,1],[0,26829804,0.87468,1],[0,4214644,6.368286,1],[0,10588007,3.14578,1],[0,10588007,2.56266,1],[0,6476160,4.987212,1],[0,4214644,3.11509,1],[0,18811702,3.544757,1],[0,6476160,4.557545,1],[0,21689995,1.948849,1],[0,21689995,2.317136,1],[0,4214644,3.176471,1],[0,4214644,3.207161,1],[0,4214644,3.084399,1],[0,2364312,0.936061,1],[0,27446582,2.470588,1],[0,4214644,3.268542,1],[0,19839664,4.005115,1],[0,25185066,3.851662,1],[0,27240989,2.746803,1],[0,18811702,3.636829,1],[0,18811702,3.667519,1],[0,10588007,4.127877,1],[0,10588007,2.317136,1],[0,6476160,4.710997,1],[0,4214644,3.299233,1],[0,17372555,5.938619,1],[0,102796,4.28133,1],[0,21689995,2.930946,1],[0,10588007,2.163683,1],[0,8532083,2.716113,1],[0,18811702,2.470588,1],[0,2569905,5.109974,1],[0,6476160,5.877238,1],[0,14905447,0.537084,1],[0,6476160,5.202046,1],[0,29708098,7.503836,1],[0,8532083,2.624041,1],[0,6476160,6.460358,1],[0,4214644,2.869565,1],[0,18811702,2.225064,1],[0,17372555,5.754476,1],[0,4214644,2.777494,1],[0,2158720,1.549872,1],[0,8532083,1.396419,1],[0,4214644,3.69821,1],[0,14905447,0.690537,1],[0,4214644,2.961637,1],[0,18811702,0.414322,1],[0,8532083,2.777494,1],[0,10588007,2.59335,1],[0,21689995,1.396419,1],[0,10588007,2.194373,1],[0,4214644,2.930946,1],[0,10588007,1.365729,1],[0,10588007,1.273657,1],[0,4214644,3.452685,1],[0,4214644,6.214834,1],[0,18811702,0.506394,1],[0,513981,6.030691,1],[0,14905447,3.299233,1],[0,6476160,6.951407,1],[0,4214644,3.514066,1],[0,4214644,3.544757,1],[0,4214644,3.575448,1],[0,6476160,5.079284,1],[0,8532083,1.580563,1],[0,18811702,0.567775,1],[0,18811702,1.764706,1],[0,25185066,1.242967,1],[0,27240989,1.611253,1],[0,18811702,2.654731,1],[0,27240989,1.641944,1],[0,10588007,1.519182,1],[0,2569905,0.782609,1],[0,4214644,5.109974,1],[0,26829804,1.058824,1],[0,21689995,1.734015,1],[0,4009051,9.130435,1],[0,27240989,1.672634,1],[0,19839664,1.028133,1],[0,8532083,2.225064,1],[0,18811702,1.457801,1],[0,513981,5.877238,1],[0,14905447,1.181586,1],[0,27240989,1.703325,1],[0,18811702,2.624041,1],[0,4214644,5.017903,1],[0,21689995,2.040921,1],[0,18811702,2.808184,1],[0,19839664,1.826087,1],[0,10588007,2.900256,1],[0,25185066,1.028133,1],[0,10588007,2.930946,1],[0,27240989,1.549872,1],[0,27857766,3.452685,1],[0,10588007,1.580563,1],[0,10588007,3.452685,1],[0,25185066,1.150895,1],[0,19839664,1.703325,1],[0,8532083,2.317136,1],[0,14905447,1.028133,1],[0,18811702,1.826087,1],[0,27857766,2.808184,1],[0,18811702,2.685422,1],[0,4009051,9.007673,1],[0,2569905,0.813299,1],[0,14905447,1.089514,1],[0,2364312,0.659847,1],[0,8532083,2.132992,1],[0,19839664,1.396419,1],[0,4214644,2.409207,1],[0,18811702,5.232737,1],[0,27240989,1.826087,1],[0,18811702,2.56266,1],[0,27857766,2.654731,1],[0,925166,8.30179,1],[0,27857766,2.59335,1],[0,4214644,4.956522,1],[0,17372555,5.846547,1],[0,17372555,5.877238,1],[0,14905447,1.457801,1],[0,27857766,2.624041,1],[0,4214644,4.895141,1],[0,25185066,1.948849,1],[0,25185066,2.01023,1],[0,4214644,4.83376,1],[0,4214644,2.317136,1],[0,8532083,1.918159,1],[0,6476160,5.693095,1],[0,21689995,1.764706,1],[0,25185066,1.611253,1],[0,10588007,2.961637,1],[0,25185066,1.641944,1],[0,8532083,2.194373,1],[0,4214644,1.97954,1],[0,2569905,0.751918,1],[0,2158720,1.181586,1],[0,25185066,1.672634,1],[0,25185066,2.163683,1],[0,4214644,4.987212,1],[0,513981,5.723785,1],[0,14905447,1.519182,1],[0,4214644,2.470588,1],[0,27240989,2.869565,1],[0,2364312,0.107417,1],[0,10588007,3.329923,1],[0,25185066,1.734015,1],[0,18811702,1.948849,1],[0,14288670,0.076726,1],[0,19839664,2.685422,1],[0,4214644,5.202046,1],[0,18811702,1.918159,1],[0,27240989,1.242967,1],[0,8532083,1.795396,1],[0,2158720,1.335038,1],[0,19839664,2.59335,1],[0,4009051,8.792839,1],[0,14288670,0.046036,1],[0,19839664,2.56266,1],[0,19839664,2.531969,1],[0,17372555,6.153453,1],[0,18811702,1.028133,1],[0,21689995,2.102302,1],[0,19839664,2.409207,1],[0,27857766,2.194373,1],[0,27240989,2.59335,1],[0,18811702,2.961637,1],[0,14905447,2.163683,1],[0,18811702,0.936061,1],[0,19839664,2.838875,1],[0,3392274,1.150895,1],[0,8532083,0.813299,1],[0,4214644,5.478261,1],[0,8532083,1.734015,1],[0,18811702,1.97954,1],[0,19839664,2.808184,1],[0,14905447,1.734015,1],[0,19839664,2.777494,1],[0,4214644,1.150895,1],[0,6476160,5.355499,1],[0,10588007,1.795396,1],[0,27857766,1.97954,1],[0,27240989,2.838875,1],[0,4214644,5.355499,1],[0,27857766,2.01023,1],[0,28680136,0.199488,1],[0,4214644,5.294118,1],[0,8532083,2.347826,1],[0,14905447,0.966752,1],[0,10588007,1.641944,1],[0,27857766,3.790281,1],[0,18811702,2.930946,1],[0,27857766,3.759591,1],[0,10588007,3.268542,1],[0,10588007,2.808184,1],[0,19839664,1.948849,1],[0,27857766,2.378517,1],[0,2569905,5.386189,1],[0,27857766,3.69821,1],[0,4214644,1.580563,1],[0,27857766,3.667519,1],[0,25185066,0.905371,1],[0,27857766,3.544757,1],[0,4214644,1.611253,1],[0,4214644,4.434783,1],[0,13260708,3.851662,1],[0,13877485,0.445013,1],[0,18811702,1.887468,1],[0,4214644,4.28133,1],[0,19839664,2.347826,1],[0,19839664,2.317136,1],[0,4009051,8.823529,1],[0,4214644,2.56266,1],[0,4214644,4.31202,1],[0,19839664,2.225064,1],[0,18811702,4.496164,1],[0,18811702,1.150895,1],[0,19839664,2.071611,1],[0,14905447,2.194373,1],[0,27857766,2.255754,1],[0,25185066,2.624041,1],[0,18811702,1.181586,1],[0,18811702,4.557545,1],[0,925166,0.537084,1],[0,4214644,4.342711,1],[0,27857766,3.913043,1],[0,10588007,1.672634,1],[0,19839664,1.97954,1],[0,16961371,3.421995,1],[0,1130758,2.716113,1],[0,18606110,4.005115,1],[0,20045256,4.803069,1],[0,16961371,3.391304,1],[0,1130758,2.808184,1],[0,16961371,3.360614,1],[0,20045256,4.925831,1],[0,1130758,2.930946,1],[0,1130758,2.961637,1],[0,18606110,3.882353,1],[0,18606110,3.851662,1],[0,102796,1.058824,1],[0,1130758,3.207161,1],[0,16961371,3.237852,1],[0,1336350,5.601023,1],[0,1336350,5.570332,1],[0,20045256,5.478261,1],[0,1130758,2.040921,1],[0,1130758,2.102302,1],[0,16961371,3.759591,1],[0,2569905,6.460358,1],[0,20045256,3.974425,1],[0,20045256,4.035806,1],[0,8326491,1.058824,1],[0,16961371,3.636829,1],[0,20045256,4.219949,1],[0,1130758,2.255754,1],[0,1130758,2.378517,1],[0,1130758,2.409207,1],[0,13466300,3.759591,1],[0,16961371,3.483376,1],[0,1130758,2.531969,1],[0,1130758,2.56266,1],[0,20045256,4.588235,1],[0,1336350,5.754476,1],[0,1130758,2.654731,1],[0,29708098,2.163683,1],[0,102796,4.127877,1],[0,12027154,3.606138,1],[0,18606110,2.869565,1],[0,18606110,2.838875,1],[0,20045256,6.460358,1],[0,12027154,3.483376,1],[0,27446582,3.974425,1],[0,24773881,3.053708,1],[0,16961371,2.347826,1],[0,12027154,3.299233,1],[0,13055116,1.703325,1],[0,18606110,2.654731,1],[0,29708098,1.918159,1],[0,24773881,2.838875,1],[0,12027154,3.207161,1],[0,13055116,1.734015,1],[0,12027154,3.14578,1],[0,16961371,3.053708,1],[0,16961371,3.023018,1],[0,24773881,4.158568,1],[0,16961371,2.869565,1],[0,16961371,2.808184,1],[0,102796,4.250639,1],[0,20045256,5.877238,1],[0,20045256,5.907928,1],[0,16961371,2.716113,1],[0,18606110,3.237852,1],[0,513981,5.41688,1],[0,20045256,6.061381,1],[0,24773881,3.636829,1],[0,20045256,6.092072,1],[0,18606110,3.14578,1],[0,16961371,2.624041,1],[0,102796,4.158568,1],[0,29708098,2.194373,1],[0,102796,1.242967,1],[0,8326491,2.378517,1],[0,1541943,3.176471,1],[0,20045256,1.764706,1],[0,1541943,3.207161,1],[0,20045256,1.856777,1],[0,20045256,1.887468,1],[0,20045256,1.918159,1],[0,1541943,3.268542,1],[0,8326491,2.286445,1],[0,20045256,2.01023,1],[0,8326491,2.255754,1],[0,13466300,4.31202,1],[0,1130758,1.488491,1],[0,8326491,2.132992,1],[0,20045256,2.194373,1],[0,8326491,2.040921,1],[0,20045256,2.347826,1],[0,1541943,3.421995,1],[0,1130758,0.782609,1],[0,13466300,4.680307,1],[0,20045256,0.936061,1],[0,2569905,5.601023,1],[0,13466300,4.649616,1],[0,4420236,5.969309,1],[0,20045256,1.058824,1],[0,20045256,1.089514,1],[0,8326491,2.470588,1],[0,6476160,0.84399,1],[0,20045256,1.273657,1],[0,1541943,2.961637,1],[0,1130758,1.120205,1],[0,2981089,0.813299,1],[0,20045256,1.396419,1],[0,1130758,1.304348,1],[0,20045256,1.488491,1],[0,16961371,4.250639,1],[0,20045256,1.641944,1],[0,13466300,3.974425,1],[0,20045256,3.207161,1],[0,20045256,3.237852,1],[0,20045256,3.268542,1],[0,8326491,1.641944,1],[0,8326491,1.611253,1],[0,1541943,3.636829,1],[0,20045256,3.421995,1],[0,1130758,1.856777,1],[0,1130758,1.887468,1],[0,20045256,3.514066,1],[0,20045256,3.544757,1],[0,24773881,6.214834,1],[0,20045256,3.575448,1],[0,1130758,1.918159,1],[0,8326491,1.365729,1],[0,1130758,2.01023,1],[0,8326491,1.273657,1],[0,20045256,2.439898,1],[0,20045256,2.470588,1],[0,20045256,2.501279,1],[0,10176822,6.460358,1],[0,1130758,1.672634,1],[0,20045256,2.59335,1],[0,20045256,2.624041,1],[0,20045256,2.654731,1],[0,20045256,2.685422,1],[0,20045256,2.716113,1],[0,13466300,4.127877,1],[0,20045256,2.808184,1],[0,13260708,2.286445,1],[0,2569905,6.184143,1],[0,20045256,2.930946,1],[0,13466300,4.066496,1],[0,20045256,3.053708,1],[0,8326491,1.734015,1],[0,22306772,7.043478,1],[0,4625828,1.457801,1],[0,4625828,1.488491,1],[0,29708098,1.304348,1],[0,13055116,2.654731,1],[0,4625828,1.641944,1],[0,4625828,1.672634,1],[0,3186682,8.2711,1],[0,6270567,9.314578,1],[0,7092937,1.641944,1],[0,13260708,2.071611,1],[0,308389,3.667519,1],[0,16961371,1.150895,1],[0,29708098,1.242967,1],[0,4625828,1.918159,1],[0,2981089,1.335038,1],[0,4625828,1.97954,1],[0,4625828,2.01023,1],[0,102796,5.140665,1],[0,12027154,1.242967,1],[0,18606110,1.519182,1],[0,18606110,1.457801,1],[0,29708098,1.672634,1],[0,29708098,1.580563,1],[0,18606110,1.242967,1],[0,13055116,2.531969,1],[0,27446582,4.127877,1],[0,15316632,1.795396,1],[0,16961371,1.457801,1],[0,308389,3.299233,1],[0,29708098,1.42711,1],[0,3186682,8.393862,1],[0,13055116,2.59335,1],[0,7092937,1.488491,1],[0,513981,4.925831,1],[0,308389,3.421995,1],[0,29708098,1.396419,1],[0,102796,1.856777,1],[0,4625828,2.777494,1],[0,4625828,2.808184,1],[0,4625828,2.869565,1],[0,4625828,2.900256,1],[0,4625828,2.930946,1],[0,513981,4.465473,1],[0,1336350,4.404092,1],[0,513981,4.404092,1],[0,4625828,3.053708,1],[0,513981,4.373402,1],[0,513981,4.31202,1],[0,6270567,8.639386,1],[0,6270567,8.578005,1],[0,2775497,7.749361,1],[0,6270567,8.485934,1],[0,4625828,3.329923,1],[0,13055116,3.023018,1],[0,4625828,3.483376,1],[0,4625828,2.163683,1],[0,513981,4.649616,1],[0,2981089,1.396419,1],[0,1336350,4.465473,1],[0,4625828,2.317136,1],[0,30119282,4.987212,1],[0,13055116,2.838875,1],[0,4625828,2.409207,1],[0,4625828,2.439898,1],[0,30119282,4.956522,1],[0,30119282,4.925831,1],[0,513981,4.588235,1],[0,4625828,2.56266,1],[0,4625828,2.59335,1],[0,30119282,4.895141,1],[0,513981,4.557545,1],[0,2981089,1.42711,1],[0,4625828,2.716113,1],[0,18606110,0.26087,1],[0,13055116,1.856777,1],[0,24773881,1.948849,1],[0,24773881,1.918159,1],[0,24773881,1.887468,1],[0,24773881,1.856777,1],[0,12027154,2.501279,1],[0,12027154,2.470588,1],[0,24773881,1.764706,1],[0,24773881,1.734015,1],[0,13055116,1.948849,1],[0,12027154,2.409207,1],[0,4625828,0.598465,1],[0,16961371,2.040921,1],[0,18606110,2.163683,1],[0,24773881,1.488491,1],[0,12027154,2.286445,1],[0,24773881,1.42711,1],[0,13055116,2.01023,1],[0,18606110,2.59335,1],[0,18606110,2.56266,1],[0,16961371,2.255754,1],[0,12027154,3.023018,1],[0,12027154,2.992327,1],[0,12027154,2.961637,1],[0,24773881,2.531969,1],[0,12027154,2.930946,1],[0,12027154,2.900256,1],[0,29708098,1.887468,1],[0,18606110,2.409207,1],[0,24773881,2.317136,1],[0,29708098,1.856777,1],[0,12027154,2.716113,1],[0,18606110,2.347826,1],[0,2775497,8.148338,1],[0,24773881,2.163683,1],[0,20045256,7.012788,1],[0,12027154,2.56266,1],[0,18606110,1.918159,1],[0,16961371,1.948849,1],[0,18606110,1.856777,1],[0,18606110,1.826087,1],[0,16961371,1.918159,1],[0,18606110,1.764706,1],[0,513981,5.202046,1],[0,102796,1.611253,1],[0,102796,3.974425,1],[0,30119282,6.245524,1],[0,13055116,2.378517,1],[0,12027154,1.549872,1],[0,308389,2.746803,1],[0,16961371,1.826087,1],[0,12027154,1.42711,1],[0,7092937,1.212276,1],[0,18606110,1.580563,1],[0,308389,2.869565,1],[0,308389,2.900256,1],[0,24773881,1.365729,1],[0,29708098,1.734015,1],[0,13055116,2.102302,1],[0,24773881,1.242967,1],[0,13055116,2.132992,1],[0,18606110,2.071611,1],[0,24773881,1.150895,1],[0,12027154,2.194373,1],[0,18606110,2.040921,1],[0,12027154,2.132992,1],[0,102796,1.549872,1],[0,308389,2.531969,1],[0,1953128,7.503836,1],[0,13055116,2.225064,1],[0,13055116,2.255754,1],[0,18606110,1.97954,1],[0,13055116,2.286445,1],[0,18606110,1.948849,1],[0,12027154,1.887468,1],[0,15111039,0.598465,1],[0,22306772,3.023018,1],[0,12232746,1.672634,1],[0,22306772,3.053708,1],[0,12232746,1.580563,1],[0,22306772,3.11509,1],[0,4420236,0.414322,1],[0,12232746,1.457801,1],[0,12232746,1.42711,1],[0,15111039,0.966752,1],[0,15111039,1.028133,1],[0,4420236,0.690537,1],[0,30324875,2.716113,1],[0,22306772,3.268542,1],[0,4420236,0.782609,1],[0,30324875,2.777494,1],[0,15111039,1.212276,1],[0,308389,1.058824,1],[0,22306772,2.317136,1],[0,1541943,1.826087,1],[0,12232746,2.409207,1],[0,12232746,2.347826,1],[0,12232746,2.317136,1],[0,12232746,2.286445,1],[0,12232746,2.255754,1],[0,22306772,2.531969,1],[0,22306772,2.56266,1],[0,15111039,0.107417,1],[0,12232746,2.040921,1],[0,15111039,0.199488,1],[0,12232746,2.01023,1],[0,22306772,2.746803,1],[0,22306772,2.777494,1],[0,1541943,2.01023,1],[0,15111039,0.445013,1],[0,22306772,2.869565,1],[0,6476160,3.421995,1],[0,30324875,3.176471,1],[0,9354453,0.966752,1],[0,308389,1.611253,1],[0,308389,1.641944,1],[0,308389,1.672634,1],[0,308389,1.703325,1],[0,4420236,1.826087,1],[0,4420236,1.887468,1],[0,24979473,3.237852,1],[0,24979473,3.207161,1],[0,4420236,1.918159,1],[0,6476160,3.207161,1],[0,22306772,3.544757,1],[0,9354453,1.089514,1],[0,4420236,2.071611,1],[0,4420236,2.102302,1],[0,24979473,2.961637,1],[0,30324875,3.391304,1],[0,308389,1.120205,1],[0,12232746,1.181586,1],[0,22306772,3.299233,1],[0,30324875,2.869565,1],[0,30324875,2.930946,1],[0,30324875,2.961637,1],[0,30324875,2.992327,1],[0,15111039,1.457801,1],[0,15111039,1.488491,1],[0,308389,1.365729,1],[0,308389,1.396419,1],[0,6476160,3.299233,1],[0,22306772,3.360614,1],[0,30324875,3.084399,1],[0,15111039,1.672634,1],[0,308389,1.488491,1],[0,6476160,3.268542,1],[0,30324875,3.11509,1],[0,9354453,0.905371,1],[0,4214644,7.780051,1],[0,19839664,4.956522,1],[0,6476160,3.974425,1],[0,4214644,7.872123,1],[0,19839664,5.017903,1],[0,19839664,5.079284,1],[0,19839664,5.140665,1],[0,19839664,5.171355,1],[0,6476160,3.913043,1],[0,19839664,5.232737,1],[0,1336350,6.460358,1],[0,19839664,5.355499,1],[0,1336350,6.368286,1],[0,27240989,0.751918,1],[0,19839664,5.539642,1],[0,1336350,6.306905,1],[0,19839664,5.693095,1],[0,17372555,7.749361,1],[0,19839664,4.158568,1],[0,19839664,4.189258,1],[0,10588007,4.31202,1],[0,21689995,0.966752,1],[0,19839664,4.28133,1],[0,513981,5.508951,1],[0,19839664,4.404092,1],[0,19839664,4.434783,1],[0,6476160,4.28133,1],[0,6476160,4.250639,1],[0,19839664,4.588235,1],[0,19839664,4.618926,1],[0,4214644,7.503836,1],[0,1336350,6.644501,1],[0,6476160,4.035806,1],[0,19839664,4.83376,1],[0,10588007,4.649616,1],[0,19839664,4.895141,1],[0,19839664,4.925831,1],[0,1541943,1.549872,1],[0,12232746,3.207161,1],[0,12232746,3.176471,1],[0,22306772,1.948849,1],[0,12232746,3.084399,1],[0,22306772,2.071611,1],[0,1541943,1.672634,1],[0,13260708,3.299233,1],[0,12232746,2.838875,1],[0,12232746,2.808184,1],[0,12232746,2.777494,1],[0,12232746,2.746803,1],[0,22306772,2.194373,1],[0,1541943,1.764706,1],[0,13260708,3.237852,1],[0,12232746,2.624041,1],[0,12232746,2.59335,1],[0,6476160,3.606138,1],[0,19839664,5.846547,1],[0,1336350,5.907928,1],[0,16961371,6.153453,1],[0,16961371,6.061381,1],[0,12232746,4.373402,1],[0,16961371,5.754476,1],[0,27446582,2.59335,1],[0,22306772,1.273657,1],[0,27446582,2.716113,1],[0,27446582,2.777494,1],[0,1541943,1.212276,1],[0,1541943,1.242967,1],[0,1541943,1.335038,1],[0,19839664,7.227621,1],[0,12232746,3.544757,1],[0,22306772,1.703325,1],[0,6476160,3.667519,1],[0,12232746,3.391304,1],[0,12232746,3.268542,1],[0,16961371,4.772379,1],[0,4420236,3.360614,1],[0,13055116,1.457801,1],[0,2364312,7.411765,1],[0,8326491,3.299233,1],[0,6476160,2.102302,1],[0,8326491,3.237852,1],[0,8326491,3.207161,1],[0,9354453,2.808184,1],[0,30324875,4.005115,1],[0,6476160,2.071611,1],[0,8326491,3.11509,1],[0,4420236,3.69821,1],[0,4420236,3.7289,1],[0,4420236,3.759591,1],[0,1541943,2.347826,1],[0,6476160,1.97954,1],[0,13055116,1.580563,1],[0,8326491,3.851662,1],[0,15111039,3.483376,1],[0,8326491,3.820972,1],[0,1953128,8.700767,1],[0,9354453,2.409207,1],[0,6476160,2.470588,1],[0,6476160,2.439898,1],[0,4420236,2.777494,1],[0,13055116,1.365729,1],[0,27446582,3.421995,1],[0,4420236,2.900256,1],[0,8326491,3.636829,1],[0,6476160,2.286445,1],[0,4420236,3.053708,1],[0,8326491,3.514066,1],[0,6476160,2.255754,1],[0,4420236,3.176471,1],[0,4420236,3.268542,1],[0,8326491,3.391304,1],[0,1541943,2.470588,1],[0,1541943,2.501279,1],[0,1541943,2.531969,1],[0,1541943,2.56266,1],[0,4420236,5.017903,1],[0,16961371,4.710997,1],[0,1541943,2.624041,1],[0,4420236,5.232737,1],[0,4420236,5.294118,1],[0,1541943,2.746803,1],[0,4420236,5.41688,1],[0,20045256,0.598465,1],[0,4420236,5.478261,1],[0,13260708,2.409207,1],[0,16961371,4.526854,1],[0,4420236,5.570332,1],[0,1130758,0.690537,1],[0,8326491,2.501279,1],[0,9354453,2.930946,1],[0,6476160,1.918159,1],[0,6476160,1.887468,1],[0,4420236,4.097187,1],[0,4420236,4.127877,1],[0,8326491,2.838875,1],[0,6476160,1.826087,1],[0,1541943,2.378517,1],[0,4420236,4.31202,1],[0,4420236,4.404092,1],[0,4420236,4.465473,1],[0,8326491,2.59335,1],[0,8326491,2.56266,1],[0,4420236,4.588235,1],[0,3186682,9.345269,1],[0,4420236,4.649616,1],[0,4420236,4.741688,1],[0,4420236,4.772379,1],[0,9354453,3.299233,1],[0,24979473,2.286445,1],[0,24979473,2.255754,1],[0,308389,2.040921,1],[0,308389,2.071611,1],[0,24979473,2.163683,1],[0,4420236,2.624041,1],[0,24979473,2.102302,1],[0,24979473,2.071611,1],[0,8326491,5.079284,1],[0,24979473,2.01023,1],[0,24979473,1.97954,1],[0,9354453,1.304348,1],[0,308389,2.102302,1],[0,4420236,2.654731,1],[0,22306772,3.7289,1],[0,4420236,2.685422,1],[0,24979473,1.734015,1],[0,24979473,1.703325,1],[0,4420236,2.163683,1],[0,308389,1.856777,1],[0,24979473,2.808184,1],[0,1541943,2.071611,1],[0,24979473,2.746803,1],[0,4420236,2.255754,1],[0,4420236,2.286445,1],[0,4420236,2.317136,1],[0,24979473,2.624041,1],[0,16961371,5.140665,1],[0,4420236,2.378517,1],[0,6476160,3.14578,1],[0,6476160,3.11509,1],[0,24979473,2.470588,1],[0,308389,1.97954,1],[0,24979473,2.409207,1],[0,24979473,2.378517,1],[0,9354453,1.273657,1],[0,4420236,2.531969,1],[0,9354453,1.764706,1],[0,16961371,4.987212,1],[0,9354453,1.856777,1],[0,9354453,1.887468,1],[0,22306772,4.127877,1],[0,22306772,4.158568,1],[0,9354453,1.97954,1],[0,22306772,4.189258,1],[0,22306772,4.219949,1],[0,6476160,2.777494,1],[0,22306772,4.28133,1],[0,1541943,2.163683,1],[0,8326491,4.127877,1],[0,15111039,3.176471,1],[0,6476160,2.685422,1],[0,6476160,2.654731,1],[0,6476160,2.59335,1],[0,16961371,4.895141,1],[0,1541943,2.225064,1],[0,30324875,3.636829,1],[0,308389,2.163683,1],[0,24979473,1.611253,1],[0,24979473,1.580563,1],[0,24979473,1.549872,1],[0,30324875,3.667519,1],[0,308389,2.194373,1],[0,24979473,1.457801,1],[0,22306772,3.790281,1],[0,13260708,2.900256,1],[0,6476160,3.023018,1],[0,308389,2.255754,1],[0,24979473,1.273657,1],[0,22306772,3.913043,1],[0,30324875,3.851662,1],[0,9354453,1.641944,1],[0,6476160,2.930946,1],[0,6476160,2.900256,1],[0,8326491,4.618926,1],[0,19428479,2.930946,1],[0,13877485,1.703325,1],[0,17166963,4.710997,1],[0,6887344,1.918159,1],[0,19428479,3.084399,1],[0,6681752,4.219949,1],[0,13877485,1.641944,1],[0,6681752,4.158568,1],[0,6681752,4.127877,1],[0,17166963,4.588235,1],[0,19428479,3.268542,1],[0,6681752,4.066496,1],[0,6681752,4.035806,1],[0,6681752,4.005115,1],[0,6887344,1.97954,1],[0,6887344,2.01023,1],[0,6681752,3.913043,1],[0,6887344,2.040921,1],[0,6681752,3.851662,1],[0,27240989,5.601023,1],[0,2569905,3.11509,1],[0,19428479,2.347826,1],[0,19428479,2.409207,1],[0,19428479,2.439898,1],[0,6887344,1.703325,1],[0,19428479,2.501279,1],[0,6681752,4.526854,1],[0,19428479,2.56266,1],[0,14494262,4.680307,1],[0,29708098,3.882353,1],[0,19428479,2.624041,1],[0,19428479,2.654731,1],[0,6681752,4.465473,1],[0,19428479,2.716113,1],[0,19428479,2.746803,1],[0,19428479,2.777494,1],[0,17372555,1.918159,1],[0,19428479,2.838875,1],[0,6887344,1.795396,1],[0,6681752,3.391304,1],[0,6681752,3.360614,1],[0,6887344,2.347826,1],[0,6681752,3.299233,1],[0,6681752,3.237852,1],[0,6887344,2.409207,1],[0,6887344,2.439898,1],[0,25801843,3.329923,1],[0,6681752,3.14578,1],[0,6887344,2.470588,1],[0,8737676,3.053708,1],[0,6887344,2.501279,1],[0,6887344,2.531969,1],[0,19428479,4.618926,1],[0,8737676,2.961637,1],[0,6887344,2.56266,1],[0,6681752,2.992327,1],[0,8737676,2.869565,1],[0,6887344,2.59335,1],[0,26829804,3.483376,1],[0,19428479,3.575448,1],[0,19428479,3.606138,1],[0,19428479,3.636829,1],[0,26829804,4.557545,1],[0,13877485,1.611253,1],[0,6681752,3.7289,1],[0,19428479,3.759591,1],[0,13877485,1.580563,1],[0,6887344,2.163683,1],[0,17166963,4.342711,1],[0,17372555,1.97954,1],[0,6887344,2.225064,1],[0,19428479,3.943734,1],[0,17166963,4.250639,1],[0,19428479,4.005115,1],[0,6681752,3.483376,1],[0,19428479,4.097187,1],[0,6887344,2.286445,1],[0,19428479,4.189258,1],[0,29296913,2.102302,1],[0,925166,5.631714,1],[0,29296913,2.040921,1],[0,29296913,2.01023,1],[0,14288670,2.132992,1],[0,6681752,5.355499,1],[0,14494262,2.378517,1],[0,29296913,1.856777,1],[0,29296913,1.795396,1],[0,2569905,1.089514,1],[0,29708098,4.005115,1],[0,29296913,1.703325,1],[0,13877485,1.948849,1],[0,14494262,2.685422,1],[0,925166,5.846547,1],[0,2569905,2.501279,1],[0,2569905,2.531969,1],[0,29296913,1.549872,1],[0,2569905,2.56266,1],[0,14494262,1.335038,1],[0,6681752,5.785166,1],[0,14494262,1.42711,1],[0,10382415,2.01023,1],[0,13877485,2.132992,1],[0,14494262,1.519182,1],[0,14494262,1.549872,1],[0,28680136,6.092072,1],[0,3597867,5.846547,1],[0,6681752,5.631714,1],[0,14494262,1.641944,1],[0,3597867,5.969309,1],[0,14494262,1.703325,1],[0,6887344,1.028133,1],[0,6681752,5.508951,1],[0,14494262,1.826087,1],[0,925166,5.539642,1],[0,29296913,2.194373,1],[0,6681752,5.41688,1],[0,14494262,2.102302,1],[0,19428479,1.549872,1],[0,19428479,1.580563,1],[0,2569905,2.961637,1],[0,17372555,1.826087,1],[0,6681752,4.86445,1],[0,19428479,1.764706,1],[0,6681752,4.83376,1],[0,14494262,3.882353,1],[0,29296913,1.028133,1],[0,2569905,3.023018,1],[0,6887344,1.519182,1],[0,6681752,4.772379,1],[0,19428479,1.948849,1],[0,6681752,4.741688,1],[0,13877485,1.856777,1],[0,19428479,2.040921,1],[0,8737676,4.588235,1],[0,19428479,2.132992,1],[0,19428479,2.163683,1],[0,19428479,2.255754,1],[0,29296913,1.488491,1],[0,19428479,0.84399,1],[0,10382415,1.948849,1],[0,19428479,0.905371,1],[0,2569905,2.59335,1],[0,6681752,5.171355,1],[0,19428479,0.997442,1],[0,19428479,1.028133,1],[0,2569905,2.624041,1],[0,29296913,1.335038,1],[0,6681752,5.140665,1],[0,6681752,5.109974,1],[0,19428479,1.242967,1],[0,13877485,1.918159,1],[0,2569905,2.746803,1],[0,19428479,1.335038,1],[0,19428479,1.365729,1],[0,6681752,5.017903,1],[0,29708098,3.913043,1],[0,29296913,1.120205,1],[0,13877485,2.869565,1],[0,17166963,3.14578,1],[0,17372555,2.378517,1],[0,28680136,3.544757,1],[0,28680136,3.514066,1],[0,30324875,2.501279,1],[0,925166,6.736573,1],[0,17372555,2.439898,1],[0,17372555,2.470588,1],[0,17372555,2.501279,1],[0,6887344,3.636829,1],[0,925166,6.951407,1],[0,17372555,2.531969,1],[0,12643931,3.790281,1],[0,19017294,3.913043,1],[0,28680136,3.299233,1],[0,17166963,2.930946,1],[0,29708098,3.7289,1],[0,6887344,3.790281,1],[0,925166,6.061381,1],[0,8737676,1.212276,1],[0,8737676,1.181586,1],[0,6887344,3.176471,1],[0,10382415,1.826087,1],[0,6887344,3.237852,1],[0,925166,6.153453,1],[0,26829804,3.268542,1],[0,8737676,0.997442,1],[0,6681752,1.734015,1],[0,102796,5.079284,1],[0,6681752,1.672634,1],[0,27652174,6.460358,1],[0,6681752,1.641944,1],[0,13877485,2.808184,1],[0,6681752,1.519182,1],[0,17372555,2.286445,1],[0,17372555,2.317136,1],[0,27652174,2.102302,1],[0,6681752,1.42711,1],[0,3803459,1.918159,1],[0,28680136,2.900256,1],[0,27652174,1.856777,1],[0,3803459,2.01023,1],[0,17166963,2.716113,1],[0,3803459,2.102302,1],[0,3803459,2.132992,1],[0,19017294,3.391304,1],[0,17372555,2.654731,1],[0,28680136,2.808184,1],[0,3803459,2.255754,1],[0,28680136,2.777494,1],[0,27652174,1.734015,1],[0,17166963,2.654731,1],[0,26213027,1.242967,1],[0,26213027,1.273657,1],[0,28680136,2.716113,1],[0,12643931,2.992327,1],[0,3803459,2.59335,1],[0,6681752,0.813299,1],[0,3803459,1.212276,1],[0,12643931,3.575448,1],[0,6681752,0.782609,1],[0,17166963,2.869565,1],[0,6887344,3.820972,1],[0,27652174,2.01023,1],[0,27652174,1.97954,1],[0,6887344,3.851662,1],[0,28680136,3.053708,1],[0,17372555,2.624041,1],[0,3803459,1.580563,1],[0,6887344,3.913043,1],[0,28680136,2.961637,1],[0,27652174,1.918159,1],[0,17166963,2.746803,1],[0,3803459,1.764706,1],[0,12643931,3.268542,1],[0,3803459,1.856777,1],[0,12643931,3.237852,1],[0,25801843,2.286445,1],[0,25801843,2.225064,1],[0,25801843,2.194373,1],[0,25801843,2.163683,1],[0,6681752,2.531969,1],[0,25801843,2.102302,1],[0,8737676,2.286445,1],[0,8737676,2.255754,1],[0,8737676,2.225064,1],[0,25801843,1.97954,1],[0,6887344,2.808184,1],[0,6887344,2.838875,1],[0,27652174,2.501279,1],[0,14288670,2.040921,1],[0,25801843,1.826087,1],[0,25801843,1.795396,1],[0,25801843,1.764706,1],[0,25801843,1.734015,1],[0,6681752,2.439898,1],[0,6681752,2.900256,1],[0,6681752,2.869565,1],[0,25801843,2.869565,1],[0,28680136,3.820972,1],[0,8737676,2.685422,1],[0,6681752,2.777494,1],[0,8737676,2.59335,1],[0,6681752,2.746803,1],[0,6681752,2.716113,1],[0,17372555,2.071611,1],[0,19428479,5.140665,1],[0,6887344,2.716113,1],[0,25801843,2.531969,1],[0,25801843,2.501279,1],[0,17166963,3.7289,1],[0,2569905,3.237852,1],[0,25801843,2.409207,1],[0,14288670,2.102302,1],[0,6887344,2.746803,1],[0,25801843,2.317136,1],[0,19017294,4.987212,1],[0,6681752,2.163683,1],[0,19428479,5.969309,1],[0,6887344,3.053708,1],[0,27652174,2.163683,1],[0,6887344,3.084399,1],[0,17166963,3.421995,1],[0,6681752,2.040921,1],[0,2569905,3.360614,1],[0,6887344,3.11509,1],[0,8737676,1.549872,1],[0,6681752,1.97954,1],[0,8737676,1.488491,1],[0,8737676,1.457801,1],[0,8737676,1.42711,1],[0,13877485,2.716113,1],[0,8737676,1.365729,1],[0,13877485,1.365729,1],[0,29296913,0.782609,1],[0,925166,6.030691,1],[0,6887344,2.869565,1],[0,13877485,1.42711,1],[0,8737676,2.01023,1],[0,14288670,1.97954,1],[0,25801843,1.519182,1],[0,25801843,1.488491,1],[0,14288670,1.948849,1],[0,19428479,5.662404,1],[0,14288670,1.918159,1],[0,10382415,1.856777,1],[0,6681752,2.286445,1],[0,6887344,2.992327,1],[0,25801843,1.273657,1],[0,6681752,2.225064,1],[0,19017294,5.017903,1],[0,25801843,1.181586,1],[0,13877485,1.396419,1],[0,14288670,1.856777,1],[0,25801843,1.089514,1],[0,8737676,1.826087,1],[0,925166,4.28133,1],[0,2569905,1.242967,1],[0,19222887,1.089514,1],[0,21895588,2.808184,1],[0,19222887,1.028133,1],[0,925166,4.158568,1],[0,21895588,1.335038,1],[0,19222887,0.936061,1],[0,925166,4.097187,1],[0,21895588,2.869565,1],[0,2569905,2.071611,1],[0,925166,4.005115,1],[0,2569905,2.132992,1],[0,28680136,4.250639,1],[0,925166,3.913043,1],[0,2569905,2.163683,1],[0,21895588,1.242967,1],[0,19222887,0.567775,1],[0,925166,3.882353,1],[0,14288670,6.460358,1],[0,21895588,2.439898,1],[0,21895588,1.519182,1],[0,19222887,1.795396,1],[0,19222887,1.764706,1],[0,8943268,2.378517,1],[0,19222887,1.672634,1],[0,2569905,1.948849,1],[0,925166,4.465473,1],[0,19222887,1.519182,1],[0,21895588,2.685422,1],[0,2569905,1.97954,1],[0,14288670,7.074169,1],[0,19222887,1.396419,1],[0,21895588,2.716113,1],[0,2569905,2.01023,1],[0,925166,4.342711,1],[0,19222887,1.273657,1],[0,19222887,1.242967,1],[0,21895588,2.746803,1],[0,28680136,5.079284,1],[0,10382415,2.992327,1],[0,12849523,3.268542,1],[0,3392274,6.276215,1],[0,27652174,2.930946,1],[0,3597867,0.138107,1],[0,3597867,0.168798,1],[0,27652174,2.961637,1],[0,3597867,0.230179,1],[0,10382415,2.838875,1],[0,10382415,2.777494,1],[0,14288670,3.636829,1],[0,27652174,3.11509,1],[0,10382415,2.685422,1],[0,6681752,8.30179,1],[0,3597867,0.751918,1],[0,12849523,2.869565,1],[0,3597867,0.813299,1],[0,26007435,3.421995,1],[0,21895588,1.181586,1],[0,28680136,4.28133,1],[0,925166,3.759591,1],[0,21895588,3.11509,1],[0,925166,3.606138,1],[0,925166,3.575448,1],[0,28680136,4.404092,1],[0,10382415,4.895141,1],[0,2569905,2.255754,1],[0,8943268,2.470588,1],[0,8943268,2.531969,1],[0,10382415,3.421995,1],[0,12849523,3.913043,1],[0,12849523,3.851662,1],[0,10382415,5.202046,1],[0,10382415,3.14578,1],[0,28680136,4.925831,1],[0,10382415,3.084399,1],[0,8943268,3.084399,1],[0,26007435,4.465473,1],[0,925166,5.079284,1],[0,925166,5.109974,1],[0,925166,5.140665,1],[0,29296913,3.421995,1],[0,8943268,1.365729,1],[0,925166,5.232737,1],[0,925166,5.263427,1],[0,19222887,3.329923,1],[0,2569905,1.641944,1],[0,29296913,2.531969,1],[0,29296913,2.501279,1],[0,29296913,2.470588,1],[0,19222887,3.207161,1],[0,21895588,1.948849,1],[0,29296913,2.347826,1],[0,29296913,2.317136,1],[0,19222887,3.084399,1],[0,8943268,1.580563,1],[0,925166,4.526854,1],[0,2569905,1.457801,1],[0,19222887,3.606138,1],[0,925166,4.710997,1],[0,925166,4.649616,1],[0,925166,4.772379,1],[0,14288670,3.851662,1],[0,14288670,3.882353,1],[0,2569905,1.488491,1],[0,14288670,3.943734,1],[0,925166,4.618926,1],[0,29296913,3.11509,1],[0,8943268,0.936061,1],[0,19222887,3.851662,1],[0,8943268,0.905371,1],[0,925166,4.588235,1],[0,925166,4.925831,1],[0,8943268,0.751918,1],[0,2569905,1.611253,1],[0,925166,5.017903,1],[0,8943268,1.304348,1],[0,29296913,3.514066,1],[0,14288670,5.785166,1],[0,19222887,2.470588,1],[0,14288670,5.877238,1],[0,8943268,2.040921,1],[0,8943268,2.071611,1],[0,21895588,2.225064,1],[0,19222887,5.601023,1],[0,19222887,2.286445,1],[0,21895588,2.255754,1],[0,21895588,1.703325,1],[0,2569905,1.795396,1],[0,14288670,6.214834,1],[0,21895588,1.641944,1],[0,19222887,2.102302,1],[0,19222887,2.071611,1],[0,26829804,3.575448,1],[0,14288670,6.368286,1],[0,14288670,6.398977,1],[0,19222887,2.01023,1],[0,8943268,1.641944,1],[0,8943268,1.672634,1],[0,10382415,4.127877,1],[0,21895588,2.040921,1],[0,8943268,1.764706,1],[0,14288670,5.263427,1],[0,14288670,5.294118,1],[0,14288670,5.324808,1],[0,21895588,2.071611,1],[0,21895588,2.102302,1],[0,21895588,1.795396,1],[0,14288670,5.44757,1],[0,14288670,5.478261,1],[0,8943268,1.887468,1],[0,19222887,2.716113,1],[0,8943268,1.948849,1],[0,19222887,2.624041,1],[0,19222887,2.59335,1],[0,21895588,1.734015,1],[0,19222887,2.531969,1],[0,12849523,0.567775,1],[0,6887344,0.383632,1],[0,3597867,3.483376,1],[0,3597867,3.514066,1],[0,3597867,3.544757,1],[0,30324875,1.795396,1],[0,6681752,6.398977,1],[0,30324875,1.734015,1],[0,3597867,3.667519,1],[0,13877485,2.347826,1],[0,3597867,3.7289,1],[0,30324875,1.672634,1],[0,3392274,4.526854,1],[0,14494262,0.29156,1],[0,3597867,3.913043,1],[0,3597867,3.943734,1],[0,3597867,4.005115,1],[0,6887344,0.475703,1],[0,3597867,4.066496,1],[0,30324875,2.163683,1],[0,3392274,5.048593,1],[0,12849523,0.966752,1],[0,3597867,2.624041,1],[0,3597867,2.654731,1],[0,6681752,6.644501,1],[0,3597867,2.808184,1],[0,3597867,2.838875,1],[0,3597867,2.930946,1],[0,3597867,2.961637,1],[0,3597867,2.992327,1],[0,3392274,4.86445,1],[0,3597867,3.084399,1],[0,3597867,3.14578,1],[0,3597867,3.207161,1],[0,3392274,4.772379,1],[0,3392274,4.741688,1],[0,29708098,4.250639,1],[0,30324875,1.856777,1],[0,3392274,4.710997,1],[0,14494262,0.721228,1],[0,14494262,0.751918,1],[0,3597867,4.83376,1],[0,3597867,4.86445,1],[0,14494262,0.782609,1],[0,3597867,4.925831,1],[0,3597867,4.956522,1],[0,17372555,1.42711,1],[0,28680136,4.005115,1],[0,14494262,0.966752,1],[0,14494262,0.997442,1],[0,3597867,5.232737,1],[0,6681752,5.938619,1],[0,14288670,2.163683,1],[0,6887344,0.813299,1],[0,14494262,1.212276,1],[0,3597867,5.44757,1],[0,6681752,5.877238,1],[0,6887344,0.84399,1],[0,6681752,5.815857,1],[0,3597867,4.097187,1],[0,3597867,4.158568,1],[0,3597867,4.189258,1],[0,3597867,4.219949,1],[0,30324875,2.470588,1],[0,14288670,2.286445,1],[0,3597867,4.31202,1],[0,3597867,4.342711,1],[0,3597867,4.373402,1],[0,30324875,1.42711,1],[0,14288670,2.255754,1],[0,3597867,4.465473,1],[0,13877485,2.317136,1],[0,14494262,0.567775,1],[0,14288670,2.194373,1],[0,27652174,2.777494,1],[0,3597867,4.618926,1],[0,3597867,4.649616,1],[0,13877485,2.286445,1],[0,27652174,2.746803,1],[0,26007435,2.439898,1],[0,26007435,2.409207,1],[0,3597867,1.703325,1],[0,3597867,1.795396,1],[0,3597867,1.826087,1],[0,3597867,1.887468,1],[0,26007435,2.163683,1],[0,26007435,2.071611,1],[0,26007435,2.040921,1],[0,12849523,2.409207,1],[0,3392274,5.785166,1],[0,6681752,7.595908,1],[0,3597867,2.01023,1],[0,26007435,1.764706,1],[0,26007435,1.734015,1],[0,3597867,2.040921,1],[0,27652174,3.7289,1],[0,29708098,5.079284,1],[0,26007435,1.549872,1],[0,27652174,3.329923,1],[0,3597867,0.905371,1],[0,26007435,3.299233,1],[0,3597867,0.936061,1],[0,27652174,3.391304,1],[0,27652174,3.421995,1],[0,10382415,2.409207,1],[0,13877485,2.409207,1],[0,3597867,1.181586,1],[0,12849523,2.716113,1],[0,6681752,8.056266,1],[0,3597867,1.273657,1],[0,10382415,2.286445,1],[0,10382415,2.255754,1],[0,12849523,2.59335,1],[0,3597867,1.396419,1],[0,3597867,1.580563,1],[0,3597867,1.611253,1],[0,3597867,1.641944,1],[0,26007435,2.501279,1],[0,26007435,0.445013,1],[0,30324875,2.317136,1],[0,12849523,1.457801,1],[0,12849523,1.396419,1],[0,27652174,4.772379,1],[0,14288670,2.869565,1],[0,12849523,1.304348,1],[0,12849523,1.273657,1],[0,30324875,2.255754,1],[0,14288670,2.808184,1],[0,14288670,2.777494,1],[0,3597867,2.255754,1],[0,12849523,1.120205,1],[0,3392274,5.109974,1],[0,6681752,6.736573,1],[0,30324875,2.194373,1],[0,3597867,2.409207,1],[0,12849523,1.028133,1],[0,3597867,2.470588,1],[0,3597867,2.501279,1],[0,3392274,5.631714,1],[0,3597867,2.194373,1],[0,27652174,3.882353,1],[0,12849523,2.132992,1],[0,26007435,1.212276,1],[0,3392274,5.508951,1],[0,26829804,3.514066,1],[0,3392274,5.478261,1],[0,12849523,1.948849,1],[0,27652174,4.158568,1],[0,12849523,1.826087,1],[0,27652174,4.28133,1],[0,12849523,1.795396,1],[0,30324875,2.378517,1],[0,14288670,2.992327,1],[0,3392274,5.386189,1],[0,12849523,1.672634,1],[0,30324875,2.347826,1],[0,12849523,1.611253,1],[0,29708098,4.618926,1],[0,3392274,3.391304,1],[0,19634071,3.483376,1],[0,2158720,3.023018,1],[0,4009051,1.97954,1],[0,4009051,2.01023,1],[0,2158720,2.992327,1],[0,19634071,3.514066,1],[0,19634071,3.544757,1],[0,17166963,2.163683,1],[0,4009051,2.163683,1],[0,22101180,3.636829,1],[0,4009051,2.225064,1],[0,19634071,3.636829,1],[0,4009051,2.317136,1],[0,19634071,3.69821,1],[0,19634071,3.7289,1],[0,19634071,3.759591,1],[0,9148861,2.225064,1],[0,4009051,2.470588,1],[0,9148861,1.97954,1],[0,14288670,1.242967,1],[0,9148861,2.01023,1],[0,3392274,3.544757,1],[0,17166963,2.194373,1],[0,19634071,3.237852,1],[0,19634071,3.268542,1],[0,4009051,1.488491,1],[0,19634071,3.299233,1],[0,3392274,3.452685,1],[0,19634071,3.329923,1],[0,26829804,1.764706,1],[0,4009051,1.641944,1],[0,26213027,3.329923,1],[0,19634071,3.391304,1],[0,10382415,1.519182,1],[0,2158720,3.084399,1],[0,4009051,1.795396,1],[0,17372555,3.14578,1],[0,26213027,3.360614,1],[0,9148861,2.531969,1],[0,3392274,3.176471,1],[0,6887344,4.741688,1],[0,17372555,3.299233,1],[0,6887344,4.83376,1],[0,6887344,4.86445,1],[0,17372555,3.329923,1],[0,4009051,3.514066,1],[0,3392274,3.14578,1],[0,19634071,4.526854,1],[0,17372555,3.360614,1],[0,17372555,3.391304,1],[0,17166963,1.672634,1],[0,4009051,3.69821,1],[0,4009051,3.7289,1],[0,22101180,4.219949,1],[0,17372555,3.421995,1],[0,4009051,3.820972,1],[0,19634071,4.710997,1],[0,26829804,1.672634,1],[0,3392274,3.329923,1],[0,9148861,2.286445,1],[0,14288670,1.120205,1],[0,17166963,2.102302,1],[0,4009051,2.716113,1],[0,26213027,3.575448,1],[0,4009051,2.777494,1],[0,19634071,3.974425,1],[0,9148861,2.347826,1],[0,9148861,2.378517,1],[0,4009051,2.961637,1],[0,22101180,3.851662,1],[0,4009051,3.023018,1],[0,19634071,4.158568,1],[0,19634071,4.189258,1],[0,17166963,1.97954,1],[0,4009051,3.14578,1],[0,4009051,3.176471,1],[0,19634071,4.250639,1],[0,9148861,1.335038,1],[0,27446582,2.132992,1],[0,22101180,3.11509,1],[0,19634071,1.97954,1],[0,9148861,1.396419,1],[0,19634071,2.040921,1],[0,925166,0.87468,1],[0,19634071,2.102302,1],[0,28680136,0.936061,1],[0,19634071,2.163683,1],[0,22101180,3.176471,1],[0,27240989,3.268542,1],[0,19634071,2.255754,1],[0,19634071,2.286445,1],[0,9148861,1.488491,1],[0,28680136,0.87468,1],[0,19634071,2.378517,1],[0,9148861,1.549872,1],[0,9148861,1.580563,1],[0,9148861,1.089514,1],[0,27240989,3.69821,1],[0,28680136,1.058824,1],[0,19634071,1.335038,1],[0,28680136,0.997442,1],[0,22101180,2.930946,1],[0,19634071,1.42711,1],[0,27240989,3.636829,1],[0,19634071,1.488491,1],[0,27240989,3.606138,1],[0,2569905,4.772379,1],[0,27240989,3.544757,1],[0,6681752,0.445013,1],[0,19634071,1.641944,1],[0,22101180,2.992327,1],[0,27446582,2.102302,1],[0,19634071,1.734015,1],[0,6681752,0.383632,1],[0,19634071,1.795396,1],[0,27240989,3.391304,1],[0,19634071,2.930946,1],[0,27652174,1.181586,1],[0,2158720,3.820972,1],[0,2158720,3.790281,1],[0,9148861,1.856777,1],[0,2158720,3.667519,1],[0,14288670,1.304348,1],[0,26213027,3.023018,1],[0,26213027,3.053708,1],[0,19634071,2.992327,1],[0,4009051,0.905371,1],[0,19634071,3.023018,1],[0,26829804,1.826087,1],[0,2158720,3.575448,1],[0,22101180,3.421995,1],[0,4009051,1.058824,1],[0,3392274,3.606138,1],[0,4009051,1.120205,1],[0,2158720,3.483376,1],[0,26829804,1.795396,1],[0,19634071,2.470588,1],[0,27240989,3.237852,1],[0,17166963,2.225064,1],[0,17372555,3.084399,1],[0,27240989,3.207161,1],[0,2158720,4.434783,1],[0,19634071,2.654731,1],[0,22101180,3.329923,1],[0,9148861,1.795396,1],[0,19634071,2.777494,1],[0,2158720,4.250639,1],[0,2158720,4.219949,1],[0,19634071,2.808184,1],[0,19634071,2.838875,1],[0,2158720,4.097187,1],[0,2158720,4.066496,1],[0,2158720,4.035806,1],[0,2158720,4.005115,1],[0,9148861,1.826087,1],[0,19634071,2.900256,1],[0,12438338,2.59335,1],[0,2158720,2.624041,1],[0,4009051,7.104859,1],[0,12438338,2.531969,1],[0,2158720,2.59335,1],[0,2158720,2.56266,1],[0,2158720,2.531969,1],[0,3392274,2.654731,1],[0,27652174,1.028133,1],[0,2158720,2.501279,1],[0,2158720,2.470588,1],[0,3392274,2.56266,1],[0,25390658,0.87468,1],[0,2158720,2.409207,1],[0,18811702,6.429668,1],[0,3392274,2.501279,1],[0,29708098,2.59335,1],[0,2158720,2.286445,1],[0,2158720,2.225064,1],[0,12438338,2.992327,1],[0,25390658,2.163683,1],[0,12438338,2.930946,1],[0,12438338,2.900256,1],[0,17372555,4.895141,1],[0,17372555,4.925831,1],[0,25390658,1.97954,1],[0,25390658,1.918159,1],[0,4009051,6.951407,1],[0,25390658,1.826087,1],[0,25390658,1.795396,1],[0,12438338,2.746803,1],[0,12438338,2.716113,1],[0,2158720,2.777494,1],[0,25390658,1.672634,1],[0,12438338,2.685422,1],[0,25390658,1.611253,1],[0,25390658,1.519182,1],[0,12438338,2.624041,1],[0,2158720,2.685422,1],[0,12438338,2.071611,1],[0,513981,6.429668,1],[0,102796,4.434783,1],[0,12438338,1.887468,1],[0,513981,6.306905,1],[0,12438338,1.795396,1],[0,17372555,5.539642,1],[0,6476160,8.731458,1],[0,18811702,5.785166,1],[0,12438338,1.549872,1],[0,513981,6.153453,1],[0,8532083,2.930946,1],[0,14905447,0.076726,1],[0,14288670,0.721228,1],[0,14905447,0.168798,1],[0,14288670,0.690537,1],[0,14905447,0.230179,1],[0,10588007,0.751918,1],[0,14905447,0.29156,1],[0,2158720,2.194373,1],[0,3392274,2.378517,1],[0,2158720,2.071611,1],[0,2158720,2.040921,1],[0,21689995,3.7289,1],[0,12438338,2.347826,1],[0,2158720,1.887468,1],[0,12438338,2.317136,1],[0,29708098,2.531969,1],[0,12438338,2.286445,1],[0,2158720,1.764706,1],[0,12438338,2.255754,1],[0,2158720,1.703325,1],[0,2158720,1.672634,1],[0,12438338,2.225064,1],[0,2158720,1.580563,1],[0,17372555,5.263427,1],[0,29708098,2.470588,1],[0,4009051,7.258312,1],[0,102796,4.496164,1],[0,26829804,1.396419,1],[0,4009051,4.680307,1],[0,17166963,1.150895,1],[0,4009051,4.772379,1],[0,27446582,2.255754,1],[0,29708098,3.421995,1],[0,19634071,5.508951,1],[0,29708098,3.391304,1],[0,4009051,4.956522,1],[0,12438338,4.496164,1],[0,9148861,3.667519,1],[0,25390658,4.434783,1],[0,17372555,3.851662,1],[0,17372555,3.882353,1],[0,10382415,1.028133,1],[0,4009051,5.324808,1],[0,102796,4.710997,1],[0,6887344,5.631714,1],[0,12438338,4.158568,1],[0,17166963,1.611253,1],[0,29708098,3.514066,1],[0,17166963,1.519182,1],[0,4009051,4.005115,1],[0,6887344,5.079284,1],[0,22101180,4.465473,1],[0,4009051,4.127877,1],[0,26829804,1.457801,1],[0,17166963,1.365729,1],[0,17372555,3.575448,1],[0,12438338,5.109974,1],[0,4009051,4.31202,1],[0,18811702,8.547315,1],[0,4009051,4.373402,1],[0,19634071,5.109974,1],[0,17166963,1.304348,1],[0,26829804,1.42711,1],[0,19634071,5.202046,1],[0,9148861,3.299233,1],[0,19634071,5.294118,1],[0,25390658,3.14578,1],[0,29708098,3.023018,1],[0,25390658,3.053708,1],[0,18811702,7.043478,1],[0,25390658,2.992327,1],[0,25390658,2.930946,1],[0,12438338,3.268542,1],[0,25390658,2.838875,1],[0,29708098,2.961637,1],[0,4009051,6.429668,1],[0,18811702,6.859335,1],[0,25390658,2.624041,1],[0,4009051,6.491049,1],[0,29708098,2.900256,1],[0,17372555,4.741688,1],[0,25390658,2.470588,1],[0,4009051,6.58312,1],[0,25390658,2.409207,1],[0,12438338,3.084399,1],[0,25390658,2.286445,1],[0,4009051,5.44757,1],[0,17372555,4.066496,1],[0,9148861,4.066496,1],[0,26829804,5.41688,1],[0,25390658,3.882353,1],[0,19634071,6.122762,1],[0,17372555,4.158568,1],[0,17372555,4.189258,1],[0,25390658,3.69821,1],[0,18811702,7.503836,1],[0,17372555,4.219949,1],[0,29708098,6.398977,1],[0,29708098,6.429668,1],[0,25390658,3.452685,1],[0,25390658,3.421995,1],[0,3392274,3.084399,1],[0,29708098,3.084399,1],[0,18811702,7.196931,1],[0,17372555,4.434783,1],[0,17372555,4.465473,1],[0,3803459,5.938619,1],[0,26213027,2.132992,1],[0,3803459,6,1],[0,30324875,0.690537,1],[0,30324875,0.445013,1],[0,26213027,2.163683,1],[0,12643931,0.87468,1],[0,14699855,0.567775,1],[0,3803459,6.184143,1],[0,19017294,2.439898,1],[0,14699855,0.629156,1],[0,3803459,6.276215,1],[0,3803459,6.306905,1],[0,19017294,2.409207,1],[0,19017294,2.378517,1],[0,19017294,2.317136,1],[0,30324875,2.531969,1],[0,19017294,2.286445,1],[0,3803459,6.521739,1],[0,2158720,5.508951,1],[0,3392274,4.219949,1],[0,26213027,1.97954,1],[0,25596250,6.675192,1],[0,26213027,2.01023,1],[0,19017294,2.531969,1],[0,6887344,4.158568,1],[0,26213027,2.040921,1],[0,12643931,1.242967,1],[0,19017294,2.470588,1],[0,3803459,5.601023,1],[0,3803459,5.631714,1],[0,12643931,1.181586,1],[0,12643931,1.150895,1],[0,3803459,5.723785,1],[0,12643931,1.120205,1],[0,12643931,1.089514,1],[0,14288670,1.580563,1],[0,14699855,0.352941,1],[0,3803459,5.877238,1],[0,19017294,1.918159,1],[0,3803459,7.227621,1],[0,28680136,2.01023,1],[0,3803459,7.289003,1],[0,925166,3.237852,1],[0,2569905,3.636829,1],[0,28680136,1.97954,1],[0,19017294,1.764706,1],[0,19017294,1.734015,1],[0,25596250,4.557545,1],[0,25596250,4.526854,1],[0,22101180,1.181586,1],[0,2569905,3.667519,1],[0,25596250,4.434783,1],[0,2569905,3.69821,1],[0,3803459,7.565217,1],[0,25596250,4.342711,1],[0,3803459,7.595908,1],[0,26829804,2.685422,1],[0,19017294,2.255754,1],[0,28680136,2.163683,1],[0,3803459,6.613811,1],[0,3803459,6.675192,1],[0,17166963,2.501279,1],[0,925166,3.299233,1],[0,3803459,6.767263,1],[0,28680136,2.071611,1],[0,14699855,1.028133,1],[0,17372555,2.838875,1],[0,3803459,6.890026,1],[0,925166,3.268542,1],[0,14699855,1.120205,1],[0,19017294,2.01023,1],[0,3803459,7.012788,1],[0,3803459,7.043478,1],[0,19017294,1.97954,1],[0,19017294,1.948849,1],[0,3803459,7.13555,1],[0,3803459,7.16624,1],[0,3803459,3.268542,1],[0,12643931,2.654731,1],[0,3803459,3.329923,1],[0,12643931,2.624041,1],[0,28680136,2.470588,1],[0,26213027,1.42711,1],[0,3803459,3.483376,1],[0,12643931,2.56266,1],[0,3803459,3.544757,1],[0,3803459,3.606138,1],[0,12643931,2.501279,1],[0,3803459,3.69821,1],[0,2569905,3.514066,1],[0,6887344,4.035806,1],[0,27652174,1.549872,1],[0,3803459,3.820972,1],[0,3803459,3.851662,1],[0,3803459,3.882353,1],[0,12643931,2.378517,1],[0,3803459,2.624041,1],[0,12643931,2.930946,1],[0,28680136,2.654731,1],[0,3803459,2.716113,1],[0,3803459,2.746803,1],[0,3803459,2.777494,1],[0,28680136,2.624041,1],[0,3803459,2.869565,1],[0,12643931,2.869565,1],[0,28680136,2.59335,1],[0,26213027,1.365729,1],[0,26829804,2.930946,1],[0,27652174,1.611253,1],[0,3803459,3.053708,1],[0,28680136,2.531969,1],[0,3803459,3.11509,1],[0,3803459,3.14578,1],[0,12643931,2.716113,1],[0,3803459,3.207161,1],[0,17166963,2.59335,1],[0,3803459,4.557545,1],[0,3803459,4.588235,1],[0,28680136,2.286445,1],[0,12643931,1.887468,1],[0,6887344,4.097187,1],[0,3803459,4.741688,1],[0,27240989,5.140665,1],[0,19017294,2.624041,1],[0,26829804,5.048593,1],[0,3803459,4.895141,1],[0,3803459,4.987212,1],[0,12643931,1.641944,1],[0,12643931,1.611253,1],[0,26213027,1.764706,1],[0,26213027,1.795396,1],[0,3803459,5.171355,1],[0,19017294,2.56266,1],[0,3392274,4.250639,1],[0,26213027,1.856777,1],[0,26213027,1.887468,1],[0,27652174,1.519182,1],[0,26213027,1.580563,1],[0,12643931,2.317136,1],[0,12643931,2.286445,1],[0,19017294,2.869565,1],[0,19017294,2.838875,1],[0,19017294,2.808184,1],[0,12643931,2.163683,1],[0,3803459,4.189258,1],[0,3803459,4.219949,1],[0,12643931,2.132992,1],[0,3803459,4.28133,1],[0,3803459,4.31202,1],[0,17372555,2.746803,1],[0,12643931,2.071611,1],[0,3803459,4.404092,1],[0,19017294,2.746803,1],[0,12643931,2.01023,1],[0,12643931,1.97954,1],[0,12643931,1.948849,1],[0,25596250,0.997442,1],[0,26213027,2.716113,1],[0,25596250,0.936061,1],[0,2158720,5.232737,1],[0,925166,1.948849,1],[0,25596250,0.84399,1],[0,25596250,0.813299,1],[0,3392274,3.790281,1],[0,2569905,4.219949,1],[0,925166,1.856777,1],[0,2158720,5.079284,1],[0,2158720,5.017903,1],[0,925166,1.795396,1],[0,26829804,2.102302,1],[0,2158720,4.895141,1],[0,22101180,2.255754,1],[0,2569905,4.250639,1],[0,2158720,4.803069,1],[0,925166,1.672634,1],[0,925166,2.040921,1],[0,25596250,1.611253,1],[0,25596250,1.580563,1],[0,28680136,1.549872,1],[0,25596250,1.519182,1],[0,925166,1.97954,1],[0,22101180,1.948849,1],[0,26829804,2.286445,1],[0,25596250,1.365729,1],[0,26829804,2.225064,1],[0,13877485,3.514066,1],[0,25596250,1.273657,1],[0,25596250,1.242967,1],[0,28680136,1.519182,1],[0,2158720,5.324808,1],[0,22101180,2.132992,1],[0,25596250,1.120205,1],[0,14288670,1.396419,1],[0,2158720,5.263427,1],[0,3392274,3.882353,1],[0,27240989,4.066496,1],[0,22101180,2.56266,1],[0,22101180,2.59335,1],[0,26829804,2.01023,1],[0,28680136,1.212276,1],[0,19634071,0.782609,1],[0,925166,1.120205,1],[0,19634071,0.84399,1],[0,22101180,2.685422,1],[0,28680136,1.181586,1],[0,2569905,0.87468,1],[0,9148861,0.966752,1],[0,19634071,0.997442,1],[0,27240989,3.851662,1],[0,28680136,1.089514,1],[0,19634071,1.089514,1],[0,22101180,2.777494,1],[0,22101180,2.808184,1],[0,2569905,4.710997,1],[0,22101180,2.838875,1],[0,925166,1.641944,1],[0,925166,1.611253,1],[0,2158720,4.680307,1],[0,26829804,2.071611,1],[0,2158720,4.618926,1],[0,2158720,4.588235,1],[0,2158720,4.557545,1],[0,2158720,4.496164,1],[0,17166963,2.347826,1],[0,925166,1.488491,1],[0,2158720,4.465473,1],[0,925166,1.457801,1],[0,2569905,4.373402,1],[0,28680136,1.365729,1],[0,22101180,2.409207,1],[0,29708098,3.575448,1],[0,29708098,5.44757,1],[0,22101180,2.501279,1],[0,22101180,2.531969,1],[0,9148861,0.751918,1],[0,19017294,1.273657,1],[0,17372555,2.900256,1],[0,925166,2.961637,1],[0,25596250,3.544757,1],[0,925166,2.930946,1],[0,25596250,3.483376,1],[0,19017294,1.150895,1],[0,3803459,8.179028,1],[0,19017294,1.120205,1],[0,27240989,4.741688,1],[0,28680136,1.795396,1],[0,22101180,1.488491,1],[0,3803459,8.363171,1],[0,22101180,1.519182,1],[0,2569905,3.943734,1],[0,3803459,8.455243,1],[0,3803459,8.516624,1],[0,25596250,3.053708,1],[0,26829804,2.501279,1],[0,26829804,2.654731,1],[0,13877485,3.299233,1],[0,19017294,1.519182,1],[0,925166,3.176471,1],[0,27652174,1.365729,1],[0,25596250,4.097187,1],[0,25596250,4.066496,1],[0,25596250,4.035806,1],[0,2569905,3.790281,1],[0,14288670,1.519182,1],[0,26213027,2.317136,1],[0,28680136,1.887468,1],[0,925166,3.084399,1],[0,29708098,3.636829,1],[0,29296913,5.017903,1],[0,25596250,3.790281,1],[0,25596250,3.759591,1],[0,26829804,2.59335,1],[0,25596250,3.69821,1],[0,3803459,7.994885,1],[0,2569905,4.127877,1],[0,25596250,2.317136,1],[0,27240989,4.465473,1],[0,13260708,4.31202,1],[0,3392274,4.097187,1],[0,26213027,2.439898,1],[0,6887344,4.373402,1],[0,25596250,2.071611,1],[0,3803459,9.222506,1],[0,925166,2.225064,1],[0,22101180,1.826087,1],[0,27652174,1.273657,1],[0,17372555,2.961637,1],[0,25596250,1.887468,1],[0,25596250,1.856777,1],[0,925166,2.163683,1],[0,26829804,2.347826,1],[0,27240989,4.404092,1],[0,25596250,1.734015,1],[0,925166,2.071611,1],[0,925166,2.777494,1],[0,3803459,8.608696,1],[0,3803459,8.639386,1],[0,2158720,5.478261,1],[0,925166,2.746803,1],[0,19017294,0.782609,1],[0,22101180,1.580563,1],[0,925166,2.685422,1],[0,25596250,2.746803,1],[0,925166,2.654731,1],[0,25596250,2.685422,1],[0,28680136,1.734015,1],[0,27446582,2.040921,1],[0,14288670,1.488491,1],[0,25596250,2.531969,1],[0,22101180,1.703325,1],[0,925166,2.501279,1],[0,925166,2.470588,1],[0,22101180,1.734015,1],[0,25596250,2.378517,1],[0,1336350,2.531969,1],[0,7709714,1.703325,1],[0,9765638,2.992327,1],[0,27035397,3.69821,1],[0,1336350,2.439898,1],[0,5448198,2.746803,1],[0,1336350,2.378517,1],[0,6064975,4.895141,1],[0,5448198,2.838875,1],[0,5448198,2.869565,1],[0,5448198,2.900256,1],[0,5448198,2.930946,1],[0,2775497,5.539642,1],[0,5448198,2.992327,1],[0,5448198,3.053708,1],[0,5448198,3.084399,1],[0,1336350,2.286445,1],[0,5448198,3.14578,1],[0,2775497,1.703325,1],[0,7709714,1.335038,1],[0,5448198,1.519182,1],[0,28268951,1.918159,1],[0,28268951,1.948849,1],[0,27035397,3.820972,1],[0,28268951,2.040921,1],[0,5448198,1.764706,1],[0,7709714,2.040921,1],[0,27035397,3.790281,1],[0,28268951,2.102302,1],[0,5448198,1.97954,1],[0,5448198,2.01023,1],[0,5448198,2.040921,1],[0,5448198,2.071611,1],[0,5448198,2.102302,1],[0,27035397,3.759591,1],[0,5448198,2.225064,1],[0,1336350,2.56266,1],[0,5448198,2.317136,1],[0,5448198,2.347826,1],[0,5448198,2.409207,1],[0,9765638,3.667519,1],[0,5448198,4.189258,1],[0,28885728,0.230179,1],[0,7709714,0.475703,1],[0,2775497,5.109974,1],[0,2775497,5.048593,1],[0,2981089,5.815857,1],[0,2775497,5.017903,1],[0,7709714,0.230179,1],[0,2981089,5.846547,1],[0,28885728,0.567775,1],[0,28885728,0.598465,1],[0,28885728,0.629156,1],[0,7298529,1.273657,1],[0,6064975,3.636829,1],[0,6064975,3.544757,1],[0,5448198,5.017903,1],[0,6064975,3.514066,1],[0,6064975,3.483376,1],[0,28885728,0.782609,1],[0,5448198,3.268542,1],[0,6064975,4.741688,1],[0,2364312,4.895141,1],[0,7709714,1.242967,1],[0,7709714,1.212276,1],[0,10793600,8.946292,1],[0,1336350,2.163683,1],[0,5448198,3.544757,1],[0,6064975,4.618926,1],[0,2775497,1.795396,1],[0,2364312,4.925831,1],[0,1336350,2.01023,1],[0,6064975,4.465473,1],[0,6064975,4.404092,1],[0,7709714,0.813299,1],[0,5448198,3.943734,1],[0,5448198,3.974425,1],[0,5448198,4.066496,1],[0,2981089,5.754476,1],[0,7709714,0.659847,1],[0,11410377,2.378517,1],[0,11410377,2.347826,1],[0,11410377,2.317136,1],[0,11410377,2.286445,1],[0,7709714,3.268542,1],[0,11410377,2.225064,1],[0,3186682,1.918159,1],[0,11410377,2.163683,1],[0,11410377,2.132992,1],[0,9765638,2.286445,1],[0,11410377,2.040921,1],[0,1747535,7.289003,1],[0,7709714,3.14578,1],[0,7709714,3.11509,1],[0,11410377,1.918159,1],[0,7709714,3.053708,1],[0,11410377,1.826087,1],[0,14083077,4.31202,1],[0,11410377,1.703325,1],[0,9765638,2.378517,1],[0,2364312,3.851662,1],[0,23745919,2.347826,1],[0,23745919,2.317136,1],[0,23745919,2.286445,1],[0,11410377,2.808184,1],[0,7709714,3.667519,1],[0,23745919,2.194373,1],[0,23745919,2.163683,1],[0,23745919,2.102302,1],[0,7709714,3.606138,1],[0,23745919,2.040921,1],[0,7709714,3.575448,1],[0,3186682,2.255754,1],[0,9765638,2.040921,1],[0,23745919,1.887468,1],[0,7709714,3.391304,1],[0,3186682,2.01023,1],[0,3186682,1.97954,1],[0,11410377,2.439898,1],[0,7709714,3.299233,1],[0,10793600,8.179028,1],[0,28268951,1.181586,1],[0,28268951,1.212276,1],[0,2364312,4.465473,1],[0,28268951,1.242967,1],[0,2364312,4.526854,1],[0,7709714,2.409207,1],[0,28268951,1.488491,1],[0,7709714,2.378517,1],[0,11410377,0.966752,1],[0,11410377,0.936061,1],[0,28268951,1.611253,1],[0,5448198,1.150895,1],[0,28268951,1.672634,1],[0,28268951,1.703325,1],[0,5448198,1.273657,1],[0,14083077,4.035806,1],[0,7709714,2.255754,1],[0,3186682,1.089514,1],[0,5448198,1.488491,1],[0,7709714,2.992327,1],[0,2364312,4.035806,1],[0,2364312,4.066496,1],[0,7709714,2.961637,1],[0,7709714,2.900256,1],[0,7709714,2.869565,1],[0,9765638,2.439898,1],[0,2364312,4.189258,1],[0,7709714,2.808184,1],[0,1747535,6.613811,1],[0,7709714,2.777494,1],[0,308389,6.951407,1],[0,11410377,1.273657,1],[0,27035397,4.035806,1],[0,2364312,4.219949,1],[0,28268951,0.751918,1],[0,3186682,1.396419,1],[0,2364312,4.404092,1],[0,7709714,2.531969,1],[0,7709714,2.501279,1],[0,23540327,3.11509,1],[0,7298529,2.900256,1],[0,7298529,2.930946,1],[0,7298529,2.961637,1],[0,27035397,3.299233,1],[0,28474543,2.501279,1],[0,23540327,2.930946,1],[0,28474543,2.470588,1],[0,20867626,1.887468,1],[0,1747535,5.815857,1],[0,23540327,2.808184,1],[0,28474543,2.439898,1],[0,2364312,5.294118,1],[0,27035397,3.237852,1],[0,23540327,2.685422,1],[0,16139001,3.391304,1],[0,23540327,2.56266,1],[0,20867626,2.040921,1],[0,20867626,2.071611,1],[0,20867626,2.102302,1],[0,16139001,2.654731,1],[0,23540327,3.7289,1],[0,16139001,2.685422,1],[0,3186682,0.046036,1],[0,27035397,3.329923,1],[0,28474543,2.59335,1],[0,23540327,3.575448,1],[0,16139001,2.808184,1],[0,23540327,3.514066,1],[0,16139001,2.838875,1],[0,20867626,1.519182,1],[0,20867626,1.549872,1],[0,23540327,3.391304,1],[0,20867626,1.580563,1],[0,23540327,3.299233,1],[0,20867626,1.641944,1],[0,20867626,1.672634,1],[0,23540327,3.207161,1],[0,23540327,3.176471,1],[0,16139001,3.053708,1],[0,28474543,2.163683,1],[0,20867626,2.531969,1],[0,14083077,3.237852,1],[0,7298529,3.11509,1],[0,7298529,3.14578,1],[0,23540327,1.611253,1],[0,23540327,1.580563,1],[0,23540327,1.519182,1],[0,28474543,2.040921,1],[0,2981089,6.491049,1],[0,28268951,2.378517,1],[0,28268951,2.409207,1],[0,28268951,2.439898,1],[0,21278810,2.900256,1],[0,28268951,2.470588,1],[0,21278810,2.869565,1],[0,16139001,4.035806,1],[0,20867626,2.808184,1],[0,28474543,1.887468,1],[0,20867626,2.869565,1],[0,23540327,2.439898,1],[0,20867626,2.132992,1],[0,28474543,2.347826,1],[0,20867626,2.194373,1],[0,23540327,2.317136,1],[0,28474543,2.317136,1],[0,28474543,2.286445,1],[0,16139001,3.636829,1],[0,23540327,2.163683,1],[0,16139001,3.667519,1],[0,23540327,2.102302,1],[0,23540327,2.071611,1],[0,20867626,2.317136,1],[0,20867626,2.347826,1],[0,28474543,2.225064,1],[0,23540327,1.948849,1],[0,2775497,1.948849,1],[0,23540327,1.887468,1],[0,23540327,1.856777,1],[0,20867626,2.439898,1],[0,6064975,2.654731,1],[0,6064975,2.59335,1],[0,7298529,2.071611,1],[0,7298529,2.102302,1],[0,6064975,2.501279,1],[0,6064975,2.470588,1],[0,6064975,2.378517,1],[0,7298529,2.194373,1],[0,28474543,3.023018,1],[0,28474543,2.992327,1],[0,6064975,2.225064,1],[0,6064975,2.194373,1],[0,16139001,0.629156,1],[0,28885728,0.936061,1],[0,6064975,2.102302,1],[0,2981089,6.153453,1],[0,28474543,2.961637,1],[0,16139001,0.84399,1],[0,16139001,0.87468,1],[0,16139001,0.966752,1],[0,5448198,5.171355,1],[0,6064975,3.391304,1],[0,6064975,3.360614,1],[0,2775497,4.803069,1],[0,28885728,0.84399,1],[0,7298529,1.549872,1],[0,7298529,1.611253,1],[0,6064975,3.11509,1],[0,6064975,3.053708,1],[0,7298529,1.703325,1],[0,7298529,1.734015,1],[0,5448198,5.631714,1],[0,2775497,4.710997,1],[0,7298529,1.856777,1],[0,7298529,1.887468,1],[0,6064975,2.808184,1],[0,7298529,1.918159,1],[0,7298529,1.948849,1],[0,28885728,0.87468,1],[0,7298529,2.01023,1],[0,16139001,2.01023,1],[0,23540327,4.465473,1],[0,20867626,1.058824,1],[0,3186682,0.199488,1],[0,16139001,2.102302,1],[0,20867626,1.089514,1],[0,28474543,2.624041,1],[0,2775497,1.887468,1],[0,14083077,3.483376,1],[0,16139001,2.286445,1],[0,3186682,0.138107,1],[0,23540327,4.127877,1],[0,20867626,1.242967,1],[0,23540327,4.005115,1],[0,20867626,1.304348,1],[0,6064975,1.304348,1],[0,27035397,3.360614,1],[0,16139001,2.56266,1],[0,16139001,2.59335,1],[0,6064975,1.273657,1],[0,14083077,3.606138,1],[0,6064975,1.948849,1],[0,16139001,1.058824,1],[0,6064975,1.918159,1],[0,16139001,1.120205,1],[0,20867626,0.537084,1],[0,16139001,1.181586,1],[0,2364312,5.079284,1],[0,7298529,2.409207,1],[0,7298529,2.470588,1],[0,7298529,2.531969,1],[0,27035397,3.421995,1],[0,16139001,1.549872,1],[0,21278810,3.514066,1],[0,16139001,1.611253,1],[0,6064975,1.611253,1],[0,16139001,1.734015,1],[0,16139001,1.795396,1],[0,20867626,1.028133,1],[0,3186682,0.26087,1],[0,16139001,1.948849,1],[0,16755778,2.163683,1],[0,16755778,2.132992,1],[0,10176822,1.457801,1],[0,22717957,2.869565,1],[0,16755778,1.97954,1],[0,22717957,3.023018,1],[0,10176822,1.335038,1],[0,16755778,1.887468,1],[0,18194925,4.035806,1],[0,22717957,3.14578,1],[0,2775497,5.969309,1],[0,22717957,3.207161,1],[0,1130758,7.043478,1],[0,102796,6.398977,1],[0,16755778,1.795396,1],[0,16755778,1.764706,1],[0,16755778,1.734015,1],[0,5242605,3.360614,1],[0,2981089,4.557545,1],[0,16755778,1.703325,1],[0,10176822,1.641944,1],[0,22717957,2.286445,1],[0,5242605,3.11509,1],[0,10176822,1.611253,1],[0,16755778,2.378517,1],[0,23951511,0.966752,1],[0,18194925,4.895141,1],[0,22717957,2.378517,1],[0,10176822,1.549872,1],[0,16755778,2.317136,1],[0,22717957,2.501279,1],[0,2981089,4.373402,1],[0,18194925,4.649616,1],[0,18194925,4.618926,1],[0,16755778,2.255754,1],[0,22717957,2.624041,1],[0,22717957,2.654731,1],[0,28474543,3.268542,1],[0,10176822,1.488491,1],[0,16755778,2.194373,1],[0,22717957,3.851662,1],[0,5242605,4.250639,1],[0,20662033,1.120205,1],[0,20662033,1.150895,1],[0,513981,1.948849,1],[0,5242605,4.434783,1],[0,20662033,1.273657,1],[0,20662033,1.304348,1],[0,20662033,1.335038,1],[0,5242605,4.588235,1],[0,16755778,1.212276,1],[0,5242605,4.649616,1],[0,20662033,1.396419,1],[0,20662033,1.42711,1],[0,2981089,4.86445,1],[0,5242605,4.772379,1],[0,20662033,1.488491,1],[0,15933409,0.29156,1],[0,20662033,1.549872,1],[0,20662033,1.580563,1],[0,5242605,3.452685,1],[0,2981089,4.588235,1],[0,18194925,3.69821,1],[0,22717957,3.452685,1],[0,16755778,1.641944,1],[0,5242605,3.606138,1],[0,18194925,3.606138,1],[0,5242605,3.69821,1],[0,5242605,3.7289,1],[0,10176822,1.150895,1],[0,20662033,0.751918,1],[0,10176822,1.089514,1],[0,16755778,1.42711,1],[0,513981,2.071611,1],[0,513981,2.01023,1],[0,20662033,0.905371,1],[0,20662033,0.966752,1],[0,22717957,3.820972,1],[0,5242605,4.158568,1],[0,20662033,1.028133,1],[0,23951511,3.14578,1],[0,23951511,3.11509,1],[0,28474543,3.391304,1],[0,22717957,1.641944,1],[0,5242605,2.163683,1],[0,5242605,2.194373,1],[0,5242605,2.225064,1],[0,5242605,2.255754,1],[0,5242605,2.286445,1],[0,5242605,2.317136,1],[0,5242605,2.347826,1],[0,5242605,2.378517,1],[0,16755778,2.56266,1],[0,5242605,2.439898,1],[0,22717957,1.703325,1],[0,3186682,3.544757,1],[0,22717957,1.764706,1],[0,23951511,2.59335,1],[0,16755778,2.470588,1],[0,5242605,2.654731,1],[0,5242605,1.396419,1],[0,16755778,2.746803,1],[0,2364312,3.544757,1],[0,16755778,2.716113,1],[0,5242605,1.519182,1],[0,2364312,3.575448,1],[0,5242605,1.580563,1],[0,18194925,5.969309,1],[0,2364312,3.606138,1],[0,23951511,3.544757,1],[0,5242605,1.734015,1],[0,10176822,2.01023,1],[0,3186682,3.606138,1],[0,5242605,1.856777,1],[0,22717957,1.42711,1],[0,5242605,1.918159,1],[0,10176822,1.97954,1],[0,10176822,1.948849,1],[0,22717957,1.519182,1],[0,2981089,4.066496,1],[0,3186682,3.483376,1],[0,23951511,1.795396,1],[0,23951511,1.764706,1],[0,23951511,1.734015,1],[0,14083077,4.925831,1],[0,23951511,1.672634,1],[0,23951511,1.611253,1],[0,22717957,1.97954,1],[0,3186682,3.360614,1],[0,3186682,3.329923,1],[0,22717957,2.01023,1],[0,3186682,3.299233,1],[0,3186682,3.268542,1],[0,10176822,1.795396,1],[0,10176822,1.764706,1],[0,23951511,1.335038,1],[0,2364312,3.667519,1],[0,22717957,2.102302,1],[0,22717957,2.194373,1],[0,10176822,1.672634,1],[0,23951511,2.470588,1],[0,23951511,2.439898,1],[0,23951511,2.409207,1],[0,5242605,2.685422,1],[0,23951511,2.347826,1],[0,5242605,2.716113,1],[0,22717957,1.856777,1],[0,5242605,2.808184,1],[0,22717957,1.918159,1],[0,22717957,1.948849,1],[0,5242605,2.900256,1],[0,5242605,2.930946,1],[0,5242605,2.961637,1],[0,23951511,2.040921,1],[0,23951511,2.01023,1],[0,23951511,1.97954,1],[0,23951511,1.948849,1],[0,3186682,3.514066,1],[0,5242605,2.992327,1],[0,23951511,1.856777,1],[0,7709714,6.521739,1],[0,15933409,3.974425,1],[0,2775497,1.212276,1],[0,18194925,0.782609,1],[0,7709714,6.153453,1],[0,719573,6.214834,1],[0,29502505,4.28133,1],[0,719573,6.184143,1],[0,719573,6.122762,1],[0,23745919,5.202046,1],[0,719573,5.938619,1],[0,7709714,5.631714,1],[0,2775497,1.304348,1],[0,29502505,4.710997,1],[0,719573,5.723785,1],[0,719573,5.539642,1],[0,11410377,4.404092,1],[0,27035397,4.189258,1],[0,10793600,7.043478,1],[0,9765638,1.028133,1],[0,18194925,1.856777,1],[0,2775497,5.877238,1],[0,18194925,1.795396,1],[0,18194925,1.764706,1],[0,18194925,1.734015,1],[0,18194925,1.672634,1],[0,18194925,1.641944,1],[0,15933409,3.11509,1],[0,29502505,3.575448,1],[0,3186682,2.439898,1],[0,29913690,1.734015,1],[0,29502505,3.7289,1],[0,719573,6.705882,1],[0,15933409,3.483376,1],[0,719573,0.230179,1],[0,15933409,3.69821,1],[0,719573,6.58312,1],[0,7709714,6.644501,1],[0,18194925,1.028133,1],[0,15933409,3.913043,1],[0,9765638,1.764706,1],[0,3186682,2.378517,1],[0,23745919,3.14578,1],[0,23745919,3.11509,1],[0,7709714,4.005115,1],[0,23745919,3.053708,1],[0,9765638,1.826087,1],[0,23745919,2.961637,1],[0,11410377,3.14578,1],[0,23745919,2.900256,1],[0,7709714,3.882353,1],[0,23745919,2.808184,1],[0,11410377,3.053708,1],[0,23745919,2.716113,1],[0,14083077,4.434783,1],[0,9765638,1.887468,1],[0,7709714,3.790281,1],[0,23745919,2.59335,1],[0,23745919,2.531969,1],[0,23745919,2.470588,1],[0,9765638,1.120205,1],[0,9765638,1.242967,1],[0,23745919,4.035806,1],[0,9765638,1.365729,1],[0,719573,5.171355,1],[0,9765638,1.488491,1],[0,23745919,3.759591,1],[0,9765638,1.611253,1],[0,27035397,4.097187,1],[0,7709714,4.31202,1],[0,7709714,4.28133,1],[0,7709714,4.250639,1],[0,9765638,1.672634,1],[0,9765638,1.703325,1],[0,23745919,3.421995,1],[0,7709714,4.158568,1],[0,11410377,3.391304,1],[0,7709714,4.127877,1],[0,7709714,4.097187,1],[0,23745919,3.268542,1],[0,3186682,2.838875,1],[0,5242605,5.785166,1],[0,20662033,2.132992,1],[0,16755778,0.87468,1],[0,20662033,2.194373,1],[0,20662033,2.225064,1],[0,15933409,1.181586,1],[0,15933409,1.242967,1],[0,15933409,1.273657,1],[0,20662033,2.286445,1],[0,16755778,0.813299,1],[0,5242605,6.184143,1],[0,5242605,6.245524,1],[0,14083077,4.588235,1],[0,5242605,6.337596,1],[0,29502505,3.023018,1],[0,5242605,6.429668,1],[0,15933409,1.519182,1],[0,15933409,1.549872,1],[0,15933409,1.580563,1],[0,16755778,1.150895,1],[0,20662033,1.641944,1],[0,3186682,3.053708,1],[0,5242605,5.079284,1],[0,20662033,1.703325,1],[0,20662033,1.734015,1],[0,20662033,1.764706,1],[0,18194925,3.084399,1],[0,18194925,3.053708,1],[0,2981089,4.925831,1],[0,513981,1.826087,1],[0,5242605,5.324808,1],[0,16755778,1.028133,1],[0,5242605,5.386189,1],[0,20662033,1.948849,1],[0,3186682,2.961637,1],[0,5242605,5.539642,1],[0,15933409,0.84399,1],[0,18194925,2.869565,1],[0,2981089,5.048593,1],[0,15933409,2.317136,1],[0,2981089,5.386189,1],[0,15933409,2.378517,1],[0,18194925,2.163683,1],[0,15933409,2.470588,1],[0,18194925,2.102302,1],[0,5242605,7.626598,1],[0,5242605,7.657289,1],[0,20662033,3.023018,1],[0,3186682,2.470588,1],[0,15933409,2.56266,1],[0,15933409,2.59335,1],[0,15933409,2.654731,1],[0,29913690,1.304348,1],[0,18194925,1.97954,1],[0,18194925,1.948849,1],[0,29913690,1.365729,1],[0,18194925,1.887468,1],[0,5242605,8.056266,1],[0,5242605,8.086957,1],[0,2981089,5.232737,1],[0,20662033,2.56266,1],[0,5242605,6.705882,1],[0,20662033,2.624041,1],[0,15933409,1.826087,1],[0,3186682,2.624041,1],[0,15933409,1.887468,1],[0,5242605,6.890026,1],[0,5242605,6.920716,1],[0,15933409,1.918159,1],[0,2981089,5.324808,1],[0,15933409,2.01023,1],[0,29913690,1.181586,1],[0,15933409,2.071611,1],[0,15933409,2.102302,1],[0,29502505,3.299233,1],[0,29913690,1.212276,1],[0,5242605,7.227621,1],[0,5242605,7.258312,1],[0,18194925,2.255754,1],[0,18194925,2.225064,1],[0,16344594,2.439898,1],[0,16550186,2.409207,1],[0,16550186,2.378517,1],[0,9971230,1.795396,1],[0,16344594,2.654731,1],[0,2775497,2.961637,1],[0,16550186,2.317136,1],[0,21073218,1.028133,1],[0,2364312,5.938619,1],[0,9971230,1.918159,1],[0,9971230,1.948849,1],[0,719573,1.887468,1],[0,16344594,2.992327,1],[0,21073218,1.212276,1],[0,21073218,1.242967,1],[0,719573,1.918159,1],[0,16550186,2.194373,1],[0,16550186,2.163683,1],[0,10999192,2.56266,1],[0,21073218,1.396419,1],[0,719573,2.716113,1],[0,719573,2.685422,1],[0,16344594,1.764706,1],[0,9971230,1.304348,1],[0,719573,2.654731,1],[0,16344594,1.856777,1],[0,27035397,1.918159,1],[0,16550186,2.56266,1],[0,719573,1.764706,1],[0,9971230,1.488491,1],[0,16344594,2.040921,1],[0,16344594,2.071611,1],[0,16344594,2.132992,1],[0,9971230,1.549872,1],[0,10999192,2.409207,1],[0,9971230,1.611253,1],[0,21073218,0.690537,1],[0,16344594,2.317136,1],[0,16344594,2.347826,1],[0,10999192,2.439898,1],[0,21073218,2.102302,1],[0,21073218,2.132992,1],[0,16550186,1.887468,1],[0,26624212,2.746803,1],[0,21073218,2.225064,1],[0,26624212,2.685422,1],[0,719573,2.01023,1],[0,21073218,2.378517,1],[0,16550186,1.703325,1],[0,17783740,1.212276,1],[0,719573,2.409207,1],[0,2775497,2.777494,1],[0,9971230,2.501279,1],[0,719573,2.132992,1],[0,29913690,3.391304,1],[0,21073218,2.716113,1],[0,27035397,0.87468,1],[0,16550186,1.457801,1],[0,21073218,2.838875,1],[0,9971230,2.624041,1],[0,16344594,3.268542,1],[0,9971230,2.040921,1],[0,9971230,2.071611,1],[0,21073218,1.519182,1],[0,719573,1.948849,1],[0,7504122,1.549872,1],[0,16344594,3.514066,1],[0,21073218,1.672634,1],[0,9971230,2.163683,1],[0,9971230,2.194373,1],[0,21073218,1.764706,1],[0,16550186,2.040921,1],[0,16550186,2.01023,1],[0,16550186,1.97954,1],[0,16550186,1.948849,1],[0,16550186,1.918159,1],[0,21073218,1.97954,1],[0,9971230,2.317136,1],[0,7504122,1.365729,1],[0,16344594,3.943734,1],[0,7504122,2.838875,1],[0,719573,3.391304,1],[0,7504122,2.777494,1],[0,16550186,3.207161,1],[0,7504122,2.716113,1],[0,7504122,2.685422,1],[0,2775497,2.225064,1],[0,1747535,2.071611,1],[0,14083077,1.304348,1],[0,7504122,2.59335,1],[0,1747535,1.97954,1],[0,14083077,1.150895,1],[0,1747535,1.856777,1],[0,14083077,1.120205,1],[0,719573,1.488491,1],[0,7298529,4.28133,1],[0,7504122,2.470588,1],[0,719573,3.176471,1],[0,719573,1.519182,1],[0,1747535,1.611253,1],[0,1747535,2.900256,1],[0,23334734,1.734015,1],[0,23334734,1.703325,1],[0,10999192,1.97954,1],[0,16550186,3.329923,1],[0,23334734,1.580563,1],[0,1747535,2.808184,1],[0,23334734,1.519182,1],[0,14083077,1.519182,1],[0,7504122,2.992327,1],[0,14083077,1.488491,1],[0,1747535,2.654731,1],[0,719573,1.396419,1],[0,14083077,1.42711,1],[0,1747535,2.56266,1],[0,1747535,2.531969,1],[0,1747535,2.501279,1],[0,1747535,2.470588,1],[0,16550186,3.237852,1],[0,719573,3.421995,1],[0,7504122,1.795396,1],[0,2775497,3.053708,1],[0,16550186,2.777494,1],[0,14083077,0.813299,1],[0,7298529,4.465473,1],[0,7504122,1.672634,1],[0,2775497,2.317136,1],[0,14083077,0.751918,1],[0,16344594,1.273657,1],[0,16344594,1.304348,1],[0,16344594,1.335038,1],[0,16550186,2.685422,1],[0,719573,2.777494,1],[0,16344594,1.488491,1],[0,9971230,1.120205,1],[0,16344594,1.549872,1],[0,14083077,0.690537,1],[0,9971230,1.150895,1],[0,719573,2.746803,1],[0,16550186,2.624041,1],[0,7504122,2.378517,1],[0,2364312,5.539642,1],[0,7298529,4.342711,1],[0,14083077,0.936061,1],[0,1747535,1.42711,1],[0,14083077,0.905371,1],[0,7504122,2.317136,1],[0,7504122,2.286445,1],[0,7504122,2.225064,1],[0,7504122,2.194373,1],[0,29913690,6.491049,1],[0,7504122,2.102302,1],[0,27035397,2.255754,1],[0,719573,2.961637,1],[0,7504122,1.97954,1],[0,7504122,1.948849,1],[0,7504122,1.918159,1],[0,10999192,2.255754,1],[0,16550186,2.869565,1],[0,16550186,2.838875,1],[0,5859383,2.685422,1],[0,10999192,2.930946,1],[0,10999192,2.992327,1],[0,5859383,2.808184,1],[0,5859383,2.838875,1],[0,5859383,2.869565,1],[0,5859383,2.900256,1],[0,5859383,2.930946,1],[0,5859383,2.992327,1],[0,9971230,4.588235,1],[0,23129142,3.452685,1],[0,5859383,3.053708,1],[0,17783740,2.163683,1],[0,23129142,3.360614,1],[0,5859383,3.11509,1],[0,23129142,3.237852,1],[0,23129142,3.207161,1],[0,17783740,2.225064,1],[0,10999192,3.237852,1],[0,5859383,3.360614,1],[0,26624212,1.887468,1],[0,719573,2.225064,1],[0,29913690,4.803069,1],[0,2775497,2.470588,1],[0,9971230,4.035806,1],[0,2775497,2.439898,1],[0,2775497,2.409207,1],[0,9971230,4.158568,1],[0,719573,2.286445,1],[0,17783740,1.887468,1],[0,5859383,2.286445,1],[0,5859383,2.317136,1],[0,719573,2.317136,1],[0,5859383,2.378517,1],[0,5859383,2.409207,1],[0,26624212,1.365729,1],[0,5859383,2.470588,1],[0,5859383,2.501279,1],[0,7298529,5.815857,1],[0,17783740,2.040921,1],[0,23129142,2.102302,1],[0,23129142,2.071611,1],[0,23129142,2.01023,1],[0,23129142,1.97954,1],[0,10999192,3.69821,1],[0,26624212,1.580563,1],[0,23129142,1.856777,1],[0,10999192,3.759591,1],[0,5859383,3.851662,1],[0,17783740,2.961637,1],[0,26624212,1.641944,1],[0,17783740,3.023018,1],[0,26624212,1.734015,1],[0,17783740,3.176471,1],[0,17783740,3.237852,1],[0,26624212,1.826087,1],[0,5859383,4.158568,1],[0,23129142,0.721228,1],[0,17783740,3.943734,1],[0,17783740,4.097187,1],[0,17783740,2.439898,1],[0,23129142,2.869565,1],[0,23129142,2.838875,1],[0,17783740,2.470588,1],[0,23129142,2.777494,1],[0,23129142,2.746803,1],[0,23129142,2.716113,1],[0,17783740,2.501279,1],[0,10999192,3.452685,1],[0,5859383,3.544757,1],[0,5859383,3.606138,1],[0,26624212,1.519182,1],[0,23129142,2.439898,1],[0,23129142,2.378517,1],[0,23129142,2.317136,1],[0,23129142,2.286445,1],[0,23129142,2.255754,1],[0,5859383,5.109974,1],[0,23129142,2.163683,1],[0,23129142,2.132992,1],[0,27035397,0.230179,1],[0,1336350,1.058824,1],[0,1336350,1.089514,1],[0,27446582,1.42711,1],[0,27446582,1.457801,1],[0,1336350,1.242967,1],[0,1336350,1.273657,1],[0,1336350,1.304348,1],[0,28885728,2.654731,1],[0,28885728,2.624041,1],[0,9971230,2.654731,1],[0,1747535,1.242967,1],[0,1336350,1.365729,1],[0,1747535,1.150895,1],[0,1747535,1.120205,1],[0,9971230,2.685422,1],[0,26624212,0.84399,1],[0,1747535,0.966752,1],[0,26624212,0.87468,1],[0,26624212,2.347826,1],[0,21073218,2.900256,1],[0,16344594,4.83376,1],[0,16550186,1.42711,1],[0,27035397,0.782609,1],[0,27035397,0.721228,1],[0,16344594,4.987212,1],[0,16550186,1.365729,1],[0,16344594,5.048593,1],[0,1336350,0.506394,1],[0,21073218,3.14578,1],[0,21073218,3.176471,1],[0,16344594,5.202046,1],[0,27446582,0.659847,1],[0,26624212,2.409207,1],[0,27446582,1.028133,1],[0,27035397,0.475703,1],[0,1336350,0.690537,1],[0,21073218,3.421995,1],[0,21073218,3.483376,1],[0,28885728,3.084399,1],[0,16550186,0.87468,1],[0,9971230,3.237852,1],[0,29913690,3.974425,1],[0,10999192,2.654731,1],[0,2775497,2.654731,1],[0,29913690,4.097187,1],[0,513981,0.782609,1],[0,26624212,2.132992,1],[0,719573,2.194373,1],[0,5859383,1.42711,1],[0,5859383,1.457801,1],[0,9971230,3.575448,1],[0,26624212,2.071611,1],[0,29913690,4.342711,1],[0,2775497,2.531969,1],[0,23129142,4.925831,1],[0,27446582,1.672634,1],[0,29913690,4.588235,1],[0,5859383,1.764706,1],[0,26624212,1.918159,1],[0,719573,2.347826,1],[0,26624212,0.966752,1],[0,1747535,0.537084,1],[0,9971230,2.808184,1],[0,26624212,1.028133,1],[0,16550186,1.242967,1],[0,26624212,1.089514,1],[0,26624212,1.120205,1],[0,23129142,5.938619,1],[0,16550186,1.212276,1],[0,2775497,2.716113,1],[0,29913690,3.483376,1],[0,29913690,3.514066,1],[0,29913690,3.544757,1],[0,9971230,2.992327,1],[0,26624212,2.286445,1],[0,29913690,3.7289,1],[0,29913690,3.759591,1],[0,29913690,3.851662,1],[0,513981,0.997442,1],[0,26624212,2.255754,1],[0,22923549,3.237852,1],[0,1747535,4.28133,1],[0,719573,1.120205,1],[0,28885728,1.335038,1],[0,22923549,3.329923,1],[0,21278810,1.457801,1],[0,22923549,3.391304,1],[0,21278810,1.42711,1],[0,28885728,1.365729,1],[0,1747535,4.035806,1],[0,14083077,2.992327,1],[0,17989333,2.378517,1],[0,1747535,3.943734,1],[0,22923549,3.514066,1],[0,21278810,1.335038,1],[0,1747535,3.851662,1],[0,1747535,3.820972,1],[0,7298529,3.974425,1],[0,1747535,3.790281,1],[0,21278810,1.273657,1],[0,22923549,2.501279,1],[0,28474543,0.383632,1],[0,22923549,2.56266,1],[0,2775497,4.189258,1],[0,6064975,0.84399,1],[0,22923549,2.716113,1],[0,2775497,4.158568,1],[0,2775497,4.097187,1],[0,21278810,1.826087,1],[0,21278810,1.795396,1],[0,21278810,1.764706,1],[0,2775497,4.066496,1],[0,17989333,2.900256,1],[0,21278810,1.703325,1],[0,22923549,3.023018,1],[0,21278810,1.641944,1],[0,2775497,4.005115,1],[0,2981089,7.71867,1],[0,1747535,4.373402,1],[0,21278810,1.549872,1],[0,28885728,1.519182,1],[0,28885728,1.549872,1],[0,29913690,1.948849,1],[0,14083077,2.654731,1],[0,17989333,1.795396,1],[0,5653790,1.764706,1],[0,5653790,1.795396,1],[0,29913690,1.97954,1],[0,17989333,1.734015,1],[0,14083077,2.624041,1],[0,14083077,2.59335,1],[0,27035397,2.900256,1],[0,17989333,1.641944,1],[0,5653790,2.040921,1],[0,5653790,2.071611,1],[0,5653790,2.102302,1],[0,23334734,7.534527,1],[0,2775497,2.102302,1],[0,23334734,7.442455,1],[0,1747535,3.268542,1],[0,27035397,2.930946,1],[0,28885728,1.396419,1],[0,22923549,3.667519,1],[0,14083077,2.900256,1],[0,14083077,2.869565,1],[0,2775497,3.913043,1],[0,5653790,1.120205,1],[0,5653790,1.150895,1],[0,28885728,1.457801,1],[0,16550186,5.846547,1],[0,21278810,1.089514,1],[0,1747535,3.514066,1],[0,5653790,1.335038,1],[0,2775497,3.820972,1],[0,23334734,8.30179,1],[0,1747535,3.452685,1],[0,1747535,3.421995,1],[0,5653790,1.457801,1],[0,5653790,1.519182,1],[0,1747535,3.391304,1],[0,20867626,3.360614,1],[0,7298529,3.237852,1],[0,27035397,2.992327,1],[0,28474543,1.611253,1],[0,20867626,3.483376,1],[0,20867626,3.514066,1],[0,2981089,6.705882,1],[0,16139001,4.803069,1],[0,2981089,6.736573,1],[0,28474543,1.549872,1],[0,1747535,4.710997,1],[0,20867626,3.636829,1],[0,28474543,1.519182,1],[0,7298529,3.268542,1],[0,20867626,3.759591,1],[0,7298529,3.329923,1],[0,20867626,3.820972,1],[0,2775497,2.071611,1],[0,2981089,6.859335,1],[0,20867626,3.943734,1],[0,28474543,1.856777,1],[0,20867626,2.930946,1],[0,20867626,2.961637,1],[0,28474543,1.826087,1],[0,28268951,2.746803,1],[0,20867626,3.023018,1],[0,1747535,5.386189,1],[0,20867626,3.053708,1],[0,28474543,1.795396,1],[0,20867626,3.11509,1],[0,20867626,3.14578,1],[0,1747535,5.232737,1],[0,2981089,6.58312,1],[0,16139001,4.434783,1],[0,2775497,2.01023,1],[0,21278810,2.838875,1],[0,28268951,3.11509,1],[0,28268951,3.14578,1],[0,2775497,2.040921,1],[0,20867626,3.329923,1],[0,28474543,0.87468,1],[0,21278810,2.255754,1],[0,22923549,1.97954,1],[0,22923549,2.01023,1],[0,22923549,2.040921,1],[0,20867626,4.925831,1],[0,22923549,2.071611,1],[0,16139001,6.306905,1],[0,21278810,2.194373,1],[0,22923549,2.163683,1],[0,7298529,3.667519,1],[0,20867626,5.109974,1],[0,22923549,2.225064,1],[0,7298529,3.69821,1],[0,22923549,2.317136,1],[0,21278810,2.071611,1],[0,22923549,2.409207,1],[0,17989333,3.483376,1],[0,21278810,2.040921,1],[0,22923549,2.470588,1],[0,22923549,1.150895,1],[0,21278810,2.624041,1],[0,20867626,4.035806,1],[0,28474543,1.335038,1],[0,28474543,1.273657,1],[0,22923549,1.304348,1],[0,22923549,1.365729,1],[0,28474543,1.212276,1],[0,7298529,3.452685,1],[0,28474543,1.150895,1],[0,21278810,2.470588,1],[0,2981089,7.043478,1],[0,2981089,7.074169,1],[0,28474543,1.028133,1],[0,21278810,2.378517,1],[0,21278810,2.347826,1],[0,22923549,1.795396,1],[0,16139001,5.969309,1],[0,22923549,1.856777,1],[0,22923549,1.887468,1],[0,2775497,3.391304,1],[0,2775497,3.360614,1],[0,16550186,4.189258,1],[0,30324875,4.496164,1],[0,23334734,3.667519,1],[0,10999192,1.304348,1],[0,2981089,8.516624,1],[0,10999192,1.365729,1],[0,10999192,1.396419,1],[0,23334734,3.483376,1],[0,23334734,3.452685,1],[0,28885728,2.317136,1],[0,14083077,1.826087,1],[0,10999192,1.488491,1],[0,7504122,3.851662,1],[0,23334734,3.268542,1],[0,23334734,3.237852,1],[0,28885728,2.378517,1],[0,16550186,3.882353,1],[0,16550186,3.851662,1],[0,1336350,1.672634,1],[0,29913690,2.961637,1],[0,29913690,2.992327,1],[0,27446582,1.795396,1],[0,11204784,1.97954,1],[0,16550186,4.496164,1],[0,11204784,1.918159,1],[0,16550186,4.465473,1],[0,11204784,1.856777,1],[0,23334734,4.219949,1],[0,27446582,1.764706,1],[0,14083077,2.102302,1],[0,11204784,1.764706,1],[0,28885728,2.102302,1],[0,14083077,2.040921,1],[0,14083077,1.97954,1],[0,11204784,1.611253,1],[0,28885728,2.194373,1],[0,16550186,4.28133,1],[0,7504122,4.219949,1],[0,1747535,3.11509,1],[0,26624212,3.084399,1],[0,7504122,3.360614,1],[0,719573,3.851662,1],[0,719573,1.273657,1],[0,719573,1.304348,1],[0,23334734,2.194373,1],[0,719573,1.335038,1],[0,14083077,1.611253,1],[0,23334734,2.102302,1],[0,10999192,1.948849,1],[0,23334734,2.040921,1],[0,23334734,2.01023,1],[0,23334734,1.97954,1],[0,1747535,3.023018,1],[0,23334734,1.918159,1],[0,719573,3.69821,1],[0,23334734,1.856777,1],[0,719573,3.667519,1],[0,1747535,2.930946,1],[0,11204784,0.936061,1],[0,14083077,1.795396,1],[0,28885728,2.409207,1],[0,10999192,1.580563,1],[0,23334734,2.961637,1],[0,23334734,2.930946,1],[0,23334734,2.900256,1],[0,1336350,1.457801,1],[0,10999192,1.641944,1],[0,23334734,2.777494,1],[0,16550186,3.69821,1],[0,10999192,1.672634,1],[0,2775497,3.268542,1],[0,7504122,3.514066,1],[0,23334734,2.59335,1],[0,23334734,2.56266,1],[0,23334734,2.531969,1],[0,28885728,2.531969,1],[0,2981089,10.265985,1],[0,23334734,2.439898,1],[0,5653790,2.930946,1],[0,14083077,2.347826,1],[0,5653790,2.992327,1],[0,16550186,5.41688,1],[0,29913690,2.255754,1],[0,719573,4.987212,1],[0,5653790,3.11509,1],[0,17989333,1.120205,1],[0,22923549,4.342711,1],[0,5653790,3.237852,1],[0,719573,4.925831,1],[0,2981089,7.994885,1],[0,29913690,2.378517,1],[0,17989333,0.905371,1],[0,29913690,2.409207,1],[0,5653790,3.483376,1],[0,7504122,5.601023,1],[0,5653790,3.544757,1],[0,22923549,4.465473,1],[0,14083077,2.255754,1],[0,14083077,2.56266,1],[0,14083077,2.501279,1],[0,14083077,2.470588,1],[0,14083077,2.439898,1],[0,17989333,1.519182,1],[0,17989333,1.488491,1],[0,27035397,2.808184,1],[0,5653790,2.501279,1],[0,27035397,2.777494,1],[0,719573,5.079284,1],[0,1747535,3.176471,1],[0,23334734,6.982097,1],[0,5653790,2.624041,1],[0,2775497,3.69821,1],[0,5653790,2.685422,1],[0,5653790,2.716113,1],[0,14083077,2.409207,1],[0,29913690,2.132992,1],[0,29913690,2.194373,1],[0,14083077,2.378517,1],[0,11204784,2.716113,1],[0,29913690,2.777494,1],[0,11204784,2.654731,1],[0,16550186,4.83376,1],[0,11204784,2.56266,1],[0,5653790,4.557545,1],[0,513981,1.365729,1],[0,10999192,0.87468,1],[0,16550186,4.741688,1],[0,10999192,0.905371,1],[0,11204784,2.409207,1],[0,719573,3.974425,1],[0,23334734,4.772379,1],[0,11204784,2.347826,1],[0,27035397,2.56266,1],[0,16550186,4.680307,1],[0,11204784,2.255754,1],[0,11204784,2.225064,1],[0,28885728,1.97954,1],[0,11204784,2.163683,1],[0,719573,4.772379,1],[0,29913690,2.470588,1],[0,29913690,2.501279,1],[0,29913690,2.531969,1],[0,719573,4.618926,1],[0,29913690,2.59335,1],[0,719573,4.526854,1],[0,7504122,5.232737,1],[0,14083077,2.194373,1],[0,719573,4.496164,1],[0,28885728,1.826087,1],[0,11204784,2.961637,1],[0,719573,4.404092,1],[0,28885728,1.887468,1],[0,22923549,4.772379,1],[0,5653790,4.219949,1],[0,2775497,3.544757,1],[0,28885728,1.948849,1],[0,5653790,4.31202,1],[0,16550186,4.895141,1],[0,23334734,5.202046,1],[0,15522224,2.194373,1],[0,11821561,2.286445,1],[0,15522224,2.255754,1],[0,11821561,2.255754,1],[0,513981,3.514066,1],[0,15522224,2.347826,1],[0,15522224,2.378517,1],[0,11821561,2.194373,1],[0,15522224,2.470588,1],[0,1953128,4.035806,1],[0,15522224,2.501279,1],[0,15522224,2.531969,1],[0,2569905,9.345269,1],[0,24362696,4.496164,1],[0,15522224,2.59335,1],[0,11821561,2.132992,1],[0,21484403,2.225064,1],[0,11821561,2.071611,1],[0,24362696,4.342711,1],[0,6270567,4.680307,1],[0,6270567,4.925831,1],[0,15522224,1.703325,1],[0,11821561,2.439898,1],[0,2364312,2.409207,1],[0,15522224,1.795396,1],[0,6270567,4.895141,1],[0,4831421,4.557545,1],[0,11821561,2.409207,1],[0,4831421,4.618926,1],[0,2364312,2.470588,1],[0,26418620,1.457801,1],[0,4831421,4.741688,1],[0,18400517,5.386189,1],[0,4831421,4.803069,1],[0,11821561,2.347826,1],[0,6270567,4.83376,1],[0,4831421,4.925831,1],[0,15522224,2.102302,1],[0,6270567,4.772379,1],[0,24362696,4.956522,1],[0,24362696,3.544757,1],[0,15522224,3.391304,1],[0,24362696,3.483376,1],[0,15522224,3.421995,1],[0,24362696,3.421995,1],[0,2364312,2.716113,1],[0,2364312,2.746803,1],[0,15522224,3.514066,1],[0,15522224,3.544757,1],[0,26418620,1.948849,1],[0,15522224,3.606138,1],[0,15522224,3.636829,1],[0,13671893,2.746803,1],[0,24362696,3.11509,1],[0,13466300,2.808184,1],[0,11821561,1.457801,1],[0,24362696,3.023018,1],[0,24362696,2.992327,1],[0,11821561,1.42711,1],[0,18400517,4.83376,1],[0,15522224,2.746803,1],[0,15522224,2.777494,1],[0,17578148,4.035806,1],[0,15522224,2.838875,1],[0,11821561,1.97954,1],[0,26418620,1.580563,1],[0,6270567,4.618926,1],[0,22512365,5.723785,1],[0,22512365,5.754476,1],[0,15522224,3.053708,1],[0,24362696,3.943734,1],[0,24362696,3.913043,1],[0,13466300,2.869565,1],[0,513981,3.391304,1],[0,13260708,1.335038,1],[0,26418620,1.795396,1],[0,11821561,1.611253,1],[0,11821561,1.580563,1],[0,2364312,2.654731,1],[0,15522224,3.360614,1],[0,4831421,1.918159,1],[0,4831421,1.948849,1],[0,26418620,0.598465,1],[0,4831421,2.040921,1],[0,4831421,2.102302,1],[0,2364312,1.887468,1],[0,2364312,1.918159,1],[0,2364312,1.948849,1],[0,15522224,0.352941,1],[0,4831421,2.317136,1],[0,6270567,5.41688,1],[0,13055116,4.066496,1],[0,4831421,2.439898,1],[0,4831421,2.470588,1],[0,4831421,2.531969,1],[0,18400517,5.938619,1],[0,4831421,2.654731,1],[0,15522224,0.567775,1],[0,4831421,2.716113,1],[0,2364312,2.163683,1],[0,28063359,1.703325,1],[0,28063359,1.734015,1],[0,4831421,1.304348,1],[0,28063359,1.764706,1],[0,2364312,1.703325,1],[0,4831421,1.42711,1],[0,4831421,1.457801,1],[0,102796,2.163683,1],[0,30119282,4.803069,1],[0,1953128,4.127877,1],[0,2364312,1.795396,1],[0,4831421,1.611253,1],[0,4831421,1.641944,1],[0,4831421,1.672634,1],[0,13671893,2.59335,1],[0,15522224,0.199488,1],[0,28063359,1.856777,1],[0,11821561,2.624041,1],[0,308389,4.066496,1],[0,4831421,1.887468,1],[0,15522224,1.058824,1],[0,4831421,3.636829,1],[0,4831421,3.667519,1],[0,15522224,1.120205,1],[0,2775497,6.828645,1],[0,15522224,1.212276,1],[0,26418620,1.181586,1],[0,513981,3.667519,1],[0,15522224,1.304348,1],[0,513981,3.636829,1],[0,30119282,4.373402,1],[0,15522224,1.42711,1],[0,15522224,1.457801,1],[0,4831421,4.097187,1],[0,30119282,4.342711,1],[0,4831421,4.189258,1],[0,15522224,1.549872,1],[0,30119282,4.31202,1],[0,4831421,4.28133,1],[0,15522224,1.641944,1],[0,15522224,0.598465,1],[0,15522224,0.690537,1],[0,9560045,0.322251,1],[0,21484403,2.531969,1],[0,4831421,2.961637,1],[0,4831421,2.992327,1],[0,4831421,3.084399,1],[0,1953128,4.066496,1],[0,4831421,3.14578,1],[0,21484403,2.501279,1],[0,4831421,3.207161,1],[0,4831421,3.237852,1],[0,4831421,3.268542,1],[0,4831421,3.299233,1],[0,15522224,0.84399,1],[0,15522224,0.87468,1],[0,15522224,0.905371,1],[0,17578148,3.851662,1],[0,15522224,0.997442,1],[0,15522224,1.028133,1],[0,18400517,3.329923,1],[0,18400517,3.299233,1],[0,2981089,2.685422,1],[0,15522224,6.368286,1],[0,21484403,1.918159,1],[0,7915306,9.652174,1],[0,9560045,2.654731,1],[0,18400517,3.14578,1],[0,10793600,0.87468,1],[0,18400517,3.084399,1],[0,18400517,3.053708,1],[0,13466300,2.163683,1],[0,102796,2.317136,1],[0,18400517,2.961637,1],[0,6270567,3.820972,1],[0,18400517,2.900256,1],[0,18400517,2.869565,1],[0,18400517,2.838875,1],[0,9560045,2.808184,1],[0,13466300,2.102302,1],[0,1953128,2.930946,1],[0,9560045,2.040921,1],[0,13671893,3.11509,1],[0,15522224,5.631714,1],[0,13466300,2.470588,1],[0,2981089,2.59335,1],[0,102796,2.255754,1],[0,18400517,3.790281,1],[0,513981,3.084399,1],[0,2981089,2.624041,1],[0,17578148,4.189258,1],[0,18400517,3.606138,1],[0,18400517,3.575448,1],[0,9560045,2.470588,1],[0,4831421,8.056266,1],[0,7915306,9.959079,1],[0,9560045,2.501279,1],[0,18400517,3.452685,1],[0,18400517,3.421995,1],[0,9560045,2.531969,1],[0,7915306,8.516624,1],[0,18400517,2.102302,1],[0,513981,2.808184,1],[0,18400517,2.040921,1],[0,18400517,1.97954,1],[0,29502505,1.672634,1],[0,21484403,1.795396,1],[0,18400517,1.856777,1],[0,102796,2.439898,1],[0,10793600,1.120205,1],[0,18400517,1.764706,1],[0,18400517,1.734015,1],[0,2981089,2.777494,1],[0,29502505,1.764706,1],[0,102796,2.501279,1],[0,29502505,1.795396,1],[0,18400517,1.519182,1],[0,6270567,3.483376,1],[0,102796,2.59335,1],[0,29502505,1.856777,1],[0,29502505,1.42711,1],[0,29502505,1.457801,1],[0,13466300,2.071611,1],[0,102796,2.378517,1],[0,513981,2.869565,1],[0,9560045,2.869565,1],[0,18400517,2.56266,1],[0,18400517,2.531969,1],[0,10793600,0.936061,1],[0,9560045,2.961637,1],[0,13466300,1.97954,1],[0,13466300,1.948849,1],[0,13466300,1.918159,1],[0,6270567,3.69821,1],[0,13466300,1.887468,1],[0,13466300,1.856777,1],[0,9560045,3.023018,1],[0,102796,2.409207,1],[0,18400517,2.163683,1],[0,13466300,1.795396,1],[0,30119282,3.790281,1],[0,24362696,2.255754,1],[0,24362696,2.225064,1],[0,24362696,2.194373,1],[0,11821561,0.966752,1],[0,6270567,4.465473,1],[0,30119282,3.7289,1],[0,24362696,2.01023,1],[0,24362696,1.97954,1],[0,15522224,4.496164,1],[0,26418620,2.102302,1],[0,28063359,2.132992,1],[0,24362696,1.826087,1],[0,9560045,1.580563,1],[0,30119282,3.636829,1],[0,9560045,1.611253,1],[0,26418620,2.163683,1],[0,28063359,2.163683,1],[0,26418620,2.194373,1],[0,15522224,4.680307,1],[0,26418620,2.01023,1],[0,13671893,2.808184,1],[0,15522224,3.882353,1],[0,11821561,1.335038,1],[0,15522224,3.943734,1],[0,9560045,1.304348,1],[0,24362696,2.716113,1],[0,9560045,1.335038,1],[0,15522224,4.035806,1],[0,513981,3.329923,1],[0,13466300,2.746803,1],[0,13466300,2.716113,1],[0,30119282,3.882353,1],[0,11821561,1.120205,1],[0,30119282,3.851662,1],[0,24362696,2.439898,1],[0,9560045,1.457801,1],[0,15522224,4.28133,1],[0,11821561,1.028133,1],[0,24362696,2.317136,1],[0,28063359,2.746803,1],[0,513981,3.207161,1],[0,30119282,3.360614,1],[0,30119282,3.299233,1],[0,2981089,2.501279,1],[0,28063359,2.961637,1],[0,6270567,4.250639,1],[0,30119282,3.176471,1],[0,30119282,3.14578,1],[0,13466300,2.59335,1],[0,30119282,3.053708,1],[0,1953128,3.237852,1],[0,1953128,3.176471,1],[0,2981089,2.531969,1],[0,1953128,3.11509,1],[0,30119282,2.961637,1],[0,9560045,1.97954,1],[0,26418620,2.501279,1],[0,6270567,4.189258,1],[0,30119282,2.838875,1],[0,30119282,3.575448,1],[0,24362696,1.519182,1],[0,28063359,2.225064,1],[0,30119282,3.544757,1],[0,3186682,6.705882,1],[0,9560045,1.641944,1],[0,24362696,1.335038,1],[0,28063359,2.286445,1],[0,15522224,4.772379,1],[0,26418620,2.317136,1],[0,28063359,2.347826,1],[0,28063359,2.378517,1],[0,15522224,4.803069,1],[0,1953128,3.820972,1],[0,30119282,3.514066,1],[0,26418620,2.378517,1],[0,28063359,2.531969,1],[0,1953128,3.759591,1],[0,15522224,4.895141,1],[0,9560045,1.734015,1],[0,30119282,3.421995,1],[0,7092937,4.035806,1],[0,2569905,8.025575,1],[0,13671893,1.396419,1],[0,13466300,3.636829,1],[0,29091321,1.948849,1],[0,22512365,1.703325,1],[0,24568288,4.557545,1],[0,29091321,1.887468,1],[0,20250849,1.212276,1],[0,20250849,1.242967,1],[0,29091321,1.856777,1],[0,20250849,1.304348,1],[0,22512365,1.734015,1],[0,20250849,1.365729,1],[0,20250849,1.396419,1],[0,13671893,1.488491,1],[0,29091321,1.826087,1],[0,13466300,3.575448,1],[0,4625828,8.455243,1],[0,22512365,1.795396,1],[0,1130758,3.360614,1],[0,22512365,1.273657,1],[0,29091321,2.56266,1],[0,29091321,2.531969,1],[0,13671893,1.089514,1],[0,21484403,4.496164,1],[0,22512365,1.365729,1],[0,1130758,3.575448,1],[0,13671893,1.120205,1],[0,13671893,1.150895,1],[0,29091321,2.163683,1],[0,2981089,1.887468,1],[0,13671893,1.181586,1],[0,22512365,1.519182,1],[0,22512365,1.549872,1],[0,13260708,1.641944,1],[0,29091321,2.01023,1],[0,13671893,1.242967,1],[0,102796,2.071611,1],[0,13671893,1.335038,1],[0,20250849,2.225064,1],[0,2981089,2.132992,1],[0,6270567,7.012788,1],[0,20250849,2.347826,1],[0,7092937,4.28133,1],[0,22512365,2.317136,1],[0,20250849,2.470588,1],[0,2981089,2.194373,1],[0,20250849,2.56266,1],[0,20250849,2.59335,1],[0,24568288,2.930946,1],[0,22512365,2.409207,1],[0,24568288,2.869565,1],[0,24568288,2.838875,1],[0,2981089,2.225064,1],[0,2981089,2.255754,1],[0,22512365,2.531969,1],[0,22512365,2.59335,1],[0,22512365,2.624041,1],[0,13260708,1.457801,1],[0,2569905,8.209719,1],[0,13671893,1.549872,1],[0,21484403,4.250639,1],[0,22512365,1.918159,1],[0,29091321,1.764706,1],[0,2981089,2.01023,1],[0,20250849,1.887468,1],[0,24568288,3.759591,1],[0,6270567,7.043478,1],[0,22512365,2.040921,1],[0,20250849,1.97954,1],[0,24568288,3.636829,1],[0,8120899,5.109974,1],[0,22512365,2.071611,1],[0,13671893,1.611253,1],[0,24568288,3.514066,1],[0,24568288,3.452685,1],[0,20250849,2.132992,1],[0,22512365,2.132992,1],[0,7092937,4.219949,1],[0,3186682,7.841432,1],[0,4625828,4.31202,1],[0,7092937,2.317136,1],[0,7092937,2.347826,1],[0,4625828,4.434783,1],[0,2775497,7.503836,1],[0,13260708,1.826087,1],[0,7092937,2.439898,1],[0,2775497,7.442455,1],[0,2775497,7.411765,1],[0,6270567,7.595908,1],[0,7092937,2.685422,1],[0,4625828,4.86445,1],[0,7092937,2.746803,1],[0,4625828,4.987212,1],[0,6270567,7.289003,1],[0,17578148,1.396419,1],[0,7092937,2.869565,1],[0,1541943,3.7289,1],[0,7092937,2.992327,1],[0,4625828,3.514066,1],[0,4625828,3.544757,1],[0,4625828,3.575448,1],[0,1336350,4.28133,1],[0,1953128,6.030691,1],[0,4625828,3.69821,1],[0,4625828,3.7289,1],[0,4625828,3.759591,1],[0,4625828,3.790281,1],[0,1336350,4.250639,1],[0,513981,3.974425,1],[0,513981,3.943734,1],[0,17578148,1.089514,1],[0,7092937,2.194373,1],[0,6270567,8.056266,1],[0,513981,3.790281,1],[0,513981,3.759591,1],[0,513981,3.7289,1],[0,4625828,4.189258,1],[0,2775497,7.565217,1],[0,17578148,1.795396,1],[0,1541943,4.465473,1],[0,2981089,1.795396,1],[0,7092937,3.483376,1],[0,17578148,1.856777,1],[0,4625828,6.429668,1],[0,17578148,1.887468,1],[0,17578148,1.918159,1],[0,7092937,3.606138,1],[0,4625828,6.55243,1],[0,17578148,1.948849,1],[0,17578148,1.97954,1],[0,7092937,3.69821,1],[0,8120899,5.631714,1],[0,4625828,6.736573,1],[0,4625828,6.767263,1],[0,17578148,2.102302,1],[0,24568288,5.723785,1],[0,17578148,2.194373,1],[0,4625828,7.012788,1],[0,4625828,5.294118,1],[0,1541943,3.820972,1],[0,4625828,5.355499,1],[0,1541943,3.851662,1],[0,4625828,5.41688,1],[0,17578148,1.580563,1],[0,4625828,5.570332,1],[0,4625828,5.631714,1],[0,4625828,5.662404,1],[0,4625828,5.693095,1],[0,13260708,1.734015,1],[0,4625828,5.846547,1],[0,4625828,5.877238,1],[0,4625828,5.907928,1],[0,7092937,3.268542,1],[0,1541943,4.250639,1],[0,4625828,6.061381,1],[0,7092937,3.329923,1],[0,4625828,6.122762,1],[0,17578148,1.764706,1],[0,1541943,4.342711,1],[0,8120899,1.918159,1],[0,29091321,1.549872,1],[0,29091321,1.519182,1],[0,29091321,1.457801,1],[0,13466300,3.360614,1],[0,13671893,1.97954,1],[0,8120899,1.611253,1],[0,11821561,3.544757,1],[0,102796,2.132992,1],[0,8120899,1.488491,1],[0,13671893,2.102302,1],[0,13466300,3.237852,1],[0,6270567,5.723785,1],[0,29091321,1.242967,1],[0,17578148,3.575448,1],[0,22512365,4.649616,1],[0,13671893,2.255754,1],[0,11821561,3.084399,1],[0,13466300,3.11509,1],[0,11821561,3.023018,1],[0,8120899,2.59335,1],[0,17578148,3.207161,1],[0,22512365,4.127877,1],[0,11821561,4.526854,1],[0,29091321,1.734015,1],[0,8120899,2.470588,1],[0,13671893,1.734015,1],[0,13671893,1.764706,1],[0,8120899,2.378517,1],[0,6270567,6.061381,1],[0,8120899,2.286445,1],[0,8120899,2.255754,1],[0,6270567,6.030691,1],[0,17578148,3.268542,1],[0,8120899,2.132992,1],[0,8120899,2.071611,1],[0,8120899,2.040921,1],[0,17578148,3.329923,1],[0,22512365,4.342711,1],[0,11821561,3.943734,1],[0,28063359,1.120205,1],[0,13671893,2.439898,1],[0,17578148,3.636829,1],[0,13055116,3.851662,1],[0,13671893,2.501279,1],[0,2364312,1.120205,1],[0,2364312,1.150895,1],[0,4831421,0.782609,1],[0,4831421,0.813299,1],[0,1130758,3.974425,1],[0,2364312,1.457801,1],[0,11821561,2.685422,1],[0,2364312,1.488491,1],[0,1953128,4.219949,1],[0,4831421,1.028133,1],[0,11821561,2.654731,1],[0,13466300,2.992327,1],[0,2364312,1.580563,1],[0,21484403,2.746803,1],[0,28063359,1.641944,1],[0,8120899,1.120205,1],[0,11821561,2.961637,1],[0,29091321,1.028133,1],[0,13671893,2.317136,1],[0,11821561,2.869565,1],[0,1953128,4.434783,1],[0,21484403,2.838875,1],[0,29091321,0.936061,1],[0,11821561,2.777494,1],[0,13055116,3.69821,1],[0,28063359,0.598465,1],[0,29091321,0.905371,1],[0,13466300,3.084399,1],[0,3186682,7.012788,1],[0,6270567,5.570332,1],[0,28063359,0.813299,1],[0,28063359,0.84399,1],[0,13671893,2.409207,1],[0,3186682,6.951407,1],[0,3186682,6.920716,1],[0,3186682,7.534527,1],[0,17578148,2.654731,1],[0,17578148,2.685422,1],[0,13055116,3.421995,1],[0,1953128,5.815857,1],[0,24568288,1.734015,1],[0,20250849,3.329923,1],[0,22512365,2.992327,1],[0,22512365,3.023018,1],[0,22512365,3.084399,1],[0,22512365,3.11509,1],[0,1541943,5.140665,1],[0,17578148,2.746803,1],[0,8120899,3.943734,1],[0,13260708,1.396419,1],[0,6270567,6.644501,1],[0,2981089,2.378517,1],[0,20250849,3.7289,1],[0,24568288,1.242967,1],[0,22512365,3.329923,1],[0,24568288,2.56266,1],[0,17578148,2.56266,1],[0,22512365,2.716113,1],[0,22512365,2.746803,1],[0,20250849,2.992327,1],[0,24568288,2.409207,1],[0,24568288,2.378517,1],[0,22512365,2.777494,1],[0,22512365,2.808184,1],[0,24568288,2.286445,1],[0,8120899,4.342711,1],[0,20250849,3.11509,1],[0,13055116,3.268542,1],[0,24568288,2.132992,1],[0,24568288,2.102302,1],[0,20250849,3.207161,1],[0,24568288,2.01023,1],[0,7092937,4.465473,1],[0,24568288,1.948849,1],[0,13055116,3.329923,1],[0,22512365,3.759591,1],[0,21484403,3.483376,1],[0,17578148,2.992327,1],[0,17578148,3.023018,1],[0,8120899,3.11509,1],[0,17578148,3.053708,1],[0,8120899,3.053708,1],[0,17578148,3.084399,1],[0,8120899,2.992327,1],[0,13671893,1.703325,1],[0,11821561,5.017903,1],[0,8120899,2.930946,1],[0,8120899,2.900256,1],[0,2569905,8.424552,1],[0,22512365,4.005115,1],[0,8120899,2.746803,1],[0,20250849,4.895141,1],[0,8120899,2.685422,1],[0,8120899,2.654731,1],[0,22512365,4.066496,1],[0,24568288,1.150895,1],[0,3186682,7.258312,1],[0,22512365,3.391304,1],[0,22512365,3.421995,1],[0,3186682,7.196931,1],[0,17578148,2.838875,1],[0,22512365,3.483376,1],[0,17578148,2.869565,1],[0,22512365,3.544757,1],[0,24568288,0.87468,1],[0,24568288,0.84399,1],[0,1953128,5.294118,1],[0,8120899,3.544757,1],[0,1953128,5.232737,1],[0,20250849,4.035806,1],[0,17578148,2.930946,1],[0,6270567,6.460358,1],[0,22512365,3.667519,1],[0,8120899,3.360614,1],[0,8120899,3.329923,1],[0,8120899,3.299233,1],[0,30119282,2.347826,1],[0,15727816,0.966752,1],[0,3186682,4.925831,1],[0,10793600,2.132992,1],[0,15727816,1.058824,1],[0,15727816,1.089514,1],[0,3186682,4.86445,1],[0,7915306,4.373402,1],[0,20456441,4.496164,1],[0,6270567,1.181586,1],[0,3186682,4.83376,1],[0,10793600,2.225064,1],[0,9560045,5.202046,1],[0,7915306,4.219949,1],[0,15727816,1.457801,1],[0,15727816,1.488491,1],[0,7915306,4.158568,1],[0,7915306,4.649616,1],[0,30119282,2.654731,1],[0,6270567,1.42711,1],[0,3186682,5.140665,1],[0,21484403,1.273657,1],[0,30119282,2.59335,1],[0,6270567,1.365729,1],[0,2364312,3.329923,1],[0,30119282,2.470588,1],[0,15727816,0.629156,1],[0,15727816,0.659847,1],[0,2364312,3.360614,1],[0,15727816,0.721228,1],[0,3186682,4.987212,1],[0,6270567,1.304348,1],[0,15727816,0.813299,1],[0,15727816,0.84399,1],[0,20456441,4.342711,1],[0,15727816,2.163683,1],[0,15727816,2.194373,1],[0,15727816,2.225064,1],[0,7915306,3.7289,1],[0,10793600,2.378517,1],[0,15727816,2.347826,1],[0,15727816,2.378517,1],[0,5037013,6.368286,1],[0,9560045,5.570332,1],[0,513981,2.531969,1],[0,1541943,5.631714,1],[0,15727816,2.501279,1],[0,10793600,2.470588,1],[0,15727816,2.624041,1],[0,3186682,4.710997,1],[0,15727816,2.685422,1],[0,2981089,3.636829,1],[0,15727816,2.746803,1],[0,15727816,1.580563,1],[0,6270567,0.997442,1],[0,15727816,1.672634,1],[0,6270567,0.966752,1],[0,7915306,4.005115,1],[0,5037013,5.662404,1],[0,15727816,1.764706,1],[0,7915306,3.974425,1],[0,15727816,1.826087,1],[0,10793600,2.317136,1],[0,7915306,3.913043,1],[0,7915306,3.820972,1],[0,7915306,3.790281,1],[0,15727816,2.040921,1],[0,15727816,2.071611,1],[0,15727816,2.102302,1],[0,9560045,5.478261,1],[0,5037013,6.092072,1],[0,7915306,5.232737,1],[0,6270567,1.764706,1],[0,20456441,3.606138,1],[0,5037013,4.618926,1],[0,26418620,3.820972,1],[0,5037013,4.680307,1],[0,5037013,4.710997,1],[0,6270567,1.703325,1],[0,5037013,4.772379,1],[0,5037013,4.803069,1],[0,102796,3.483376,1],[0,7915306,5.079284,1],[0,7915306,5.048593,1],[0,102796,3.514066,1],[0,24157104,2.531969,1],[0,5037013,4.956522,1],[0,24157104,2.470588,1],[0,5037013,3.943734,1],[0,7915306,5.570332,1],[0,9560045,4.28133,1],[0,3186682,5.877238,1],[0,2981089,3.268542,1],[0,5037013,4.097187,1],[0,10793600,1.856777,1],[0,5037013,4.158568,1],[0,6270567,1.918159,1],[0,6270567,1.887468,1],[0,6270567,1.856777,1],[0,6270567,1.826087,1],[0,5037013,4.31202,1],[0,3186682,5.846547,1],[0,10793600,1.887468,1],[0,7915306,5.294118,1],[0,7915306,5.263427,1],[0,24157104,3.053708,1],[0,30119282,2.777494,1],[0,1336350,4.005115,1],[0,3186682,5.662404,1],[0,24157104,1.764706,1],[0,3186682,5.601023,1],[0,2981089,3.421995,1],[0,26418620,4.127877,1],[0,3186682,5.508951,1],[0,7915306,4.710997,1],[0,1953128,1.181586,1],[0,30119282,2.746803,1],[0,30119282,2.716113,1],[0,3186682,5.324808,1],[0,14083077,5.631714,1],[0,1953128,0.966752,1],[0,1953128,0.936061,1],[0,3186682,5.232737,1],[0,3186682,5.202046,1],[0,6270567,1.672634,1],[0,1953128,1.580563,1],[0,5037013,5.017903,1],[0,24157104,2.347826,1],[0,24157104,2.317136,1],[0,24157104,2.286445,1],[0,10793600,1.948849,1],[0,5037013,5.079284,1],[0,2981089,3.360614,1],[0,26418620,3.851662,1],[0,24157104,2.102302,1],[0,7915306,4.86445,1],[0,24157104,2.040921,1],[0,24157104,2.01023,1],[0,30119282,2.808184,1],[0,7915306,4.83376,1],[0,3186682,5.754476,1],[0,3186682,5.723785,1],[0,13055116,5.508951,1],[0,7915306,0.905371,1],[0,3186682,4.31202,1],[0,3186682,4.28133,1],[0,30119282,1.764706,1],[0,3186682,4.250639,1],[0,30119282,1.703325,1],[0,3186682,4.189258,1],[0,30119282,1.611253,1],[0,7915306,0.84399,1],[0,3186682,4.127877,1],[0,30119282,1.488491,1],[0,1130758,6.122762,1],[0,30119282,1.304348,1],[0,3186682,3.974425,1],[0,30119282,1.120205,1],[0,30119282,1.089514,1],[0,11615969,2.071611,1],[0,11615969,2.040921,1],[0,11615969,2.01023,1],[0,30119282,2.163683,1],[0,11615969,1.948849,1],[0,1336350,2.716113,1],[0,7915306,1.120205,1],[0,11615969,1.795396,1],[0,30119282,2.071611,1],[0,30119282,2.040921,1],[0,11615969,1.672634,1],[0,102796,3.913043,1],[0,11615969,1.549872,1],[0,11615969,1.519182,1],[0,11615969,1.488491,1],[0,30119282,1.918159,1],[0,10176822,3.452685,1],[0,30119282,1.887468,1],[0,3186682,3.790281,1],[0,16755778,3.329923,1],[0,16755778,3.299233,1],[0,10176822,2.439898,1],[0,16755778,3.207161,1],[0,16755778,3.11509,1],[0,16755778,3.053708,1],[0,10176822,2.286445,1],[0,16755778,2.961637,1],[0,5242605,1.028133,1],[0,5242605,1.058824,1],[0,5242605,1.089514,1],[0,28474543,3.820972,1],[0,16755778,2.900256,1],[0,5242605,1.212276,1],[0,10176822,2.194373,1],[0,28474543,3.7289,1],[0,10176822,2.102302,1],[0,3186682,3.913043,1],[0,3186682,3.851662,1],[0,2981089,3.790281,1],[0,7915306,0.751918,1],[0,7915306,0.721228,1],[0,10793600,3.974425,1],[0,10176822,3.268542,1],[0,7915306,0.352941,1],[0,10793600,4.250639,1],[0,2981089,3.820972,1],[0,10793600,4.434783,1],[0,10793600,4.496164,1],[0,10793600,4.526854,1],[0,10793600,4.741688,1],[0,10793600,4.772379,1],[0,10176822,2.716113,1],[0,5242605,0.414322,1],[0,10176822,2.531969,1],[0,1336350,3.452685,1],[0,102796,3.575448,1],[0,7915306,2.869565,1],[0,7915306,2.838875,1],[0,15727816,3.544757,1],[0,9560045,6.184143,1],[0,15727816,3.636829,1],[0,7915306,2.746803,1],[0,2981089,3.7289,1],[0,6270567,0.138107,1],[0,7915306,2.624041,1],[0,7915306,2.59335,1],[0,3186682,4.680307,1],[0,15727816,3.882353,1],[0,7915306,2.531969,1],[0,6270567,0.046036,1],[0,7915306,2.470588,1],[0,2775497,6.368286,1],[0,7915306,3.421995,1],[0,15727816,2.838875,1],[0,5037013,6.859335,1],[0,5037013,6.951407,1],[0,5037013,6.982097,1],[0,15727816,2.930946,1],[0,7915306,3.268542,1],[0,10793600,2.56266,1],[0,15727816,3.053708,1],[0,2775497,6.460358,1],[0,15727816,3.11509,1],[0,10793600,2.624041,1],[0,15727816,3.176471,1],[0,5037013,7.289003,1],[0,10793600,2.716113,1],[0,7915306,3.053708,1],[0,6270567,0.322251,1],[0,10793600,2.746803,1],[0,7915306,1.764706,1],[0,11615969,2.869565,1],[0,11615969,2.746803,1],[0,7915306,1.611253,1],[0,10793600,3.391304,1],[0,7915306,1.519182,1],[0,10793600,3.421995,1],[0,11615969,2.531969,1],[0,11615969,2.470588,1],[0,10793600,3.452685,1],[0,11615969,2.378517,1],[0,10793600,3.514066,1],[0,7915306,1.335038,1],[0,3186682,4.649616,1],[0,10793600,3.575448,1],[0,1130758,5.846547,1],[0,11615969,2.132992,1],[0,1336350,2.746803,1],[0,9560045,6.429668,1],[0,1336350,3.237852,1],[0,1336350,3.207161,1],[0,15727816,4.158568,1],[0,7915306,2.286445,1],[0,7915306,2.225064,1],[0,7915306,2.194373,1],[0,7915306,2.163683,1],[0,10793600,3.053708,1],[0,10793600,3.11509,1],[0,10793600,3.14578,1],[0,5037013,8.608696,1],[0,1336350,3.11509,1],[0,102796,3.667519,1],[0,2775497,6.276215,1],[0,1336350,3.023018,1],[0,7915306,1.856777,1],[0,7915306,1.826087,1],[0,9560045,3.360614,1],[0,5037013,1.734015,1],[0,3186682,6.276215,1],[0,6270567,2.501279,1],[0,21484403,1.549872,1],[0,2364312,3.023018,1],[0,5037013,1.580563,1],[0,1953128,1.918159,1],[0,9560045,3.268542,1],[0,5037013,1.457801,1],[0,6270567,2.56266,1],[0,1953128,1.948849,1],[0,26418620,3.053708,1],[0,26418620,3.023018,1],[0,3186682,6.398977,1],[0,1953128,2.040921,1],[0,9560045,3.207161,1],[0,3186682,6.429668,1],[0,5037013,1.181586,1],[0,3186682,6.460358,1],[0,2775497,6.644501,1],[0,5037013,1.089514,1],[0,2981089,3.053708,1],[0,1953128,2.102302,1],[0,1953128,2.132992,1],[0,2981089,3.023018,1],[0,5037013,0.905371,1],[0,1953128,2.163683,1],[0,1953128,2.194373,1],[0,6270567,2.716113,1],[0,1953128,2.255754,1],[0,6270567,2.746803,1],[0,6270567,2.317136,1],[0,9560045,3.759591,1],[0,5037013,2.746803,1],[0,26418620,3.452685,1],[0,9560045,3.7289,1],[0,21484403,1.519182,1],[0,5037013,2.624041,1],[0,5037013,2.59335,1],[0,9560045,3.667519,1],[0,5037013,2.531969,1],[0,5037013,2.501279,1],[0,9560045,3.636829,1],[0,5037013,2.439898,1],[0,9560045,3.606138,1],[0,7915306,6.306905,1],[0,5037013,2.347826,1],[0,5037013,1.826087,1],[0,5037013,1.856777,1],[0,9560045,3.391304,1],[0,6270567,2.470588,1],[0,6270567,2.439898,1],[0,3186682,6.214834,1],[0,5037013,2.01023,1],[0,513981,2.59335,1],[0,5037013,2.071611,1],[0,5037013,2.102302,1],[0,9560045,3.514066,1],[0,7915306,6.429668,1],[0,5037013,2.194373,1],[0,2981089,3.14578,1],[0,3186682,6.153453,1],[0,9560045,3.575448,1],[0,7915306,6.337596,1],[0,20456441,1.150895,1],[0,6270567,3.11509,1],[0,20456441,1.089514,1],[0,21484403,1.703325,1],[0,20456441,1.028133,1],[0,13260708,1.150895,1],[0,102796,3.268542,1],[0,10793600,1.273657,1],[0,102796,3.176471,1],[0,2981089,2.838875,1],[0,21484403,1.734015,1],[0,20456441,0.659847,1],[0,102796,3.14578,1],[0,1130758,5.109974,1],[0,102796,3.053708,1],[0,102796,3.023018,1],[0,29502505,2.040921,1],[0,102796,2.961637,1],[0,1130758,4.925831,1],[0,10793600,1.212276,1],[0,29502505,2.01023,1],[0,102796,2.869565,1],[0,21484403,1.764706,1],[0,18400517,1.120205,1],[0,102796,2.808184,1],[0,102796,2.777494,1],[0,6270567,3.391304,1],[0,29502505,1.918159,1],[0,6270567,3.421995,1],[0,102796,2.685422,1],[0,6270567,3.452685,1],[0,102796,2.624041,1],[0,29502505,2.716113,1],[0,26418620,2.777494,1],[0,1953128,2.317136,1],[0,26418620,2.746803,1],[0,26418620,2.716113,1],[0,26418620,2.654731,1],[0,10793600,1.457801,1],[0,5037013,0.475703,1],[0,1953128,2.439898,1],[0,6270567,2.838875,1],[0,1953128,2.531969,1],[0,1953128,2.56266,1],[0,1953128,2.59335,1],[0,1953128,2.624041,1],[0,1953128,2.654731,1],[0,1336350,4.066496,1],[0,29502505,2.347826,1],[0,7915306,7.411765,1],[0,6270567,3.084399,1],[0,20456441,1.273657,1],[0,7915306,7.350384,1],[0,29502505,2.409207,1],[0,6270567,3.053708,1],[0,20456441,1.396419,1],[0,20456441,1.42711,1],[0,6270567,3.023018,1],[0,20456441,1.488491,1],[0,28063359,3.544757,1],[0,2364312,2.900256,1],[0,1953128,2.808184,1],[0,20456441,1.549872,1],[0,6270567,2.961637,1],[0,10793600,1.396419,1],[0,6270567,2.286445,1],[0,5037013,3.69821,1],[0,5037013,3.636829,1],[0,9560045,3.882353,1],[0,1953128,1.672634,1],[0,10793600,1.703325,1],[0,5037013,2.900256,1],[0,5037013,3.790281,1],[0,6270567,2.132992,1],[0,9560045,3.851662,1],[0,2981089,3.207161,1],[0,7915306,5.662404,1],[0,5037013,3.7289,1],[0,5037013,2.930946,1],[0,9560045,4.097187,1],[0,5037013,3.084399,1],[0,5037013,2.961637,1],[0,5037013,3.207161,1],[0,5037013,2.838875,1],[0,3186682,5.938619,1],[0,1953128,1.641944,1],[0,5037013,3.483376,1],[0,26418620,3.606138,1],[0,10793600,1.734015,1],[0,6270567,2.040921,1],[0,9560045,4.035806,1],[0,21484403,1.457801,1],[0,9560045,4.189258,1],[0,5037013,3.514066,1],[0,3186682,2.163683,2],[0,14083077,0.506394,2],[0,26829804,1.089514,2],[0,26829804,1.242967,2],[0,2569905,0.659847,2],[0,2775497,6.245524,2],[0,26829804,1.120205,2],[0,2981089,0.383632,2],[0,26624212,0.905371,2],[0,26213027,0.87468,2],[0,13055116,2.194373,2],[0,26213027,0.905371,2],[0,26829804,1.304348,2],[0,14083077,0.414322,2],[0,27240989,0.782609,2],[0,13466300,2.225064,2],[0,14083077,2.317136,2],[0,2775497,2.685422,2],[0,13671893,1.028133,2],[0,13671893,1.058824,2],[0,102796,3.329923,2],[0,2981089,1.856777,2],[0,3392274,3.053708,2],[0,14288670,1.611253,2],[0,14083077,3.7289,2],[0,3186682,2.040921,2],[0,13055116,2.409207,2],[0,3186682,2.071611,2],[0,27652174,1.887468,2],[0,27446582,1.918159,2],[0,26624212,1.150895,2],[0,2775497,4.649616,2],[0,13055116,1.519182,2],[0,27035397,2.685422,2],[0,2364312,3.913043,2],[0,13260708,1.611253,2],[0,27652174,1.948849,2],[0,2775497,4.342711,2],[0,26829804,2.132992,2],[0,2569905,2.102302,2],[0,3186682,2.132992,2],[0,27240989,3.023018,2],[0,27240989,2.163683,2],[0,27446582,0.629156,2],[0,2569905,0.997442,2],[0,13466300,2.409207,2],[0,3186682,3.14578,2],[0,26418620,1.120205,2],[0,27035397,2.654731,2],[0,102796,1.488491,2],[0,2981089,2.071611,2],[0,27240989,2.194373,2],[0,13877485,1.242967,2],[0,13260708,1.273657,2],[0,2364312,2.531969,2],[0,27035397,0.84399,2],[0,2364312,3.14578,2],[0,27035397,3.176471,2],[0,102796,2.102302,2],[0,26829804,0.966752,2],[0,26624212,2.470588,2],[0,2569905,2.685422,2],[0,102796,1.365729,2],[0,27240989,0.26087,2],[0,2775497,2.808184,2],[0,2775497,0.414322,2],[0,27240989,2.132992,2],[0,26418620,1.150895,2],[0,2569905,1.212276,2],[0,2569905,2.930946,2],[0,3186682,2.225064,2],[0,2775497,0.352941,2],[0,13055116,2.040921,2],[0,27035397,0.168798,2],[0,13466300,2.286445,2],[0,26829804,1.335038,2],[0,2775497,0.29156,2],[0,27446582,1.304348,2],[0,13466300,2.317136,2],[0,27446582,1.273657,2],[0,2775497,0.26087,2],[0,27035397,0.352941,2],[0,27446582,1.058824,2],[0,27240989,2.777494,2],[0,13671893,1.580563,2],[0,26213027,2.102302,2],[0,13260708,1.120205,2],[0,13055116,1.918159,2],[0,3392274,4.035806,2],[0,3186682,0.29156,2],[0,27035397,2.746803,2],[0,2981089,3.882353,2],[0,27652174,1.089514,2],[0,3392274,2.808184,2],[0,102796,2.900256,2],[0,2569905,0.690537,2],[0,13877485,0.690537,2],[0,2981089,2.716113,2],[0,3186682,1.826087,2],[0,27446582,1.826087,2],[0,2569905,1.703325,2],[0,13877485,1.764706,2],[0,3186682,0.383632,2],[0,27240989,1.948849,2],[0,102796,2.992327,2],[0,3186682,1.764706,2],[0,2775497,4.404092,2],[0,26624212,1.488491,2],[0,27652174,1.120205,2],[0,2364312,2.347826,2],[0,13671893,0.936061,2],[0,26213027,1.335038,2],[0,13466300,0.936061,2],[0,3186682,3.882353,2],[0,27652174,0.659847,2],[0,3392274,2.317136,2],[0,27652174,0.751918,2],[0,13260708,1.948849,2],[0,26418620,1.519182,2],[0,3392274,2.286445,2],[0,102796,2.716113,2],[0,3186682,1.887468,2],[0,102796,2.56266,2],[0,2981089,1.519182,2],[0,26829804,0.721228,2],[0,2569905,1.42711,2],[0,3392274,2.59335,2],[0,26213027,1.488491,2],[0,2569905,1.549872,2],[0,13260708,1.918159,2],[0,2569905,1.365729,2],[0,2981089,4.005115,2],[0,3186682,0.230179,2],[0,27240989,1.856777,2],[0,13055116,1.42711,2],[0,27652174,1.580563,2],[0,13466300,1.611253,2],[0,3392274,2.685422,2],[0,13466300,1.212276,2],[0,14083077,2.531969,2],[0,3186682,0.506394,2],[0,27240989,2.040921,2],[0,27652174,1.795396,2],[0,26213027,1.734015,2],[0,27240989,1.764706,2],[0,27652174,1.150895,2],[0,26829804,1.181586,2],[0,26624212,1.212276,2],[0,3186682,4.404092,2],[0,102796,3.237852,2],[0,2981089,1.181586,2],[0,2569905,1.335038,2],[0,26829804,1.150895,2],[0,26624212,2.01023,2],[0,2775497,4.618926,2],[0,102796,1.918159,2],[0,3186682,3.421995,2],[0,13466300,0.690537,2],[0,2981089,1.150895,2],[0,26213027,2.838875,2],[0,102796,1.764706,2],[0,26213027,1.058824,2],[0,2981089,2.869565,2],[0,102796,1.734015,2],[0,2775497,2.624041,2],[0,3186682,4.465473,2],[0,2775497,2.378517,2],[0,102796,3.084399,2],[0,3186682,3.943734,2],[0,13260708,1.764706,2],[0,102796,3.11509,2],[0,27652174,1.457801,2],[0,27240989,2.01023,2],[0,27035397,2.869565,2],[0,3186682,4.035806,2],[0,3186682,4.066496,2],[0,26624212,1.396419,2],[0,14288670,1.365729,2],[0,13671893,0.87468,2],[0,2569905,1.734015,2],[0,3392274,2.930946,2],[0,2569905,1.764706,2],[0,3392274,3.820972,2],[0,27652174,1.42711,2],[0,13466300,0.813299,2],[0,2364312,3.452685,2],[0,26213027,1.672634,2],[0,26213027,1.703325,2],[0,3392274,2.961637,2],[0,26418620,1.242967,2],[0,26624212,1.273657,2],[0,27652174,1.672634,2],[0,2775497,1.641944,2],[0,14288670,2.685422,2],[0,26418620,1.672634,2],[0,2364312,3.084399,2],[0,3186682,1.273657,2],[0,27240989,0.537084,2],[0,3392274,4.956522,2],[0,14083077,1.335038,2],[0,3186682,0.936061,2],[0,2364312,0.966752,2],[0,13877485,3.391304,2],[0,27240989,2.439898,2],[0,2775497,0.87468,2],[0,27035397,2.439898,2],[0,30324875,2.59335,2],[0,27240989,2.56266,2],[0,13466300,3.299233,2],[0,13466300,3.268542,2],[0,26213027,2.930946,2],[0,2569905,0.230179,2],[0,3392274,0.87468,2],[0,26418620,1.734015,2],[0,26418620,1.764706,2],[0,27240989,0.567775,2],[0,27035397,2.501279,2],[0,26418620,2.071611,2],[0,27240989,1.457801,2],[0,3392274,5.263427,2],[0,14288670,0.138107,2],[0,2364312,1.856777,2],[0,26624212,2.961637,2],[0,13055116,1.672634,2],[0,13055116,0.751918,2],[0,27240989,1.058824,2],[0,3186682,0.84399,2],[0,3392274,3.483376,2],[0,3392274,3.514066,2],[0,30324875,4.31202,2],[0,2364312,5.478261,2],[0,13466300,4.772379,2],[0,2364312,1.826087,2],[0,2775497,0.84399,2],[0,3186682,2.56266,2],[0,13466300,4.741688,2],[0,2364312,0.997442,2],[0,2981089,7.473146,2],[0,13466300,3.452685,2],[0,14083077,1.181586,2],[0,2775497,3.14578,2],[0,14083077,1.948849,2],[0,30324875,3.575448,2],[0,2364312,1.734015,2],[0,3186682,5.631714,2],[0,2981089,0.87468,2],[0,13877485,1.488491,2],[0,27240989,1.304348,2],[0,2775497,5.693095,2],[0,2364312,0.721228,2],[0,2364312,1.365729,2],[0,2569905,0.414322,2],[0,2364312,0.84399,2],[0,14083077,1.734015,2],[0,3392274,0.230179,2],[0,2364312,2.685422,2],[0,27240989,3.329923,2],[0,3186682,5.355499,2],[0,3186682,5.386189,2],[0,2569905,0.475703,2],[0,2364312,3.237852,2],[0,14083077,1.764706,2],[0,3186682,5.478261,2],[0,27652174,2.716113,2],[0,2364312,1.641944,2],[0,27035397,4.250639,2],[0,27240989,1.42711,2],[0,13466300,3.14578,2],[0,13466300,4.035806,2],[0,2981089,7.68798,2],[0,3186682,1.212276,2],[0,14083077,1.549872,2],[0,3186682,5.048593,2],[0,2364312,0.29156,2],[0,3392274,3.759591,2],[0,3392274,0.659847,2],[0,3392274,0.629156,2],[0,3392274,4.588235,2],[0,2364312,0.414322,2],[0,13055116,6.55243,2],[0,27240989,1.273657,2],[0,26829804,1.856777,2],[0,14288670,2.409207,2],[0,2364312,0.506394,2],[0,102796,4.31202,2],[0,2364312,0.537084,2],[0,13877485,1.457801,2],[0,27446582,1.887468,2],[0,26829804,1.918159,2],[0,2775497,1.089514,2],[0,27446582,1.856777,2],[0,2569905,3.974425,2],[0,2364312,0.690537,2],[0,27446582,2.439898,2],[0,3392274,0.046036,2],[0,3186682,6.030691,2],[0,27035397,1.42711,2],[0,102796,4.097187,2],[0,14083077,2.777494,2],[0,2364312,1.028133,2],[0,2775497,0.721228,2],[0,26829804,3.299233,2],[0,2775497,6.675192,2],[0,26829804,1.580563,2],[0,30324875,2.900256,2],[0,2981089,3.667519,2],[0,2775497,1.42711,2],[0,2569905,1.181586,2],[0,27035397,1.580563,2],[0,26418620,2.347826,2],[0,27035397,1.611253,2],[0,102796,3.544757,2],[0,2569905,2.347826,2],[0,14083077,0.598465,2],[0,13260708,1.365729,2],[0,27035397,1.703325,2],[0,2364312,4.250639,2],[0,27035397,1.734015,2],[0,13260708,1.058824,2],[0,3186682,6,2],[0,2775497,4.86445,2],[0,102796,5.508951,2],[0,13466300,2.56266,2],[0,14288670,3.514066,2],[0,3186682,2.317136,2],[0,27652174,2.132992,2],[0,27035397,1.242967,2],[0,27240989,4.189258,2],[0,13877485,1.304348,2],[0,13877485,0.567775,2],[0,2775497,6.398977,2],[0,2775497,0.659847,2],[0,2981089,0.567775,2],[0,2981089,3.237852,2],[0,27035397,1.335038,2],[0,26418620,1.089514,2],[0,26418620,2.470588,2],[0,2364312,2.255754,2],[0,27240989,1.580563,2],[0,102796,1.304348,2],[0,27035397,2.624041,2],[0,27035397,1.396419,2],[0,30324875,2.808184,2],[0,102796,0.84399,2],[0,3392274,1.764706,2],[0,14288670,0.537084,2],[0,2775497,1.519182,2],[0,27240989,3.14578,2],[0,14288670,0.506394,2],[0,2569905,2.317136,2],[0,30324875,3.268542,2],[0,30324875,2.654731,2],[0,2364312,2.808184,2],[0,2981089,0.046036,2],[0,26213027,2.378517,2],[0,27652174,2.624041,2],[0,2569905,2.286445,2],[0,102796,0.782609,2],[0,13466300,2.654731,2],[0,3186682,2.654731,2],[0,26418620,3.268542,2],[0,26418620,0.721228,2],[0,2981089,0.076726,2],[0,13466300,3.7289,2],[0,13877485,0.537084,2],[0,2569905,0.506394,2],[0,27035397,2.225064,2],[0,3392274,1.335038,2],[0,13055116,3.483376,2],[0,27240989,4.005115,2],[0,27035397,1.764706,2],[0,2981089,0.690537,2],[0,2981089,0.015345,2],[0,26213027,2.225064,2],[0,27035397,1.826087,2],[0,13877485,2.040921,2],[0,3186682,2.930946,2],[0,26418620,2.225064,2],[0,2569905,0.905371,2],[0,3392274,1.97954,2],[0,3186682,2.900256,2],[0,3392274,5.662404,2],[0,2981089,5.017903,2],[0,26829804,1.641944,2],[0,3186682,0.690537,2],[0,14083077,2.163683,2],[0,26418620,3.11509,2],[0,3392274,1.826087,2],[0,3186682,6.061381,2],[0,26418620,0.84399,2],[0,102796,1.181586,2],[0,3186682,2.746803,2],[0,102796,1.028133,2],[0,3186682,2.716113,2],[0,29708098,1.181586,2],[0,7092937,1.887468,2],[0,29708098,1.212276,2],[0,7092937,1.764706,2],[0,7092937,1.734015,2],[0,1336350,4.496164,2],[0,29708098,1.335038,2],[0,29708098,1.641944,2],[0,7092937,1.242967,2],[0,7092937,1.058824,2],[0,29708098,1.826087,2],[0,7092937,0.966752,2],[0,29708098,2.071611,2],[0,7092937,0.813299,2],[0,29708098,2.255754,2],[0,7092937,0.598465,2],[0,29708098,2.286445,2],[0,21689995,1.242967,2],[0,21689995,1.42711,2],[0,21689995,1.611253,2],[0,21689995,1.641944,2],[0,21689995,1.703325,2],[0,21689995,1.856777,2],[0,21689995,1.887468,2],[0,21689995,2.59335,2],[0,29708098,2.347826,2],[0,29708098,2.409207,2],[0,29708098,2.439898,2],[0,17372555,5.017903,2],[0,10382415,0.629156,2],[0,17372555,4.557545,2],[0,17372555,4.31202,2],[0,21484403,1.058824,2],[0,21484403,1.42711,2],[0,21484403,1.488491,2],[0,21484403,1.580563,2],[0,21484403,1.611253,2],[0,21484403,1.826087,2],[0,21484403,2.040921,2],[0,21484403,2.071611,2],[0,21484403,2.255754,2],[0,21484403,2.347826,2],[0,17578148,3.514066,2],[0,17578148,3.11509,2],[0,17578148,2.961637,2],[0,7092937,4.803069,2],[0,17578148,2.624041,2],[0,21484403,4.066496,2],[0,7092937,1.97954,2],[0,17578148,1.028133,2],[0,7092937,2.132992,2],[0,7092937,2.255754,2],[0,7092937,2.409207,2],[0,7092937,2.531969,2],[0,17578148,1.335038,2],[0,7092937,2.654731,2],[0,7092937,2.716113,2],[0,7092937,2.838875,2],[0,7092937,2.930946,2],[0,17578148,1.519182,2],[0,17578148,1.703325,2],[0,17578148,1.734015,2],[0,7092937,3.391304,2],[0,17578148,2.132992,2],[0,17578148,2.317136,2],[0,6887344,1.672634,2],[0,6887344,1.641944,2],[0,6887344,1.611253,2],[0,6887344,1.549872,2],[0,6887344,1.457801,2],[0,17372555,1.734015,2],[0,6887344,1.273657,2],[0,6887344,1.212276,2],[0,6887344,1.181586,2],[0,17372555,1.611253,2],[0,6887344,1.058824,2],[0,6887344,0.997442,2],[0,17372555,1.519182,2],[0,6887344,0.87468,2],[0,6887344,0.782609,2],[0,6887344,0.690537,2],[0,6887344,0.629156,2],[0,17372555,1.365729,2],[0,17372555,1.304348,2],[0,17372555,1.212276,2],[0,10382415,2.040921,2],[0,10382415,2.347826,2],[0,21895588,1.365729,2],[0,21895588,1.396419,2],[0,21895588,1.457801,2],[0,21895588,1.672634,2],[0,21895588,2.317136,2],[0,28680136,4.035806,2],[0,21895588,2.531969,2],[0,6681752,7.13555,2],[0,6681752,3.820972,2],[0,6681752,2.501279,2],[0,29708098,3.207161,2],[0,10382415,0.936061,2],[0,10382415,0.966752,2],[0,10382415,0.997442,2],[0,17372555,3.667519,2],[0,10382415,1.304348,2],[0,10382415,1.335038,2],[0,10382415,1.42711,2],[0,17372555,3.237852,2],[0,10382415,1.488491,2],[0,6887344,4.434783,2],[0,17372555,2.777494,2],[0,6887344,4.127877,2],[0,17372555,2.56266,2],[0,6887344,3.667519,2],[0,6887344,3.575448,2],[0,6887344,1.826087,2],[0,6887344,1.856777,2],[0,6887344,1.887468,2],[0,6887344,1.948849,2],[0,6887344,2.071611,2],[0,17372555,1.948849,2],[0,6887344,2.132992,2],[0,6887344,2.255754,2],[0,6887344,2.317136,2],[0,17372555,2.040921,2],[0,6887344,2.654731,2],[0,6887344,2.930946,2],[0,6887344,3.023018,2],[0,6887344,3.14578,2],[0,6887344,3.268542,2],[0,17372555,2.225064,2],[0,17372555,2.409207,2],[0,17783740,1.641944,2],[0,17783740,1.580563,2],[0,17783740,1.488491,2],[0,17783740,1.457801,2],[0,17783740,1.42711,2],[0,17783740,1.396419,2],[0,17783740,1.365729,2],[0,17783740,1.304348,2],[0,17783740,1.242967,2],[0,17783740,1.150895,2],[0,719573,1.97954,2],[0,17783740,1.028133,2],[0,719573,1.856777,2],[0,719573,1.672634,2],[0,719573,1.580563,2],[0,719573,1.457801,2],[0,719573,1.365729,2],[0,1336350,1.396419,2],[0,1336350,1.42711,2],[0,1336350,1.519182,2],[0,1336350,1.549872,2],[0,719573,1.212276,2],[0,28885728,2.163683,2],[0,28885728,2.132992,2],[0,1336350,1.611253,2],[0,1336350,1.641944,2],[0,1336350,1.703325,2],[0,28885728,1.795396,2],[0,21278810,0.813299,2],[0,1336350,1.795396,2],[0,21278810,0.905371,2],[0,21278810,1.028133,2],[0,21073218,1.918159,2],[0,7504122,1.335038,2],[0,21073218,2.163683,2],[0,7504122,1.304348,2],[0,7504122,1.273657,2],[0,21073218,2.347826,2],[0,21073218,2.409207,2],[0,7504122,1.212276,2],[0,21073218,2.470588,2],[0,719573,2.470588,2],[0,7504122,1.120205,2],[0,9971230,2.531969,2],[0,719573,2.378517,2],[0,7504122,1.028133,2],[0,7504122,0.997442,2],[0,7504122,0.905371,2],[0,17783740,1.734015,2],[0,17783740,1.764706,2],[0,17783740,1.826087,2],[0,17783740,2.132992,2],[0,21073218,4.219949,2],[0,9971230,2.746803,2],[0,9971230,2.716113,2],[0,1336350,1.212276,2],[0,1336350,1.150895,2],[0,1336350,1.120205,2],[0,1336350,1.028133,2],[0,1336350,0.936061,2],[0,7504122,0.598465,2],[0,7504122,0.629156,2],[0,1336350,0.659847,2],[0,7504122,0.690537,2],[0,1336350,0.598465,2],[0,28885728,0.29156,2],[0,7298529,0.813299,2],[0,7298529,0.751918,2],[0,1336350,1.97954,2],[0,1336350,2.194373,2],[0,1336350,2.347826,2],[0,1336350,2.470588,2],[0,1336350,2.501279,2],[0,7298529,0.107417,2],[0,719573,0.475703,2],[0,719573,0.445013,2],[0,719573,0.29156,2],[0,719573,0.168798,2],[0,10176822,0.567775,2],[0,10176822,0.813299,2],[0,10176822,0.997442,2],[0,10176822,1.273657,2],[0,10176822,1.396419,2],[0,10176822,1.42711,2],[0,10176822,1.519182,2],[0,10176822,1.703325,2],[0,10176822,1.734015,2],[0,10176822,3.329923,2],[0,10176822,3.544757,2],[0,1336350,2.777494,2],[0,1336350,3.053708,2],[0,1336350,3.084399,2],[0,1336350,3.176471,2],[0,1336350,3.391304,2],[0,1336350,3.483376,2],[0,21484403,0.813299,2],[0,1336350,3.69821,2],[0,28885728,1.488491,2],[0,21278810,1.120205,2],[0,719573,1.150895,2],[0,21278810,1.212276,2],[0,21278810,1.365729,2],[0,28885728,1.273657,2],[0,28885728,1.242967,2],[0,28885728,1.212276,2],[0,719573,0.966752,2],[0,7298529,3.820972,2],[0,21278810,1.948849,2],[0,719573,0.721228,2],[0,719573,0.690537,2],[0,7298529,3.053708,2],[0,7298529,2.869565,2],[0,7298529,2.838875,2],[0,7298529,0.905371,2],[0,28885728,0.352941,2],[0,28885728,0.383632,2],[0,28885728,0.445013,2],[0,7298529,1.028133,2],[0,28885728,0.537084,2],[0,7298529,1.212276,2],[0,7298529,1.304348,2],[0,7298529,1.672634,2],[0,7298529,1.764706,2],[0,7298529,1.795396,2],[0,7298529,2.040921,2],[0,7298529,2.163683,2],[0,7298529,2.56266,2],[0,7298529,2.624041,2],[0,7298529,2.685422,2],[0,28885728,1.028133,2],[0,22512365,2.286445,2],[0,22512365,2.347826,2],[0,22512365,2.439898,2],[0,22512365,2.501279,2],[0,22512365,2.654731,2],[0,22512365,2.900256,2],[0,22512365,3.207161,2],[0,22512365,3.299233,2],[0,6270567,5.324808,2],[0,513981,3.360614,2],[0,513981,3.299233,2],[0,513981,3.14578,2],[0,10793600,0.598465,2],[0,6270567,4.158568,2],[0,6270567,4.097187,2],[0,513981,3.053708,2],[0,513981,2.961637,2],[0,10793600,1.150895,2],[0,10793600,1.242967,2],[0,6270567,3.268542,2],[0,10793600,1.304348,2],[0,10793600,1.335038,2],[0,6270567,2.992327,2],[0,513981,2.654731,2],[0,6270567,2.869565,2],[0,10793600,1.519182,2],[0,10793600,1.580563,2],[0,6270567,2.59335,2],[0,6270567,2.531969,2],[0,10793600,1.641944,2],[0,6270567,2.163683,2],[0,6270567,2.102302,2],[0,16961371,2.01023,2],[0,16961371,1.795396,2],[0,16961371,1.672634,2],[0,16961371,1.549872,2],[0,16961371,1.519182,2],[0,513981,5.017903,2],[0,16961371,1.181586,2],[0,16961371,1.120205,2],[0,16961371,1.089514,2],[0,513981,4.741688,2],[0,16961371,0.905371,2],[0,513981,4.526854,2],[0,513981,4.005115,2],[0,513981,3.820972,2],[0,6270567,7.841432,2],[0,6270567,7.780051,2],[0,22512365,2.194373,2],[0,22512365,2.163683,2],[0,22512365,2.102302,2],[0,22512365,1.97954,2],[0,22512365,1.948849,2],[0,22512365,1.826087,2],[0,22512365,1.611253,2],[0,22512365,1.580563,2],[0,22512365,1.457801,2],[0,22512365,1.304348,2],[0,22512365,1.028133,2],[0,22512365,0.782609,2],[0,1541943,4.31202,2],[0,1541943,4.066496,2],[0,1541943,4.035806,2],[0,6270567,7.13555,2],[0,6270567,7.749361,2],[0,22717957,2.317136,2],[0,22717957,2.409207,2],[0,16755778,2.347826,2],[0,22717957,2.531969,2],[0,16755778,2.286445,2],[0,513981,2.347826,2],[0,16755778,1.856777,2],[0,16755778,1.826087,2],[0,22717957,3.360614,2],[0,16755778,1.672634,2],[0,16755778,1.611253,2],[0,16755778,1.580563,2],[0,513981,2.317136,2],[0,513981,2.225064,2],[0,513981,2.132992,2],[0,16755778,1.304348,2],[0,16755778,1.242967,2],[0,513981,1.856777,2],[0,16755778,1.089514,2],[0,513981,1.795396,2],[0,513981,1.703325,2],[0,513981,1.549872,2],[0,29913690,0.567775,2],[0,29913690,0.84399,2],[0,16755778,0.690537,2],[0,29913690,0.997442,2],[0,29913690,1.120205,2],[0,29913690,1.273657,2],[0,29913690,1.488491,2],[0,29913690,1.641944,2],[0,29913690,1.795396,2],[0,6064975,4.496164,2],[0,6270567,2.071611,2],[0,10793600,1.826087,2],[0,10793600,1.918159,2],[0,10793600,1.97954,2],[0,6270567,1.580563,2],[0,6270567,1.549872,2],[0,6270567,1.457801,2],[0,1541943,5.324808,2],[0,6270567,1.058824,2],[0,6270567,0.87468,2],[0,6270567,0.84399,2],[0,6270567,0.721228,2],[0,6270567,0.629156,2],[0,6270567,0.537084,2],[0,6270567,0.199488,2],[0,6270567,0.168798,2],[0,22717957,2.163683,2],[0,22717957,2.132992,2],[0,22717957,2.071611,2],[0,22717957,2.040921,2],[0,22717957,1.887468,2],[0,22717957,1.580563,2],[0,22717957,1.549872,2],[0,22717957,1.396419,2],[0,28474543,3.483376,2],[0,16755778,2.685422,2],[0,22717957,0.567775,2],[0,16755778,3.421995,2],[0,10793600,4.86445,2],[0,10793600,4.588235,2],[0,513981,2.439898,2],[0,10793600,3.882353,2],[0,10793600,3.207161,2],[0,22101180,2.01023,2],[0,22101180,2.040921,2],[0,22101180,2.071611,2],[0,17166963,2.378517,2],[0,28680136,1.457801,2],[0,22101180,2.225064,2],[0,28680136,1.42711,2],[0,6681752,0.721228,2],[0,17166963,2.255754,2],[0,22101180,3.084399,2],[0,28680136,0.84399,2],[0,28680136,0.598465,2],[0,28680136,0.567775,2],[0,28680136,0.537084,2],[0,28680136,0.414322,2],[0,28680136,0.352941,2],[0,22101180,3.667519,2],[0,17166963,2.071611,2],[0,17166963,1.856777,2],[0,17166963,1.826087,2],[0,17166963,1.703325,2],[0,17166963,1.580563,2],[0,17166963,1.457801,2],[0,17166963,1.396419,2],[0,17166963,1.273657,2],[0,17166963,1.212276,2],[0,17166963,1.089514,2],[0,17166963,0.782609,2],[0,29708098,6.184143,2],[0,17166963,0.445013,2],[0,513981,6.58312,2],[0,10588007,0.905371,2],[0,6681752,2.317136,2],[0,6681752,2.132992,2],[0,6681752,1.948849,2],[0,6681752,1.918159,2],[0,6681752,1.887468,2],[0,6681752,1.764706,2],[0,6681752,1.703325,2],[0,6681752,1.611253,2],[0,6681752,1.396419,2],[0,6681752,1.365729,2],[0,6681752,1.181586,2],[0,28680136,3.391304,2],[0,6681752,1.058824,2],[0,6681752,0.997442,2],[0,28680136,3.176471,2],[0,28680136,2.56266,2],[0,22101180,1.97954,2],[0,22101180,1.887468,2],[0,22101180,1.672634,2],[0,22101180,1.641944,2],[0,22101180,1.42711,2],[0,22101180,1.396419,2],[0,28680136,1.826087,2],[0,22101180,1.273657,2],[0,28680136,1.918159,2],[0,17166963,2.470588,2],[0,28680136,2.040921,2],[0,28680136,2.132992,2],[0,28680136,2.194373,2],[0,22101180,0.87468,2],[0,28680136,2.255754,2],[0,28680136,2.317136,2],[0,28680136,2.347826,2],[0,22306772,3.483376,2],[0,22306772,3.575448,2],[0,6476160,3.053708,2],[0,6476160,2.838875,2],[0,6476160,2.746803,2],[0,6476160,2.56266,2],[0,6476160,2.409207,2],[0,1541943,2.255754,2],[0,6476160,2.194373,2],[0,6476160,2.132992,2],[0,6476160,2.01023,2],[0,6476160,1.948849,2],[0,6476160,1.795396,2],[0,6476160,1.764706,2],[0,6476160,1.703325,2],[0,6476160,1.672634,2],[0,16961371,2.071611,2],[0,16961371,2.102302,2],[0,16961371,2.409207,2],[0,16961371,3.084399,2],[0,6476160,0.168798,2],[0,1541943,3.299233,2],[0,6476160,0.659847,2],[0,1541943,2.992327,2],[0,6476160,0.997442,2],[0,6476160,1.058824,2],[0,1541943,2.777494,2],[0,6476160,1.212276,2],[0,1541943,2.439898,2],[0,6476160,1.549872,2],[0,6476160,1.580563,2],[0,6476160,1.611253,2],[0,1541943,2.409207,2],[0,10588007,0.966752,2],[0,10588007,1.150895,2],[0,10588007,1.488491,2],[0,10588007,1.549872,2],[0,6476160,7.657289,2],[0,10588007,1.611253,2],[0,6476160,6.982097,2],[0,10588007,2.255754,2],[0,10588007,4.219949,2],[0,6476160,4.158568,2],[0,1541943,0.690537,2],[0,22306772,1.242967,2],[0,1541943,1.120205,2],[0,6476160,3.7289,2],[0,1541943,1.42711,2],[0,1541943,1.457801,2],[0,22306772,3.391304,2],[0,22306772,3.207161,2],[0,22306772,3.14578,2],[0,6476160,3.452685,2],[0,22306772,2.900256,2],[0,1541943,1.97954,2],[0,22306772,2.624041,2],[0,1541943,1.887468,2],[0,22306772,2.439898,2],[0,22306772,2.255754,2],[0,22306772,2.163683,2],[0,1541943,1.734015,2],[0,1541943,1.611253,2],[0,22306772,1.97954,2],[0,6476160,3.636829,2],[0,22306772,1.795396,2],[0,1541943,1.488491,2],[0,19839664,1.42711,2],[0,19839664,1.457801,2],[0,19839664,1.519182,2],[0,18811702,1.42711,2],[0,18811702,1.365729,2],[0,19839664,1.672634,2],[0,925166,0.629156,2],[0,19839664,1.795396,2],[0,18811702,1.273657,2],[0,925166,0.598465,2],[0,19839664,1.918159,2],[0,19839664,2.102302,2],[0,19839664,2.163683,2],[0,19839664,2.194373,2],[0,19839664,2.286445,2],[0,19839664,2.624041,2],[0,19839664,2.654731,2],[0,19839664,2.716113,2],[0,925166,0.383632,2],[0,19839664,3.023018,2],[0,925166,0.26087,2],[0,19839664,3.176471,2],[0,18811702,0.598465,2],[0,19839664,3.360614,2],[0,18811702,0.537084,2],[0,18811702,0.475703,2],[0,18811702,0.352941,2],[0,19839664,3.7289,2],[0,19839664,5.109974,2],[0,19839664,5.508951,2],[0,9354453,0.567775,2],[0,9354453,1.058824,2],[0,8532083,1.948849,2],[0,8532083,1.764706,2],[0,8532083,1.672634,2],[0,8532083,1.611253,2],[0,8532083,1.488491,2],[0,8532083,1.365729,2],[0,8532083,1.304348,2],[0,8532083,0.905371,2],[0,18811702,3.176471,2],[0,18811702,2.992327,2],[0,925166,0.84399,2],[0,18811702,2.59335,2],[0,18811702,2.409207,2],[0,18811702,2.347826,2],[0,18811702,2.286445,2],[0,18811702,2.255754,2],[0,19839664,1.365729,2],[0,19839664,1.335038,2],[0,18811702,1.519182,2],[0,18811702,1.549872,2],[0,18811702,1.580563,2],[0,18811702,1.611253,2],[0,18811702,1.672634,2],[0,18811702,1.703325,2],[0,19839664,1.089514,2],[0,19839664,1.058824,2],[0,19839664,0.936061,2],[0,18811702,1.795396,2],[0,19839664,0.84399,2],[0,18811702,2.01023,2],[0,18811702,2.040921,2],[0,18811702,2.163683,2],[0,18811702,2.194373,2],[0,8326491,1.887468,2],[0,8326491,1.826087,2],[0,1130758,1.795396,2],[0,8326491,1.764706,2],[0,20045256,3.084399,2],[0,8326491,1.672634,2],[0,8326491,1.580563,2],[0,8326491,1.242967,2],[0,8326491,1.150895,2],[0,8326491,1.120205,2],[0,1130758,2.163683,2],[0,8326491,0.936061,2],[0,20045256,4.434783,2],[0,1130758,2.624041,2],[0,1130758,3.023018,2],[0,1130758,3.084399,2],[0,1130758,3.14578,2],[0,1130758,3.176471,2],[0,18606110,3.023018,2],[0,18606110,2.746803,2],[0,18606110,2.439898,2],[0,18606110,2.225064,2],[0,18606110,2.01023,2],[0,18606110,1.703325,2],[0,18606110,1.672634,2],[0,18606110,1.488491,2],[0,18606110,1.396419,2],[0,18606110,1.304348,2],[0,18606110,0.936061,2],[0,18606110,0.813299,2],[0,18606110,0.690537,2],[0,18606110,0.598465,2],[0,9354453,1.212276,2],[0,9354453,1.396419,2],[0,9354453,1.457801,2],[0,9354453,1.519182,2],[0,9354453,1.611253,2],[0,9354453,1.703325,2],[0,9354453,1.795396,2],[0,9354453,2.040921,2],[0,8326491,3.913043,2],[0,8326491,3.268542,2],[0,8326491,3.053708,2],[0,8326491,2.992327,2],[0,8326491,2.746803,2],[0,8326491,2.624041,2],[0,9354453,3.7289,2],[0,20045256,0.659847,2],[0,8326491,1.948849,2],[0,1130758,1.611253,2],[0,1130758,1.580563,2],[0,1130758,1.549872,2],[0,20045256,2.225064,2],[0,8326491,2.225064,2],[0,20045256,1.826087,2],[0,20045256,1.795396,2],[0,20045256,1.734015,2],[0,1130758,1.457801,2],[0,20045256,1.549872,2],[0,20045256,1.242967,2],[0,20045256,1.120205,2],[0,20045256,0.997442,2],[0,20045256,0.87468,2],[0,20045256,0.782609,2],[0,1130758,0.629156,2],[0,29296913,1.519182,2],[0,19428479,0.936061,2],[0,19428479,1.058824,2],[0,29296913,1.242967,2],[0,19428479,1.181586,2],[0,19428479,1.212276,2],[0,19428479,1.304348,2],[0,19428479,1.42711,2],[0,29296913,1.150895,2],[0,19428479,1.488491,2],[0,29296913,1.089514,2],[0,19428479,1.641944,2],[0,19428479,1.672634,2],[0,19428479,1.856777,2],[0,19428479,2.071611,2],[0,19428479,2.225064,2],[0,19428479,2.317136,2],[0,8737676,4.465473,2],[0,19428479,3.14578,2],[0,29296913,0.936061,2],[0,8737676,2.409207,2],[0,19428479,5.846547,2],[0,8737676,1.764706,2],[0,29296913,0.905371,2],[0,29296913,0.813299,2],[0,8737676,1.396419,2],[0,8737676,1.242967,2],[0,8737676,1.089514,2],[0,8737676,0.598465,2],[0,19017294,2.930946,2],[0,19017294,2.654731,2],[0,19017294,2.225064,2],[0,925166,4.803069,2],[0,925166,4.86445,2],[0,8943268,0.782609,2],[0,925166,4.956522,2],[0,8943268,1.273657,2],[0,8943268,1.396419,2],[0,8943268,1.42711,2],[0,8943268,1.549872,2],[0,19222887,2.439898,2],[0,8943268,2.01023,2],[0,19222887,2.194373,2],[0,19222887,1.948849,2],[0,8943268,2.286445,2],[0,19222887,1.887468,2],[0,19222887,1.734015,2],[0,19222887,1.641944,2],[0,29296913,1.580563,2],[0,29296913,1.611253,2],[0,29296913,1.734015,2],[0,19428479,0.506394,2],[0,29296913,1.826087,2],[0,29296913,2.132992,2],[0,925166,5.570332,2],[0,925166,3.391304,2],[0,925166,3.452685,2],[0,19222887,0.598465,2],[0,19222887,0.629156,2],[0,925166,3.974425,2],[0,19222887,0.751918,2],[0,19222887,0.813299,2],[0,925166,4.219949,2],[0,19222887,1.335038,2],[0,19222887,1.42711,2],[0,19634071,0.905371,2],[0,19634071,0.936061,2],[0,19634071,1.028133,2],[0,925166,1.058824,2],[0,19634071,1.120205,2],[0,19634071,1.150895,2],[0,925166,1.028133,2],[0,19634071,1.273657,2],[0,9148861,1.120205,2],[0,19634071,1.457801,2],[0,19634071,1.519182,2],[0,9148861,1.212276,2],[0,19634071,1.611253,2],[0,9148861,1.273657,2],[0,19634071,1.703325,2],[0,19634071,1.764706,2],[0,8532083,2.255754,2],[0,8532083,2.286445,2],[0,8532083,2.409207,2],[0,8532083,2.685422,2],[0,9148861,3.606138,2],[0,19634071,4.895141,2],[0,19634071,3.943734,2],[0,19634071,3.820972,2],[0,19634071,3.667519,2],[0,9148861,1.948849,2],[0,19634071,2.624041,2],[0,9148861,1.611253,2],[0,19634071,2.225064,2],[0,19634071,2.132992,2],[0,19634071,1.948849,2],[0,19634071,1.918159,2],[0,925166,0.905371,2],[0,19017294,2.194373,2],[0,19017294,2.071611,2],[0,19017294,1.826087,2],[0,19017294,1.672634,2],[0,19017294,1.641944,2],[0,19017294,1.580563,2],[0,19017294,1.549872,2],[0,19017294,1.457801,2],[0,925166,3.023018,2],[0,925166,2.992327,2],[0,925166,2.900256,2],[0,19017294,1.058824,2],[0,19017294,0.997442,2],[0,925166,2.808184,2],[0,19017294,0.905371,2],[0,19017294,0.87468,2],[0,925166,1.150895,2],[0,19634071,0.721228,2],[0,19634071,0.690537,2],[0,9148861,0.84399,2],[0,9148861,0.782609,2],[0,925166,1.335038,2],[0,925166,7.503836,2],[0,9148861,0.506394,2],[0,925166,1.519182,2],[0,925166,1.549872,2],[0,925166,1.580563,2],[0,925166,1.918159,2],[0,925166,2.378517,2],[0,925166,2.409207,2],[0,925166,2.56266,2],[0,925166,2.59335,2],[0,925166,2.716113,2],[0,18194925,0.87468,2],[0,7709714,5.754476,2],[0,719573,5.846547,2],[0,719573,5.662404,2],[0,719573,5.631714,2],[0,9765638,0.905371,2],[0,9765638,1.273657,2],[0,7709714,4.588235,2],[0,9765638,1.641944,2],[0,7709714,3.913043,2],[0,7709714,2.716113,2],[0,7709714,2.685422,2],[0,7709714,2.624041,2],[0,7709714,2.56266,2],[0,7709714,2.347826,2],[0,7709714,2.286445,2],[0,7709714,2.194373,2],[0,7709714,2.102302,2],[0,7709714,1.97954,2],[0,7709714,1.887468,2],[0,7709714,1.795396,2],[0,7709714,1.611253,2],[0,7709714,1.488491,2],[0,7709714,1.365729,2],[0,7709714,1.273657,2],[0,7709714,1.150895,2],[0,7709714,1.058824,2],[0,7709714,0.966752,2],[0,20867626,0.230179,2],[0,20867626,0.567775,2],[0,20867626,0.813299,2],[0,20867626,1.150895,2],[0,7915306,1.918159,2],[0,7915306,1.887468,2],[0,7915306,1.795396,2],[0,7915306,1.703325,2],[0,7915306,1.641944,2],[0,7915306,1.580563,2],[0,7915306,1.457801,2],[0,7915306,1.304348,2],[0,7915306,1.273657,2],[0,7915306,0.997442,2],[0,7915306,0.690537,2],[0,29502505,2.930946,2],[0,20662033,0.659847,2],[0,20662033,0.721228,2],[0,20662033,1.089514,2],[0,20662033,1.242967,2],[0,18194925,0.905371,2],[0,18194925,0.997442,2],[0,18194925,1.058824,2],[0,18194925,1.089514,2],[0,18194925,1.212276,2],[0,18194925,1.242967,2],[0,719573,6.675192,2],[0,18194925,1.304348,2],[0,18194925,1.42711,2],[0,18194925,1.826087,2],[0,18194925,2.040921,2],[0,18194925,2.071611,2],[0,18194925,2.286445,2],[0,29502505,3.11509,2],[0,18194925,2.777494,2],[0,18194925,2.992327,2],[0,20662033,1.519182,2],[0,7504122,2.071611,2],[0,719573,2.992327,2],[0,719573,2.930946,2],[0,7504122,1.856777,2],[0,7504122,1.826087,2],[0,7504122,1.764706,2],[0,7504122,1.703325,2],[0,7504122,1.641944,2],[0,719573,2.838875,2],[0,9971230,1.212276,2],[0,9971230,1.365729,2],[0,9971230,1.396419,2],[0,9971230,1.519182,2],[0,719573,2.56266,2],[0,9971230,1.641944,2],[0,9971230,1.672634,2],[0,21073218,0.751918,2],[0,21073218,0.813299,2],[0,719573,2.501279,2],[0,9971230,1.826087,2],[0,9971230,1.856777,2],[0,21073218,0.997442,2],[0,9971230,1.887468,2],[0,21073218,1.181586,2],[0,21073218,1.273657,2],[0,21073218,1.335038,2],[0,21073218,1.365729,2],[0,21073218,1.42711,2],[0,21073218,1.580563,2],[0,7504122,1.488491,2],[0,9971230,2.225064,2],[0,7504122,1.42711,2],[0,20867626,1.396419,2],[0,20867626,1.457801,2],[0,20867626,1.795396,2],[0,20867626,1.826087,2],[0,20867626,1.948849,2],[0,20867626,2.409207,2],[0,20867626,2.777494,2],[0,20867626,2.900256,2],[0,20867626,2.992327,2],[0,20867626,3.084399,2],[0,20867626,3.207161,2],[0,20867626,3.299233,2],[0,20867626,3.421995,2],[0,20867626,3.851662,2],[0,7504122,6.982097,2],[0,17989333,1.703325,2],[0,719573,3.023018,2],[0,7504122,2.163683,2],[0,7504122,2.347826,2],[0,719573,3.360614,2],[0,719573,3.452685,2],[0,719573,3.483376,2],[0,719573,3.544757,2],[0,719573,3.820972,2],[0,719573,3.943734,2],[0,7504122,5.263427,2],[0,17989333,0.936061,2],[0,17989333,1.304348,2],[0,17989333,1.335038,2],[0,17989333,1.42711,2],[0,17989333,1.457801,2],[0,17989333,1.580563,2],[0,17989333,1.611253,2],[0,29091321,1.42711,2],[0,29091321,1.396419,2],[0,8120899,1.580563,2],[0,8120899,1.549872,2],[0,29091321,1.304348,2],[0,8120899,1.396419,2],[0,8120899,1.365729,2],[0,8120899,1.304348,2],[0,29091321,1.120205,2],[0,29091321,1.089514,2],[0,29091321,0.997442,2],[0,29091321,0.813299,2],[0,8120899,0.84399,2],[0,29091321,0.782609,2],[0,29091321,0.721228,2],[0,8120899,0.690537,2],[0,29091321,0.475703,2],[0,9560045,0.87468,2],[0,9560045,0.997442,2],[0,9560045,1.028133,2],[0,9560045,1.120205,2],[0,9560045,1.150895,2],[0,9560045,1.242967,2],[0,29502505,0.352941,2],[0,9560045,1.365729,2],[0,9560045,1.396419,2],[0,29502505,0.506394,2],[0,29502505,0.537084,2],[0,9560045,1.549872,2],[0,29502505,0.751918,2],[0,29502505,1.120205,2],[0,9560045,1.918159,2],[0,1130758,3.299233,2],[0,29091321,2.685422,2],[0,29091321,2.501279,2],[0,1130758,3.421995,2],[0,1130758,3.452685,2],[0,29091321,2.286445,2],[0,20250849,0.690537,2],[0,20250849,0.782609,2],[0,20250849,0.87468,2],[0,20250849,0.905371,2],[0,20250849,0.936061,2],[0,29091321,1.97954,2],[0,20250849,0.997442,2],[0,20250849,1.028133,2],[0,20250849,1.058824,2],[0,20250849,1.335038,2],[0,8120899,1.856777,2],[0,8120899,1.887468,2],[0,8120899,2.102302,2],[0,8120899,2.194373,2],[0,8120899,2.317136,2],[0,8120899,2.409207,2],[0,8120899,2.439898,2],[0,8120899,2.869565,2],[0,8120899,2.961637,2],[0,20250849,2.378517,2],[0,20250849,2.163683,2],[0,20250849,2.071611,2],[0,20250849,1.826087,2],[0,29091321,1.795396,2],[0,20250849,1.580563,2],[0,20250849,1.519182,2],[0,20250849,1.457801,2],[0,18400517,1.304348,2],[0,29502505,1.887468,2],[0,18400517,1.181586,2],[0,1130758,4.680307,2],[0,18400517,1.150895,2],[0,18400517,1.089514,2],[0,18400517,1.028133,2],[0,18400517,0.966752,2],[0,18400517,0.936061,2],[0,18400517,0.87468,2],[0,20456441,0.445013,2],[0,20456441,0.475703,2],[0,18400517,0.84399,2],[0,29502505,2.102302,2],[0,20456441,0.629156,2],[0,20456441,0.721228,2],[0,7915306,1.948849,2],[0,7915306,2.347826,2],[0,7915306,2.439898,2],[0,7915306,2.930946,2],[0,7915306,3.329923,2],[0,7915306,5.017903,2],[0,9560045,4.588235,2],[0,7915306,5.386189,2],[0,9560045,4.158568,2],[0,18400517,0.29156,2],[0,29502505,2.378517,2],[0,18400517,0.598465,2],[0,20456441,0.966752,2],[0,20456441,0.905371,2],[0,20456441,0.84399,2],[0,20456441,0.813299,2],[0,29502505,2.194373,2],[0,9560045,2.071611,2],[0,9560045,2.102302,2],[0,9560045,2.132992,2],[0,9560045,2.163683,2],[0,9560045,2.194373,2],[0,9560045,2.225064,2],[0,29502505,1.181586,2],[0,9560045,2.317136,2],[0,9560045,2.409207,2],[0,9560045,2.56266,2],[0,29502505,1.335038,2],[0,9560045,2.746803,2],[0,29502505,1.365729,2],[0,9560045,2.838875,2],[0,29502505,1.488491,2],[0,18400517,2.624041,2],[0,18400517,1.335038,2],[0,18400517,1.365729,2],[0,18400517,1.396419,2],[0,18400517,1.457801,2],[0,9560045,3.084399,2],[0,18400517,1.611253,2],[0,29502505,1.734015,2],[0,18400517,1.795396,2],[0,18400517,1.826087,2],[0,18400517,1.887468,2],[0,18400517,2.01023,2],[0,18400517,2.071611,2],[0,29502505,1.641944,2],[0,18400517,2.194373,2],[0,18400517,2.255754,2],[0,18400517,2.347826,2],[0,18400517,2.378517,2],[0,4625828,3.023018,2],[0,4625828,2.992327,2],[0,4625828,2.961637,2],[0,4625828,2.838875,2],[0,4625828,2.531969,2],[0,4625828,2.378517,2],[0,4625828,2.225064,2],[0,4625828,2.102302,2],[0,4625828,1.856777,2],[0,4625828,1.795396,2],[0,4625828,1.734015,2],[0,4625828,1.703325,2],[0,308389,3.544757,2],[0,4625828,1.396419,2],[0,4625828,1.242967,2],[0,30119282,5.601023,2],[0,4625828,1.058824,2],[0,4625828,0.782609,2],[0,4625828,0.721228,2],[0,12027154,1.457801,2],[0,12027154,1.519182,2],[0,12027154,1.580563,2],[0,12027154,1.826087,2],[0,24773881,0.721228,2],[0,24773881,0.813299,2],[0,12027154,1.97954,2],[0,12027154,2.01023,2],[0,12027154,2.071611,2],[0,12027154,2.225064,2],[0,24773881,1.212276,2],[0,4625828,0.659847,2],[0,4831421,0.751918,2],[0,28063359,1.273657,2],[0,28063359,1.212276,2],[0,28063359,1.150895,2],[0,28063359,0.659847,2],[0,28063359,0.629156,2],[0,28063359,0.537084,2],[0,24568288,0.352941,2],[0,24568288,1.028133,2],[0,24568288,1.089514,2],[0,24568288,1.120205,2],[0,24568288,1.335038,2],[0,24568288,1.396419,2],[0,24568288,1.457801,2],[0,24568288,1.488491,2],[0,24568288,1.641944,2],[0,24568288,1.795396,2],[0,24568288,1.826087,2],[0,24568288,1.856777,2],[0,24568288,1.887468,2],[0,24568288,1.918159,2],[0,24568288,1.97954,2],[0,24568288,2.163683,2],[0,24568288,2.225064,2],[0,24568288,2.59335,2],[0,24568288,2.716113,2],[0,4625828,6.184143,2],[0,4625828,5.601023,2],[0,4625828,4.956522,2],[0,4625828,4.28133,2],[0,4625828,4.035806,2],[0,4625828,3.421995,2],[0,24979473,1.42711,2],[0,24979473,1.519182,2],[0,24979473,1.672634,2],[0,24979473,1.764706,2],[0,24979473,1.795396,2],[0,24979473,1.948849,2],[0,24979473,2.040921,2],[0,4420236,2.409207,2],[0,24979473,2.777494,2],[0,308389,1.887468,2],[0,4420236,2.132992,2],[0,4420236,2.040921,2],[0,4420236,1.97954,2],[0,4420236,1.641944,2],[0,4420236,1.611253,2],[0,308389,1.580563,2],[0,4420236,1.519182,2],[0,12232746,0.936061,2],[0,308389,1.457801,2],[0,4420236,1.335038,2],[0,4420236,1.150895,2],[0,308389,1.335038,2],[0,4420236,1.089514,2],[0,15111039,1.396419,2],[0,308389,1.212276,2],[0,12232746,1.150895,2],[0,308389,0.659847,2],[0,12232746,1.549872,2],[0,12232746,1.734015,2],[0,15111039,0.537084,2],[0,12232746,1.826087,2],[0,24773881,1.304348,2],[0,12027154,2.255754,2],[0,24773881,1.396419,2],[0,12027154,2.317136,2],[0,24773881,1.672634,2],[0,12027154,2.439898,2],[0,12027154,2.531969,2],[0,24773881,2.01023,2],[0,24773881,2.225064,2],[0,308389,2.470588,2],[0,12027154,3.084399,2],[0,12027154,3.176471,2],[0,24773881,2.930946,2],[0,4420236,5.631714,2],[0,4420236,4.618926,2],[0,4420236,4.250639,2],[0,4420236,4.035806,2],[0,4420236,3.913043,2],[0,4420236,3.851662,2],[0,4420236,3.820972,2],[0,4420236,3.606138,2],[0,4420236,3.391304,2],[0,4420236,3.207161,2],[0,4420236,2.869565,2],[0,4420236,2.838875,2],[0,4420236,2.808184,2],[0,24979473,0.905371,2],[0,308389,2.378517,2],[0,24979473,1.181586,2],[0,24979473,1.212276,2],[0,24979473,1.242967,2],[0,24979473,1.365729,2],[0,5037013,3.023018,2],[0,5037013,2.716113,2],[0,5037013,2.409207,2],[0,5037013,2.255754,2],[0,5037013,2.132992,2],[0,5037013,1.97954,2],[0,1953128,1.856777,2],[0,5037013,1.764706,2],[0,5037013,1.672634,2],[0,5037013,1.611253,2],[0,5037013,1.519182,2],[0,5037013,1.488491,2],[0,5037013,1.42711,2],[0,5037013,1.335038,2],[0,1953128,2.01023,2],[0,5037013,1.212276,2],[0,5037013,1.150895,2],[0,5037013,1.028133,2],[0,5037013,0.751918,2],[0,5037013,0.721228,2],[0,1953128,2.347826,2],[0,5037013,0.598465,2],[0,1953128,2.378517,2],[0,1953128,2.409207,2],[0,5037013,0.506394,2],[0,1953128,2.838875,2],[0,1953128,2.900256,2],[0,30119282,2.869565,2],[0,30119282,2.900256,2],[0,1953128,3.667519,2],[0,30119282,3.483376,2],[0,15727816,0.905371,2],[0,15727816,0.751918,2],[0,30119282,2.378517,2],[0,15727816,0.537084,2],[0,30119282,2.56266,2],[0,15727816,0.475703,2],[0,15727816,0.352941,2],[0,1953128,0.721228,2],[0,24157104,1.42711,2],[0,15727816,0.199488,2],[0,24157104,1.519182,2],[0,24157104,1.549872,2],[0,24157104,1.580563,2],[0,15727816,0.168798,2],[0,1953128,1.365729,2],[0,24157104,1.703325,2],[0,24157104,1.734015,2],[0,24157104,1.795396,2],[0,15727816,0.138107,2],[0,24157104,1.887468,2],[0,15727816,0.076726,2],[0,24157104,1.948849,2],[0,1953128,1.549872,2],[0,1953128,1.611253,2],[0,5037013,4.496164,2],[0,5037013,4.342711,2],[0,5037013,4.035806,2],[0,5037013,3.851662,2],[0,5037013,3.759591,2],[0,5037013,3.606138,2],[0,5037013,3.544757,2],[0,5037013,3.176471,2],[0,15522224,1.672634,2],[0,15522224,1.611253,2],[0,15522224,1.519182,2],[0,15522224,1.365729,2],[0,15522224,1.242967,2],[0,4831421,3.7289,2],[0,4831421,3.514066,2],[0,15522224,0.782609,2],[0,15522224,0.751918,2],[0,4831421,2.900256,2],[0,4831421,2.746803,2],[0,15522224,0.506394,2],[0,15522224,0.414322,2],[0,4831421,2.347826,2],[0,4831421,2.286445,2],[0,15522224,0.322251,2],[0,4831421,2.163683,2],[0,4831421,2.132992,2],[0,4831421,2.071611,2],[0,28063359,1.918159,2],[0,4831421,1.97954,2],[0,15522224,0.138107,2],[0,4831421,1.488491,2],[0,15522224,0.076726,2],[0,4831421,1.365729,2],[0,28063359,1.672634,2],[0,4831421,1.150895,2],[0,4831421,1.120205,2],[0,28063359,1.580563,2],[0,4831421,0.966752,2],[0,28063359,1.396419,2],[0,28063359,1.304348,2],[0,28063359,2.501279,2],[0,24362696,1.120205,2],[0,24362696,1.242967,2],[0,24362696,1.365729,2],[0,24362696,1.396419,2],[0,24362696,1.42711,2],[0,24362696,1.611253,2],[0,15522224,4.649616,2],[0,24362696,1.734015,2],[0,24362696,1.918159,2],[0,11821561,0.87468,2],[0,24362696,2.132992,2],[0,15522224,3.820972,2],[0,15522224,3.667519,2],[0,11821561,1.519182,2],[0,15522224,3.483376,2],[0,15522224,3.452685,2],[0,24362696,3.391304,2],[0,11821561,1.549872,2],[0,24362696,3.69821,2],[0,11821561,1.641944,2],[0,11821561,1.672634,2],[0,11821561,1.795396,2],[0,30119282,4.158568,2],[0,11821561,1.948849,2],[0,15522224,2.409207,2],[0,15522224,2.01023,2],[0,15522224,1.97954,2],[0,15522224,1.948849,2],[0,15522224,1.887468,2],[0,15522224,1.826087,2],[0,15522224,1.764706,2],[0,3803459,2.961637,2],[0,3803459,2.808184,2],[0,3803459,2.685422,2],[0,3803459,2.470588,2],[0,3803459,2.439898,2],[0,12643931,3.084399,2],[0,3803459,2.317136,2],[0,3803459,2.286445,2],[0,3803459,2.225064,2],[0,3803459,2.071611,2],[0,3803459,1.97954,2],[0,3803459,1.826087,2],[0,3803459,1.703325,2],[0,3803459,1.672634,2],[0,3803459,1.549872,2],[0,3803459,1.457801,2],[0,3803459,1.396419,2],[0,3803459,1.365729,2],[0,3803459,0.936061,2],[0,3803459,0.629156,2],[0,3803459,0.383632,2],[0,3803459,0.29156,2],[0,25801843,0.905371,2],[0,25801843,0.966752,2],[0,25801843,1.028133,2],[0,3803459,0.076726,2],[0,25801843,1.242967,2],[0,25801843,1.396419,2],[0,25801843,1.457801,2],[0,25801843,1.549872,2],[0,25801843,1.703325,2],[0,25596250,1.549872,2],[0,25596250,1.672634,2],[0,25596250,1.948849,2],[0,25596250,2.132992,2],[0,25596250,2.194373,2],[0,25596250,2.286445,2],[0,3803459,8.88491,2],[0,25596250,3.943734,2],[0,3803459,7.810742,2],[0,25596250,4.127877,2],[0,25596250,4.772379,2],[0,12643931,0.690537,2],[0,12643931,0.905371,2],[0,12643931,0.997442,2],[0,12643931,1.058824,2],[0,12643931,1.273657,2],[0,12643931,1.396419,2],[0,25596250,6.736573,2],[0,12643931,1.457801,2],[0,12643931,1.488491,2],[0,3803459,5.140665,2],[0,3803459,5.109974,2],[0,12643931,1.580563,2],[0,3803459,4.956522,2],[0,30324875,0.936061,2],[0,12643931,1.703325,2],[0,12643931,2.347826,2],[0,3803459,3.943734,2],[0,3803459,3.790281,2],[0,12643931,2.531969,2],[0,3803459,3.452685,2],[0,3803459,3.421995,2],[0,12849523,1.580563,2],[0,26007435,0.629156,2],[0,26007435,0.690537,2],[0,12849523,1.734015,2],[0,12849523,1.856777,2],[0,26007435,1.028133,2],[0,12849523,2.040921,2],[0,26007435,1.242967,2],[0,26007435,1.273657,2],[0,12849523,2.194373,2],[0,3597867,2.071611,2],[0,26007435,1.611253,2],[0,26007435,1.795396,2],[0,26007435,1.887468,2],[0,26007435,1.948849,2],[0,26007435,1.97954,2],[0,3597867,1.856777,2],[0,3597867,1.734015,2],[0,3597867,1.672634,2],[0,3597867,1.519182,2],[0,3597867,1.488491,2],[0,3597867,1.457801,2],[0,26007435,2.777494,2],[0,3597867,1.089514,2],[0,3597867,0.87468,2],[0,3597867,0.659847,2],[0,3597867,0.537084,2],[0,3597867,0.475703,2],[0,3597867,0.414322,2],[0,27652174,3.053708,2],[0,3597867,0.29156,2],[0,27652174,2.869565,2],[0,25801843,1.856777,2],[0,25801843,1.887468,2],[0,25801843,2.040921,2],[0,25801843,2.378517,2],[0,14494262,2.255754,2],[0,14494262,2.01023,2],[0,14494262,1.150895,2],[0,14494262,1.028133,2],[0,3597867,4.588235,2],[0,30324875,1.335038,2],[0,30324875,1.365729,2],[0,30324875,1.488491,2],[0,30324875,1.519182,2],[0,3597867,3.851662,2],[0,3597867,3.820972,2],[0,12849523,0.537084,2],[0,3597867,3.391304,2],[0,30324875,1.918159,2],[0,3597867,3.11509,2],[0,3597867,3.023018,2],[0,30324875,2.040921,2],[0,12849523,0.84399,2],[0,3597867,2.716113,2],[0,3597867,2.56266,2],[0,3597867,2.347826,2],[0,12849523,1.089514,2],[0,3597867,2.225064,2],[0,12849523,1.150895,2],[0,12849523,1.242967,2],[0,12849523,1.335038,2],[0,30324875,2.286445,2],[0,12849523,1.519182,2],[0,4214644,2.286445,2],[0,2158720,1.120205,2],[0,4214644,2.132992,2],[0,27857766,2.531969,2],[0,4214644,2.071611,2],[0,2158720,1.150895,2],[0,4214644,1.948849,2],[0,4214644,1.887468,2],[0,4214644,1.856777,2],[0,4214644,1.826087,2],[0,4214644,1.764706,2],[0,27857766,2.409207,2],[0,4214644,1.672634,2],[0,4214644,1.396419,2],[0,4214644,1.304348,2],[0,27857766,2.040921,2],[0,27857766,1.826087,2],[0,4214644,0.87468,2],[0,27857766,1.641944,2],[0,27857766,1.580563,2],[0,27857766,1.457801,2],[0,27857766,1.335038,2],[0,27857766,1.304348,2],[0,4214644,0.445013,2],[0,27857766,1.212276,2],[0,27857766,1.150895,2],[0,27857766,1.120205,2],[0,27857766,0.87468,2],[0,27857766,0.813299,2],[0,27857766,0.629156,2],[0,27857766,0.107417,2],[0,12232746,1.887468,2],[0,15111039,0.322251,2],[0,12232746,1.948849,2],[0,15111039,0.046036,2],[0,12232746,2.378517,2],[0,12232746,2.439898,2],[0,12232746,2.961637,2],[0,2158720,0.383632,2],[0,2158720,0.567775,2],[0,25185066,0.997442,2],[0,25185066,1.120205,2],[0,27857766,3.421995,2],[0,27857766,3.360614,2],[0,25185066,1.304348,2],[0,27857766,3.299233,2],[0,25185066,1.457801,2],[0,27857766,3.207161,2],[0,25185066,1.580563,2],[0,25185066,1.764706,2],[0,25185066,1.795396,2],[0,25185066,2.746803,2],[0,25185066,2.777494,2],[0,25185066,2.808184,2],[0,4214644,4.189258,2],[0,27857766,3.053708,2],[0,4214644,3.667519,2],[0,4214644,3.483376,2],[0,4214644,3.237852,2],[0,4214644,2.838875,2],[0,2158720,0.87468,2],[0,4214644,2.716113,2],[0,4214644,2.501279,2],[0,4009051,3.544757,2],[0,4009051,3.268542,2],[0,4009051,2.900256,2],[0,2158720,2.869565,2],[0,4009051,2.685422,2],[0,4009051,2.624041,2],[0,4009051,2.59335,2],[0,4009051,2.56266,2],[0,4009051,1.887468,2],[0,4009051,1.856777,2],[0,4009051,1.672634,2],[0,4009051,1.580563,2],[0,4009051,1.42711,2],[0,4009051,1.304348,2],[0,2158720,3.391304,2],[0,2158720,3.514066,2],[0,4009051,0.87468,2],[0,4009051,0.84399,2],[0,4009051,0.813299,2],[0,4009051,0.782609,2],[0,2158720,3.69821,2],[0,2158720,3.759591,2],[0,2158720,3.882353,2],[0,2158720,4.127877,2],[0,25596250,0.659847,2],[0,25596250,0.721228,2],[0,25596250,0.751918,2],[0,25596250,0.782609,2],[0,25596250,0.966752,2],[0,25596250,1.028133,2],[0,25596250,1.089514,2],[0,25596250,1.457801,2],[0,14905447,2.071611,2],[0,12438338,1.335038,2],[0,14905447,0.199488,2],[0,12438338,1.42711,2],[0,12438338,1.948849,2],[0,2158720,1.826087,2],[0,2158720,1.918159,2],[0,2158720,2.01023,2],[0,12438338,2.409207,2],[0,2158720,2.163683,2],[0,12438338,2.439898,2],[0,25390658,0.721228,2],[0,2158720,2.317136,2],[0,25390658,0.905371,2],[0,2158720,2.439898,2],[0,25390658,1.028133,2],[0,25390658,1.058824,2],[0,25390658,1.212276,2],[0,12438338,2.56266,2],[0,25390658,1.335038,2],[0,2158720,2.716113,2],[0,25390658,1.457801,2],[0,25390658,1.549872,2],[0,25390658,1.887468,2],[0,25390658,2.255754,2],[0,12438338,3.023018,2],[0,25390658,2.531969,2],[0,25390658,2.716113,2],[0,25390658,2.777494,2],[0,25390658,3.207161,2],[0,25390658,3.329923,2],[0,12438338,4.465473,2],[0,1747535,3.237852,2],[0,5653790,2.317136,2],[0,5653790,2.286445,2],[0,5653790,2.255754,2],[0,5653790,1.918159,2],[0,5653790,1.887468,2],[0,16550186,5.048593,2],[0,5653790,1.703325,2],[0,5653790,1.672634,2],[0,29913690,2.56266,2],[0,5653790,1.641944,2],[0,5653790,1.611253,2],[0,5653790,1.580563,2],[0,5653790,1.488491,2],[0,5653790,1.242967,2],[0,5653790,1.028133,2],[0,5653790,0.997442,2],[0,5653790,0.813299,2],[0,5653790,0.629156,2],[0,1747535,4.005115,2],[0,1747535,4.066496,2],[0,16139001,4.83376,2],[0,28268951,3.176471,2],[0,29913690,2.347826,2],[0,23540327,1.028133,2],[0,23540327,1.335038,2],[0,11204784,1.150895,2],[0,11204784,1.335038,2],[0,11204784,1.488491,2],[0,11204784,1.580563,2],[0,11204784,1.641944,2],[0,11204784,1.672634,2],[0,11204784,1.703325,2],[0,29913690,3.053708,2],[0,10999192,1.089514,2],[0,11204784,1.734015,2],[0,11204784,1.795396,2],[0,11204784,1.887468,2],[0,10999192,1.058824,2],[0,10999192,0.966752,2],[0,11204784,2.132992,2],[0,5653790,3.974425,2],[0,10999192,0.782609,2],[0,5653790,3.7289,2],[0,29913690,2.746803,2],[0,5653790,3.606138,2],[0,5653790,3.299233,2],[0,5653790,3.268542,2],[0,1747535,3.14578,2],[0,5653790,2.900256,2],[0,513981,1.42711,2],[0,5653790,2.777494,2],[0,5653790,2.378517,2],[0,16139001,0.751918,2],[0,16139001,0.659847,2],[0,16139001,0.598465,2],[0,16139001,0.445013,2],[0,5448198,3.636829,2],[0,5448198,3.391304,2],[0,5448198,3.329923,2],[0,5448198,3.023018,2],[0,5448198,2.961637,2],[0,5448198,2.808184,2],[0,5448198,2.716113,2],[0,5448198,2.685422,2],[0,5448198,2.501279,2],[0,11410377,0.537084,2],[0,5448198,1.856777,2],[0,5448198,1.795396,2],[0,5448198,1.734015,2],[0,5448198,1.580563,2],[0,5448198,1.42711,2],[0,5448198,1.335038,2],[0,28268951,1.519182,2],[0,11410377,1.058824,2],[0,28268951,1.304348,2],[0,29913690,2.040921,2],[0,5448198,0.751918,2],[0,29913690,2.01023,2],[0,23540327,1.549872,2],[0,23540327,1.672634,2],[0,23540327,1.703325,2],[0,23540327,1.795396,2],[0,23540327,2.01023,2],[0,23540327,2.255754,2],[0,23540327,2.286445,2],[0,23540327,2.409207,2],[0,23540327,2.746803,2],[0,16139001,2.716113,2],[0,16139001,2.624041,2],[0,16139001,2.409207,2],[0,29913690,2.317136,2],[0,16139001,2.317136,2],[0,16139001,2.225064,2],[0,16139001,2.071611,2],[0,16139001,1.97954,2],[0,16139001,1.918159,2],[0,16139001,1.672634,2],[0,16139001,1.641944,2],[0,16139001,1.42711,2],[0,16139001,1.365729,2],[0,16139001,1.304348,2],[0,29913690,2.225064,2],[0,16139001,1.212276,2],[0,16139001,0.997442,2],[0,16139001,0.782609,2],[0,23129142,1.887468,2],[0,23129142,1.703325,2],[0,23129142,1.549872,2],[0,23129142,1.42711,2],[0,23129142,1.396419,2],[0,16344594,1.826087,2],[0,23129142,1.335038,2],[0,23129142,1.212276,2],[0,23129142,1.058824,2],[0,23129142,0.997442,2],[0,513981,0.475703,2],[0,16344594,1.580563,2],[0,29913690,4.618926,2],[0,16550186,0.383632,2],[0,29913690,4.496164,2],[0,16344594,1.396419,2],[0,16344594,1.242967,2],[0,29913690,4.434783,2],[0,16550186,0.537084,2],[0,29913690,6,2],[0,16344594,1.120205,2],[0,29913690,4.189258,2],[0,513981,0.813299,2],[0,16550186,0.751918,2],[0,513981,1.120205,2],[0,16550186,1.181586,2],[0,1747535,0.26087,2],[0,1747535,0.445013,2],[0,1747535,0.046036,2],[0,1747535,0.567775,2],[0,23129142,5.785166,2],[0,1747535,0.751918,2],[0,1747535,0.84399,2],[0,5859383,1.304348,2],[0,5859383,1.826087,2],[0,5859383,1.97954,2],[0,1747535,1.028133,2],[0,5859383,2.163683,2],[0,5859383,2.255754,2],[0,23129142,4.189258,2],[0,1747535,1.181586,2],[0,5859383,2.439898,2],[0,5859383,2.59335,2],[0,1747535,1.212276,2],[0,5859383,2.654731,2],[0,16344594,3.575448,2],[0,23129142,3.391304,2],[0,16344594,2.838875,2],[0,23129142,3.299233,2],[0,23129142,2.501279,2],[0,16344594,2.624041,2],[0,16344594,1.887468,2],[0,23129142,2.347826,2],[0,1747535,2.59335,2],[0,16550186,2.992327,2],[0,16550186,3.023018,2],[0,10999192,2.132992,2],[0,23334734,1.365729,2],[0,10999192,1.826087,2],[0,10999192,1.795396,2],[0,10999192,1.703325,2],[0,10999192,1.611253,2],[0,1747535,2.746803,2],[0,23334734,1.611253,2],[0,10999192,1.549872,2],[0,23334734,2.132992,2],[0,23334734,2.163683,2],[0,23334734,2.317136,2],[0,29913690,3.14578,2],[0,10999192,1.335038,2],[0,23334734,2.470588,2],[0,23334734,2.685422,2],[0,11204784,0.782609,2],[0,23334734,3.053708,2],[0,16550186,4.127877,2],[0,23334734,3.084399,2],[0,10999192,1.273657,2],[0,29913690,3.11509,2],[0,23334734,3.360614,2],[0,16550186,1.273657,2],[0,16550186,1.304348,2],[0,1747535,1.396419,2],[0,16550186,1.335038,2],[0,1747535,1.457801,2],[0,1747535,1.519182,2],[0,16550186,1.580563,2],[0,1747535,1.580563,2],[0,16550186,1.611253,2],[0,16550186,1.641944,2],[0,16550186,1.672634,2],[0,29913690,3.299233,2],[0,16550186,1.764706,2],[0,16550186,1.795396,2],[0,16550186,1.826087,2],[0,29913690,3.268542,2],[0,29913690,3.237852,2],[0,1747535,1.918159,2],[0,1747535,1.948849,2],[0,1747535,2.01023,2],[0,513981,1.304348,2],[0,16550186,2.501279,2],[0,23334734,0.751918,2],[0,16550186,2.59335,2],[0,16550186,2.746803,2],[0,16550186,2.930946,2],[0,1747535,2.347826,2],[0,5242605,2.409207,2],[0,22923549,1.058824,2],[0,5242605,1.826087,2],[0,5242605,1.795396,2],[0,28474543,1.457801,2],[0,5242605,1.672634,2],[0,5242605,1.549872,2],[0,22923549,0.905371,2],[0,28474543,1.580563,2],[0,5242605,1.457801,2],[0,5242605,1.42711,2],[0,5242605,0.598465,2],[0,30119282,0.813299,2],[0,28474543,1.703325,2],[0,30119282,1.028133,2],[0,28474543,1.764706,2],[0,30119282,1.181586,2],[0,30119282,1.457801,2],[0,30119282,1.519182,2],[0,28474543,2.01023,2],[0,28474543,2.132992,2],[0,30119282,1.641944,2],[0,15933409,0.905371,2],[0,5242605,5.478261,2],[0,15933409,0.751918,2],[0,15933409,0.721228,2],[0,5242605,5.232737,2],[0,15933409,0.475703,2],[0,15933409,0.322251,2],[0,5242605,4.680307,2],[0,5242605,3.268542,2],[0,23951511,1.242967,2],[0,23951511,1.304348,2],[0,23951511,1.396419,2],[0,23951511,1.42711,2],[0,23951511,1.457801,2],[0,23951511,1.519182,2],[0,23951511,1.549872,2],[0,23951511,1.580563,2],[0,23951511,1.641944,2],[0,23951511,1.703325,2],[0,5242605,3.023018,2],[0,23951511,1.918159,2],[0,5242605,2.501279,2],[0,28474543,1.396419,2],[0,6064975,3.207161,2],[0,11615969,1.918159,2],[0,30119282,2.194373,2],[0,11615969,2.286445,2],[0,6064975,3.452685,2],[0,5037013,7.964194,2],[0,15727816,2.654731,2],[0,15727816,1.887468,2],[0,30119282,2.255754,2],[0,6064975,3.575448,2],[0,15727816,1.641944,2],[0,6064975,3.69821,2],[0,6064975,3.759591,2],[0,6064975,3.820972,2],[0,15727816,1.273657,2],[0,6064975,3.913043,2],[0,15727816,1.150895,2],[0,30119282,2.317136,2],[0,6064975,3.974425,2],[0,6064975,4.005115,2],[0,6064975,4.28133,2],[0,15727816,0.997442,2],[0,11615969,1.120205,2],[0,11615969,1.181586,2],[0,28474543,2.255754,2],[0,28474543,2.409207,2],[0,6064975,1.335038,2],[0,11615969,1.242967,2],[0,6064975,1.365729,2],[0,6064975,1.396419,2],[0,30119282,1.795396,2],[0,6064975,1.42711,2],[0,28474543,2.654731,2],[0,30119282,1.826087,2],[0,11615969,1.365729,2],[0,6064975,1.549872,2],[0,11615969,1.42711,2],[0,11615969,1.580563,2],[0,11615969,1.703325,2],[0,6064975,1.856777,2],[0,6064975,2.071611,2],[0,6064975,2.163683,2],[0,30119282,2.102302,2],[0,6064975,2.531969,2],[0,6064975,2.992327,2],[0,11410377,2.409207,2],[0,23745919,1.457801,2],[0,28474543,0.445013,2],[0,23745919,1.549872,2],[0,23745919,1.611253,2],[0,23745919,1.672634,2],[0,23745919,1.734015,2],[0,23745919,1.795396,2],[0,23745919,1.826087,2],[0,23745919,1.856777,2],[0,23745919,1.948849,2],[0,22923549,2.286445,2],[0,23745919,1.97954,2],[0,23745919,2.378517,2],[0,23745919,2.439898,2],[0,28474543,0.659847,2],[0,11410377,2.992327,2],[0,28474543,0.751918,2],[0,23745919,3.176471,2],[0,11410377,3.790281,2],[0,22923549,1.826087,2],[0,28474543,0.905371,2],[0,15933409,3.299233,2],[0,29913690,1.918159,2],[0,29913690,1.887468,2],[0,28268951,0.84399,2],[0,6064975,0.475703,2],[0,6064975,0.690537,2],[0,28268951,0.537084,2],[0,11410377,1.396419,2],[0,11410377,1.42711,2],[0,11410377,1.519182,2],[0,22923549,2.808184,2],[0,11410377,1.549872,2],[0,11410377,1.580563,2],[0,11410377,1.611253,2],[0,11410377,1.734015,2],[0,22923549,2.654731,2],[0,22923549,2.59335,2],[0,11410377,1.764706,2],[0,11410377,1.795396,2],[0,6064975,0.936061,2],[0,11410377,1.97954,2],[0,11410377,2.102302,2],[0,22923549,2.378517,2],[0,23745919,1.150895,2],[0,22923549,1.549872,2],[0,15933409,1.856777,2],[0,22923549,1.42711,2],[0,15933409,1.611253,2],[0,5242605,5.938619,2],[0,15933409,2.255754,2],[0,22923549,1.242967,2],[0,22923549,1.703325,2],[0,15933409,2.286445,2],[0,15933409,1.120205,2],[0,15933409,1.948849,2],[0,22923549,1.580563,2],[0,22923549,1.181586,2],[0,15933409,2.225064,2],[0,22923549,1.734015,2],[0,15933409,1.42711,2],[0,15933409,0.997442,2],[0,5242605,7.71867,2],[0,15933409,1.150895,2],[0,15933409,1.058824,2],[0,15933409,0.966752,2],[0,27652174,2.654731,3],[0,28474543,1.181586,3],[0,513981,2.56266,3],[0,28474543,0.322251,3],[0,29913690,0.87468,3],[0,29913690,0.751918,3],[0,29913690,0.107417,3],[0,513981,1.580563,3],[0,1541943,3.452685,3],[0,513981,0.537084,3],[0,925166,0.322251,3],[0,29913690,3.023018,3],[0,513981,0.629156,3],[0,2569905,0.168798,3],[0,30324875,0.905371,3],[0,925166,1.703325,3],[0,28474543,1.058824,3],[0,1130758,0.813299,3],[0,27652174,0.598465,3],[0,925166,4.680307,3],[0,2158720,2.102302,3],[0,1130758,0.598465,3],[0,29913690,1.826087,3],[0,29913690,1.856777,3],[0,29913690,2.071611,3],[0,29913690,1.672634,3],[0,27652174,0.905371,3],[0,30324875,1.120205,3],[0,925166,0.936061,3],[0,29913690,1.580563,3],[0,27652174,0.997442,3],[0,29913690,1.549872,3],[0,30324875,1.212276,3],[0,29913690,1.42711,3],[0,29913690,1.335038,3],[0,513981,2.716113,3],[0,29913690,1.242967,3],[0,29913690,2.654731,3],[0,513981,2.777494,3],[0,29913690,0.936061,3],[0,925166,1.242967,3],[0,29913690,2.900256,3],[0,30324875,1.089514,3],[0,29913690,0.905371,3],[0,513981,2.992327,3],[0,30324875,1.549872,3],[0,27652174,1.212276,3],[0,27652174,2.255754,3],[0,28474543,1.948849,3],[0,925166,0.782609,3],[0,30324875,2.132992,3],[0,2569905,0.966752,3],[0,2569905,0.936061,3],[0,27652174,1.242967,3],[0,28474543,1.918159,3],[0,28474543,0.598465,3],[0,30324875,1.580563,3],[0,30324875,1.611253,3],[0,513981,2.409207,3],[0,28474543,1.734015,3],[0,30324875,2.01023,3],[0,30324875,0.782609,3],[0,30324875,1.97954,3],[0,29296913,0.966752,3],[0,30324875,1.948849,3],[0,28474543,1.641944,3],[0,28474543,0.782609,3],[0,29913690,3.176471,3],[0,30324875,1.826087,3],[0,28474543,1.488491,3],[0,30324875,1.641944,3],[0,30324875,0.721228,3],[0,30324875,1.703325,3],[0,925166,0.414322,3],[0,925166,1.887468,3],[0,2569905,0.26087,3],[0,513981,1.887468,3],[0,2158720,2.900256,3],[0,29913690,4.28133,3],[0,29913690,4.250639,3],[0,2569905,1.120205,3],[0,925166,5.785166,3],[0,2158720,3.176471,3],[0,925166,2.102302,3],[0,2158720,3.268542,3],[0,513981,0.966752,3],[0,28474543,0.966752,3],[0,925166,0.690537,3],[0,2158720,5.662404,3],[0,513981,1.97954,3],[0,513981,4.434783,3],[0,513981,4.189258,3],[0,925166,2.317136,3],[0,513981,1.242967,3],[0,513981,1.273657,3],[0,30324875,1.396419,3],[0,925166,0.721228,3],[0,28474543,1.42711,3],[0,29913690,2.439898,3],[0,30324875,0.813299,3],[0,28474543,0.567775,3],[0,719573,4.097187,3],[0,2364312,2.040921,3],[0,29708098,1.703325,3],[0,2364312,2.132992,3],[0,719573,3.329923,3],[0,29708098,1.273657,3],[0,2364312,2.286445,3],[0,29708098,1.150895,3],[0,29708098,0.997442,3],[0,2364312,2.439898,3],[0,29708098,0.936061,3],[0,29708098,0.905371,3],[0,29708098,0.84399,3],[0,2364312,2.56266,3],[0,29708098,0.751918,3],[0,29708098,0.537084,3],[0,2364312,2.624041,3],[0,30119282,3.237852,3],[0,1336350,0.076726,3],[0,1336350,0.29156,3],[0,1336350,0.414322,3],[0,1336350,0.445013,3],[0,27446582,0.721228,3],[0,27446582,0.87468,3],[0,1336350,3.759591,3],[0,1336350,0.721228,3],[0,27446582,1.120205,3],[0,27446582,1.181586,3],[0,1336350,0.782609,3],[0,29502505,2.071611,3],[0,29502505,2.225064,3],[0,102796,3.69821,3],[0,1130758,5.693095,3],[0,1953128,6.429668,3],[0,2364312,4.496164,3],[0,28268951,1.273657,3],[0,28268951,1.150895,3],[0,28268951,0.966752,3],[0,28268951,0.905371,3],[0,28268951,0.782609,3],[0,28268951,0.659847,3],[0,28268951,0.567775,3],[0,29708098,3.237852,3],[0,28063359,0.383632,3],[0,28063359,0.690537,3],[0,28063359,0.782609,3],[0,28063359,0.997442,3],[0,28063359,1.089514,3],[0,28063359,1.242967,3],[0,2364312,1.335038,3],[0,2364312,1.396419,3],[0,28063359,1.457801,3],[0,102796,4.373402,3],[0,2364312,1.549872,3],[0,2364312,1.672634,3],[0,29708098,2.225064,3],[0,29708098,2.102302,3],[0,28063359,1.948849,3],[0,719573,4.158568,3],[0,1336350,2.317136,3],[0,1336350,2.255754,3],[0,1336350,1.734015,3],[0,1336350,2.071611,3],[0,1336350,2.040921,3],[0,28885728,1.611253,3],[0,30119282,2.132992,3],[0,28885728,1.580563,3],[0,1336350,1.887468,3],[0,28885728,0.322251,3],[0,1953128,1.304348,3],[0,719573,1.058824,3],[0,719573,0.87468,3],[0,1953128,1.212276,3],[0,719573,0.813299,3],[0,1953128,1.089514,3],[0,1953128,0.997442,3],[0,28885728,1.181586,3],[0,28885728,0.475703,3],[0,28885728,1.120205,3],[0,1953128,0.506394,3],[0,1953128,0.322251,3],[0,30119282,2.624041,3],[0,1336350,1.856777,3],[0,28885728,0.905371,3],[0,28885728,0.690537,3],[0,28885728,0.721228,3],[0,28885728,0.751918,3],[0,28885728,0.813299,3],[0,1336350,0.84399,3],[0,27446582,1.365729,3],[0,1953128,2.286445,3],[0,1336350,3.299233,3],[0,27446582,1.519182,3],[0,30119282,0.690537,3],[0,1953128,2.071611,3],[0,30119282,0.936061,3],[0,30119282,0.966752,3],[0,1336350,2.685422,3],[0,1953128,1.97954,3],[0,27446582,1.703325,3],[0,2364312,3.483376,3],[0,30119282,1.396419,3],[0,30119282,1.42711,3],[0,1953128,1.887468,3],[0,30119282,1.580563,3],[0,719573,2.102302,3],[0,719573,0.076726,3],[0,719573,1.826087,3],[0,719573,1.734015,3],[0,719573,1.641944,3],[0,719573,0.199488,3],[0,719573,1.549872,3],[0,719573,1.42711,3],[0,1953128,1.703325,3],[0,30119282,1.856777,3],[0,1336350,1.488491,3],[0,1336350,2.624041,3],[0,2364312,3.11509,3],[0,102796,0.936061,3],[0,102796,0.997442,3],[0,27857766,1.764706,3],[0,27857766,1.795396,3],[0,102796,1.120205,3],[0,27857766,1.856777,3],[0,2158720,1.365729,3],[0,102796,1.335038,3],[0,27857766,1.948849,3],[0,102796,1.396419,3],[0,102796,1.457801,3],[0,27857766,2.132992,3],[0,102796,1.641944,3],[0,1541943,1.365729,3],[0,27857766,2.317136,3],[0,1541943,0.997442,3],[0,1541943,0.966752,3],[0,1541943,0.813299,3],[0,1747535,1.304348,3],[0,2158720,1.212276,3],[0,1541943,0.751918,3],[0,1747535,1.365729,3],[0,1541943,0.537084,3],[0,1541943,0.506394,3],[0,1541943,0.29156,3],[0,29091321,2.255754,3],[0,2364312,0.322251,3],[0,28680136,0.138107,3],[0,2364312,0.445013,3],[0,1130758,0.966752,3],[0,1130758,0.997442,3],[0,1747535,0.414322,3],[0,1130758,1.028133,3],[0,1130758,1.058824,3],[0,1747535,0.475703,3],[0,1130758,1.181586,3],[0,1747535,0.690537,3],[0,1747535,0.997442,3],[0,27857766,0.782609,3],[0,1541943,1.918159,3],[0,27857766,0.84399,3],[0,2158720,1.519182,3],[0,1130758,1.641944,3],[0,30324875,2.624041,3],[0,1747535,1.058824,3],[0,1541943,1.795396,3],[0,27857766,1.273657,3],[0,1747535,1.273657,3],[0,27857766,1.42711,3],[0,27857766,1.488491,3],[0,102796,0.107417,3],[0,2158720,1.457801,3],[0,1130758,2.439898,3],[0,102796,0.445013,3],[0,102796,0.537084,3],[0,102796,0.690537,3],[0,102796,0.721228,3],[0,1130758,2.900256,3],[0,2158720,1.42711,3],[0,2158720,0.475703,3],[0,29091321,0.751918,3],[0,1747535,2.838875,3],[0,29091321,0.445013,3],[0,28680136,0.445013,3],[0,28680136,0.506394,3],[0,29502505,0.199488,3],[0,308389,0.537084,3],[0,308389,0.567775,3],[0,308389,0.690537,3],[0,28680136,0.966752,3],[0,27446582,2.071611,3],[0,308389,1.549872,3],[0,29502505,1.304348,3],[0,102796,2.286445,3],[0,308389,1.734015,3],[0,28680136,1.580563,3],[0,308389,1.826087,3],[0,29502505,1.519182,3],[0,28680136,1.703325,3],[0,29502505,1.549872,3],[0,29502505,1.611253,3],[0,28680136,1.764706,3],[0,308389,1.948849,3],[0,29502505,1.703325,3],[0,102796,2.531969,3],[0,308389,2.225064,3],[0,308389,2.286445,3],[0,28680136,2.992327,3],[0,29502505,1.97954,3],[0,102796,2.040921,3],[0,2158720,1.089514,3],[0,2364312,0.567775,3],[0,2158720,1.028133,3],[0,2158720,0.936061,3],[0,1747535,1.549872,3],[0,2364312,0.87468,3],[0,2364312,0.905371,3],[0,1747535,1.641944,3],[0,1747535,1.734015,3],[0,1747535,1.764706,3],[0,1747535,1.795396,3],[0,28680136,0.230179,3],[0,28680136,0.322251,3],[0,1747535,1.826087,3],[0,1747535,1.887468,3],[0,2158720,0.782609,3],[0,2158720,0.751918,3],[0,27446582,2.286445,3],[0,1747535,2.040921,3],[0,27857766,3.268542,3],[0,29091321,1.335038,3],[0,1747535,2.225064,3],[0,1747535,2.317136,3],[0,27857766,3.483376,3],[0,1747535,2.624041,3],[0,29091321,1.058824,3],[0,29091321,0.87468,3],[0,27857766,3.575448,3],[0,2158720,0.537084,3],[0,11615969,1.396419,3],[0,11615969,1.457801,3],[0,25185066,1.089514,3],[0,25185066,1.181586,3],[0,6476160,2.040921,3],[0,25185066,1.273657,3],[0,6476160,2.163683,3],[0,6476160,2.225064,3],[0,25185066,1.42711,3],[0,25185066,1.519182,3],[0,6476160,2.501279,3],[0,11615969,1.734015,3],[0,25185066,1.887468,3],[0,6476160,2.624041,3],[0,22306772,4.342711,3],[0,4214644,2.992327,3],[0,6476160,2.869565,3],[0,4214644,2.808184,3],[0,11615969,1.764706,3],[0,4214644,2.746803,3],[0,4214644,2.59335,3],[0,22306772,3.606138,3],[0,9560045,1.764706,3],[0,9560045,1.212276,3],[0,9560045,1.058824,3],[0,9560045,0.936061,3],[0,6476160,0.076726,3],[0,9560045,0.813299,3],[0,9560045,0.721228,3],[0,9560045,0.690537,3],[0,6476160,0.322251,3],[0,6476160,0.598465,3],[0,11615969,0.966752,3],[0,6476160,0.905371,3],[0,6476160,0.936061,3],[0,6476160,1.089514,3],[0,6476160,1.150895,3],[0,6476160,1.304348,3],[0,11615969,1.150895,3],[0,6476160,1.396419,3],[0,6476160,1.457801,3],[0,6476160,1.488491,3],[0,6476160,1.641944,3],[0,6476160,1.734015,3],[0,4214644,1.028133,3],[0,22306772,1.856777,3],[0,15727816,2.56266,3],[0,22306772,1.672634,3],[0,4214644,0.905371,3],[0,15727816,1.856777,3],[0,22306772,1.611253,3],[0,18606110,0.506394,3],[0,22306772,1.549872,3],[0,4214644,0.659847,3],[0,18606110,0.567775,3],[0,15727816,1.028133,3],[0,18606110,0.659847,3],[0,15727816,0.936061,3],[0,15727816,0.690537,3],[0,4214644,0.475703,3],[0,18606110,0.84399,3],[0,18606110,0.87468,3],[0,22306772,1.365729,3],[0,22306772,1.304348,3],[0,15727816,0.598465,3],[0,18606110,1.150895,3],[0,22306772,3.084399,3],[0,4214644,2.378517,3],[0,22306772,2.685422,3],[0,4214644,2.225064,3],[0,22306772,2.378517,3],[0,4214644,2.040921,3],[0,6476160,3.575448,3],[0,4214644,1.918159,3],[0,4214644,1.734015,3],[0,4214644,1.519182,3],[0,4214644,1.488491,3],[0,22306772,2.102302,3],[0,22306772,2.040921,3],[0,11615969,1.97954,3],[0,22306772,2.01023,3],[0,22306772,1.918159,3],[0,4214644,1.273657,3],[0,4214644,1.242967,3],[0,4214644,1.181586,3],[0,4214644,1.120205,3],[0,4214644,1.089514,3],[0,11615969,2.102302,3],[0,18400517,1.703325,3],[0,18400517,1.948849,3],[0,18400517,2.286445,3],[0,18400517,2.409207,3],[0,18400517,2.685422,3],[0,11410377,0.997442,3],[0,18400517,2.746803,3],[0,9560045,2.439898,3],[0,6270567,0.076726,3],[0,6270567,0.107417,3],[0,6270567,0.352941,3],[0,6270567,0.414322,3],[0,11410377,1.488491,3],[0,11410377,1.641944,3],[0,6270567,0.475703,3],[0,11410377,1.672634,3],[0,24979473,0.966752,3],[0,24979473,1.028133,3],[0,24979473,1.058824,3],[0,6270567,0.567775,3],[0,6270567,0.598465,3],[0,24979473,1.150895,3],[0,24773881,1.580563,3],[0,18400517,0.629156,3],[0,18400517,0.659847,3],[0,22717957,1.120205,3],[0,22717957,1.058824,3],[0,22717957,0.997442,3],[0,16139001,1.028133,3],[0,18400517,0.751918,3],[0,16139001,0.905371,3],[0,16139001,0.813299,3],[0,18400517,1.212276,3],[0,16139001,0.506394,3],[0,18400517,1.242967,3],[0,18400517,1.273657,3],[0,18400517,1.42711,3],[0,4420236,3.11509,3],[0,4420236,2.992327,3],[0,16139001,0.414322,3],[0,18400517,1.488491,3],[0,18400517,1.641944,3],[0,16139001,0.29156,3],[0,16139001,0.168798,3],[0,15933409,1.089514,3],[0,6270567,1.97954,3],[0,6270567,2.777494,3],[0,15933409,1.028133,3],[0,6270567,3.14578,3],[0,6270567,3.360614,3],[0,15933409,0.87468,3],[0,15933409,0.813299,3],[0,9560045,1.887468,3],[0,22512365,1.856777,3],[0,22512365,1.641944,3],[0,22512365,1.488491,3],[0,22512365,1.42711,3],[0,15933409,0.506394,3],[0,22512365,1.396419,3],[0,22512365,1.335038,3],[0,22512365,1.181586,3],[0,22512365,1.120205,3],[0,22512365,1.089514,3],[0,22512365,0.966752,3],[0,22512365,0.813299,3],[0,9560045,1.795396,3],[0,6270567,0.659847,3],[0,24979473,1.335038,3],[0,24979473,1.856777,3],[0,24979473,1.918159,3],[0,4420236,2.439898,3],[0,4420236,2.194373,3],[0,11410377,1.948849,3],[0,15933409,1.457801,3],[0,4420236,1.703325,3],[0,4420236,1.672634,3],[0,6270567,0.905371,3],[0,9560045,2.255754,3],[0,15933409,1.212276,3],[0,4420236,1.273657,3],[0,4420236,1.212276,3],[0,6270567,1.242967,3],[0,4420236,1.120205,3],[0,4420236,1.058824,3],[0,4420236,1.028133,3],[0,6270567,1.335038,3],[0,4420236,0.966752,3],[0,4420236,0.936061,3],[0,3803459,2.501279,3],[0,22101180,0.751918,3],[0,3803459,1.948849,3],[0,22101180,0.721228,3],[0,18811702,1.488491,3],[0,12232746,0.84399,3],[0,18811702,2.132992,3],[0,18811702,2.317136,3],[0,3803459,1.488491,3],[0,3803459,1.335038,3],[0,18811702,2.746803,3],[0,9148861,1.304348,3],[0,9148861,1.242967,3],[0,9148861,1.181586,3],[0,12232746,1.058824,3],[0,9148861,1.028133,3],[0,22101180,0.29156,3],[0,9148861,0.721228,3],[0,3803459,0.87468,3],[0,6681752,0.84399,3],[0,6681752,0.87468,3],[0,6681752,0.936061,3],[0,12027154,1.672634,3],[0,12027154,1.703325,3],[0,3803459,9.652174,3],[0,12027154,1.734015,3],[0,22101180,2.163683,3],[0,12027154,1.948849,3],[0,22101180,1.856777,3],[0,12027154,2.624041,3],[0,12027154,2.746803,3],[0,12027154,2.808184,3],[0,22101180,1.764706,3],[0,12232746,0.445013,3],[0,25596250,0.475703,3],[0,12232746,0.659847,3],[0,25596250,0.598465,3],[0,22101180,1.120205,3],[0,18811702,1.242967,3],[0,25596250,1.058824,3],[0,25596250,1.304348,3],[0,25596250,1.918159,3],[0,25596250,2.900256,3],[0,3803459,5.324808,3],[0,21895588,0.721228,3],[0,25801843,0.721228,3],[0,25801843,0.751918,3],[0,19017294,0.445013,3],[0,25801843,0.84399,3],[0,25801843,0.87468,3],[0,12232746,1.97954,3],[0,25801843,1.058824,3],[0,19017294,0.659847,3],[0,19017294,0.751918,3],[0,19017294,0.84399,3],[0,25801843,1.335038,3],[0,25801843,1.42711,3],[0,25801843,1.611253,3],[0,3597867,3.299233,3],[0,3597867,3.053708,3],[0,19017294,0.936061,3],[0,3597867,2.439898,3],[0,3597867,2.378517,3],[0,3597867,2.317136,3],[0,19017294,1.181586,3],[0,19017294,1.212276,3],[0,6681752,1.028133,3],[0,6681752,1.120205,3],[0,6681752,1.150895,3],[0,15111039,1.242967,3],[0,9148861,0.445013,3],[0,3803459,0.475703,3],[0,6681752,1.242967,3],[0,6681752,1.335038,3],[0,6681752,1.549872,3],[0,6681752,2.102302,3],[0,6681752,2.838875,3],[0,6681752,3.023018,3],[0,6681752,3.084399,3],[0,6681752,3.329923,3],[0,6681752,3.636829,3],[0,21895588,2.378517,3],[0,21895588,1.97954,3],[0,21895588,1.549872,3],[0,21895588,1.120205,3],[0,12232746,1.519182,3],[0,12232746,1.641944,3],[0,12232746,1.795396,3],[0,11821561,0.936061,3],[0,9354453,0.936061,3],[0,11821561,1.150895,3],[0,9354453,0.84399,3],[0,11821561,1.242967,3],[0,11821561,1.304348,3],[0,9354453,0.629156,3],[0,11821561,1.764706,3],[0,9354453,0.475703,3],[0,11821561,2.040921,3],[0,11821561,2.163683,3],[0,18811702,0.26087,3],[0,15522224,1.396419,3],[0,18811702,0.29156,3],[0,18811702,0.445013,3],[0,15522224,1.335038,3],[0,25390658,0.598465,3],[0,15522224,1.181586,3],[0,25390658,0.782609,3],[0,15522224,1.089514,3],[0,15522224,0.966752,3],[0,15522224,0.936061,3],[0,18606110,1.212276,3],[0,4214644,0.199488,3],[0,15727816,0.506394,3],[0,4214644,0.138107,3],[0,15727816,0.445013,3],[0,22306772,1.120205,3],[0,15727816,0.383632,3],[0,15727816,0.322251,3],[0,15727816,0.26087,3],[0,18606110,1.795396,3],[0,18606110,2.102302,3],[0,18606110,2.255754,3],[0,18606110,2.624041,3],[0,11821561,0.414322,3],[0,18606110,2.930946,3],[0,9354453,2.56266,3],[0,9354453,1.580563,3],[0,9354453,1.365729,3],[0,9354453,1.181586,3],[0,9354453,0.997442,3],[0,4214644,0.046036,3],[0,22306772,0.905371,3],[0,4009051,1.273657,3],[0,15522224,0.29156,3],[0,4009051,1.181586,3],[0,15522224,0.168798,3],[0,15522224,0.107417,3],[0,4009051,0.997442,3],[0,4009051,0.966752,3],[0,4009051,0.936061,3],[0,18811702,0.813299,3],[0,4009051,0.659847,3],[0,6681752,0.414322,3],[0,6681752,0.475703,3],[0,6681752,0.567775,3],[0,22101180,2.439898,3],[0,4009051,0.352941,3],[0,12027154,1.150895,3],[0,12027154,1.181586,3],[0,22101180,2.286445,3],[0,12027154,1.365729,3],[0,12027154,1.396419,3],[0,22101180,2.194373,3],[0,12027154,1.611253,3],[0,15522224,0.813299,3],[0,6476160,5.386189,3],[0,25390658,1.304348,3],[0,25390658,1.365729,3],[0,25390658,1.396419,3],[0,25390658,1.42711,3],[0,25390658,1.580563,3],[0,25390658,1.703325,3],[0,18811702,0.690537,3],[0,4009051,3.237852,3],[0,4009051,2.746803,3],[0,4009051,2.409207,3],[0,4009051,2.102302,3],[0,4009051,2.040921,3],[0,4009051,1.948849,3],[0,4009051,1.918159,3],[0,18811702,0.721228,3],[0,4009051,1.703325,3],[0,4009051,1.519182,3],[0,18811702,0.782609,3],[0,4009051,1.396419,3],[0,15522224,0.383632,3],[0,6681752,0.230179,3],[0,23334734,1.948849,3],[0,23334734,1.887468,3],[0,10793600,1.611253,3],[0,10793600,2.01023,3],[0,10793600,2.409207,3],[0,10793600,2.961637,3],[0,10793600,3.176471,3],[0,10793600,4.404092,3],[0,16755778,2.102302,3],[0,23334734,1.549872,3],[0,16755778,2.071611,3],[0,16755778,1.918159,3],[0,17578148,1.42711,3],[0,23334734,1.396419,3],[0,17578148,1.457801,3],[0,16755778,1.488491,3],[0,23334734,1.242967,3],[0,16755778,1.457801,3],[0,17578148,1.641944,3],[0,17578148,1.826087,3],[0,17578148,2.01023,3],[0,17578148,2.071611,3],[0,5653790,0.414322,3],[0,5242605,0.537084,3],[0,5653790,0.537084,3],[0,5653790,0.598465,3],[0,5653790,0.659847,3],[0,5653790,0.690537,3],[0,5242605,0.29156,3],[0,5653790,0.905371,3],[0,5653790,0.936061,3],[0,5653790,1.212276,3],[0,5653790,1.273657,3],[0,5653790,1.304348,3],[0,5653790,1.549872,3],[0,5653790,2.132992,3],[0,5653790,2.194373,3],[0,5653790,2.225064,3],[0,5653790,2.56266,3],[0,10793600,0.84399,3],[0,10793600,0.966752,3],[0,10793600,0.997442,3],[0,23334734,2.071611,3],[0,10793600,1.365729,3],[0,24157104,1.396419,3],[0,10176822,0.29156,3],[0,24157104,1.611253,3],[0,24157104,1.641944,3],[0,24157104,1.826087,3],[0,24157104,1.918159,3],[0,24157104,2.132992,3],[0,5037013,3.667519,3],[0,5037013,2.777494,3],[0,5037013,1.948849,3],[0,5037013,1.549872,3],[0,5037013,1.396419,3],[0,5037013,1.365729,3],[0,5859383,0.629156,3],[0,5037013,1.273657,3],[0,5859383,0.659847,3],[0,17783740,0.84399,3],[0,5037013,0.84399,3],[0,17783740,1.058824,3],[0,5037013,0.782609,3],[0,5037013,0.659847,3],[0,5037013,0.567775,3],[0,23334734,0.936061,3],[0,17578148,2.163683,3],[0,17578148,2.255754,3],[0,16755778,1.181586,3],[0,17578148,2.378517,3],[0,16755778,1.058824,3],[0,10176822,2.501279,3],[0,10176822,1.887468,3],[0,23334734,0.445013,3],[0,10176822,1.856777,3],[0,16755778,0.966752,3],[0,10176822,1.365729,3],[0,10176822,1.242967,3],[0,10176822,1.181586,3],[0,23334734,0.26087,3],[0,10176822,1.120205,3],[0,16755778,0.84399,3],[0,24157104,1.212276,3],[0,10176822,0.936061,3],[0,24157104,1.273657,3],[0,10176822,0.721228,3],[0,10176822,0.598465,3],[0,5448198,1.212276,3],[0,23745919,1.089514,3],[0,5448198,1.365729,3],[0,10588007,1.058824,3],[0,23745919,1.242967,3],[0,5448198,1.549872,3],[0,5448198,1.611253,3],[0,5448198,1.672634,3],[0,23745919,1.396419,3],[0,23745919,1.42711,3],[0,5448198,1.703325,3],[0,5448198,1.887468,3],[0,23745919,1.703325,3],[0,23745919,1.764706,3],[0,23745919,1.918159,3],[0,10588007,1.120205,3],[0,5448198,2.194373,3],[0,5448198,3.207161,3],[0,10588007,1.396419,3],[0,10588007,1.42711,3],[0,10588007,1.457801,3],[0,10588007,1.734015,3],[0,17372555,0.84399,3],[0,17166963,2.56266,3],[0,17166963,2.286445,3],[0,17372555,0.997442,3],[0,17372555,1.396419,3],[0,17166963,1.120205,3],[0,17166963,1.058824,3],[0,17166963,1.028133,3],[0,17372555,1.641944,3],[0,17166963,0.966752,3],[0,17166963,0.751918,3],[0,17166963,0.721228,3],[0,17372555,1.764706,3],[0,17166963,0.659847,3],[0,5448198,0.659847,3],[0,17372555,1.887468,3],[0,5448198,0.87468,3],[0,17372555,2.102302,3],[0,10382415,1.887468,3],[0,10588007,0.813299,3],[0,10382415,1.703325,3],[0,5448198,1.181586,3],[0,23951511,0.905371,3],[0,10382415,1.120205,3],[0,23951511,1.089514,3],[0,16961371,0.690537,3],[0,10382415,0.905371,3],[0,10382415,0.87468,3],[0,23951511,1.212276,3],[0,10382415,0.721228,3],[0,10382415,0.690537,3],[0,5242605,1.703325,3],[0,5242605,1.641944,3],[0,17578148,0.537084,3],[0,5242605,1.242967,3],[0,5242605,1.150895,3],[0,5242605,1.120205,3],[0,5242605,0.997442,3],[0,17578148,1.150895,3],[0,5242605,0.905371,3],[0,17578148,1.181586,3],[0,16961371,0.414322,3],[0,16961371,0.352941,3],[0,5242605,0.659847,3],[0,10588007,1.764706,3],[0,10588007,1.918159,3],[0,10588007,2.531969,3],[0,23540327,3.084399,3],[0,10588007,4.434783,3],[0,10382415,1.549872,3],[0,16961371,2.654731,3],[0,16961371,2.59335,3],[0,16961371,2.378517,3],[0,16961371,2.317136,3],[0,16961371,2.132992,3],[0,16961371,1.97954,3],[0,23540327,1.457801,3],[0,16961371,1.764706,3],[0,16961371,1.580563,3],[0,16961371,1.488491,3],[0,10382415,1.396419,3],[0,23540327,1.181586,3],[0,16961371,1.304348,3],[0,16961371,1.273657,3],[0,16961371,1.212276,3],[0,23540327,1.058824,3],[0,23540327,0.936061,3],[0,24568288,1.181586,3],[0,22923549,0.721228,3],[0,24568288,1.273657,3],[0,24568288,1.304348,3],[0,18194925,1.273657,3],[0,18194925,1.335038,3],[0,24568288,1.519182,3],[0,24568288,1.549872,3],[0,24568288,1.580563,3],[0,18194925,1.365729,3],[0,24568288,1.672634,3],[0,24568288,1.764706,3],[0,24568288,2.040921,3],[0,24568288,2.194373,3],[0,18194925,1.396419,3],[0,4625828,5.478261,3],[0,4625828,5.079284,3],[0,9765638,0.537084,3],[0,4625828,3.299233,3],[0,4625828,2.255754,3],[0,18194925,1.918159,3],[0,18194925,2.194373,3],[0,18194925,0.629156,3],[0,6064975,1.028133,3],[0,22923549,1.948849,3],[0,22923549,1.611253,3],[0,22923549,1.519182,3],[0,16344594,1.795396,3],[0,24568288,0.29156,3],[0,16344594,1.519182,3],[0,16344594,1.42711,3],[0,16344594,1.181586,3],[0,22923549,1.457801,3],[0,22923549,1.396419,3],[0,16344594,1.058824,3],[0,22923549,1.273657,3],[0,16344594,0.997442,3],[0,22923549,1.212276,3],[0,18194925,0.84399,3],[0,18194925,0.936061,3],[0,24568288,0.782609,3],[0,22923549,0.997442,3],[0,24568288,0.905371,3],[0,24568288,0.997442,3],[0,11204784,1.42711,3],[0,11204784,1.519182,3],[0,6064975,3.7289,3],[0,16139001,2.255754,3],[0,16139001,1.887468,3],[0,16139001,1.764706,3],[0,22717957,2.685422,3],[0,16139001,1.703325,3],[0,22717957,2.347826,3],[0,22717957,1.734015,3],[0,24773881,0.87468,3],[0,16139001,1.488491,3],[0,22717957,1.672634,3],[0,24773881,0.966752,3],[0,16139001,1.457801,3],[0,22717957,1.335038,3],[0,22717957,1.304348,3],[0,24773881,1.181586,3],[0,24773881,1.335038,3],[0,24773881,1.457801,3],[0,4625828,0.629156,3],[0,22717957,1.273657,3],[0,9560045,4.925831,3],[0,9560045,3.329923,3],[0,18400517,0.076726,3],[0,18400517,0.383632,3],[0,4625828,0.936061,3],[0,4625828,0.905371,3],[0,6064975,1.457801,3],[0,4625828,0.84399,3],[0,6064975,1.488491,3],[0,6064975,1.580563,3],[0,4625828,0.690537,3],[0,6064975,1.764706,3],[0,6064975,1.826087,3],[0,11204784,0.87468,3],[0,6064975,1.97954,3],[0,6064975,2.01023,3],[0,11204784,1.089514,3],[0,6064975,2.040921,3],[0,6064975,2.56266,3],[0,6064975,2.624041,3],[0,6064975,2.777494,3],[0,11204784,1.396419,3],[0,10999192,1.181586,3],[0,23129142,1.918159,3],[0,10999192,1.764706,3],[0,16550186,2.225064,3],[0,23129142,1.795396,3],[0,23129142,1.672634,3],[0,16550186,1.734015,3],[0,16550186,1.549872,3],[0,16550186,1.519182,3],[0,23129142,1.611253,3],[0,23129142,1.580563,3],[0,23129142,1.519182,3],[0,16550186,1.150895,3],[0,23129142,1.365729,3],[0,24362696,1.212276,3],[0,24362696,1.273657,3],[0,24362696,1.488491,3],[0,24362696,1.641944,3],[0,24362696,1.856777,3],[0,24362696,1.948849,3],[0,4831421,5.355499,3],[0,4831421,3.11509,3],[0,17783740,1.672634,3],[0,17783740,1.856777,3],[0,5037013,0.352941,3],[0,5859383,1.058824,3],[0,9971230,2.777494,3],[0,16755778,0.475703,3],[0,9971230,2.56266,3],[0,9971230,2.439898,3],[0,9971230,2.409207,3],[0,5859383,1.365729,3],[0,9971230,1.764706,3],[0,9971230,1.703325,3],[0,9971230,1.580563,3],[0,9971230,1.457801,3],[0,5859383,1.734015,3],[0,5859383,1.795396,3],[0,5859383,2.01023,3],[0,5859383,2.040921,3],[0,10999192,1.028133,3],[0,10999192,1.120205,3],[0,5859383,2.716113,3],[0,23129142,1.948849,3],[0,17989333,1.150895,3],[0,4831421,0.475703,3],[0,17989333,1.396419,3],[0,16550186,0.966752,3],[0,4831421,0.414322,3],[0,17989333,2.225064,3],[0,9765638,1.335038,3],[0,9765638,1.304348,3],[0,9765638,1.212276,3],[0,6064975,0.598465,3],[0,9765638,1.181586,3],[0,9765638,1.150895,3],[0,16550186,0.905371,3],[0,16550186,0.84399,3],[0,9765638,1.089514,3],[0,9765638,0.997442,3],[0,16550186,0.690537,3],[0,16550186,0.659847,3],[0,16550186,0.629156,3],[0,16550186,0.598465,3],[0,9765638,0.690537,3],[0,9765638,0.629156,3],[0,4831421,2.194373,3],[0,4831421,2.01023,3],[0,4831421,1.856777,3],[0,4831421,1.549872,3],[0,4831421,1.519182,3],[0,4831421,1.335038,3],[0,4831421,1.273657,3],[0,4831421,1.242967,3],[0,9971230,0.905371,3],[0,4831421,1.089514,3],[0,4831421,0.997442,3],[0,16550186,1.058824,3],[0,9971230,0.782609,3],[0,4831421,0.87468,3],[0,9971230,0.751918,3],[0,9971230,0.506394,3],[0,17989333,0.721228,3],[0,4831421,0.659847,3],[0,4831421,0.598465,3],[0,17989333,0.782609,3],[0,17989333,0.813299,3],[0,17989333,1.028133,3],[0,17989333,1.089514,3],[0,26418620,1.918159,3],[0,26418620,2.132992,3],[0,26418620,2.409207,3],[0,8532083,1.826087,3],[0,26418620,2.59335,3],[0,8532083,1.641944,3],[0,8532083,1.549872,3],[0,26418620,2.808184,3],[0,14083077,1.918159,3],[0,8326491,1.488491,3],[0,3186682,6.122762,3],[0,8532083,1.519182,3],[0,14083077,1.856777,3],[0,20662033,0.567775,3],[0,14083077,1.703325,3],[0,3186682,5.785166,3],[0,3186682,5.539642,3],[0,3186682,5.44757,3],[0,8532083,1.887468,3],[0,7298529,3.023018,3],[0,7298529,3.207161,3],[0,27035397,1.212276,3],[0,21278810,1.672634,3],[0,14083077,2.225064,3],[0,21278810,1.580563,3],[0,27035397,1.181586,3],[0,13466300,2.255754,3],[0,27035397,1.120205,3],[0,26418620,1.549872,3],[0,13466300,2.132992,3],[0,26418620,1.611253,3],[0,21278810,1.150895,3],[0,8326491,1.396419,3],[0,26418620,1.826087,3],[0,26418620,1.856777,3],[0,8532083,1.856777,3],[0,20662033,0.782609,3],[0,3186682,2.409207,3],[0,3186682,2.286445,3],[0,20662033,0.87468,3],[0,3186682,2.102302,3],[0,13466300,1.457801,3],[0,3186682,1.948849,3],[0,3186682,1.856777,3],[0,13466300,1.42711,3],[0,13466300,1.396419,3],[0,3186682,1.672634,3],[0,3186682,1.641944,3],[0,20662033,0.936061,3],[0,14083077,1.089514,3],[0,13466300,1.335038,3],[0,3186682,1.519182,3],[0,19839664,0.721228,3],[0,3186682,1.457801,3],[0,3186682,5.294118,3],[0,3186682,5.263427,3],[0,13466300,1.826087,3],[0,3186682,5.079284,3],[0,21278810,0.690537,3],[0,8532083,1.457801,3],[0,27035397,0.905371,3],[0,3186682,4.342711,3],[0,3186682,4.158568,3],[0,3186682,4.005115,3],[0,8532083,1.335038,3],[0,8532083,1.212276,3],[0,3186682,3.69821,3],[0,13466300,1.672634,3],[0,20662033,0.598465,3],[0,3186682,3.207161,3],[0,3186682,3.084399,3],[0,3186682,2.992327,3],[0,2775497,1.335038,3],[0,19634071,0.659847,3],[0,19634071,0.751918,3],[0,2775497,1.396419,3],[0,7298529,0.567775,3],[0,2775497,1.488491,3],[0,20045256,6.920716,3],[0,7298529,0.690537,3],[0,7298529,0.721228,3],[0,2775497,1.672634,3],[0,19634071,1.549872,3],[0,13671893,1.304348,3],[0,19634071,1.580563,3],[0,2775497,1.856777,3],[0,7298529,0.84399,3],[0,13671893,1.672634,3],[0,27035397,3.084399,3],[0,19634071,1.887468,3],[0,14288670,1.335038,3],[0,8737676,0.936061,3],[0,8737676,0.905371,3],[0,14288670,0.567775,3],[0,13671893,0.997442,3],[0,8737676,0.751918,3],[0,20250849,0.445013,3],[0,14288670,0.414322,3],[0,2775497,0.966752,3],[0,19634071,0.352941,3],[0,20250849,0.414322,3],[0,19634071,0.537084,3],[0,20250849,0.352941,3],[0,19634071,0.567775,3],[0,13055116,0.598465,3],[0,7298529,0.26087,3],[0,13055116,0.659847,3],[0,3392274,0.352941,3],[0,27035397,2.102302,3],[0,7298529,1.97954,3],[0,27035397,2.01023,3],[0,13055116,2.071611,3],[0,2775497,2.347826,3],[0,7298529,2.59335,3],[0,13055116,2.163683,3],[0,27035397,1.887468,3],[0,8326491,1.181586,3],[0,27035397,1.795396,3],[0,27035397,1.672634,3],[0,27035397,1.641944,3],[0,27035397,1.519182,3],[0,26418620,0.905371,3],[0,8326491,1.304348,3],[0,20662033,0.414322,3],[0,13055116,2.439898,3],[0,27035397,1.304348,3],[0,19634071,3.575448,3],[0,7298529,1.120205,3],[0,2775497,2.132992,3],[0,7298529,1.181586,3],[0,8532083,2.378517,3],[0,7298529,1.335038,3],[0,7298529,1.365729,3],[0,13055116,1.764706,3],[0,13055116,1.795396,3],[0,8326491,0.782609,3],[0,7298529,1.396419,3],[0,13055116,1.97954,3],[0,26418620,0.506394,3],[0,8326491,0.87468,3],[0,7298529,1.42711,3],[0,8532083,2.040921,3],[0,27035397,2.286445,3],[0,13466300,2.961637,3],[0,13877485,0.076726,3],[0,7709714,0.721228,3],[0,8326491,1.856777,3],[0,7709714,0.629156,3],[0,7504122,1.887468,3],[0,7709714,0.537084,3],[0,8326491,2.01023,3],[0,20867626,3.176471,3],[0,2981089,0.29156,3],[0,20045256,2.531969,3],[0,13877485,0.322251,3],[0,20867626,2.685422,3],[0,20867626,2.378517,3],[0,20045256,2.378517,3],[0,2981089,0.138107,3],[0,2775497,2.56266,3],[0,13260708,1.580563,3],[0,13260708,2.01023,3],[0,8326491,2.808184,3],[0,7709714,1.028133,3],[0,8326491,2.716113,3],[0,27035397,0.414322,3],[0,2981089,1.089514,3],[0,2981089,1.058824,3],[0,2981089,1.028133,3],[0,21073218,0.721228,3],[0,7709714,0.936061,3],[0,2981089,0.84399,3],[0,21073218,0.537084,3],[0,7709714,0.905371,3],[0,13260708,1.181586,3],[0,13260708,1.242967,3],[0,2981089,0.506394,3],[0,2981089,0.475703,3],[0,7709714,0.782609,3],[0,2981089,0.414322,3],[0,2775497,6.122762,3],[0,26829804,0.690537,3],[0,20045256,1.028133,3],[0,8326491,2.194373,3],[0,8326491,2.347826,3],[0,20867626,0.29156,3],[0,26829804,0.905371,3],[0,26829804,3.053708,3],[0,26829804,2.470588,3],[0,26829804,2.255754,3],[0,20045256,1.580563,3],[0,20867626,0.076726,3],[0,26829804,1.948849,3],[0,20045256,1.42711,3],[0,26829804,1.611253,3],[0,26829804,1.365729,3],[0,20045256,1.519182,3],[0,26829804,1.549872,3],[0,13877485,1.519182,3],[0,20867626,1.488491,3],[0,13877485,1.273657,3],[0,20867626,1.42711,3],[0,20867626,1.273657,3],[0,20867626,1.212276,3],[0,20045256,0.721228,3],[0,2775497,3.514066,3],[0,13877485,0.383632,3],[0,20867626,0.87468,3],[0,13877485,0.936061,3],[0,2775497,5.785166,3],[0,20045256,0.84399,3],[0,13877485,0.84399,3],[0,13877485,0.813299,3],[0,7709714,0.29156,3],[0,20045256,0.905371,3],[0,20045256,0.966752,3],[0,7709714,2.225064,3],[0,3186682,0.567775,3],[0,3186682,0.475703,3],[0,7709714,2.163683,3],[0,19839664,1.181586,3],[0,7709714,2.132992,3],[0,7709714,2.01023,3],[0,19839664,1.242967,3],[0,14083077,0.537084,3],[0,19839664,1.273657,3],[0,7709714,1.948849,3],[0,19839664,1.734015,3],[0,7504122,0.721228,3],[0,14083077,0.352941,3],[0,7709714,1.764706,3],[0,7504122,0.782609,3],[0,7709714,1.734015,3],[0,19839664,1.887468,3],[0,14083077,0.997442,3],[0,19839664,0.905371,3],[0,3186682,1.242967,3],[0,20662033,1.058824,3],[0,3186682,1.181586,3],[0,3186682,1.120205,3],[0,3186682,1.058824,3],[0,3186682,1.028133,3],[0,14083077,0.87468,3],[0,7709714,3.237852,3],[0,13466300,1.181586,3],[0,14083077,0.721228,3],[0,13466300,1.150895,3],[0,13466300,1.120205,3],[0,14083077,0.659847,3],[0,3186682,0.751918,3],[0,3186682,0.721228,3],[0,3186682,0.659847,3],[0,26624212,1.242967,3],[0,26624212,1.304348,3],[0,13466300,0.598465,3],[0,21073218,1.734015,3],[0,7504122,1.519182,3],[0,26624212,2.102302,3],[0,26624212,2.225064,3],[0,21073218,1.488491,3],[0,2981089,3.575448,3],[0,2981089,2.286445,3],[0,2981089,1.948849,3],[0,2981089,1.918159,3],[0,21073218,1.457801,3],[0,21073218,1.089514,3],[0,21073218,1.058824,3],[0,2981089,1.457801,3],[0,2981089,1.365729,3],[0,27035397,0.445013,3],[0,7504122,0.84399,3],[0,19839664,4.097187,3],[0,8326491,3.575448,3],[0,8326491,3.421995,3],[0,13260708,0.751918,3],[0,13466300,0.87468,3],[0,7504122,0.936061,3],[0,7504122,1.058824,3],[0,21073218,2.654731,3],[0,21073218,2.501279,3],[0,7504122,1.242967,3],[0,21073218,2.255754,3],[0,7709714,1.580563,3],[0,13466300,0.721228,3],[0,7709714,1.396419,3],[0,26624212,0.936061,3],[0,26624212,0.997442,3],[0,7709714,1.181586,3],[0,26624212,1.058824,3],[0,7915306,7.13555,3],[0,26213027,1.457801,3],[0,20250849,0.813299,3],[0,27240989,0.598465,3],[0,8120899,1.335038,3],[0,8943268,0.598465,3],[0,26007435,1.335038,3],[0,26213027,1.181586,3],[0,26213027,1.150895,3],[0,3597867,2.163683,3],[0,12438338,1.918159,3],[0,26007435,1.519182,3],[0,26213027,1.089514,3],[0,20456441,0.690537,3],[0,27240989,0.690537,3],[0,27240989,0.813299,3],[0,27240989,0.84399,3],[0,26007435,1.580563,3],[0,6887344,1.304348,3],[0,26213027,0.966752,3],[0,20456441,0.506394,3],[0,26007435,1.672634,3],[0,26007435,1.856777,3],[0,27240989,0.966752,3],[0,27240989,1.028133,3],[0,8943268,1.058824,3],[0,8943268,1.120205,3],[0,8943268,1.150895,3],[0,26007435,2.102302,3],[0,12643931,2.777494,3],[0,12438338,1.641944,3],[0,7915306,2.409207,3],[0,7915306,2.501279,3],[0,19428479,1.457801,3],[0,2569905,2.838875,3],[0,12438338,1.734015,3],[0,7915306,2.685422,3],[0,12438338,1.826087,3],[0,7915306,2.716113,3],[0,6887344,1.120205,3],[0,3392274,2.470588,3],[0,3392274,2.531969,3],[0,7092937,0.87468,3],[0,19428479,1.120205,3],[0,3392274,2.777494,3],[0,3392274,2.869565,3],[0,3392274,3.023018,3],[0,26213027,2.685422,3],[0,3392274,4.005115,3],[0,3392274,4.066496,3],[0,19428479,0.782609,3],[0,26007435,1.181586,3],[0,26213027,2.286445,3],[0,26213027,2.255754,3],[0,26213027,1.918159,3],[0,26007435,1.304348,3],[0,7915306,2.900256,3],[0,7915306,4.127877,3],[0,19428479,0.721228,3],[0,19428479,0.629156,3],[0,19428479,0.383632,3],[0,20250849,1.120205,3],[0,20250849,1.488491,3],[0,20250849,1.641944,3],[0,6887344,1.764706,3],[0,3597867,0.84399,3],[0,12643931,0.84399,3],[0,20250849,1.764706,3],[0,8120899,2.501279,3],[0,27240989,2.900256,3],[0,12438338,2.040921,3],[0,19222887,0.87468,3],[0,19222887,0.782609,3],[0,27240989,1.365729,3],[0,6887344,2.624041,3],[0,21689995,1.120205,3],[0,27240989,1.396419,3],[0,6887344,2.777494,3],[0,6887344,3.974425,3],[0,27240989,1.488491,3],[0,3597867,0.076726,3],[0,8120899,1.703325,3],[0,19222887,0.690537,3],[0,21689995,1.488491,3],[0,8120899,1.826087,3],[0,21689995,1.365729,3],[0,21689995,1.212276,3],[0,21689995,1.304348,3],[0,8120899,1.795396,3],[0,3597867,0.352941,3],[0,27240989,1.734015,3],[0,20456441,0.383632,3],[0,20456441,0.352941,3],[0,3597867,1.918159,3],[0,12643931,1.826087,3],[0,3597867,1.549872,3],[0,8943268,1.181586,3],[0,3597867,1.365729,3],[0,8943268,1.212276,3],[0,8943268,1.242967,3],[0,8943268,1.335038,3],[0,8943268,1.488491,3],[0,8120899,0.537084,3],[0,8943268,1.611253,3],[0,19222887,2.501279,3],[0,19222887,2.317136,3],[0,12643931,1.365729,3],[0,20456441,0.322251,3],[0,19222887,1.580563,3],[0,27240989,2.930946,3],[0,19222887,1.549872,3],[0,3597867,1.242967,3],[0,19222887,1.457801,3],[0,20456441,0.199488,3],[0,12643931,0.936061,3],[0,6887344,1.42711,3],[0,19222887,1.365729,3],[0,20250849,1.089514,3],[0,6887344,1.580563,3],[0,19222887,1.120205,3],[0,20456441,0.015345,3],[0,19222887,0.966752,3],[0,13671893,0.84399,3],[0,7915306,0.87468,3],[0,26007435,0.598465,3],[0,2569905,2.040921,3],[0,3392274,2.01023,3],[0,3392274,2.040921,3],[0,2569905,2.225064,3],[0,7915306,1.089514,3],[0,19017294,1.856777,3],[0,3392274,2.163683,3],[0,7915306,1.150895,3],[0,3392274,2.225064,3],[0,12438338,1.457801,3],[0,19222887,0.383632,3],[0,12438338,1.519182,3],[0,2569905,1.887468,3],[0,13671893,0.905371,3],[0,7915306,1.365729,3],[0,21484403,0.87468,3],[0,21484403,0.721228,3],[0,13671893,0.966752,3],[0,13671893,0.751918,3],[0,12849523,0.782609,3],[0,7092937,2.286445,3],[0,3392274,1.365729,3],[0,19017294,2.040921,3],[0,19017294,2.132992,3],[0,21484403,0.997442,3],[0,19017294,2.716113,3],[0,8737676,1.611253,3],[0,21484403,1.089514,3],[0,20250849,0.659847,3],[0,6887344,0.352941,3],[0,12438338,1.304348,3],[0,8737676,1.304348,3],[0,2775497,0.475703,3],[0,12849523,1.42711,3],[0,21484403,1.150895,3],[0,21484403,1.212276,3],[0,12438338,1.365729,3],[0,3392274,1.611253,3],[0,20250849,0.598465,3],[0,12438338,1.396419,3],[0,3392274,1.641944,3],[0,12849523,1.181586,3],[0,2775497,0.445013,3],[0,12849523,1.058824,3],[0,3392274,1.181586,3],[0,8737676,2.624041,3],[0,13466300,3.851662,3],[0,26007435,0.905371,3],[0,12849523,0.352941,3],[0,7092937,1.611253,3],[0,7092937,1.580563,3],[0,8737676,1.120205,3],[0,7092937,1.519182,3],[0,7915306,1.97954,3],[0,19017294,1.335038,3],[0,8120899,1.181586,3],[0,8737676,1.028133,3],[0,14288670,2.317136,3],[0,6887344,0.905371,3],[0,8120899,1.242967,3],[0,7915306,2.102302,3],[0,7092937,1.457801,3],[0,3392274,2.255754,3],[0,19428479,2.286445,3],[0,3392274,2.347826,3],[0,27240989,0.138107,3],[0,7092937,1.335038,3],[0,14288670,1.764706,3],[0,7915306,2.317136,3],[0,19428479,1.795396,3],[0,14288670,1.549872,3],[0,19428479,6.460358,3],[0,8737676,1.273657,3],[0,12849523,1.764706,3],[0,7092937,1.948849,3],[0,7915306,0.598465,3],[0,8737676,1.150895,3],[0,7092937,1.918159,3],[0,7092937,1.856777,3],[0,14288670,4.097187,3],[0,7915306,1.549872,3],[0,8120899,1.089514,3],[0,14494262,0.107417,3],[0,12438338,1.580563,3],[0,2569905,2.439898,3],[0,7092937,1.795396,3],[0,29091321,0.598465,4],[0,29091321,0.567775,4],[0,5448198,1.058824,4],[0,5859383,1.396419,4],[0,8120899,0.475703,4],[0,7709714,1.089514,4],[0,9971230,1.058824,4],[0,29091321,0.506394,4],[0,8120899,1.672634,4],[0,17372555,1.335038,4],[0,17372555,0.966752,4],[0,9971230,1.089514,4],[0,17372555,2.869565,4],[0,28268951,0.598465,4],[0,5448198,1.457801,4],[0,28268951,0.383632,4],[0,5448198,0.414322,4],[0,17372555,1.120205,4],[0,5859383,2.347826,4],[0,23129142,1.457801,4],[0,28268951,0.87468,4],[0,5859383,2.624041,4],[0,7709714,0.84399,4],[0,8326491,2.071611,4],[0,28268951,0.936061,4],[0,28268951,1.396419,4],[0,7709714,0.751918,4],[0,17372555,1.703325,4],[0,29091321,1.212276,4],[0,23129142,1.488491,4],[0,17372555,2.01023,4],[0,7709714,0.352941,4],[0,8326491,1.97954,4],[0,5448198,0.598465,4],[0,17372555,1.795396,4],[0,5448198,0.690537,4],[0,20045256,2.409207,4],[0,5448198,0.721228,4],[0,9971230,1.181586,4],[0,5859383,1.519182,4],[0,17372555,2.808184,4],[0,8120899,0.751918,4],[0,8120899,0.813299,4],[0,23129142,0.966752,4],[0,5859383,1.641944,4],[0,5448198,0.966752,4],[0,23129142,1.028133,4],[0,23129142,1.089514,4],[0,5859383,1.703325,4],[0,7709714,0.997442,4],[0,29091321,1.365729,4],[0,5859383,1.887468,4],[0,7709714,0.87468,4],[0,9971230,1.273657,4],[0,29091321,0.84399,4],[0,23129142,1.120205,4],[0,23129142,1.304348,4],[0,5859383,2.132992,4],[0,8120899,0.936061,4],[0,17578148,1.304348,4],[0,7915306,1.212276,4],[0,23334734,1.641944,4],[0,29708098,1.120205,4],[0,8326491,0.997442,4],[0,8326491,1.028133,4],[0,29708098,1.457801,4],[0,23334734,1.304348,4],[0,7915306,1.488491,4],[0,17578148,1.488491,4],[0,8326491,1.089514,4],[0,17578148,1.549872,4],[0,17578148,1.611253,4],[0,29708098,1.948849,4],[0,29708098,1.97954,4],[0,1130758,2.071611,4],[0,7915306,1.734015,4],[0,8326491,1.212276,4],[0,23334734,0.813299,4],[0,23334734,0.782609,4],[0,17372555,4.342711,4],[0,17578148,2.716113,4],[0,7915306,2.071611,4],[0,8326491,1.335038,4],[0,7915306,2.255754,4],[0,23540327,0.721228,4],[0,17372555,3.820972,4],[0,10176822,1.212276,4],[0,23540327,0.87468,4],[0,8326491,1.457801,4],[0,29708098,0.506394,4],[0,5653790,0.751918,4],[0,5653790,0.84399,4],[0,5653790,1.058824,4],[0,29708098,0.414322,4],[0,20250849,0.383632,4],[0,29708098,0.352941,4],[0,20250849,0.322251,4],[0,5653790,2.01023,4],[0,1130758,3.636829,4],[0,7915306,0.29156,4],[0,7915306,0.26087,4],[0,5653790,2.347826,4],[0,20250849,0.107417,4],[0,29708098,0.230179,4],[0,5653790,2.961637,4],[0,5653790,0.475703,4],[0,20250849,0.629156,4],[0,23334734,2.409207,4],[0,23334734,2.255754,4],[0,5653790,0.383632,4],[0,17578148,1.212276,4],[0,8326491,0.383632,4],[0,29708098,0.782609,4],[0,29708098,0.813299,4],[0,8326491,0.659847,4],[0,1130758,2.501279,4],[0,7915306,0.966752,4],[0,17578148,1.273657,4],[0,29708098,1.089514,4],[0,1747535,0.506394,4],[0,719573,0.905371,4],[0,20662033,1.181586,4],[0,719573,0.997442,4],[0,719573,1.089514,4],[0,20456441,0.230179,4],[0,7709714,2.470588,4],[0,1747535,0.199488,4],[0,1747535,0.168798,4],[0,20456441,0.168798,4],[0,20456441,0.107417,4],[0,20456441,0.076726,4],[0,7709714,1.918159,4],[0,719573,2.040921,4],[0,7709714,1.856777,4],[0,17783740,1.120205,4],[0,5448198,1.948849,4],[0,719573,2.255754,4],[0,7709714,1.672634,4],[0,29091321,1.703325,4],[0,5859383,1.028133,4],[0,28268951,2.01023,4],[0,7709714,1.641944,4],[0,5859383,1.089514,4],[0,17783740,1.97954,4],[0,29091321,1.672634,4],[0,5448198,1.641944,4],[0,8326491,1.795396,4],[0,719573,2.439898,4],[0,8120899,1.764706,4],[0,10382415,1.212276,4],[0,23540327,1.089514,4],[0,10382415,1.273657,4],[0,10382415,1.365729,4],[0,10176822,0.966752,4],[0,7915306,2.777494,4],[0,23540327,1.273657,4],[0,20456441,0.751918,4],[0,10176822,0.905371,4],[0,23540327,1.365729,4],[0,10176822,0.87468,4],[0,20662033,0.690537,4],[0,10176822,0.659847,4],[0,23540327,1.396419,4],[0,20662033,0.813299,4],[0,1747535,1.089514,4],[0,10176822,0.322251,4],[0,23540327,1.42711,4],[0,23540327,1.641944,4],[0,719573,0.107417,4],[0,1747535,0.905371,4],[0,20456441,0.598465,4],[0,20250849,0.84399,4],[0,719573,0.383632,4],[0,719573,0.414322,4],[0,23540327,1.97954,4],[0,719573,0.537084,4],[0,719573,0.751918,4],[0,719573,0.782609,4],[0,5859383,0.475703,4],[0,18811702,0.629156,4],[0,19428479,1.826087,4],[0,18811702,0.138107,4],[0,18811702,0.046036,4],[0,22306772,0.352941,4],[0,22306772,0.414322,4],[0,9354453,0.598465,4],[0,7092937,1.826087,4],[0,9354453,0.721228,4],[0,22306772,0.813299,4],[0,7092937,2.071611,4],[0,9354453,1.120205,4],[0,7092937,3.176471,4],[0,21484403,1.887468,4],[0,21484403,1.856777,4],[0,21484403,1.672634,4],[0,21484403,1.396419,4],[0,18606110,2.470588,4],[0,8737676,1.734015,4],[0,21484403,1.304348,4],[0,18606110,1.611253,4],[0,925166,0.168798,4],[0,8943268,0.567775,4],[0,28680136,0.629156,4],[0,19428479,0.29156,4],[0,7092937,0.199488,4],[0,19428479,0.352941,4],[0,18811702,0.751918,4],[0,28680136,0.383632,4],[0,19428479,0.751918,4],[0,6476160,8.240409,4],[0,19428479,0.87468,4],[0,7092937,0.905371,4],[0,18811702,0.659847,4],[0,28680136,0.107417,4],[0,29296913,1.273657,4],[0,29296913,1.181586,4],[0,28680136,0.076726,4],[0,19428479,1.519182,4],[0,19428479,1.611253,4],[0,28680136,0.046036,4],[0,28680136,0.015345,4],[0,1541943,1.703325,4],[0,22306772,2.132992,4],[0,7298529,0.046036,4],[0,22306772,2.225064,4],[0,7298529,0.230179,4],[0,7298529,0.29156,4],[0,22306772,2.501279,4],[0,22306772,2.654731,4],[0,7298529,0.322251,4],[0,22306772,2.716113,4],[0,22306772,2.808184,4],[0,19634071,0.598465,4],[0,7298529,0.475703,4],[0,7298529,0.537084,4],[0,1336350,2.102302,4],[0,19634071,1.181586,4],[0,1541943,2.132992,4],[0,19634071,1.212276,4],[0,19634071,1.304348,4],[0,19634071,1.396419,4],[0,6476160,2.378517,4],[0,21484403,1.242967,4],[0,1541943,0.445013,4],[0,18606110,1.42711,4],[0,18606110,1.365729,4],[0,1541943,0.659847,4],[0,29296913,0.84399,4],[0,1541943,0.721228,4],[0,18606110,1.120205,4],[0,18606110,1.089514,4],[0,1541943,0.936061,4],[0,1541943,1.058824,4],[0,1541943,1.089514,4],[0,21484403,0.905371,4],[0,22306772,1.457801,4],[0,1541943,1.273657,4],[0,8737676,1.058824,4],[0,8737676,0.966752,4],[0,18606110,0.414322,4],[0,1336350,2.992327,4],[0,8737676,0.659847,4],[0,8737676,0.414322,4],[0,8737676,0.383632,4],[0,21895588,1.089514,4],[0,9148861,0.107417,4],[0,21895588,1.273657,4],[0,21895588,1.42711,4],[0,21895588,1.580563,4],[0,21895588,1.826087,4],[0,6887344,0.966752,4],[0,6681752,5.294118,4],[0,6887344,1.150895,4],[0,6681752,2.01023,4],[0,6681752,1.826087,4],[0,6681752,1.580563,4],[0,6681752,1.089514,4],[0,6681752,0.905371,4],[0,925166,1.365729,4],[0,6887344,1.335038,4],[0,9148861,0.87468,4],[0,6887344,1.734015,4],[0,9148861,1.058824,4],[0,22101180,0.445013,4],[0,9148861,1.42711,4],[0,19017294,1.242967,4],[0,19017294,1.365729,4],[0,19017294,1.396419,4],[0,925166,3.14578,4],[0,19017294,1.089514,4],[0,19017294,1.028133,4],[0,21895588,0.352941,4],[0,6887344,0.138107,4],[0,6887344,0.168798,4],[0,6887344,0.230179,4],[0,19222887,0.26087,4],[0,19017294,0.537084,4],[0,19017294,0.506394,4],[0,6887344,0.506394,4],[0,19017294,0.352941,4],[0,19017294,0.322251,4],[0,19222887,0.475703,4],[0,19017294,0.230179,4],[0,21895588,0.997442,4],[0,6887344,0.751918,4],[0,21895588,1.028133,4],[0,22101180,1.611253,4],[0,19222887,1.150895,4],[0,28680136,1.672634,4],[0,22101180,1.795396,4],[0,22101180,1.918159,4],[0,22101180,2.102302,4],[0,22101180,2.347826,4],[0,18811702,1.058824,4],[0,6681752,0.659847,4],[0,8943268,1.028133,4],[0,28680136,1.120205,4],[0,28680136,1.028133,4],[0,8943268,0.966752,4],[0,18811702,0.905371,4],[0,28680136,0.905371,4],[0,925166,0.29156,4],[0,8943268,0.721228,4],[0,8943268,0.690537,4],[0,28680136,0.782609,4],[0,28680136,0.690537,4],[0,8943268,0.659847,4],[0,6887344,2.194373,4],[0,21689995,1.580563,4],[0,925166,0.751918,4],[0,21689995,1.335038,4],[0,28680136,2.409207,4],[0,28680136,2.378517,4],[0,22101180,0.782609,4],[0,925166,0.659847,4],[0,18811702,1.335038,4],[0,21689995,1.150895,4],[0,22101180,0.905371,4],[0,22101180,0.936061,4],[0,22101180,0.966752,4],[0,22101180,0.997442,4],[0,22101180,1.089514,4],[0,21689995,0.997442,4],[0,18811702,1.212276,4],[0,925166,0.506394,4],[0,21689995,0.936061,4],[0,22101180,1.242967,4],[0,22101180,1.304348,4],[0,22101180,1.335038,4],[0,6064975,1.242967,4],[0,21073218,1.948849,4],[0,21073218,1.856777,4],[0,7504122,1.457801,4],[0,18194925,4.127877,4],[0,9765638,0.414322,4],[0,18194925,1.703325,4],[0,28474543,1.97954,4],[0,21073218,1.150895,4],[0,21073218,0.936061,4],[0,21073218,0.905371,4],[0,18194925,1.181586,4],[0,18194925,1.150895,4],[0,22923549,0.87468,4],[0,21073218,0.629156,4],[0,28474543,1.365729,4],[0,21073218,0.598465,4],[0,28474543,1.304348,4],[0,22923549,1.335038,4],[0,20045256,0.352941,4],[0,20045256,0.445013,4],[0,7504122,0.414322,4],[0,19839664,1.120205,4],[0,18400517,0.567775,4],[0,22717957,1.611253,4],[0,19839664,1.150895,4],[0,19839664,1.212276,4],[0,7504122,0.506394,4],[0,7504122,0.567775,4],[0,22717957,2.961637,4],[0,1336350,0.567775,4],[0,1336350,0.537084,4],[0,7504122,0.751918,4],[0,1336350,0.475703,4],[0,6064975,2.746803,4],[0,19839664,2.439898,4],[0,6064975,2.317136,4],[0,6064975,1.887468,4],[0,1336350,0.046036,4],[0,6064975,1.734015,4],[0,7504122,0.966752,4],[0,7504122,1.089514,4],[0,9765638,1.396419,4],[0,9765638,1.457801,4],[0,9765638,1.519182,4],[0,1130758,0.751918,4],[0,20867626,0.721228,4],[0,17989333,1.181586,4],[0,20867626,0.659847,4],[0,17989333,0.966752,4],[0,20867626,0.475703,4],[0,17989333,0.751918,4],[0,719573,4.035806,4],[0,20045256,1.212276,4],[0,9971230,0.690537,4],[0,20045256,1.335038,4],[0,1130758,1.150895,4],[0,719573,3.11509,4],[0,20867626,0.107417,4],[0,719573,3.053708,4],[0,9971230,0.87468,4],[0,9971230,1.028133,4],[0,1130758,1.365729,4],[0,1130758,0.506394,4],[0,1130758,0.537084,4],[0,22923549,1.488491,4],[0,28474543,1.120205,4],[0,1130758,0.567775,4],[0,22923549,1.641944,4],[0,28474543,0.997442,4],[0,22923549,1.918159,4],[0,28474543,0.84399,4],[0,28474543,0.813299,4],[0,28474543,0.721228,4],[0,22923549,2.132992,4],[0,28474543,0.629156,4],[0,28474543,0.475703,4],[0,6064975,0.87468,4],[0,18194925,0.015345,4],[0,20045256,0.690537,4],[0,20867626,1.611253,4],[0,9765638,0.84399,4],[0,6064975,0.782609,4],[0,20867626,0.997442,4],[0,1130758,0.721228,4],[0,1541943,3.667519,4],[0,28885728,0.997442,4],[0,29502505,0.414322,4],[0,29502505,0.475703,4],[0,9560045,1.488491,4],[0,29502505,0.598465,4],[0,29502505,0.629156,4],[0,29502505,0.690537,4],[0,29502505,0.721228,4],[0,22512365,0.659847,4],[0,7298529,2.716113,4],[0,22512365,0.751918,4],[0,29502505,0.966752,4],[0,29502505,0.997442,4],[0,22512365,1.058824,4],[0,28885728,1.150895,4],[0,29502505,1.089514,4],[0,21278810,1.734015,4],[0,28885728,1.304348,4],[0,21278810,1.396419,4],[0,21278810,1.242967,4],[0,19634071,1.672634,4],[0,7298529,0.87468,4],[0,7298529,0.936061,4],[0,7298529,0.966752,4],[0,7298529,1.150895,4],[0,28885728,0.659847,4],[0,6476160,1.365729,4],[0,6476160,1.273657,4],[0,6476160,1.120205,4],[0,18606110,0.015345,4],[0,9560045,0.230179,4],[0,9560045,0.29156,4],[0,6476160,0.506394,4],[0,9560045,0.598465,4],[0,6476160,0.383632,4],[0,6476160,0.352941,4],[0,7298529,1.488491,4],[0,8532083,1.97954,4],[0,9560045,0.751918,4],[0,9560045,0.84399,4],[0,7298529,2.286445,4],[0,9560045,0.905371,4],[0,8532083,0.537084,4],[0,19839664,0.322251,4],[0,18400517,2.132992,4],[0,19839664,0.506394,4],[0,18400517,1.672634,4],[0,19839664,0.567775,4],[0,18400517,1.580563,4],[0,19839664,0.659847,4],[0,19839664,0.751918,4],[0,1336350,1.181586,4],[0,18400517,0.997442,4],[0,18400517,0.905371,4],[0,19839664,0.966752,4],[0,18400517,0.813299,4],[0,18400517,0.721228,4],[0,22717957,1.028133,4],[0,22717957,1.089514,4],[0,7504122,0.383632,4],[0,18400517,0.690537,4],[0,1336350,0.997442,4],[0,1336350,0.966752,4],[0,22512365,3.14578,4],[0,22512365,3.452685,4],[0,21278810,1.058824,4],[0,21278810,0.84399,4],[0,29502505,1.150895,4],[0,6270567,0.936061,4],[0,6270567,0.813299,4],[0,6270567,0.782609,4],[0,6270567,0.690537,4],[0,21278810,0.506394,4],[0,6270567,0.506394,4],[0,8532083,1.150895,4],[0,6270567,0.445013,4],[0,8532083,1.120205,4],[0,8532083,1.058824,4],[0,29502505,1.212276,4],[0,6270567,0.29156,4],[0,29502505,1.242967,4],[0,8532083,0.997442,4],[0,6270567,0.015345,4],[0,18400517,2.992327,4],[0,8532083,0.567775,4],[0,25390658,1.150895,4],[0,25390658,1.734015,4],[0,4009051,2.071611,4],[0,4009051,1.764706,4],[0,4009051,1.089514,4],[0,4009051,0.690537,4],[0,4009051,0.629156,4],[0,2158720,3.851662,4],[0,4009051,0.567775,4],[0,12027154,0.84399,4],[0,12027154,0.936061,4],[0,12027154,1.304348,4],[0,12027154,1.488491,4],[0,12027154,1.795396,4],[0,12027154,2.777494,4],[0,25596250,0.352941,4],[0,2158720,4.956522,4],[0,25596250,1.150895,4],[0,25596250,1.335038,4],[0,25596250,1.764706,4],[0,3803459,4.925831,4],[0,3803459,3.7289,4],[0,3803459,3.237852,4],[0,3803459,2.347826,4],[0,3803459,1.887468,4],[0,3803459,1.641944,4],[0,12232746,0.966752,4],[0,4214644,0.567775,4],[0,4214644,0.506394,4],[0,27857766,1.242967,4],[0,30119282,2.409207,4],[0,27857766,1.181586,4],[0,30119282,2.439898,4],[0,27857766,1.028133,4],[0,27857766,0.751918,4],[0,27857766,0.659847,4],[0,30119282,2.685422,4],[0,27857766,0.445013,4],[0,15727816,0.046036,4],[0,11821561,0.475703,4],[0,11821561,0.782609,4],[0,11821561,1.089514,4],[0,2158720,1.611253,4],[0,11821561,1.396419,4],[0,11821561,1.703325,4],[0,11821561,1.856777,4],[0,15522224,2.163683,4],[0,15522224,2.071611,4],[0,15522224,1.580563,4],[0,15522224,1.488491,4],[0,25390658,0.506394,4],[0,15522224,1.150895,4],[0,25390658,1.089514,4],[0,25390658,1.120205,4],[0,3597867,2.286445,4],[0,12438338,0.721228,4],[0,12438338,0.997442,4],[0,12438338,1.212276,4],[0,12438338,1.242967,4],[0,26007435,0.84399,4],[0,12438338,1.611253,4],[0,12438338,1.856777,4],[0,12438338,1.97954,4],[0,3597867,1.058824,4],[0,3597867,0.997442,4],[0,3597867,0.966752,4],[0,3597867,0.690537,4],[0,3597867,0.598465,4],[0,12438338,2.378517,4],[0,3597867,0.383632,4],[0,3597867,0.322251,4],[0,3597867,0.26087,4],[0,12643931,0.659847,4],[0,30324875,0.475703,4],[0,12643931,1.028133,4],[0,30324875,0.87468,4],[0,12643931,1.519182,4],[0,30324875,1.150895,4],[0,26213027,0.84399,4],[0,26213027,1.028133,4],[0,26213027,1.120205,4],[0,3803459,1.273657,4],[0,3803459,1.150895,4],[0,3803459,1.120205,4],[0,3803459,1.089514,4],[0,308389,1.304348,4],[0,3803459,0.997442,4],[0,3803459,0.966752,4],[0,308389,1.273657,4],[0,3803459,0.782609,4],[0,12232746,1.120205,4],[0,12232746,1.212276,4],[0,308389,0.936061,4],[0,308389,0.905371,4],[0,3803459,0.322251,4],[0,308389,0.813299,4],[0,308389,0.782609,4],[0,3803459,0.138107,4],[0,12232746,1.273657,4],[0,308389,0.445013,4],[0,25801843,0.322251,4],[0,12232746,1.703325,4],[0,25801843,0.629156,4],[0,12232746,1.918159,4],[0,25801843,0.690537,4],[0,25801843,1.212276,4],[0,3597867,2.746803,4],[0,12438338,0.598465,4],[0,3597867,2.531969,4],[0,4625828,0.475703,4],[0,4625828,0.445013,4],[0,4625828,0.383632,4],[0,16139001,0.721228,4],[0,16139001,0.567775,4],[0,16139001,0.475703,4],[0,4420236,5.048593,4],[0,4420236,4.189258,4],[0,16139001,0.383632,4],[0,16139001,0.046036,4],[0,11410377,0.782609,4],[0,11410377,0.84399,4],[0,11410377,0.87468,4],[0,11410377,1.028133,4],[0,11410377,1.089514,4],[0,11410377,1.150895,4],[0,11410377,1.242967,4],[0,24979473,0.690537,4],[0,11410377,1.365729,4],[0,24979473,0.84399,4],[0,24979473,0.87468,4],[0,24979473,1.089514,4],[0,11410377,1.856777,4],[0,24979473,1.304348,4],[0,24979473,1.488491,4],[0,4420236,1.488491,4],[0,4420236,1.457801,4],[0,24568288,1.212276,4],[0,24568288,1.42711,4],[0,24568288,2.654731,4],[0,16344594,0.537084,4],[0,4625828,3.636829,4],[0,4625828,1.580563,4],[0,4625828,1.42711,4],[0,4625828,1.273657,4],[0,4625828,1.028133,4],[0,4625828,0.997442,4],[0,4625828,0.87468,4],[0,4625828,0.813299,4],[0,11204784,1.242967,4],[0,11204784,1.273657,4],[0,11204784,1.365729,4],[0,11204784,1.549872,4],[0,16139001,2.531969,4],[0,16139001,1.519182,4],[0,24773881,0.84399,4],[0,24773881,0.936061,4],[0,24773881,0.997442,4],[0,24773881,1.028133,4],[0,24773881,1.089514,4],[0,24773881,1.120205,4],[0,24773881,1.549872,4],[0,16139001,1.335038,4],[0,4625828,0.537084,4],[0,16139001,1.273657,4],[0,30119282,1.734015,4],[0,25185066,0.813299,4],[0,25185066,0.84399,4],[0,11615969,1.273657,4],[0,11615969,1.304348,4],[0,30119282,1.97954,4],[0,2158720,0.690537,4],[0,25185066,2.102302,4],[0,2158720,0.813299,4],[0,2158720,0.84399,4],[0,2158720,0.997442,4],[0,4214644,2.439898,4],[0,11615969,1.826087,4],[0,4214644,2.102302,4],[0,4214644,2.01023,4],[0,11615969,1.887468,4],[0,2158720,1.273657,4],[0,4214644,1.457801,4],[0,4214644,1.42711,4],[0,4214644,1.365729,4],[0,4214644,1.335038,4],[0,27857766,2.102302,4],[0,4214644,1.212276,4],[0,4214644,0.997442,4],[0,4214644,0.782609,4],[0,4214644,0.721228,4],[0,27857766,1.519182,4],[0,4420236,1.242967,4],[0,4420236,0.997442,4],[0,4420236,0.84399,4],[0,15933409,0.690537,4],[0,15933409,0.659847,4],[0,15933409,0.629156,4],[0,15933409,0.383632,4],[0,4420236,0.107417,4],[0,15933409,0.107417,4],[0,15933409,0.015345,4],[0,11615969,0.506394,4],[0,30119282,0.107417,4],[0,30119282,0.138107,4],[0,30119282,0.445013,4],[0,30119282,0.537084,4],[0,25185066,0.475703,4],[0,30119282,0.997442,4],[0,30119282,1.058824,4],[0,30119282,1.150895,4],[0,30119282,1.212276,4],[0,30119282,1.242967,4],[0,30119282,1.273657,4],[0,30119282,1.335038,4],[0,30119282,1.365729,4],[0,27857766,3.943734,4],[0,11615969,1.089514,4],[0,2158720,0.445013,4],[0,30119282,1.672634,4],[0,2775497,2.501279,4],[0,13877485,0.26087,4],[0,13877485,0.230179,4],[0,27446582,1.488491,4],[0,27446582,1.396419,4],[0,13466300,0.445013,4],[0,13466300,0.506394,4],[0,27446582,1.242967,4],[0,27035397,0.506394,4],[0,27035397,0.567775,4],[0,13466300,0.782609,4],[0,27446582,0.751918,4],[0,27035397,0.629156,4],[0,13466300,0.997442,4],[0,27446582,0.567775,4],[0,13466300,1.028133,4],[0,13466300,1.242967,4],[0,13466300,1.273657,4],[0,13466300,1.365729,4],[0,13466300,1.519182,4],[0,13466300,1.549872,4],[0,13466300,1.580563,4],[0,27035397,0.690537,4],[0,27035397,0.997442,4],[0,27035397,1.028133,4],[0,102796,2.347826,4],[0,27035397,1.273657,4],[0,2981089,0.782609,4],[0,2981089,0.751918,4],[0,2981089,0.598465,4],[0,2981089,0.445013,4],[0,2981089,0.352941,4],[0,13260708,1.304348,4],[0,2981089,0.26087,4],[0,2981089,0.199488,4],[0,13260708,1.488491,4],[0,13260708,1.549872,4],[0,13877485,1.335038,4],[0,13877485,1.120205,4],[0,13877485,1.058824,4],[0,102796,4.83376,4],[0,13877485,0.87468,4],[0,13877485,0.659847,4],[0,13877485,0.629156,4],[0,13877485,0.506394,4],[0,26829804,0.84399,4],[0,26829804,0.936061,4],[0,26829804,0.997442,4],[0,26829804,1.212276,4],[0,26829804,1.273657,4],[0,26829804,1.488491,4],[0,13877485,0.414322,4],[0,2775497,3.483376,4],[0,27446582,1.734015,4],[0,13671893,0.414322,4],[0,102796,1.212276,4],[0,27240989,0.629156,4],[0,27240989,1.120205,4],[0,2569905,0.076726,4],[0,102796,0.659847,4],[0,27240989,1.212276,4],[0,27240989,1.335038,4],[0,2569905,0.29156,4],[0,2569905,0.322251,4],[0,2569905,0.352941,4],[0,102796,0.414322,4],[0,2569905,0.598465,4],[0,2569905,0.629156,4],[0,27240989,1.918159,4],[0,27240989,2.071611,4],[0,2569905,0.84399,4],[0,2569905,4.588235,4],[0,102796,0.230179,4],[0,2569905,2.777494,4],[0,102796,0.138107,4],[0,2569905,2.409207,4],[0,2569905,1.150895,4],[0,2569905,2.378517,4],[0,2569905,1.273657,4],[0,2569905,1.396419,4],[0,2569905,1.519182,4],[0,13466300,2.378517,4],[0,27035397,1.457801,4],[0,13466300,2.685422,4],[0,102796,2.194373,4],[0,27035397,1.856777,4],[0,27035397,1.97954,4],[0,27035397,2.163683,4],[0,13466300,3.329923,4],[0,27035397,2.317136,4],[0,27035397,2.409207,4],[0,27035397,3.452685,4],[0,2775497,1.549872,4],[0,2775497,1.365729,4],[0,2775497,1.181586,4],[0,13671893,1.273657,4],[0,102796,2.01023,4],[0,2775497,0.537084,4],[0,2775497,0.506394,4],[0,2775497,0.322251,4],[0,2775497,0.168798,4],[0,102796,1.826087,4],[0,13671893,0.813299,4],[0,102796,1.672634,4],[0,13671893,0.659847,4],[0,102796,1.580563,4],[0,102796,1.519182,4],[0,102796,1.42711,4],[0,102796,1.273657,4],[0,3392274,1.120205,4],[0,3392274,1.058824,4],[0,12849523,1.641944,4],[0,3392274,0.813299,4],[0,3392274,0.782609,4],[0,30324875,2.56266,4],[0,2364312,0.26087,4],[0,3392274,0.537084,4],[0,2364312,0.475703,4],[0,2364312,0.598465,4],[0,2364312,0.629156,4],[0,2364312,0.751918,4],[0,13055116,0.87468,4],[0,13055116,0.966752,4],[0,3392274,0.107417,4],[0,13055116,1.028133,4],[0,13055116,1.058824,4],[0,13055116,1.089514,4],[0,13055116,1.150895,4],[0,13055116,1.181586,4],[0,2364312,1.181586,4],[0,2364312,1.304348,4],[0,13055116,1.242967,4],[0,26418620,0.230179,4],[0,13055116,1.611253,4],[0,26418620,0.352941,4],[0,26418620,0.537084,4],[0,26213027,1.212276,4],[0,26213027,1.304348,4],[0,3392274,4.28133,4],[0,26213027,1.519182,4],[0,26213027,1.549872,4],[0,27652174,1.488491,4],[0,26213027,1.611253,4],[0,26213027,1.641944,4],[0,3392274,3.7289,4],[0,3392274,2.624041,4],[0,27652174,0.936061,4],[0,27652174,0.87468,4],[0,27652174,0.782609,4],[0,3392274,2.409207,4],[0,27652174,0.690537,4],[0,12849523,0.29156,4],[0,27652174,0.506394,4],[0,12849523,0.659847,4],[0,12849523,0.690537,4],[0,12849523,0.721228,4],[0,12849523,0.905371,4],[0,12849523,0.997442,4],[0,3392274,2.194373,4],[0,3392274,1.887468,4],[0,12849523,1.212276,4],[0,3392274,1.488491,4],[0,12849523,1.488491,4],[0,3392274,1.273657,4],[0,3186682,0.87468,4],[0,3186682,0.629156,4],[0,3186682,0.598465,4],[0,3186682,0.445013,4],[0,14083077,0.629156,4],[0,3186682,0.322251,4],[0,3186682,0.076726,4],[0,3186682,0.015345,4],[0,14083077,0.445013,4],[0,14083077,0.230179,4],[0,14083077,0.168798,4],[0,26624212,0.322251,4],[0,26624212,0.352941,4],[0,13260708,0.813299,4],[0,26624212,0.567775,4],[0,26624212,0.598465,4],[0,26624212,0.751918,4],[0,26624212,1.672634,4],[0,2981089,7.196931,4],[0,2981089,1.826087,4],[0,13260708,0.936061,4],[0,2981089,1.580563,4],[0,2981089,1.304348,4],[0,2981089,1.242967,4],[0,2981089,1.120205,4],[0,2981089,0.997442,4],[0,13260708,0.997442,4],[0,26418620,0.567775,4],[0,26418620,0.629156,4],[0,26418620,0.690537,4],[0,2364312,1.97954,4],[0,26418620,0.936061,4],[0,2364312,2.194373,4],[0,26418620,1.028133,4],[0,26418620,1.058824,4],[0,26418620,1.212276,4],[0,14083077,2.286445,4],[0,26418620,1.335038,4],[0,14083077,2.01023,4],[0,26418620,1.641944,4],[0,26418620,1.703325,4],[0,2364312,2.869565,4],[0,26418620,2.624041,4],[0,26418620,2.685422,4],[0,14083077,1.641944,4],[0,3186682,4.618926,4],[0,14083077,1.457801,4],[0,3186682,2.777494,4],[0,3186682,2.501279,4],[0,3186682,2.194373,4],[0,3186682,1.795396,4],[0,3186682,1.734015,4],[0,14083077,1.212276,4],[0,3186682,1.549872,4],[0,2364312,4.31202,4],[0,5242605,1.948849,4],[0,16961371,0.629156,4],[0,5242605,1.304348,4],[0,16550186,1.028133,4],[0,4831421,0.690537,4],[0,513981,4.342711,4],[0,29913690,3.667519,4],[0,16961371,0.475703,4],[0,5242605,0.813299,4],[0,28063359,1.335038,4],[0,16961371,0.383632,4],[0,28063359,1.42711,4],[0,4831421,0.936061,4],[0,5242605,0.751918,4],[0,16550186,1.120205,4],[0,4831421,1.764706,4],[0,28063359,2.040921,4],[0,24362696,2.59335,4],[0,24362696,1.457801,4],[0,24362696,1.304348,4],[0,513981,3.851662,4],[0,5242605,0.352941,4],[0,24362696,1.150895,4],[0,10793600,0.29156,4],[0,24362696,1.089514,4],[0,513981,1.181586,4],[0,5242605,0.230179,4],[0,5242605,0.168798,4],[0,10588007,2.624041,4],[0,16961371,2.900256,4],[0,16961371,2.838875,4],[0,16961371,2.286445,4],[0,16961371,1.887468,4],[0,16550186,0.782609,4],[0,16961371,1.703325,4],[0,28063359,0.475703,4],[0,28063359,0.506394,4],[0,16961371,1.42711,4],[0,16961371,1.396419,4],[0,29913690,3.913043,4],[0,28063359,0.567775,4],[0,16961371,1.058824,4],[0,16961371,1.028133,4],[0,23951511,0.813299,4],[0,16961371,0.966752,4],[0,28063359,0.721228,4],[0,16961371,0.87468,4],[0,16961371,0.84399,4],[0,23951511,1.028133,4],[0,23951511,1.181586,4],[0,23951511,1.273657,4],[0,28063359,0.87468,4],[0,513981,1.028133,4],[0,28063359,0.966752,4],[0,513981,1.058824,4],[0,28063359,1.058824,4],[0,5242605,2.59335,4],[0,513981,1.918159,4],[0,24157104,1.120205,4],[0,5037013,0.29156,4],[0,29913690,1.058824,4],[0,5037013,0.414322,4],[0,5037013,0.445013,4],[0,16755778,1.120205,4],[0,16755778,0.997442,4],[0,513981,1.764706,4],[0,16755778,0.629156,4],[0,1953128,0.567775,4],[0,5037013,0.966752,4],[0,513981,1.734015,4],[0,5037013,1.058824,4],[0,513981,1.672634,4],[0,513981,1.611253,4],[0,16755778,0.905371,4],[0,24157104,1.242967,4],[0,5037013,1.703325,4],[0,16755778,0.751918,4],[0,1953128,1.120205,4],[0,24157104,1.335038,4],[0,24157104,1.457801,4],[0,5037013,3.360614,4],[0,29913690,0.414322,4],[0,1953128,1.396419,4],[0,1953128,1.488491,4],[0,5037013,4.649616,4],[0,1953128,1.519182,4],[0,16550186,1.488491,4],[0,5242605,0.107417,4],[0,5242605,0.076726,4],[0,10793600,0.352941,4],[0,16550186,2.102302,4],[0,10793600,0.383632,4],[0,10999192,1.42711,4],[0,29913690,3.084399,4],[0,10999192,1.150895,4],[0,10999192,0.997442,4],[0,10793600,0.414322,4],[0,29913690,2.930946,4],[0,10793600,0.659847,4],[0,513981,1.335038,4],[0,10793600,1.089514,4],[0,10999192,0.690537,4],[0,10999192,0.629156,4],[0,24157104,0.936061,4],[0,513981,2.286445,4],[0,513981,2.194373,4],[0,29913690,2.163683,4],[0,513981,1.457801,4],[0,513981,2.163683,4],[0,16755778,1.365729,4],[0,29913690,1.457801,4],[0,5037013,0.107417,4],[0,5037013,0.168798,4],[0,16755778,1.273657,4],[0,5037013,0.230179,4],[0,513981,0.414322,4],[0,23745919,1.028133,4],[0,17166963,1.488491,4],[0,17166963,0.813299,4],[0,16550186,0.445013,4],[0,23745919,0.997442,4],[0,16550186,0.352941,4],[0,16344594,0.87468,4],[0,10588007,0.84399,4],[0,23745919,1.365729,4],[0,17166963,0.997442,4],[0,17166963,1.181586,4],[0,16344594,0.84399,4],[0,16344594,0.936061,4],[0,513981,0.721228,4],[0,16344594,1.089514,4],[0,23745919,1.641944,4],[0,17166963,1.242967,4],[0,16344594,0.782609,4],[0,28268951,0.26087,4],[0,16344594,1.028133,4],[0,10588007,1.304348,4],[0,17372555,0.690537,4],[0,19634071,0.383632,5],[0,3392274,0.567775,5],[0,19634071,0.29156,5],[0,2364312,0.383632,5],[0,3392274,0.690537,5],[0,1336350,2.961637,5],[0,1953128,0.199488,5],[0,102796,0.87468,5],[0,3392274,1.457801,5],[0,7298529,0.015345,5],[0,19634071,0.414322,5],[0,19634071,0.475703,5],[0,23334734,1.089514,5],[0,3392274,0.475703,5],[0,102796,0.905371,5],[0,20456441,0.26087,5],[0,19634071,0.629156,5],[0,19634071,0.813299,5],[0,1747535,2.163683,5],[0,29296913,0.690537,5],[0,102796,0.475703,5],[0,3392274,1.089514,5],[0,29296913,0.598465,5],[0,29296913,0.199488,5],[0,20250849,1.273657,5],[0,20250849,1.181586,5],[0,3392274,1.028133,5],[0,5448198,0.506394,5],[0,12849523,1.887468,5],[0,3392274,1.304348,5],[0,3392274,0.84399,5],[0,20456441,0.046036,5],[0,21484403,0.567775,5],[0,1953128,0.414322,5],[0,102796,0.567775,5],[0,23334734,0.997442,5],[0,2364312,0.138107,5],[0,27240989,1.181586,5],[0,2364312,0.168798,5],[0,8737676,0.813299,5],[0,2364312,0.230179,5],[0,28885728,0.506394,5],[0,24157104,0.782609,5],[0,13055116,1.488491,5],[0,24157104,0.690537,5],[0,13055116,1.641944,5],[0,23334734,1.826087,5],[0,513981,2.624041,5],[0,10793600,1.42711,5],[0,26418620,0.659847,5],[0,27240989,0.87468,5],[0,10793600,1.058824,5],[0,26418620,0.782609,5],[0,26418620,0.87468,5],[0,10793600,1.028133,5],[0,28885728,1.058824,5],[0,27240989,0.659847,5],[0,10793600,0.782609,5],[0,10793600,0.751918,5],[0,10793600,0.690537,5],[0,14083077,2.132992,5],[0,21278810,1.488491,5],[0,26418620,1.42711,5],[0,10793600,0.475703,5],[0,28268951,1.028133,5],[0,21278810,1.181586,5],[0,20456441,0.87468,5],[0,3392274,0.26087,5],[0,23334734,1.212276,5],[0,13055116,0.905371,5],[0,19634071,0.966752,5],[0,102796,0.966752,5],[0,29708098,6,5],[0,7298529,0.659847,5],[0,1336350,1.948849,5],[0,513981,2.255754,5],[0,27240989,1.089514,5],[0,16755778,1.519182,5],[0,24157104,0.966752,5],[0,27240989,0.936061,5],[0,27240989,0.905371,5],[0,28885728,0.107417,5],[0,23334734,1.457801,5],[0,17578148,1.365729,5],[0,2364312,1.212276,5],[0,7298529,0.782609,5],[0,28885728,0.26087,5],[0,20456441,0.567775,5],[0,13055116,1.212276,5],[0,2364312,1.273657,5],[0,24157104,0.84399,5],[0,24157104,0.813299,5],[0,13055116,1.273657,5],[0,30324875,0.84399,5],[0,5859383,0.138107,5],[0,12643931,1.672634,5],[0,30324875,0.966752,5],[0,30324875,1.028133,5],[0,30324875,1.058824,5],[0,10176822,0.475703,5],[0,30324875,1.181586,5],[0,17372555,0.905371,5],[0,26213027,0.936061,5],[0,8943268,0.87468,5],[0,30324875,1.273657,5],[0,8120899,1.058824,5],[0,10176822,0.690537,5],[0,8943268,0.629156,5],[0,27652174,1.703325,5],[0,29913690,0.322251,5],[0,10176822,0.782609,5],[0,29913690,0.26087,5],[0,29913690,0.199488,5],[0,19428479,0.414322,5],[0,19428479,0.567775,5],[0,8120899,1.150895,5],[0,7092937,0.383632,5],[0,17166963,1.887468,5],[0,719573,0.506394,5],[0,19222887,0.506394,5],[0,3597867,1.028133,5],[0,1747535,0.813299,5],[0,19222887,0.537084,5],[0,12438338,2.102302,5],[0,1747535,0.87468,5],[0,12438338,2.194373,5],[0,3597867,0.506394,5],[0,2569905,1.580563,5],[0,719573,0.138107,5],[0,2569905,1.304348,5],[0,12643931,0.414322,5],[0,12643931,0.598465,5],[0,21689995,1.089514,5],[0,17372555,0.537084,5],[0,1953128,1.273657,5],[0,12643931,0.721228,5],[0,12643931,0.813299,5],[0,30324875,0.107417,5],[0,19222887,1.058824,5],[0,21689995,0.813299,5],[0,30324875,0.414322,5],[0,29913690,0.383632,5],[0,29091321,0.383632,5],[0,12643931,1.42711,5],[0,29091321,1.488491,5],[0,27652174,0.475703,5],[0,7092937,1.672634,5],[0,12849523,0.383632,5],[0,12849523,0.445013,5],[0,17166963,1.335038,5],[0,10176822,2.132992,5],[0,7092937,2.01023,5],[0,10176822,2.163683,5],[0,27240989,1.519182,5],[0,7092937,2.102302,5],[0,12849523,0.751918,5],[0,7092937,2.470588,5],[0,12849523,0.87468,5],[0,23334734,0.598465,5],[0,12849523,0.936061,5],[0,102796,0.29156,5],[0,24157104,1.150895,5],[0,3392274,2.102302,5],[0,21484403,1.335038,5],[0,23334734,0.690537,5],[0,3392274,1.795396,5],[0,17578148,2.531969,5],[0,29296913,0.87468,5],[0,3392274,1.549872,5],[0,7092937,0.445013,5],[0,17372555,1.089514,5],[0,1953128,0.87468,5],[0,102796,0.168798,5],[0,19428479,0.813299,5],[0,29296913,1.457801,5],[0,1953128,0.813299,5],[0,29296913,1.396419,5],[0,7092937,0.782609,5],[0,27652174,1.058824,5],[0,28268951,0.046036,5],[0,17372555,1.181586,5],[0,12849523,0.199488,5],[0,19428479,1.150895,5],[0,7092937,1.028133,5],[0,24157104,1.181586,5],[0,27652174,0.84399,5],[0,27652174,0.813299,5],[0,1953128,0.690537,5],[0,10176822,1.580563,5],[0,12849523,0.26087,5],[0,2569905,0.721228,5],[0,29296913,0.997442,5],[0,1953128,0.598465,5],[0,27652174,0.537084,5],[0,23334734,0.475703,5],[0,13877485,1.089514,5],[0,13877485,1.028133,5],[0,23745919,0.966752,5],[0,13877485,0.997442,5],[0,20045256,0.813299,5],[0,20867626,0.751918,5],[0,5448198,1.120205,5],[0,8326491,0.475703,5],[0,13877485,0.905371,5],[0,23951511,1.488491,5],[0,13877485,0.782609,5],[0,8326491,0.629156,5],[0,1130758,0.84399,5],[0,1130758,0.936061,5],[0,20867626,0.506394,5],[0,13877485,0.721228,5],[0,10382415,0.751918,5],[0,2775497,2.163683,5],[0,13877485,0.598465,5],[0,26829804,0.782609,5],[0,27035397,2.531969,5],[0,20867626,0.26087,5],[0,23540327,0.690537,5],[0,1130758,1.212276,5],[0,26829804,1.028133,5],[0,5242605,0.936061,5],[0,21073218,0.966752,5],[0,17578148,1.058824,5],[0,21073218,0.87468,5],[0,13260708,0.966752,5],[0,16961371,0.537084,5],[0,2775497,0.936061,5],[0,10588007,0.690537,5],[0,13260708,1.089514,5],[0,17578148,0.905371,5],[0,2775497,1.028133,5],[0,20045256,0.414322,5],[0,21073218,0.445013,5],[0,2981089,0.721228,5],[0,21073218,0.29156,5],[0,1130758,0.445013,5],[0,17578148,0.84399,5],[0,20045256,0.629156,5],[0,17578148,0.721228,5],[0,29708098,1.549872,5],[0,17578148,0.629156,5],[0,2775497,1.120205,5],[0,5242605,1.764706,5],[0,2775497,1.150895,5],[0,13877485,1.181586,5],[0,29708098,2.01023,5],[0,27446582,1.089514,5],[0,23540327,1.212276,5],[0,7709714,1.120205,5],[0,27035397,0.537084,5],[0,23745919,1.304348,5],[0,7709714,1.304348,5],[0,13466300,0.659847,5],[0,23745919,1.335038,5],[0,13466300,0.84399,5],[0,23745919,1.488491,5],[0,16961371,1.611253,5],[0,13466300,0.905371,5],[0,13466300,0.966752,5],[0,8326491,1.703325,5],[0,23745919,1.519182,5],[0,27035397,0.659847,5],[0,23745919,1.580563,5],[0,16961371,1.856777,5],[0,13466300,2.040921,5],[0,27446582,0.537084,5],[0,27035397,0.751918,5],[0,13466300,1.058824,5],[0,13466300,1.089514,5],[0,23540327,1.734015,5],[0,10588007,1.335038,5],[0,20662033,0.84399,5],[0,23540327,0.751918,5],[0,20045256,1.457801,5],[0,16961371,0.813299,5],[0,7709714,0.107417,5],[0,26829804,1.97954,5],[0,2775497,7.13555,5],[0,10588007,0.936061,5],[0,8326491,2.102302,5],[0,2775497,5.846547,5],[0,20662033,0.138107,5],[0,5448198,1.242967,5],[0,10382415,1.181586,5],[0,5448198,1.304348,5],[0,10588007,1.028133,5],[0,23540327,0.997442,5],[0,13877485,0.199488,5],[0,16961371,0.997442,5],[0,23745919,1.181586,5],[0,23951511,0.721228,5],[0,10588007,1.089514,5],[0,13466300,0.537084,5],[0,20662033,0.352941,5],[0,16961371,1.365729,5],[0,27446582,1.212276,5],[0,13466300,0.567775,5],[0,27446582,1.150895,5],[0,29708098,0.445013,5],[0,8532083,0.966752,5],[0,8532083,0.936061,5],[0,8532083,0.659847,5],[0,5242605,0.199488,5],[0,10588007,0.414322,5],[0,8532083,0.506394,5],[0,19839664,0.230179,5],[0,14083077,1.242967,5],[0,7915306,1.242967,5],[0,19839664,0.352941,5],[0,5653790,0.87468,5],[0,5242605,0.26087,5],[0,10588007,0.506394,5],[0,19839664,0.629156,5],[0,14083077,1.028133,5],[0,7915306,1.181586,5],[0,3186682,1.42711,5],[0,10588007,0.537084,5],[0,14083077,0.966752,5],[0,3186682,1.304348,5],[0,3186682,1.150895,5],[0,19839664,0.997442,5],[0,7504122,0.352941,5],[0,14083077,0.782609,5],[0,3186682,0.813299,5],[0,5037013,7.657289,5],[0,26418620,1.887468,5],[0,21278810,0.966752,5],[0,21278810,0.936061,5],[0,21278810,0.87468,5],[0,3186682,6.736573,5],[0,27240989,0.475703,5],[0,102796,1.150895,5],[0,28885728,1.672634,5],[0,27240989,0.383632,5],[0,28885728,1.734015,5],[0,5653790,1.396419,5],[0,5653790,1.365729,5],[0,28268951,1.089514,5],[0,14083077,1.887468,5],[0,10588007,0.199488,5],[0,10588007,0.29156,5],[0,8532083,1.42711,5],[0,13671893,0.690537,5],[0,8532083,1.273657,5],[0,3186682,3.7289,5],[0,5448198,0.813299,5],[0,3186682,3.667519,5],[0,14083077,1.273657,5],[0,5242605,0.138107,5],[0,7915306,1.396419,5],[0,7504122,0.87468,5],[0,26624212,0.475703,5],[0,8326491,2.869565,5],[0,13260708,0.782609,5],[0,5653790,0.322251,5],[0,29708098,0.690537,5],[0,10588007,0.629156,5],[0,10382415,1.734015,5],[0,7504122,1.150895,5],[0,2775497,0.567775,5],[0,2775497,0.598465,5],[0,7504122,1.181586,5],[0,26624212,0.659847,5],[0,26624212,0.690537,5],[0,26624212,0.721228,5],[0,102796,1.948849,5],[0,26624212,0.813299,5],[0,20250849,0.506394,5],[0,26624212,1.457801,5],[0,20250849,0.475703,5],[0,7504122,1.611253,5],[0,7915306,0.506394,5],[0,29708098,0.87468,5],[0,21073218,1.304348,5],[0,2981089,1.764706,5],[0,21073218,1.120205,5],[0,5653790,0.721228,5],[0,1336350,0.905371,5],[0,5242605,0.445013,5],[0,3186682,0.414322,5],[0,17578148,1.242967,5],[0,14083077,0.567775,5],[0,5242605,0.506394,5],[0,19839664,1.580563,5],[0,2775497,0.199488,5],[0,14083077,0.322251,5],[0,7915306,1.058824,5],[0,7915306,1.028133,5],[0,29708098,0.629156,5],[0,16961371,0.29156,5],[0,7504122,0.813299,5],[0,2775497,0.230179,5],[0,19839664,1.856777,5],[0,13260708,0.567775,5],[0,20250849,0.721228,5],[0,13260708,0.598465,5],[0,1336350,0.26087,5],[0,10588007,0.567775,5],[0,29708098,0.659847,5],[0,1336350,0.199488,5],[0,26624212,0.383632,5],[0,13260708,0.690537,5],[0,4831421,0.537084,5],[0,6476160,1.242967,5],[0,513981,1.089514,5],[0,25185066,0.721228,5],[0,17989333,0.475703,5],[0,6476160,1.42711,5],[0,6476160,1.519182,5],[0,9971230,0.29156,5],[0,25185066,1.365729,5],[0,30119282,2.01023,5],[0,9971230,0.322251,5],[0,4214644,4.097187,5],[0,9971230,0.537084,5],[0,9971230,0.598465,5],[0,4214644,2.531969,5],[0,9971230,0.629156,5],[0,2158720,1.058824,5],[0,4214644,2.347826,5],[0,4214644,2.255754,5],[0,9971230,0.721228,5],[0,22306772,2.409207,5],[0,28063359,1.365729,5],[0,4831421,1.058824,5],[0,9971230,0.84399,5],[0,4831421,1.181586,5],[0,23129142,0.690537,5],[0,9971230,0.936061,5],[0,9971230,0.966752,5],[0,29502505,0.659847,5],[0,30119282,0.26087,5],[0,29502505,0.567775,5],[0,9560045,1.42711,5],[0,6064975,0.383632,5],[0,29502505,0.445013,5],[0,30119282,0.506394,5],[0,9560045,1.273657,5],[0,6064975,0.352941,5],[0,29502505,0.107417,5],[0,30119282,0.721228,5],[0,30119282,0.751918,5],[0,6476160,0.015345,5],[0,28063359,0.751918,5],[0,4831421,0.383632,5],[0,11615969,0.721228,5],[0,6476160,0.26087,5],[0,16550186,0.997442,5],[0,6476160,0.414322,5],[0,9560045,0.567775,5],[0,6476160,0.537084,5],[0,9560045,0.414322,5],[0,2158720,0.322251,5],[0,6476160,0.721228,5],[0,2158720,0.352941,5],[0,6476160,0.813299,5],[0,6476160,0.87468,5],[0,17989333,0.87468,5],[0,18606110,0.29156,5],[0,18606110,1.887468,5],[0,15727816,0.107417,5],[0,22306772,1.089514,5],[0,24362696,1.058824,5],[0,1541943,0.199488,5],[0,11821561,0.506394,5],[0,11821561,0.598465,5],[0,9354453,1.242967,5],[0,27857766,0.199488,5],[0,24362696,0.966752,5],[0,11821561,0.905371,5],[0,513981,1.212276,5],[0,9354453,0.87468,5],[0,9354453,0.782609,5],[0,9354453,0.751918,5],[0,11821561,1.212276,5],[0,9354453,0.690537,5],[0,22306772,0.629156,5],[0,9971230,1.242967,5],[0,9354453,0.29156,5],[0,22306772,0.445013,5],[0,23129142,1.826087,5],[0,18811702,0.168798,5],[0,18811702,0.230179,5],[0,25390658,0.445013,5],[0,25390658,0.537084,5],[0,25390658,0.629156,5],[0,25390658,0.659847,5],[0,25390658,0.84399,5],[0,9971230,0.997442,5],[0,4214644,0.936061,5],[0,22306772,1.641944,5],[0,15727816,1.335038,5],[0,1541943,1.396419,5],[0,4831421,1.212276,5],[0,18606110,0.537084,5],[0,4214644,0.690537,5],[0,4214644,0.598465,5],[0,1541943,1.181586,5],[0,22306772,1.42711,5],[0,24362696,1.580563,5],[0,4214644,0.414322,5],[0,24362696,1.181586,5],[0,4214644,0.352941,5],[0,4214644,0.322251,5],[0,22306772,1.335038,5],[0,23129142,1.150895,5],[0,1541943,0.782609,5],[0,23129142,1.181586,5],[0,27857766,0.966752,5],[0,27857766,0.905371,5],[0,1541943,0.598465,5],[0,4214644,0.107417,5],[0,23129142,1.242967,5],[0,27857766,0.690537,5],[0,1541943,0.475703,5],[0,23129142,1.273657,5],[0,15727816,0.230179,5],[0,18400517,0.537084,5],[0,24773881,0.29156,5],[0,11204784,1.181586,5],[0,24568288,0.567775,5],[0,6064975,2.900256,5],[0,24773881,0.690537,5],[0,16344594,1.150895,5],[0,513981,0.046036,5],[0,513981,0.138107,5],[0,22717957,1.488491,5],[0,22717957,1.365729,5],[0,513981,0.230179,5],[0,6064975,1.089514,5],[0,22717957,1.242967,5],[0,28474543,0.936061,5],[0,22923549,1.764706,5],[0,16139001,1.150895,5],[0,4831421,0.046036,5],[0,4625828,0.352941,5],[0,22717957,0.966752,5],[0,4625828,0.29156,5],[0,4625828,0.26087,5],[0,22717957,0.84399,5],[0,16139001,0.936061,5],[0,18400517,1.058824,5],[0,513981,0.567775,5],[0,513981,0.598465,5],[0,16139001,0.352941,5],[0,16344594,0.751918,5],[0,16344594,0.659847,5],[0,28474543,1.672634,5],[0,16344594,0.598465,5],[0,22923549,0.813299,5],[0,18194925,1.488491,5],[0,18194925,1.120205,5],[0,24568288,0.936061,5],[0,4625828,2.132992,5],[0,22923549,0.936061,5],[0,9765638,0.383632,5],[0,24568288,0.813299,5],[0,4625828,1.181586,5],[0,9560045,4.219949,5],[0,4625828,1.089514,5],[0,22923549,1.028133,5],[0,18400517,0.168798,5],[0,18400517,0.322251,5],[0,18400517,0.445013,5],[0,18400517,0.475703,5],[0,6064975,1.150895,5],[0,18400517,0.506394,5],[0,16344594,0.475703,5],[0,24568288,0.721228,5],[0,6064975,1.672634,5],[0,6064975,1.703325,5],[0,11204784,0.721228,5],[0,11204784,0.813299,5],[0,11204784,1.120205,5],[0,6270567,1.212276,5],[0,4420236,1.181586,5],[0,6270567,1.396419,5],[0,4420236,0.87468,5],[0,4420236,0.751918,5],[0,4420236,0.721228,5],[0,15933409,0.936061,5],[0,6064975,0.751918,5],[0,6064975,0.659847,5],[0,15933409,0.598465,5],[0,15933409,0.537084,5],[0,4420236,0.383632,5],[0,15933409,0.445013,5],[0,15933409,0.352941,5],[0,29502505,1.058824,5],[0,22512365,1.150895,5],[0,4420236,0.199488,5],[0,15933409,0.138107,5],[0,4831421,0.26087,5],[0,15933409,0.076726,5],[0,22512365,0.87468,5],[0,22512365,0.84399,5],[0,4831421,0.29156,5],[0,4831421,0.322251,5],[0,29502505,0.905371,5],[0,30119282,0.015345,5],[0,29502505,0.84399,5],[0,30119282,0.199488,5],[0,30119282,0.230179,5],[0,16139001,0.26087,5],[0,16139001,0.138107,5],[0,16139001,0.107417,5],[0,29502505,1.580563,5],[0,18194925,0.567775,5],[0,18400517,2.654731,5],[0,28063359,0.046036,5],[0,6064975,0.966752,5],[0,29502505,1.396419,5],[0,28474543,0.414322,5],[0,9560045,2.624041,5],[0,11410377,1.120205,5],[0,6064975,0.905371,5],[0,11410377,1.181586,5],[0,24979473,0.629156,5],[0,6270567,0.26087,5],[0,18194925,0.537084,5],[0,24979473,0.721228,5],[0,28063359,0.107417,5],[0,24979473,0.997442,5],[0,16550186,0.567775,5],[0,513981,0.84399,5],[0,6270567,0.751918,5],[0,4420236,2.347826,5],[0,15933409,1.488491,5],[0,9765638,0.87468,5],[0,9765638,0.936061,5],[0,4420236,1.396419,5],[0,513981,0.87468,5],[0,9148861,0.813299,5],[0,3803459,0.905371,5],[0,9148861,0.690537,5],[0,9148861,0.629156,5],[0,3803459,0.84399,5],[0,9148861,0.567775,5],[0,17783740,1.273657,5],[0,28680136,3.207161,5],[0,5037013,0.629156,5],[0,3803459,0.721228,5],[0,9148861,0.537084,5],[0,3803459,0.690537,5],[0,5037013,0.690537,5],[0,3803459,0.598465,5],[0,17783740,1.089514,5],[0,6681752,1.273657,5],[0,6681752,1.304348,5],[0,3803459,0.414322,5],[0,5037013,0.87468,5],[0,308389,0.87468,5],[0,308389,0.84399,5],[0,308389,0.751918,5],[0,12232746,1.242967,5],[0,6681752,0.751918,5],[0,16755778,0.26087,5],[0,25596250,0.506394,5],[0,12232746,0.721228,5],[0,25596250,0.690537,5],[0,22101180,1.058824,5],[0,25596250,0.905371,5],[0,25596250,1.181586,5],[0,16755778,0.352941,5],[0,16755778,0.383632,5],[0,5859383,1.242967,5],[0,16755778,0.445013,5],[0,3803459,2.163683,5],[0,3803459,2.040921,5],[0,3803459,1.795396,5],[0,18811702,1.641944,5],[0,5037013,0.26087,5],[0,12232746,0.905371,5],[0,16755778,0.506394,5],[0,12232746,1.028133,5],[0,3803459,1.181586,5],[0,17783740,1.519182,5],[0,9148861,0.997442,5],[0,17783740,1.335038,5],[0,16755778,0.782609,5],[0,19017294,1.304348,5],[0,12438338,0.813299,5],[0,19017294,1.488491,5],[0,5859383,0.506394,5],[0,12438338,1.120205,5],[0,6887344,0.199488,5],[0,12438338,1.150895,5],[0,1747535,0.598465,5],[0,12438338,1.273657,5],[0,19222887,0.138107,5],[0,26007435,0.506394,5],[0,26007435,0.659847,5],[0,6887344,0.537084,5],[0,12438338,1.488491,5],[0,19222887,0.414322,5],[0,26007435,0.813299,5],[0,719573,0.84399,5],[0,26007435,0.966752,5],[0,6887344,1.089514,5],[0,26007435,1.150895,5],[0,6887344,1.242967,5],[0,26007435,1.641944,5],[0,6887344,1.365729,5],[0,17783740,0.659847,5],[0,16755778,0.659847,5],[0,308389,0.26087,5],[0,21895588,1.304348,5],[0,308389,0.199488,5],[0,12232746,1.365729,5],[0,12232746,1.396419,5],[0,21895588,1.058824,5],[0,21895588,0.936061,5],[0,21895588,0.905371,5],[0,925166,2.255754,5],[0,16755778,0.721228,5],[0,21895588,0.751918,5],[0,19017294,0.383632,5],[0,25801843,0.782609,5],[0,25801843,0.813299,5],[0,12438338,0.199488,5],[0,1747535,0.352941,5],[0,21895588,0.445013,5],[0,3803459,0.015345,5],[0,1747535,0.383632,5],[0,719573,0.936061,5],[0,5859383,0.537084,5],[0,12438338,0.629156,5],[0,25596250,0.230179,5],[0,25596250,0.168798,5],[0,5859383,1.580563,5],[0,12027154,1.764706,5],[0,12027154,1.335038,5],[0,12027154,1.273657,5],[0,28680136,1.335038,5],[0,12027154,1.028133,5],[0,28680136,1.150895,5],[0,12027154,0.905371,5],[0,925166,0.352941,5],[0,6681752,0.322251,5],[0,5859383,1.856777,5],[0,10999192,0.813299,5],[0,4009051,0.721228,5],[0,925166,0.199488,5],[0,28680136,0.721228,5],[0,4009051,0.751918,5],[0,5859383,1.948849,5],[0,15522224,0.230179,5],[0,4009051,1.335038,5],[0,925166,0.138107,5],[0,15522224,0.445013,5],[0,925166,0.076726,5],[0,6681752,0.107417,5],[0,4009051,1.549872,5],[0,28680136,0.29156,5],[0,28680136,0.26087,5],[0,29913690,2.869565,5],[0,28680136,0.168798,5],[0,10999192,0.936061,5],[0,5859383,2.194373,5],[0,22101180,1.457801,5],[0,22101180,1.549872,5],[0,28680136,1.641944,5],[0,513981,1.488491,5],[0,719573,0.015345,6],[0,513981,0.29156,6],[0,12438338,0.782609,6],[0,11821561,1.181586,6],[0,29913690,3.636829,6],[0,513981,2.040921,6],[0,513981,0.445013,6],[0,16550186,0.230179,6],[0,13055116,0.414322,6],[0,29913690,0.659847,6],[0,13055116,1.887468,6],[0,8943268,1.089514,6],[0,12849523,0.015345,6],[0,13671893,0.721228,6],[0,8737676,0.199488,6],[0,513981,0.168798,6],[0,10588007,0.352941,6],[0,12438338,0.87468,6],[0,13671893,0.629156,6],[0,12438338,0.905371,6],[0,17166963,0.199488,6],[0,13671893,0.506394,6],[0,13671893,0.475703,6],[0,17166963,0.537084,6],[0,30324875,0.567775,6],[0,16550186,0.138107,6],[0,17166963,0.598465,6],[0,8737676,0.076726,6],[0,19428479,0.598465,6],[0,8737676,0.445013,6],[0,29708098,0.168798,6],[0,19428479,0.475703,6],[0,8326491,0.966752,6],[0,8326491,0.905371,6],[0,8532083,0.598465,6],[0,19017294,0.475703,6],[0,9354453,1.150895,6],[0,8532083,0.751918,6],[0,10176822,0.751918,6],[0,18194925,0.598465,6],[0,19428479,0.107417,6],[0,925166,2.531969,6],[0,12438338,0.322251,6],[0,20250849,0.168798,6],[0,10588007,0.87468,6],[0,16139001,0.322251,6],[0,8532083,0.84399,6],[0,8532083,0.87468,6],[0,19017294,0.813299,6],[0,18194925,0.659847,6],[0,16550186,0.26087,6],[0,11821561,0.751918,6],[0,16139001,0.690537,6],[0,9765638,0.567775,6],[0,12438338,0.537084,6],[0,9354453,1.028133,6],[0,18400517,0.782609,6],[0,19017294,0.966752,6],[0,10793600,0.905371,6],[0,8120899,1.948849,6],[0,14083077,3.851662,6],[0,719573,0.352941,6],[0,17372555,1.273657,6],[0,18811702,0.015345,6],[0,17372555,1.242967,6],[0,12232746,0.29156,6],[0,18811702,0.199488,6],[0,18194925,0.966752,6],[0,8120899,1.641944,6],[0,17372555,1.150895,6],[0,8120899,1.519182,6],[0,8120899,1.42711,6],[0,13055116,0.567775,6],[0,9971230,1.335038,6],[0,29091321,1.181586,6],[0,29913690,0.506394,6],[0,18194925,1.611253,6],[0,18811702,0.322251,6],[0,17372555,0.414322,6],[0,16344594,0.567775,6],[0,13260708,0.905371,6],[0,18194925,1.457801,6],[0,10793600,0.506394,6],[0,17372555,0.87468,6],[0,12232746,0.383632,6],[0,29091321,0.690537,6],[0,29913690,0.475703,6],[0,19017294,1.611253,6],[0,19222887,1.304348,6],[0,102796,1.089514,6],[0,19222887,1.212276,6],[0,16344594,0.905371,6],[0,19222887,1.181586,6],[0,30324875,0.352941,6],[0,30324875,0.26087,6],[0,12232746,0.751918,6],[0,11204784,1.028133,6],[0,11204784,0.997442,6],[0,11204784,0.905371,6],[0,20250849,0.966752,6],[0,12438338,1.058824,6],[0,19222887,0.997442,6],[0,16344594,0.107417,6],[0,30324875,0.168798,6],[0,17166963,0.84399,6],[0,925166,0.015345,6],[0,16344594,0.168798,6],[0,13260708,0.87468,6],[0,15522224,0.721228,6],[0,17166963,0.905371,6],[0,12438338,1.181586,6],[0,16550186,1.856777,6],[0,9354453,0.383632,6],[0,17372555,1.580563,6],[0,12643931,0.537084,6],[0,12643931,0.506394,6],[0,10999192,0.84399,6],[0,17578148,0.87468,6],[0,16755778,0.567775,6],[0,30119282,0.905371,6],[0,29913690,2.286445,6],[0,30119282,0.87468,6],[0,13260708,0.475703,6],[0,9560045,0.966752,6],[0,20045256,1.181586,6],[0,20045256,0.199488,6],[0,14083077,0.26087,6],[0,12027154,1.089514,6],[0,16961371,0.659847,6],[0,29502505,0.26087,6],[0,9148861,0.659847,6],[0,29502505,0.383632,6],[0,13055116,0.690537,6],[0,1130758,1.242967,6],[0,14083077,0.475703,6],[0,18606110,0.997442,6],[0,10382415,1.058824,6],[0,29708098,0.598465,6],[0,30119282,0.383632,6],[0,925166,0.445013,6],[0,30119282,0.352941,6],[0,18811702,0.997442,6],[0,308389,1.242967,6],[0,11615969,1.212276,6],[0,10793600,0.168798,6],[0,20045256,0.168798,6],[0,1130758,0.138107,6],[0,1130758,0.230179,6],[0,13055116,0.782609,6],[0,1130758,0.322251,6],[0,1130758,0.352941,6],[0,1130758,0.383632,6],[0,1130758,0.414322,6],[0,11615969,1.058824,6],[0,13260708,1.212276,6],[0,13055116,0.813299,6],[0,29708098,1.365729,6],[0,11615969,0.997442,6],[0,8326491,3.329923,6],[0,16755778,1.335038,6],[0,20045256,0.567775,6],[0,18606110,0.076726,6],[0,13055116,0.84399,6],[0,19634071,0.87468,6],[0,8737676,0.84399,6],[0,11615969,0.936061,6],[0,13877485,1.150895,6],[0,11615969,0.905371,6],[0,12027154,2.040921,6],[0,10382415,0.659847,6],[0,12232746,0.87468,6],[0,11615969,0.84399,6],[0,16961371,0.322251,6],[0,29296913,0.567775,6],[0,8737676,0.782609,6],[0,17989333,1.212276,6],[0,12232746,1.304348,6],[0,12232746,1.335038,6],[0,19839664,0.782609,6],[0,308389,0.383632,6],[0,308389,0.322251,6],[0,13055116,1.304348,6],[0,19634071,5.570332,6],[0,30119282,1.948849,6],[0,13055116,1.335038,6],[0,13055116,1.396419,6],[0,13466300,1.304348,6],[0,29708098,0.966752,6],[0,19428479,0.966752,6],[0,9765638,0.782609,6],[0,12232746,1.611253,6],[0,16550186,0.506394,6],[0,17783740,0.598465,6],[0,8326491,1.519182,6],[0,19017294,0.199488,6],[0,18194925,0.445013,6],[0,18194925,0.475703,6],[0,30119282,3.084399,6],[0,12849523,0.107417,6],[0,12232746,0.813299,6],[0,12232746,1.764706,6],[0,11410377,1.212276,6],[0,17578148,1.120205,6],[0,11821561,0.659847,6],[0,29502505,1.273657,6],[0,10382415,1.641944,6],[0,16550186,0.936061,6],[0,13877485,0.352941,6],[0,18811702,0.966752,6],[0,30119282,2.501279,6],[0,10793600,0.26087,6],[0,308389,1.028133,6],[0,8326491,1.918159,6],[0,13877485,0.168798,6],[0,13877485,0.138107,6],[0,16755778,1.396419,6],[0,15727816,0.567775,6],[0,29913690,2.624041,6],[0,9148861,0.414322,6],[0,29502505,1.028133,6],[0,12849523,0.598465,6],[0,15933409,0.199488,6],[0,12849523,0.506394,6],[0,17783740,0.905371,6],[0,15933409,0.26087,6],[0,12027154,0.629156,6],[0,513981,1.396419,6],[0,12027154,0.567775,6],[0,17783740,0.782609,6],[0,719573,1.611253,6],[0,12849523,0.322251,6],[0,29708098,1.028133,6],[0,9971230,0.138107,6],[0,9971230,0.26087,6],[0,308389,0.629156,6],[0,9148861,0.322251,6],[0,7092937,1.703325,6],[0,21484403,1.181586,6],[0,5037013,3.14578,6],[0,21484403,1.028133,6],[0,5037013,0.997442,6],[0,5037013,0.813299,6],[0,5037013,0.537084,6],[0,5037013,0.199488,6],[0,24362696,0.506394,6],[0,24362696,0.721228,6],[0,24362696,0.782609,6],[0,24362696,0.936061,6],[0,24362696,1.028133,6],[0,28063359,1.611253,6],[0,28063359,1.028133,6],[0,28063359,0.936061,6],[0,28063359,0.445013,6],[0,28063359,0.29156,6],[0,28063359,0.26087,6],[0,24568288,0.414322,6],[0,24568288,0.598465,6],[0,24568288,0.629156,6],[0,24568288,0.659847,6],[0,24568288,0.966752,6],[0,24568288,1.058824,6],[0,24568288,1.611253,6],[0,4625828,0.751918,6],[0,23745919,1.273657,6],[0,23951511,0.84399,6],[0,23951511,0.997442,6],[0,5242605,1.273657,6],[0,5242605,0.87468,6],[0,5242605,0.721228,6],[0,7092937,0.168798,6],[0,5242605,0.567775,6],[0,5242605,0.383632,6],[0,5242605,0.322251,6],[0,24157104,0.905371,6],[0,24157104,1.028133,6],[0,24157104,1.058824,6],[0,7092937,0.475703,6],[0,1953128,0.26087,6],[0,7092937,0.629156,6],[0,7092937,0.721228,6],[0,1953128,0.905371,6],[0,24157104,1.304348,6],[0,24157104,1.488491,6],[0,7092937,1.089514,6],[0,24157104,1.672634,6],[0,7092937,1.150895,6],[0,24157104,2.409207,6],[0,7092937,1.304348,6],[0,7092937,1.365729,6],[0,7092937,1.42711,6],[0,25185066,0.506394,6],[0,25185066,0.598465,6],[0,25185066,0.87468,6],[0,25185066,0.936061,6],[0,25185066,1.058824,6],[0,2158720,0.598465,6],[0,4214644,2.163683,6],[0,27857766,2.163683,6],[0,27857766,1.365729,6],[0,4214644,0.383632,6],[0,27857766,0.997442,6],[0,27857766,0.138107,6],[0,25390658,0.199488,6],[0,25390658,0.567775,6],[0,25390658,0.751918,6],[0,25390658,0.997442,6],[0,4009051,1.212276,6],[0,4009051,1.150895,6],[0,4009051,0.506394,6],[0,4009051,0.475703,6],[0,7504122,0.015345,6],[0,4009051,0.322251,6],[0,4009051,0.230179,6],[0,25596250,0.199488,6],[0,7504122,0.107417,6],[0,25596250,0.26087,6],[0,25596250,0.322251,6],[0,24773881,0.537084,6],[0,24773881,0.598465,6],[0,24773881,0.905371,6],[0,4625828,0.567775,6],[0,4625828,0.506394,6],[0,24979473,0.751918,6],[0,24979473,0.936061,6],[0,24979473,1.120205,6],[0,4420236,2.01023,6],[0,4420236,1.856777,6],[0,4420236,1.764706,6],[0,4420236,1.304348,6],[0,4420236,0.659847,6],[0,7298529,0.199488,6],[0,4420236,0.445013,6],[0,4420236,0.29156,6],[0,7298529,0.629156,6],[0,4420236,0.076726,6],[0,28885728,0.414322,6],[0,25185066,0.322251,6],[0,7298529,2.255754,6],[0,28885728,1.089514,6],[0,21278810,0.997442,6],[0,21278810,0.782609,6],[0,21278810,0.751918,6],[0,21278810,0.721228,6],[0,21278810,0.659847,6],[0,21278810,0.629156,6],[0,22717957,0.445013,6],[0,22717957,0.905371,6],[0,6681752,0.046036,6],[0,22717957,1.457801,6],[0,6681752,0.138107,6],[0,6064975,1.212276,6],[0,28680136,0.751918,6],[0,6681752,0.29156,6],[0,22923549,0.782609,6],[0,6681752,0.598465,6],[0,6681752,0.629156,6],[0,22923549,1.120205,6],[0,6064975,1.058824,6],[0,22101180,0.84399,6],[0,28474543,0.690537,6],[0,28474543,0.506394,6],[0,28474543,0.29156,6],[0,28474543,0.046036,6],[0,6064975,0.506394,6],[0,6064975,0.414322,6],[0,6064975,0.29156,6],[0,6681752,1.488491,6],[0,6681752,6.030691,6],[0,23129142,0.813299,6],[0,23129142,0.87468,6],[0,23129142,0.936061,6],[0,23129142,1.641944,6],[0,22306772,1.150895,6],[0,1541943,0.352941,6],[0,1541943,0.905371,6],[0,22306772,1.396419,6],[0,1541943,0.138107,6],[0,1541943,1.028133,6],[0,22306772,1.580563,6],[0,22306772,0.997442,6],[0,22306772,0.966752,6],[0,22306772,0.936061,6],[0,22306772,1.887468,6],[0,6476160,0.966752,6],[0,6476160,0.751918,6],[0,22306772,0.598465,6],[0,6476160,0.475703,6],[0,22306772,0.537084,6],[0,6476160,0.29156,6],[0,22512365,0.537084,6],[0,22512365,0.629156,6],[0,22512365,0.690537,6],[0,22512365,0.905371,6],[0,22512365,0.936061,6],[0,22512365,0.997442,6],[0,22512365,1.212276,6],[0,6270567,1.120205,6],[0,6270567,1.089514,6],[0,22717957,0.414322,6],[0,6887344,0.445013,6],[0,5653790,0.29156,6],[0,6887344,0.598465,6],[0,6887344,0.659847,6],[0,21689995,1.181586,6],[0,21689995,1.058824,6],[0,23540327,0.567775,6],[0,23540327,0.598465,6],[0,23540327,0.813299,6],[0,21689995,0.690537,6],[0,23540327,1.150895,6],[0,5448198,1.396419,6],[0,21689995,0.475703,6],[0,5448198,0.905371,6],[0,5448198,0.84399,6],[0,5448198,0.782609,6],[0,28268951,1.120205,6],[0,28268951,0.721228,6],[0,28268951,0.629156,6],[0,28268951,0.506394,6],[0,28268951,0.475703,6],[0,28268951,0.445013,6],[0,28268951,0.322251,6],[0,28268951,0.29156,6],[0,28268951,0.199488,6],[0,23745919,1.058824,6],[0,23745919,1.212276,6],[0,5859383,2.102302,6],[0,5859383,1.611253,6],[0,5859383,1.273657,6],[0,5859383,0.84399,6],[0,21895588,0.87468,6],[0,21895588,0.690537,6],[0,21895588,0.598465,6],[0,21895588,0.567775,6],[0,1747535,0.322251,6],[0,1747535,0.629156,6],[0,5859383,0.414322,6],[0,5859383,0.352941,6],[0,5859383,0.168798,6],[0,21895588,0.383632,6],[0,23334734,0.629156,6],[0,23334734,0.659847,6],[0,23334734,1.028133,6],[0,23334734,1.150895,6],[0,23334734,1.181586,6],[0,23334734,1.488491,6],[0,6887344,0.076726,6],[0,23334734,1.764706,6],[0,5653790,1.42711,6],[0,5653790,1.181586,6],[0,5653790,0.782609,6],[0,5653790,0.567775,6],[0,5653790,0.506394,6],[0,5653790,0.445013,6],[0,7709714,0.168798,6],[0,7709714,0.26087,6],[0,27652174,0.138107,6],[0,7709714,0.383632,6],[0,3392274,1.734015,6],[0,3392274,0.936061,6],[0,7709714,1.42711,6],[0,20662033,0.537084,6],[0,2364312,0.782609,6],[0,20662033,0.383632,6],[0,3392274,0.199488,6],[0,3392274,0.168798,6],[0,20662033,0.230179,6],[0,2364312,1.089514,6],[0,26418620,0.751918,6],[0,26418620,0.813299,6],[0,26418620,0.966752,6],[0,26418620,0.997442,6],[0,26418620,1.273657,6],[0,26418620,1.488491,6],[0,26418620,3.176471,6],[0,3186682,5.907928,6],[0,25801843,0.997442,6],[0,3803459,0.046036,6],[0,21073218,0.383632,6],[0,3597867,2.685422,6],[0,21073218,0.26087,6],[0,26007435,0.936061,6],[0,26007435,1.058824,6],[0,26007435,1.120205,6],[0,3597867,2.132992,6],[0,3597867,1.335038,6],[0,3597867,0.445013,6],[0,20867626,1.734015,6],[0,3597867,0.107417,6],[0,20867626,0.905371,6],[0,20867626,0.690537,6],[0,20867626,0.383632,6],[0,26213027,0.813299,6],[0,20867626,0.168798,6],[0,26213027,0.997442,6],[0,27652174,1.304348,6],[0,27652174,0.629156,6],[0,27652174,0.383632,6],[0,27652174,0.29156,6],[0,27446582,0.813299,6],[0,27446582,0.690537,6],[0,27446582,0.475703,6],[0,27446582,0.414322,6],[0,27035397,0.966752,6],[0,27035397,1.058824,6],[0,27035397,1.150895,6],[0,27035397,1.488491,6],[0,27035397,2.194373,6],[0,27035397,3.11509,6],[0,8120899,0.414322,6],[0,2775497,1.058824,6],[0,2775497,0.997442,6],[0,2775497,0.813299,6],[0,2775497,0.690537,6],[0,2775497,0.383632,6],[0,27240989,0.352941,6],[0,29091321,0.26087,6],[0,2569905,0.046036,6],[0,2569905,0.107417,6],[0,2569905,0.445013,6],[0,2569905,2.869565,6],[0,8120899,0.721228,6],[0,3186682,3.759591,6],[0,3186682,1.488491,6],[0,3186682,1.335038,6],[0,3186682,0.997442,6],[0,3186682,0.782609,6],[0,26624212,0.506394,6],[0,2981089,1.212276,6],[0,2981089,0.107417,6],[0,26829804,0.322251,6],[0,26829804,0.506394,6],[0,26829804,0.598465,6],[0,26829804,0.629156,6],[0,2775497,4.588235,6],[0,27035397,0.046036,6],[0,27446582,1.580563,6],[0,7915306,0.629156,6],[0,7915306,0.813299,6],[0,7915306,0.936061,6],[0,20456441,0.414322,6],[0,20456441,0.138107,6],[0,27446582,0.936061,6],[0,27446582,0.905371,6],[0,27446582,0.84399,6],[0,3803459,0.230179,6],[0,3803459,0.537084,6],[0,25596250,0.567775,6],[0,25801843,0.29156,6],[0,1336350,0.138107,6],[0,1336350,0.352941,6],[0,1336350,0.751918,6],[0,21073218,0.475703,6],[0,21073218,0.782609,6],[0,25801843,0.567775,6],[0,3803459,0.352941,6],[0,1336350,0.813299,6],[0,25801843,0.445013,6],[0,25596250,0.629156,6],[0,3803459,1.611253,6],[0,1336350,0.87468,6],[0,25801843,0.537084,6],[0,3803459,1.519182,6],[0,3803459,0.168798,6],[0,21073218,0.414322,6],[0,3803459,0.567775,6],[0,1336350,0.383632,6],[0,21073218,0.659847,6],[0,25596250,0.537084,6],[0,5859383,1.488491,7],[0,3803459,0.751918,7],[0,17989333,0.383632,7],[0,5859383,1.212276,7],[0,17989333,0.414322,7],[0,5859383,0.905371,7],[0,3803459,0.659847,7],[0,17989333,0.598465,7],[0,5859383,0.721228,7],[0,26829804,0.751918,7],[0,6064975,0.26087,7],[0,17989333,0.690537,7],[0,17989333,0.997442,7],[0,5859383,0.751918,7],[0,6064975,0.199488,7],[0,17783740,1.181586,7],[0,5859383,0.813299,7],[0,23129142,0.414322,7],[0,23129142,0.475703,7],[0,13466300,0.29156,7],[0,23129142,0.506394,7],[0,9971230,0.813299,7],[0,23129142,0.751918,7],[0,23129142,0.782609,7],[0,13877485,0.046036,7],[0,25390658,0.966752,7],[0,9971230,0.659847,7],[0,27035397,0.138107,7],[0,27035397,0.076726,7],[0,9971230,0.475703,7],[0,9971230,1.42711,7],[0,9971230,0.383632,7],[0,23129142,0.138107,7],[0,17989333,0.352941,7],[0,13877485,0.29156,7],[0,5859383,1.549872,7],[0,26624212,0.629156,7],[0,11821561,0.445013,7],[0,23334734,1.42711,7],[0,13260708,0.199488,7],[0,23334734,1.672634,7],[0,26624212,0.138107,7],[0,14083077,0.29156,7],[0,23334734,1.795396,7],[0,5653790,2.59335,7],[0,14083077,0.383632,7],[0,29708098,0.383632,7],[0,3186682,0.107417,7],[0,5653790,0.966752,7],[0,29708098,0.475703,7],[0,3186682,0.168798,7],[0,3186682,0.352941,7],[0,27857766,0.414322,7],[0,3186682,0.905371,7],[0,3186682,0.966752,7],[0,27857766,0.506394,7],[0,5653790,0.199488,7],[0,29708098,1.058824,7],[0,17578148,0.936061,7],[0,27857766,0.567775,7],[0,11821561,1.273657,7],[0,17783740,0.813299,7],[0,1747535,0.076726,7],[0,719573,1.028133,7],[0,11821561,0.84399,7],[0,308389,1.150895,7],[0,26829804,0.475703,7],[0,5859383,0.567775,7],[0,13877485,0.966752,7],[0,11821561,0.629156,7],[0,27857766,0.29156,7],[0,10176822,0.199488,7],[0,2981089,0.168798,7],[0,10176822,0.383632,7],[0,2981089,0.322251,7],[0,10176822,0.445013,7],[0,10176822,0.506394,7],[0,1747535,1.703325,7],[0,23334734,0.537084,7],[0,23334734,0.567775,7],[0,2981089,0.629156,7],[0,2981089,0.936061,7],[0,23334734,0.721228,7],[0,27857766,0.322251,7],[0,25596250,0.414322,7],[0,25596250,0.383632,7],[0,9560045,0.26087,7],[0,9560045,0.352941,7],[0,13671893,0.230179,7],[0,9560045,0.659847,7],[0,27240989,0.445013,7],[0,6476160,0.230179,7],[0,6476160,0.199488,7],[0,9560045,0.782609,7],[0,6476160,0.138107,7],[0,9560045,1.181586,7],[0,29502505,0.015345,7],[0,29502505,0.076726,7],[0,29502505,0.168798,7],[0,29502505,0.322251,7],[0,22512365,0.475703,7],[0,25596250,0.29156,7],[0,22512365,0.598465,7],[0,29502505,0.813299,7],[0,27240989,0.230179,7],[0,2775497,0.046036,7],[0,13671893,0.782609,7],[0,102796,0.076726,7],[0,1541943,0.629156,7],[0,12232746,0.598465,7],[0,18606110,0.966752,7],[0,102796,0.26087,7],[0,102796,0.383632,7],[0,25596250,0.445013,7],[0,18606110,0.721228,7],[0,1541943,1.150895,7],[0,22306772,1.488491,7],[0,1541943,1.304348,7],[0,2569905,0.383632,7],[0,2569905,0.199488,7],[0,102796,0.598465,7],[0,102796,0.629156,7],[0,18606110,0.475703,7],[0,18606110,0.445013,7],[0,2569905,0.138107,7],[0,18606110,0.383632,7],[0,102796,0.751918,7],[0,18606110,0.199488,7],[0,18606110,0.168798,7],[0,6476160,0.782609,7],[0,22923549,0.84399,7],[0,22923549,0.966752,7],[0,22923549,1.089514,7],[0,12027154,0.782609,7],[0,4009051,0.537084,7],[0,12027154,0.29156,7],[0,18194925,0.721228,7],[0,18194925,0.690537,7],[0,3803459,1.058824,7],[0,28474543,0.537084,7],[0,12232746,1.089514,7],[0,4009051,1.242967,7],[0,28474543,0.230179,7],[0,9765638,0.659847,7],[0,9765638,0.721228,7],[0,9765638,0.751918,7],[0,9765638,0.813299,7],[0,27035397,0.29156,7],[0,6064975,0.813299,7],[0,6064975,0.537084,7],[0,4009051,1.365729,7],[0,13466300,0.352941,7],[0,4009051,1.611253,7],[0,2775497,0.905371,7],[0,4009051,0.199488,7],[0,6270567,0.383632,7],[0,6270567,0.230179,7],[0,22717957,0.352941,7],[0,2775497,1.764706,7],[0,22717957,0.506394,7],[0,12027154,1.212276,7],[0,22717957,0.936061,7],[0,22717957,1.150895,7],[0,4009051,0.29156,7],[0,22717957,1.181586,7],[0,12027154,1.120205,7],[0,12027154,0.997442,7],[0,18400517,0.414322,7],[0,18400517,0.230179,7],[0,27035397,1.089514,7],[0,18400517,0.199488,7],[0,9765638,0.475703,7],[0,22923549,0.537084,7],[0,22923549,0.629156,7],[0,12027154,0.966752,7],[0,12232746,0.997442,7],[0,3803459,1.242967,7],[0,12643931,0.966752,7],[0,24362696,0.537084,7],[0,24362696,0.659847,7],[0,30324875,0.659847,7],[0,30324875,0.537084,7],[0,24362696,0.905371,7],[0,30324875,0.383632,7],[0,30324875,0.230179,7],[0,513981,1.150895,7],[0,4831421,0.84399,7],[0,4831421,0.721228,7],[0,12643931,0.629156,7],[0,4831421,0.352941,7],[0,3597867,0.015345,7],[0,28063359,0.414322,7],[0,513981,0.905371,7],[0,30119282,0.598465,7],[0,3597867,0.199488,7],[0,513981,0.751918,7],[0,28063359,0.138107,7],[0,16550186,0.475703,7],[0,513981,0.659847,7],[0,4831421,0.015345,7],[0,27652174,0.352941,7],[0,308389,0.721228,7],[0,12849523,0.414322,7],[0,27652174,0.445013,7],[0,27652174,0.567775,7],[0,29913690,0.598465,7],[0,308389,0.598465,7],[0,29913690,0.629156,7],[0,308389,0.506394,7],[0,308389,0.414322,7],[0,30119282,0.659847,7],[0,29913690,0.721228,7],[0,29913690,0.813299,7],[0,26213027,0.751918,7],[0,26213027,0.629156,7],[0,29913690,0.966752,7],[0,29913690,1.089514,7],[0,30324875,0.751918,7],[0,5037013,0.138107,7],[0,29913690,1.396419,7],[0,29913690,1.764706,7],[0,10999192,0.322251,7],[0,10999192,0.751918,7],[0,4625828,0.414322,7],[0,4625828,0.322251,7],[0,16139001,0.199488,7],[0,11410377,0.475703,7],[0,11410377,0.690537,7],[0,11410377,0.905371,7],[0,24979473,0.414322,7],[0,11410377,1.335038,7],[0,12438338,1.028133,7],[0,12438338,0.936061,7],[0,12438338,0.567775,7],[0,12438338,0.475703,7],[0,12438338,0.414322,7],[0,12438338,0.383632,7],[0,12438338,0.352941,7],[0,4420236,0.629156,7],[0,4420236,0.138107,7],[0,4420236,0.567775,7],[0,15933409,0.567775,7],[0,25801843,0.659847,7],[0,15933409,0.414322,7],[0,15933409,0.168798,7],[0,15933409,0.230179,7],[0,513981,0.383632,7],[0,24568288,0.168798,7],[0,16550186,0.076726,7],[0,30119282,0.567775,7],[0,24568288,0.445013,7],[0,24568288,0.537084,7],[0,16344594,0.966752,7],[0,3597867,0.567775,7],[0,30119282,0.414322,7],[0,24568288,0.690537,7],[0,16344594,0.813299,7],[0,30119282,0.29156,7],[0,24568288,1.365729,7],[0,30119282,0.076726,7],[0,4625828,5.785166,7],[0,4625828,0.966752,7],[0,16344594,0.383632,7],[0,30119282,0.046036,7],[0,16344594,0.046036,7],[0,26007435,0.721228,7],[0,26007435,0.537084,7],[0,15933409,0.046036,7],[0,26007435,0.383632,7],[0,26007435,0.29156,7],[0,10382415,1.764706,7],[0,26418620,1.396419,7],[0,4214644,0.537084,7],[0,4214644,0.84399,7],[0,5448198,0.537084,7],[0,5448198,0.475703,7],[0,28268951,0.813299,7],[0,17372555,1.457801,7],[0,4214644,1.058824,7],[0,308389,0.997442,7],[0,26418620,0.475703,7],[0,17372555,1.058824,7],[0,17372555,1.028133,7],[0,26418620,0.26087,7],[0,26418620,0.168798,7],[0,4214644,1.549872,7],[0,13055116,0.997442,7],[0,17372555,0.659847,7],[0,17372555,0.629156,7],[0,17372555,0.506394,7],[0,3803459,0.445013,7],[0,17166963,0.87468,7],[0,17166963,0.690537,7],[0,17578148,0.659847,7],[0,27857766,0.936061,7],[0,23540327,0.322251,7],[0,17578148,0.598465,7],[0,10382415,0.107417,7],[0,3186682,1.580563,7],[0,10382415,0.322251,7],[0,3186682,1.611253,7],[0,10382415,0.506394,7],[0,10382415,0.598465,7],[0,3186682,3.391304,7],[0,10382415,0.782609,7],[0,10382415,0.813299,7],[0,23540327,0.629156,7],[0,23540327,0.782609,7],[0,3186682,5.815857,7],[0,4214644,0.230179,7],[0,23540327,0.966752,7],[0,23540327,1.120205,7],[0,3186682,6.092072,7],[0,23540327,1.304348,7],[0,4214644,0.26087,7],[0,5448198,0.997442,7],[0,5448198,0.936061,7],[0,2158720,0.414322,7],[0,2364312,0.046036,7],[0,10793600,0.445013,7],[0,10793600,0.721228,7],[0,2158720,0.29156,7],[0,3392274,1.519182,7],[0,3392274,1.580563,7],[0,11615969,0.87468,7],[0,24157104,1.089514,7],[0,12849523,0.813299,7],[0,1953128,0.383632,7],[0,1953128,0.445013,7],[0,1953128,0.475703,7],[0,11615969,0.813299,7],[0,513981,1.641944,7],[0,1953128,0.782609,7],[0,3803459,0.199488,7],[0,29913690,0.046036,7],[0,25185066,0.537084,7],[0,1953128,1.028133,7],[0,1953128,1.058824,7],[0,12849523,0.629156,7],[0,25185066,0.445013,7],[0,17166963,0.629156,7],[0,17166963,0.414322,7],[0,17166963,0.383632,7],[0,17166963,0.352941,7],[0,17166963,0.138107,7],[0,10588007,0.322251,7],[0,10588007,0.383632,7],[0,13055116,0.936061,7],[0,2158720,0.905371,7],[0,5448198,0.199488,7],[0,16961371,1.335038,7],[0,23951511,0.598465,7],[0,23951511,0.782609,7],[0,3392274,0.29156,7],[0,5242605,3.084399,7],[0,23951511,1.150895,7],[0,5242605,1.365729,7],[0,3803459,0.26087,7],[0,5242605,0.966752,7],[0,13055116,0.721228,7],[0,16961371,0.445013,7],[0,3392274,0.414322,7],[0,16961371,0.230179,7],[0,13055116,0.629156,7],[0,21278810,0.168798,7],[0,6681752,0.506394,7],[0,8532083,0.475703,7],[0,22101180,1.212276,7],[0,22101180,1.028133,7],[0,22101180,0.659847,7],[0,8943268,0.997442,7],[0,22101180,0.598465,7],[0,8532083,0.29156,7],[0,22101180,0.567775,7],[0,8326491,0.598465,7],[0,22101180,0.537084,7],[0,21689995,0.721228,7],[0,19839664,0.107417,7],[0,8326491,0.813299,7],[0,21689995,0.87468,7],[0,19839664,0.138107,7],[0,21689995,1.028133,7],[0,19839664,0.168798,7],[0,19222887,0.84399,7],[0,9148861,0.936061,7],[0,9148861,0.905371,7],[0,20662033,0.199488,7],[0,925166,1.181586,7],[0,20662033,0.26087,7],[0,19222887,0.659847,7],[0,20662033,0.475703,7],[0,7915306,0.475703,7],[0,19634071,0.076726,7],[0,19634071,0.230179,7],[0,19634071,0.322251,7],[0,7298529,0.076726,7],[0,6476160,8.209719,7],[0,20250849,0.138107,7],[0,19634071,0.506394,7],[0,6681752,0.168798,7],[0,6681752,0.199488,7],[0,20250849,0.015345,7],[0,6681752,0.26087,7],[0,925166,0.230179,7],[0,7298529,0.383632,7],[0,7298529,0.445013,7],[0,1336350,2.225064,7],[0,7298529,0.506394,7],[0,28885728,0.015345,7],[0,7298529,0.997442,7],[0,7298529,1.242967,7],[0,28885728,1.703325,7],[0,8943268,0.445013,7],[0,8943268,0.506394,7],[0,8532083,1.242967,7],[0,8532083,0.782609,7],[0,28680136,0.813299,7],[0,8943268,0.537084,7],[0,8532083,0.690537,7],[0,1336350,0.107417,7],[0,6887344,0.26087,7],[0,1130758,1.335038,7],[0,20045256,0.046036,7],[0,20867626,0.015345,7],[0,20867626,0.046036,7],[0,6887344,0.107417,7],[0,20045256,0.29156,7],[0,20045256,1.365729,7],[0,20045256,0.322251,7],[0,9148861,0.138107,7],[0,21895588,1.150895,7],[0,21073218,0.506394,7],[0,20045256,0.383632,7],[0,19017294,0.138107,7],[0,1130758,0.199488,7],[0,19017294,0.168798,7],[0,21895588,0.966752,7],[0,19017294,0.29156,7],[0,21895588,0.84399,7],[0,21895588,0.813299,7],[0,21895588,0.659847,7],[0,19017294,0.690537,7],[0,1130758,0.905371,7],[0,19017294,0.598465,7],[0,20867626,0.629156,7],[0,21895588,0.629156,7],[0,19839664,0.29156,7],[0,19839664,0.414322,7],[0,7709714,1.826087,7],[0,19839664,0.445013,7],[0,22101180,0.107417,7],[0,19839664,0.598465,7],[0,7504122,0.138107,7],[0,22101180,0.076726,7],[0,6887344,1.488491,7],[0,9148861,0.598465,7],[0,19839664,0.690537,7],[0,7504122,0.199488,7],[0,7709714,0.690537,7],[0,19839664,0.813299,7],[0,7709714,0.598465,7],[0,7709714,0.567775,7],[0,7709714,0.506394,7],[0,19839664,0.87468,7],[0,7504122,0.445013,7],[0,7504122,0.475703,7],[0,7709714,0.414322,7],[0,7709714,0.322251,7],[0,1336350,0.629156,7],[0,19222887,0.168798,7],[0,6887344,0.414322,7],[0,1336350,0.230179,7],[0,6681752,0.966752,7],[0,19839664,5.570332,7],[0,9354453,0.659847,7],[0,8120899,1.028133,7],[0,7092937,1.396419,7],[0,7092937,1.120205,7],[0,19428479,1.273657,7],[0,7092937,0.751918,7],[0,7092937,0.690537,7],[0,8120899,1.273657,7],[0,7092937,0.567775,7],[0,7092937,0.506394,7],[0,8737676,0.87468,7],[0,19428479,0.659847,7],[0,8120899,0.506394,7],[0,8737676,0.721228,7],[0,29091321,1.641944,7],[0,8737676,0.567775,7],[0,7092937,0.29156,7],[0,7915306,0.782609,7],[0,29296913,0.445013,7],[0,29296913,0.383632,7],[0,1541943,0.322251,7],[0,29296913,0.475703,7],[0,29296913,0.352941,7],[0,22306772,1.028133,7],[0,22306772,0.87468,7],[0,21484403,0.84399,7],[0,22306772,0.782609,7],[0,9354453,0.813299,7],[0,8120899,0.87468,7],[0,22306772,0.751918,7],[0,29091321,0.414322,7],[0,22306772,0.721228,7],[0,22306772,0.690537,7],[0,21484403,0.936061,7],[0,29296913,0.721228,7],[0,29091321,0.352941,7],[0,7915306,0.567775,7],[0,19428479,0.26087,7],[0,19428479,0.322251,7],[0,7915306,0.659847,7],[0,5037013,1.304348,8],[0,5653790,0.26087,8],[0,19634071,0.26087,8],[0,1336350,0.322251,8],[0,11410377,1.304348,8],[0,11204784,1.058824,8],[0,16139001,0.230179,8],[0,16755778,0.598465,8],[0,23951511,0.414322,8],[0,6887344,0.322251,8],[0,29708098,0.29156,8],[0,4625828,0.230179,8],[0,21073218,0.84399,8],[0,11204784,1.304348,8],[0,16139001,1.089514,8],[0,29913690,1.028133,8],[0,20045256,0.107417,8],[0,8943268,0.107417,8],[0,23951511,0.659847,8],[0,21073218,0.567775,8],[0,20045256,0.230179,8],[0,23951511,0.690537,8],[0,308389,0.475703,8],[0,19017294,1.42711,8],[0,23334734,1.335038,8],[0,8943268,0.015345,8],[0,25596250,0.076726,8],[0,16755778,0.936061,8],[0,25596250,0.138107,8],[0,16550186,0.721228,8],[0,4420236,0.813299,8],[0,17578148,0.567775,8],[0,6887344,2.102302,8],[0,19428479,1.089514,8],[0,21484403,0.537084,8],[0,29913690,0.230179,8],[0,4420236,0.905371,8],[0,5448198,0.352941,8],[0,17578148,0.782609,8],[0,1953128,1.734015,8],[0,12232746,0.414322,8],[0,4831421,0.629156,8],[0,12232746,0.475703,8],[0,12232746,0.537084,8],[0,21484403,1.120205,8],[0,29913690,0.690537,8],[0,5037013,2.163683,8],[0,5242605,0.84399,8],[0,29913690,0.782609,8],[0,4831421,0.905371,8],[0,19839664,1.304348,8],[0,19222887,0.322251,8],[0,24362696,0.813299,8],[0,24362696,0.751918,8],[0,26007435,0.567775,8],[0,16755778,0.107417,8],[0,21073218,0.199488,8],[0,26007435,0.87468,8],[0,5859383,0.26087,8],[0,10176822,0.26087,8],[0,26007435,0.997442,8],[0,26007435,1.089514,8],[0,21073218,0.107417,8],[0,3597867,0.721228,8],[0,19428479,0.076726,8],[0,11204784,1.457801,8],[0,12438338,3.452685,8],[0,719573,0.659847,8],[0,24773881,0.475703,8],[0,12643931,0.26087,8],[0,12643931,0.322251,8],[0,19017294,0.629156,8],[0,12643931,0.352941,8],[0,16961371,0.598465,8],[0,1130758,0.659847,8],[0,10999192,0.537084,8],[0,12643931,0.445013,8],[0,12643931,0.567775,8],[0,20867626,0.936061,8],[0,20867626,0.84399,8],[0,23951511,0.936061,8],[0,25801843,0.352941,8],[0,308389,0.138107,8],[0,23334734,0.966752,8],[0,16961371,0.721228,8],[0,16550186,1.089514,8],[0,25801843,0.475703,8],[0,29913690,1.150895,8],[0,5037013,0.322251,8],[0,21484403,0.782609,8],[0,25801843,0.598465,8],[0,21895588,0.26087,8],[0,3803459,0.107417,8],[0,10176822,1.304348,8],[0,20045256,0.506394,8],[0,20045256,0.537084,8],[0,12438338,0.445013,8],[0,3597867,2.777494,8],[0,24362696,0.997442,8],[0,10176822,0.84399,8],[0,12438338,0.751918,8],[0,5037013,0.046036,8],[0,12438338,0.966752,8],[0,10176822,0.537084,8],[0,10176822,0.414322,8],[0,16755778,0.322251,8],[0,21895588,0.414322,8],[0,24362696,0.87468,8],[0,25185066,0.751918,8],[0,2158720,0.506394,8],[0,2158720,0.629156,8],[0,2158720,0.659847,8],[0,10793600,0.629156,8],[0,8532083,0.721228,8],[0,8737676,0.506394,8],[0,8737676,0.537084,8],[0,4214644,0.966752,8],[0,17372555,0.475703,8],[0,4420236,0.537084,8],[0,10793600,0.813299,8],[0,8737676,0.690537,8],[0,24568288,0.383632,8],[0,17372555,0.751918,8],[0,17372555,0.813299,8],[0,27857766,0.721228,8],[0,28268951,0.352941,8],[0,7298529,0.352941,8],[0,28268951,0.414322,8],[0,17372555,0.936061,8],[0,11204784,0.29156,8],[0,8943268,0.84399,8],[0,11821561,0.352941,8],[0,11821561,0.383632,8],[0,11204784,0.966752,8],[0,8532083,0.322251,8],[0,4420236,0.475703,8],[0,11204784,0.690537,8],[0,23745919,0.690537,8],[0,10588007,0.598465,8],[0,11204784,0.537084,8],[0,16344594,0.29156,8],[0,7298529,0.414322,8],[0,8737676,0.230179,8],[0,10588007,0.230179,8],[0,10793600,0.138107,8],[0,5242605,0.475703,8],[0,4625828,3.667519,8],[0,28885728,0.168798,8],[0,30119282,0.322251,8],[0,8737676,0.29156,8],[0,7298529,1.058824,8],[0,11204784,0.751918,8],[0,10793600,0.322251,8],[0,8737676,0.322251,8],[0,25185066,0.414322,8],[0,19428479,0.445013,8],[0,16344594,0.721228,8],[0,11615969,0.690537,8],[0,21278810,0.537084,8],[0,21278810,0.475703,8],[0,2158720,0.138107,8],[0,2158720,0.26087,8],[0,25185066,0.659847,8],[0,16550186,0.322251,8],[0,4009051,1.028133,8],[0,12027154,0.015345,8],[0,23745919,0.905371,8],[0,12027154,0.26087,8],[0,16550186,0.414322,8],[0,513981,2.102302,8],[0,10382415,0.383632,8],[0,1953128,0.138107,8],[0,19222887,0.721228,8],[0,19428479,0.690537,8],[0,10382415,0.29156,8],[0,5242605,0.690537,8],[0,12027154,0.506394,8],[0,7092937,0.537084,8],[0,19839664,0.199488,8],[0,12027154,0.659847,8],[0,8943268,0.230179,8],[0,12027154,0.813299,8],[0,1953128,0.537084,8],[0,4009051,0.414322,8],[0,21484403,0.506394,8],[0,28063359,0.322251,8],[0,23745919,1.120205,8],[0,4009051,0.168798,8],[0,4009051,0.076726,8],[0,4009051,0.015345,8],[0,16550186,0.107417,8],[0,24568288,0.199488,8],[0,513981,0.076726,8],[0,28268951,0.690537,8],[0,24568288,0.138107,8],[0,11821561,0.721228,8],[0,27857766,0.168798,8],[0,27857766,0.076726,8],[0,11821561,0.997442,8],[0,11821561,1.058824,8],[0,21689995,0.383632,8],[0,25390658,0.352941,8],[0,5448198,1.028133,8],[0,25390658,0.475703,8],[0,25390658,0.690537,8],[0,7298529,0.168798,8],[0,19839664,0.015345,8],[0,19839664,0.046036,8],[0,19839664,0.076726,8],[0,513981,0.199488,8],[0,513981,0.26087,8],[0,24568288,0.076726,8],[0,513981,0.322251,8],[0,21689995,0.751918,8],[0,23540327,0.659847,8],[0,10382415,0.84399,8],[0,21689995,0.84399,8],[0,24157104,0.997442,8],[0,18194925,0.352941,8],[0,18194925,0.383632,8],[0,18194925,0.506394,8],[0,28474543,0.352941,8],[0,3186682,1.365729,8],[0,18194925,0.751918,8],[0,925166,0.567775,8],[0,6681752,0.537084,8],[0,14083077,0.84399,8],[0,22923549,0.598465,8],[0,22923549,0.506394,8],[0,26624212,0.199488,8],[0,9765638,0.322251,8],[0,14083077,0.107417,8],[0,13260708,0.445013,8],[0,13260708,0.629156,8],[0,26624212,0.445013,8],[0,13260708,0.84399,8],[0,2981089,1.703325,8],[0,18400517,0.107417,8],[0,18400517,0.138107,8],[0,18400517,0.352941,8],[0,13260708,1.028133,8],[0,2981089,0.537084,8],[0,22717957,1.212276,8],[0,6681752,0.015345,8],[0,22717957,0.87468,8],[0,3392274,1.396419,8],[0,3392274,0.997442,8],[0,2364312,0.199488,8],[0,22101180,0.046036,8],[0,3392274,0.598465,8],[0,13055116,0.383632,8],[0,17989333,0.537084,8],[0,17989333,0.567775,8],[0,17989333,0.629156,8],[0,17989333,0.659847,8],[0,20662033,0.629156,8],[0,2364312,0.813299,8],[0,20662033,0.29156,8],[0,6064975,0.230179,8],[0,6064975,0.567775,8],[0,28474543,0.107417,8],[0,26418620,0.383632,8],[0,26418620,0.414322,8],[0,26418620,0.445013,8],[0,8326491,0.84399,8],[0,22101180,0.506394,8],[0,28474543,0.199488,8],[0,26418620,1.304348,8],[0,8326491,0.537084,8],[0,18194925,0.230179,8],[0,8326491,0.506394,8],[0,18194925,0.29156,8],[0,18194925,0.322251,8],[0,13671893,0.598465,8],[0,6476160,0.107417,8],[0,13671893,0.537084,8],[0,27240989,0.29156,8],[0,13671893,0.445013,8],[0,27240989,0.506394,8],[0,9560045,0.629156,8],[0,13671893,0.322251,8],[0,13671893,0.29156,8],[0,9560045,0.506394,8],[0,9560045,0.475703,8],[0,9560045,0.445013,8],[0,29091321,0.230179,8],[0,22306772,0.567775,8],[0,9560045,0.168798,8],[0,18606110,0.107417,8],[0,8120899,0.905371,8],[0,22306772,0.84399,8],[0,102796,0.352941,8],[0,1541943,0.046036,8],[0,1541943,0.076726,8],[0,18606110,0.751918,8],[0,8120899,0.629156,8],[0,8120899,0.659847,8],[0,1541943,0.26087,8],[0,29091321,0.659847,8],[0,1541943,0.383632,8],[0,22717957,0.782609,8],[0,22717957,0.751918,8],[0,26829804,0.29156,8],[0,20250849,0.199488,8],[0,18811702,0.383632,8],[0,7915306,0.383632,8],[0,26829804,0.813299,8],[0,2775497,6.859335,8],[0,27035397,0.26087,8],[0,13466300,0.107417,8],[0,22512365,1.887468,8],[0,13466300,0.26087,8],[0,18811702,0.107417,8],[0,13466300,0.414322,8],[0,27446582,0.997442,8],[0,13466300,0.751918,8],[0,29502505,0.782609,8],[0,27035397,0.598465,8],[0,8120899,0.168798,8],[0,27446582,0.29156,8],[0,27446582,0.138107,8],[0,13466300,1.488491,8],[0,27035397,0.813299,8],[0,8120899,0.26087,8],[0,9354453,0.138107,8],[0,29502505,0.29156,8],[0,29502505,0.230179,8],[0,27240989,0.015345,8],[0,17783740,0.537084,8],[0,5859383,2.071611,8],[0,5859383,1.335038,8],[0,19017294,0.107417,8],[0,9971230,0.352941,8],[0,5859383,1.181586,8],[0,9971230,0.445013,8],[0,5859383,1.150895,8],[0,20867626,0.322251,8],[0,30324875,0.598465,8],[0,17783740,0.751918,8],[0,5859383,0.966752,8],[0,30324875,0.629156,8],[0,9971230,0.567775,8],[0,9148861,0.199488,8],[0,27652174,0.414322,8],[0,27652174,0.721228,8],[0,12849523,0.230179,8],[0,5859383,0.690537,8],[0,5859383,0.87468,8],[0,12849523,0.168798,8],[0,21895588,0.782609,8],[0,12849523,0.138107,8],[0,5859383,0.782609,8],[0,9971230,0.230179,8],[0,12643931,0.751918,8],[0,26213027,0.107417,8],[0,30324875,0.076726,8],[0,17783740,0.506394,8],[0,10588007,0.076726,9],[0,4420236,0.168798,9],[0,12438338,1.089514,9],[0,2981089,0.659847,9],[0,13877485,0.015345,9],[0,18400517,0.015345,9],[0,26624212,0.782609,9],[0,13877485,0.107417,9],[0,11204784,1.212276,9],[0,20250849,0.567775,9],[0,16961371,0.567775,9],[0,27035397,0.107417,9],[0,27035397,0.015345,9],[0,13877485,0.475703,9],[0,24773881,0.629156,9],[0,23334734,0.352941,9],[0,16961371,0.782609,9],[0,26213027,0.475703,9],[0,17166963,0.230179,9],[0,25185066,0.168798,9],[0,27035397,0.322251,9],[0,4420236,0.506394,9],[0,27446582,1.335038,9],[0,10793600,0.107417,9],[0,29502505,0.936061,9],[0,16344594,0.352941,9],[0,30119282,0.168798,9],[0,16344594,0.199488,9],[0,5859383,0.936061,9],[0,26007435,0.352941,9],[0,22306772,0.230179,9],[0,11615969,0.445013,9],[0,16961371,0.26087,9],[0,4420236,0.015345,9],[0,7298529,0.598465,9],[0,5242605,0.629156,9],[0,11410377,0.659847,9],[0,11410377,0.721228,9],[0,19634071,0.199488,9],[0,24979473,0.537084,9],[0,24979473,0.659847,9],[0,22717957,0.659847,9],[0,22717957,0.721228,9],[0,21073218,0.352941,9],[0,5448198,0.29156,9],[0,5448198,0.322251,9],[0,10588007,1.181586,9],[0,10588007,0.475703,9],[0,4420236,0.598465,9],[0,22717957,0.813299,9],[0,23745919,0.721228,9],[0,23745919,0.751918,9],[0,12438338,0.26087,9],[0,23334734,0.230179,9],[0,925166,0.046036,9],[0,19428479,0.015345,9],[0,20867626,0.598465,9],[0,24773881,0.659847,9],[0,16961371,0.936061,9],[0,20867626,0.445013,9],[0,24773881,0.751918,9],[0,23951511,0.751918,9],[0,26829804,0.659847,9],[0,8737676,0.015345,9],[0,23951511,0.567775,9],[0,7915306,0.168798,9],[0,20250849,0.230179,9],[0,4625828,0.199488,9],[0,26829804,0.414322,9],[0,16139001,0.537084,9],[0,18400517,0.26087,9],[0,11410377,0.383632,9],[0,10588007,0.445013,9],[0,11410377,0.414322,9],[0,102796,0.506394,9],[0,29296913,0.629156,9],[0,29296913,0.659847,9],[0,17783740,0.567775,9],[0,22306772,0.659847,9],[0,9560045,0.046036,9],[0,9560045,0.076726,9],[0,9560045,0.138107,9],[0,21484403,0.966752,9],[0,1747535,0.230179,9],[0,6476160,0.690537,9],[0,29913690,0.537084,9],[0,4831421,0.567775,9],[0,7092937,1.273657,9],[0,9354453,0.537084,9],[0,12643931,0.29156,9],[0,21484403,0.659847,9],[0,29913690,0.29156,9],[0,4831421,0.230179,9],[0,6476160,0.567775,9],[0,1130758,0.87468,9],[0,1541943,0.414322,9],[0,10999192,0.352941,9],[0,24362696,0.475703,9],[0,22306772,1.181586,9],[0,16755778,0.076726,9],[0,2569905,1.058824,9],[0,16755778,0.138107,9],[0,24362696,0.629156,9],[0,29913690,1.519182,9],[0,30324875,0.046036,9],[0,5037013,0.015345,9],[0,2569905,4.158568,9],[0,1747535,0.29156,9],[0,3597867,0.046036,9],[0,21484403,0.751918,9],[0,16755778,0.414322,9],[0,21895588,0.537084,9],[0,17783740,0.445013,9],[0,1541943,0.015345,9],[0,8120899,0.782609,9],[0,5037013,0.383632,9],[0,24157104,0.751918,9],[0,24157104,0.721228,9],[0,8120899,0.567775,9],[0,27035397,2.132992,9],[0,3597867,0.629156,9],[0,27035397,1.365729,9],[0,1747535,0.015345,9],[0,27035397,0.936061,9],[0,17783740,0.87468,9],[0,8737676,0.629156,9],[0,17783740,0.936061,9],[0,21073218,0.168798,9],[0,27446582,0.352941,9],[0,10793600,0.537084,9],[0,8737676,0.352941,9],[0,17783740,0.966752,9],[0,8120899,0.138107,9],[0,16344594,0.690537,9],[0,17783740,0.997442,9],[0,26007435,0.751918,9],[0,16344594,0.506394,9],[0,29913690,0.138107,9],[0,12643931,0.230179,9],[0,2569905,0.015345,9],[0,1953128,0.84399,9],[0,17783740,0.690537,9],[0,719573,0.629156,9],[0,7092937,0.659847,9],[0,719573,0.598465,9],[0,1953128,0.659847,9],[0,12643931,0.168798,9],[0,1747535,0.721228,9],[0,9354453,0.352941,9],[0,21895588,0.506394,9],[0,12643931,0.076726,9],[0,21484403,0.475703,9],[0,13671893,0.567775,9],[0,28063359,0.015345,9],[0,4831421,0.168798,9],[0,29091321,0.107417,9],[0,2775497,0.107417,9],[0,19428479,0.537084,9],[0,3186682,5.017903,9],[0,25390658,0.936061,9],[0,23129142,0.537084,9],[0,8326491,0.721228,9],[0,23540327,0.905371,9],[0,8326491,0.751918,9],[0,21689995,0.782609,9],[0,20045256,0.015345,9],[0,23129142,0.322251,9],[0,21689995,0.905371,9],[0,19222887,0.905371,9],[0,26418620,0.29156,9],[0,22101180,0.352941,9],[0,26418620,0.199488,9],[0,6064975,0.721228,9],[0,26418620,0.138107,9],[0,6887344,0.29156,9],[0,10382415,0.414322,9],[0,26418620,0.107417,9],[0,10382415,0.352941,9],[0,17372555,0.782609,9],[0,22923549,0.751918,9],[0,23334734,0.87468,9],[0,6681752,0.690537,9],[0,23334734,0.905371,9],[0,22101180,0.813299,9],[0,22101180,0.690537,9],[0,27857766,0.352941,9],[0,22101180,0.629156,9],[0,308389,0.168798,9],[0,20867626,0.199488,9],[0,11821561,0.567775,9],[0,27857766,0.230179,9],[0,3186682,1.703325,9],[0,18194925,0.414322,9],[0,25801843,0.26087,9],[0,23334734,1.273657,9],[0,28268951,1.365729,9],[0,21689995,0.445013,9],[0,21689995,0.537084,9],[0,23540327,2.838875,9],[0,12849523,0.475703,9],[0,17578148,0.414322,9],[0,7709714,0.138107,9],[0,7709714,0.199488,9],[0,27652174,0.26087,9],[0,19222887,0.199488,9],[0,17578148,0.690537,9],[0,17578148,0.751918,9],[0,3392274,0.751918,9],[0,3803459,0.813299,9],[0,3803459,1.028133,9],[0,6887344,0.567775,9],[0,17578148,0.966752,9],[0,7709714,0.445013,9],[0,12232746,0.690537,9],[0,27652174,0.107417,9],[0,9971230,0.107417,9],[0,5653790,0.168798,9],[0,23129142,0.168798,9],[0,7504122,0.659847,9],[0,29708098,0.721228,9],[0,2364312,1.242967,9],[0,22101180,0.230179,9],[0,10382415,0.26087,9],[0,4009051,0.598465,9],[0,9148861,0.475703,9],[0,20662033,0.322251,9],[0,12027154,0.721228,9],[0,12027154,0.751918,9],[0,308389,1.089514,9],[0,19839664,0.26087,9],[0,6064975,0.046036,9],[0,19839664,0.383632,9],[0,3392274,0.383632,9],[0,12027154,1.058824,9],[0,3392274,0.506394,9],[0,7504122,0.076726,9],[0,4009051,0.107417,9],[0,23540327,0.414322,9],[0,13055116,0.445013,9],[0,4009051,0.046036,9],[0,8326491,3.667519,9],[0,26624212,0.107417,9],[0,9765638,0.445013,9],[0,21278810,0.322251,9],[0,11615969,1.335038,9],[0,8532083,1.028133,9],[0,22923549,0.383632,9],[0,25185066,0.782609,9],[0,1130758,3.11509,9],[0,25185066,0.690537,9],[0,14083077,0.199488,9],[0,11615969,1.028133,9],[0,28268951,0.107417,9],[0,21278810,0.445013,9],[0,2158720,0.168798,9],[0,2158720,0.107417,9],[0,11615969,0.751918,9],[0,13260708,0.322251,9],[0,23334734,0.506394,9],[0,11615969,0.629156,9],[0,21278810,0.598465,9],[0,11615969,0.598465,9],[0,26624212,0.230179,9],[0,25185066,0.383632,9],[0,26624212,0.26087,9],[0,20045256,0.475703,9],[0,30119282,0.629156,9],[0,17166963,0.475703,9],[0,25185066,0.29156,9],[0,13260708,0.721228,9],[0,17166963,0.26087,9],[0,25801843,0.414322,9],[0,28268951,0.230179,9],[0,6681752,0.352941,9],[0,17372555,0.567775,9],[0,4214644,0.813299,9],[0,22923549,0.567775,9],[0,17372555,0.721228,9],[0,4214644,0.629156,9],[0,23129142,0.84399,9],[0,8326491,0.29156,9],[0,7915306,0.138107,10],[0,29091321,0.29156,10],[0,30324875,0.322251,10],[0,29091321,0.322251,10],[0,4420236,0.352941,10],[0,25596250,0.107417,10],[0,308389,1.181586,10],[0,4420236,0.322251,10],[0,13055116,0.230179,10],[0,8120899,0.997442,10],[0,7915306,0.414322,10],[0,26213027,0.506394,10],[0,30119282,0.782609,10],[0,21484403,0.690537,10],[0,30119282,0.84399,10],[0,4214644,0.076726,10],[0,4831421,0.445013,10],[0,13055116,0.506394,10],[0,27857766,0.598465,10],[0,7504122,0.046036,10],[0,26213027,0.782609,10],[0,4831421,0.199488,10],[0,13260708,0.414322,10],[0,14083077,0.046036,10],[0,28063359,0.352941,10],[0,12643931,0.199488,10],[0,8326491,0.352941,10],[0,27652174,0.168798,10],[0,28885728,0.199488,10],[0,10999192,0.567775,10],[0,10999192,0.598465,10],[0,24362696,0.414322,10],[0,20867626,0.352941,10],[0,102796,0.015345,10],[0,26624212,0.537084,10],[0,12643931,0.782609,10],[0,7504122,0.537084,10],[0,3803459,1.304348,10],[0,11615969,0.537084,10],[0,27652174,0.076726,10],[0,29296913,0.26087,10],[0,3803459,1.734015,10],[0,21073218,0.322251,10],[0,12232746,0.230179,10],[0,4420236,0.230179,10],[0,3392274,0.721228,10],[0,12232746,0.322251,10],[0,24773881,0.567775,10],[0,2364312,0.076726,10],[0,2364312,0.015345,10],[0,7298529,1.457801,10],[0,13260708,0.659847,10],[0,12232746,0.567775,10],[0,26213027,0.537084,10],[0,28885728,0.076726,10],[0,26624212,0.414322,10],[0,29296913,0.230179,10],[0,7504122,0.322251,10],[0,25596250,0.87468,10],[0,11204784,0.475703,10],[0,16550186,0.168798,10],[0,24568288,0.230179,10],[0,24979473,0.475703,10],[0,27035397,1.549872,10],[0,16550186,0.046036,10],[0,26829804,0.383632,10],[0,8737676,0.168798,10],[0,24979473,0.383632,10],[0,24568288,0.475703,10],[0,7709714,0.015345,10],[0,24568288,0.506394,10],[0,8532083,0.26087,10],[0,21278810,0.352941,10],[0,11410377,0.629156,10],[0,20250849,0.26087,10],[0,26829804,0.445013,10],[0,12849523,0.076726,10],[0,8326491,0.26087,10],[0,8326491,0.230179,10],[0,4214644,0.015345,10],[0,4625828,0.107417,10],[0,25390658,0.29156,10],[0,2158720,0.721228,10],[0,8120899,0.107417,10],[0,16344594,0.629156,10],[0,25801843,0.230179,10],[0,25390658,0.414322,10],[0,11410377,0.322251,10],[0,30324875,1.457801,10],[0,11410377,0.352941,10],[0,24568288,0.751918,10],[0,16344594,0.322251,10],[0,26213027,0.383632,10],[0,24773881,0.199488,10],[0,7915306,0.199488,10],[0,26213027,0.690537,10],[0,20662033,0.445013,10],[0,12438338,0.506394,10],[0,26829804,0.26087,10],[0,26829804,0.537084,10],[0,7709714,0.046036,10],[0,24773881,1.058824,10],[0,26213027,0.721228,10],[0,8532083,1.089514,10],[0,28063359,0.168798,10],[0,12643931,0.015345,10],[0,21484403,0.414322,10],[0,12438338,0.84399,10],[0,27857766,0.26087,10],[0,21073218,0.046036,10],[0,1130758,0.29156,10],[0,29091321,0.046036,10],[0,2775497,0.751918,10],[0,20662033,0.076726,10],[0,12438338,0.690537,10],[0,2775497,0.138107,10],[0,24979473,0.782609,10],[0,24979473,0.813299,10],[0,16550186,0.29156,10],[0,13466300,0.168798,10],[0,29091321,0.138107,10],[0,4831421,0.138107,10],[0,12027154,0.322251,10],[0,12027154,0.445013,10],[0,27240989,0.076726,10],[0,5653790,0.230179,10],[0,19017294,0.076726,10],[0,19017294,0.046036,10],[0,22512365,0.506394,10],[0,23129142,0.905371,10],[0,23129142,0.629156,10],[0,29708098,0.26087,10],[0,23129142,0.567775,10],[0,23745919,0.475703,10],[0,22512365,0.721228,10],[0,18811702,0.076726,10],[0,17166963,0.506394,10],[0,17166963,0.29156,10],[0,23129142,0.445013,10],[0,19222887,0.352941,10],[0,9148861,0.383632,10],[0,23129142,0.383632,10],[0,23129142,0.352941,10],[0,1953128,0.29156,10],[0,1953128,0.230179,10],[0,10176822,0.107417,10],[0,29502505,0.138107,10],[0,1953128,0.076726,10],[0,5859383,0.383632,10],[0,7092937,0.352941,10],[0,10176822,0.015345,10],[0,5859383,0.445013,10],[0,1747535,0.659847,10],[0,29708098,0.567775,10],[0,24157104,0.87468,10],[0,17783740,0.629156,10],[0,19222887,0.230179,10],[0,5653790,0.352941,10],[0,17578148,0.813299,10],[0,24157104,0.445013,10],[0,5859383,1.120205,10],[0,6064975,0.322251,10],[0,5242605,0.782609,10],[0,6064975,0.445013,10],[0,22101180,0.383632,10],[0,28474543,0.138107,10],[0,19428479,0.199488,10],[0,28474543,0.168798,10],[0,23951511,0.29156,10],[0,29708098,0.107417,10],[0,28474543,0.26087,10],[0,9765638,0.230179,10],[0,23951511,0.87468,10],[0,6064975,0.997442,10],[0,23951511,0.629156,10],[0,22923549,0.352941,10],[0,22923549,0.322251,10],[0,23951511,0.506394,10],[0,23951511,0.445013,10],[0,22717957,0.322251,10],[0,9971230,0.046036,10],[0,22101180,0.015345,10],[0,10793600,0.015345,10],[0,16961371,0.015345,10],[0,22717957,0.475703,10],[0,10588007,0.26087,10],[0,16961371,0.076726,10],[0,8943268,0.29156,10],[0,22717957,0.629156,10],[0,23745919,0.782609,10],[0,23745919,0.813299,10],[0,22101180,0.138107,10],[0,22306772,0.015345,10],[0,23745919,0.936061,10],[0,8943268,0.168798,10],[0,5448198,0.26087,10],[0,6064975,0.107417,10],[0,17578148,0.475703,10],[0,10176822,0.352941,10],[0,17578148,0.445013,10],[0,29913690,0.445013,10],[0,21689995,0.414322,10],[0,5859383,0.076726,10],[0,18606110,0.629156,10],[0,22306772,1.058824,10],[0,16755778,0.537084,10],[0,21689995,0.659847,10],[0,23540327,0.84399,10],[0,5037013,0.076726,10],[0,9354453,0.414322,10],[0,16755778,0.29156,10],[0,18606110,0.322251,10],[0,23540327,0.475703,10],[0,23334734,0.322251,10],[0,9354453,0.506394,10],[0,23334734,0.168798,10],[0,19222887,0.046036,10],[0,19222887,0.107417,10],[0,21895588,0.475703,10],[0,5448198,0.567775,10],[0,1953128,0.629156,10],[0,22306772,1.212276,10],[0,1541943,0.87468,10],[0,7092937,0.84399,10],[0,10176822,0.230179,10],[0,1541943,0.107417,10],[0,7092937,0.936061,10],[0,1541943,0.168798,10],[0,1541943,0.230179,10],[0,308389,0.29156,11],[0,12027154,0.598465,11],[0,17166963,0.046036,11],[0,7504122,0.168798,11],[0,3392274,0.966752,11],[0,4625828,0.076726,11],[0,4009051,0.383632,11],[0,21278810,0.015345,11],[0,4420236,0.046036,11],[0,23745919,0.87468,11],[0,10588007,0.782609,11],[0,23334734,0.383632,11],[0,12438338,0.168798,11],[0,9765638,0.352941,11],[0,23334734,0.199488,11],[0,12027154,0.690537,11],[0,17989333,0.506394,11],[0,1130758,0.046036,11],[0,13055116,0.076726,11],[0,308389,0.352941,11],[0,4420236,0.26087,11],[0,23334734,1.120205,11],[0,8326491,0.567775,11],[0,18194925,0.138107,11],[0,7915306,0.046036,11],[0,16139001,0.015345,11],[0,23540327,0.352941,11],[0,8326491,0.690537,11],[0,11410377,0.445013,11],[0,23334734,1.058824,11],[0,7504122,0.26087,11],[0,4009051,0.138107,11],[0,17578148,0.29156,11],[0,19839664,0.537084,11],[0,22923549,0.659847,11],[0,3392274,0.076726,11],[0,8326491,0.322251,11],[0,24979473,0.445013,11],[0,4009051,0.26087,11],[0,22101180,0.199488,11],[0,6064975,0.168798,11],[0,24979473,0.598465,11],[0,25801843,0.506394,11],[0,20662033,0.506394,11],[0,13055116,0.537084,11],[0,17578148,0.199488,11],[0,7298529,0.138107,11],[0,25390658,0.813299,11],[0,2158720,0.230179,11],[0,28268951,0.076726,11],[0,6887344,0.046036,11],[0,25801843,0.168798,11],[0,5448198,1.089514,11],[0,5859383,0.997442,11],[0,19017294,0.414322,11],[0,17783740,0.721228,11],[0,25390658,0.322251,11],[0,26213027,0.322251,11],[0,25390658,0.076726,11],[0,30324875,0.29156,11],[0,17372555,0.598465,11],[0,21278810,0.199488,11],[0,5859383,0.598465,11],[0,8943268,0.813299,11],[0,12643931,0.383632,11],[0,27857766,0.475703,11],[0,27857766,0.015345,11],[0,21689995,0.29156,11],[0,12643931,0.138107,11],[0,27857766,0.046036,11],[0,11821561,0.138107,11],[0,27857766,0.383632,11],[0,8532083,0.352941,11],[0,11821561,0.537084,11],[0,5859383,0.230179,11],[0,5448198,0.445013,11],[0,11821561,0.690537,11],[0,10382415,0.230179,11],[0,3392274,1.672634,11],[0,27652174,0.046036,11],[0,12027154,0.475703,11],[0,23129142,0.199488,11],[0,11615969,0.383632,11],[0,23129142,0.29156,11],[0,10382415,0.445013,11],[0,12027154,0.352941,11],[0,28885728,0.138107,11],[0,6681752,1.212276,11],[0,12027154,0.230179,11],[0,12027154,0.199488,11],[0,17166963,0.168798,11],[0,23334734,0.107417,11],[0,23745919,0.567775,11],[0,25185066,0.199488,11],[0,23334734,0.076726,11],[0,25185066,0.26087,11],[0,8943268,0.352941,11],[0,8943268,0.383632,11],[0,11615969,0.567775,11],[0,23540327,0.506394,11],[0,23129142,0.598465,11],[0,20867626,0.138107,11],[0,11615969,0.659847,11],[0,9148861,0.230179,11],[0,17166963,0.936061,11],[0,2158720,0.015345,11],[0,5859383,1.672634,11],[0,10382415,1.242967,11],[0,4831421,0.107417,11],[0,513981,0.506394,11],[0,8120899,0.445013,11],[0,24157104,0.629156,11],[0,513981,0.015345,11],[0,5653790,0.138107,11],[0,27446582,0.445013,11],[0,27446582,0.598465,11],[0,22512365,0.567775,11],[0,27446582,0.782609,11],[0,13466300,0.629156,11],[0,308389,0.966752,11],[0,5653790,0.015345,11],[0,22512365,1.242967,11],[0,7915306,0.445013,11],[0,18400517,2.716113,11],[0,5242605,0.015345,11],[0,7915306,0.322251,11],[0,13877485,0.751918,11],[0,8737676,0.138107,11],[0,26829804,0.199488,11],[0,16961371,0.168798,11],[0,12232746,0.782609,11],[0,2981089,0.905371,11],[0,24773881,0.168798,11],[0,1336350,0.168798,11],[0,29708098,0.322251,11],[0,10999192,0.383632,11],[0,10999192,0.445013,11],[0,10999192,0.475703,11],[0,2569905,0.537084,11],[0,102796,0.322251,11],[0,8120899,0.598465,11],[0,18606110,0.230179,11],[0,29296913,0.414322,11],[0,19222887,0.015345,11],[0,24362696,0.445013,11],[0,6476160,0.629156,11],[0,9560045,0.383632,11],[0,9354453,0.445013,11],[0,16755778,0.230179,11],[0,27240989,0.414322,11],[0,27240989,0.322251,11],[0,9354453,0.322251,11],[0,27240989,0.199488,11],[0,21484403,1.365729,11],[0,1953128,0.352941,11],[0,28063359,0.199488,11],[0,28063359,0.076726,11],[0,8120899,1.457801,11],[0,7092937,0.414322,11],[0,16961371,0.751918,11],[0,8943268,0.046036,11],[0,9765638,0.076726,11],[0,24773881,0.352941,11],[0,13260708,0.29156,11],[0,9765638,0.26087,11],[0,9765638,0.29156,11],[0,27857766,0.537084,12],[0,8120899,0.383632,12],[0,9765638,0.168798,12],[0,7915306,0.015345,12],[0,13260708,0.383632,12],[0,8737676,0.107417,12],[0,12643931,0.046036,12],[0,11821561,0.230179,12],[0,1953128,0.015345,12],[0,11821561,0.29156,12],[0,10176822,0.138107,12],[0,20867626,0.414322,12],[0,10176822,0.168798,12],[0,7915306,0.107417,12],[0,2158720,0.199488,12],[0,19017294,0.721228,12],[0,29091321,0.076726,12],[0,8326491,0.414322,12],[0,25801843,0.107417,12],[0,28063359,0.230179,12],[0,26007435,0.782609,12],[0,5859383,0.199488,12],[0,1953128,0.751918,12],[0,27446582,0.383632,12],[0,25185066,0.629156,12],[0,28268951,0.138107,12],[0,28268951,0.168798,12],[0,9354453,0.107417,12],[0,24157104,0.414322,12],[0,19222887,0.29156,12],[0,30324875,0.506394,12],[0,8120899,0.230179,12],[0,17372555,0.230179,12],[0,1747535,0.138107,12],[0,24157104,0.598465,12],[0,17372555,0.322251,12],[0,21278810,0.26087,12],[0,17372555,0.383632,12],[0,17372555,0.445013,12],[0,19428479,0.138107,12],[0,8532083,0.629156,12],[0,17783740,0.414322,12],[0,7092937,0.015345,12],[0,4214644,0.168798,12],[0,28268951,0.015345,12],[0,12643931,0.475703,12],[0,513981,0.352941,12],[0,8532083,0.445013,12],[0,12027154,0.414322,12],[0,16755778,0.168798,12],[0,24362696,0.598465,12],[0,24362696,0.567775,12],[0,10382415,0.199488,12],[0,9560045,0.199488,12],[0,18606110,0.046036,12],[0,23334734,0.29156,12],[0,24362696,0.322251,12],[0,18606110,0.138107,12],[0,8326491,0.138107,12],[0,17578148,0.076726,12],[0,21895588,0.230179,12],[0,10999192,0.659847,12],[0,21895588,0.138107,12],[0,13260708,0.230179,12],[0,4625828,0.046036,12],[0,17578148,0.26087,12],[0,19634071,0.015345,12],[0,25801843,0.383632,12],[0,308389,0.015345,12],[0,2569905,1.028133,12],[0,19222887,0.445013,12],[0,14083077,0.138107,12],[0,308389,0.230179,12],[0,29913690,0.168798,12],[0,2775497,0.076726,12],[0,9354453,0.26087,12],[0,21689995,0.352941,12],[0,26007435,0.475703,12],[0,26007435,0.322251,12],[0,26007435,0.26087,12],[0,26007435,0.230179,12],[0,27240989,0.168798,12],[0,22101180,1.150895,12],[0,22306772,0.475703,12],[0,21689995,0.598465,12],[0,29296913,0.751918,12],[0,6887344,0.015345,12],[0,29091321,0.168798,12],[0,24979473,0.26087,12],[0,10382415,1.089514,12],[0,22923549,0.690537,12],[0,24362696,0.84399,12],[0,1130758,0.168798,12],[0,24773881,0.782609,12],[0,12027154,0.138107,12],[0,19634071,0.107417,12],[0,29296913,0.29156,12],[0,23334734,0.138107,12],[0,10382415,0.537084,12],[0,22717957,0.537084,12],[0,10793600,0.046036,12],[0,26829804,0.567775,12],[0,16344594,0.414322,12],[0,10793600,0.076726,12],[0,10793600,0.199488,12],[0,10793600,0.230179,12],[0,9971230,0.015345,12],[0,20045256,0.138107,12],[0,22101180,0.322251,12],[0,23129142,0.230179,12],[0,27652174,0.322251,12],[0,7709714,0.076726,12],[0,5242605,0.046036,12],[0,17166963,0.076726,12],[0,9971230,0.414322,12],[0,22717957,0.29156,12],[0,22717957,0.230179,12],[0,8943268,0.322251,12],[0,26418620,0.322251,12],[0,17166963,0.322251,12],[0,24773881,0.383632,12],[0,19428479,0.230179,12],[0,3392274,0.015345,12],[0,16961371,0.199488,12],[0,20250849,0.046036,12],[0,8326491,0.015345,12],[0,22101180,0.168798,12],[0,6064975,0.076726,12],[0,8943268,0.138107,12],[0,6681752,0.076726,12],[0,16961371,0.138107,12],[0,19634071,0.445013,12],[0,8943268,0.199488,12],[0,11204784,0.598465,12],[0,7092937,0.230179,12],[0,7915306,0.230179,12],[0,13055116,0.475703,12],[0,16344594,0.015345,12],[0,22101180,0.26087,12],[0,8943268,0.26087,12],[0,17578148,0.997442,12],[0,22717957,0.598465,12],[0,16344594,0.138107,12],[0,20662033,0.015345,12],[0,25185066,0.567775,12],[0,11204784,0.445013,12],[0,23745919,0.506394,12],[0,18194925,0.076726,12],[0,25801843,0.046036,12],[0,3803459,0.506394,12],[0,13466300,0.383632,12],[0,9148861,0.26087,12],[0,11204784,0.230179,12],[0,26213027,0.659847,12],[0,26213027,0.598465,12],[0,24568288,0.322251,12],[0,24773881,0.445013,12],[0,26213027,0.567775,12],[0,19428479,0.168798,12],[0,23745919,0.414322,12],[0,1130758,0.015345,13],[0,13055116,0.322251,13],[0,26624212,0.015345,13],[0,10588007,0.168798,13],[0,11410377,0.26087,13],[0,26007435,0.015345,13],[0,27035397,0.383632,13],[0,13055116,0.352941,13],[0,8326491,0.199488,13],[0,22512365,0.414322,13],[0,9765638,0.506394,13],[0,22512365,0.383632,13],[0,9354453,0.015345,13],[0,26829804,0.352941,13],[0,16961371,0.046036,13],[0,22306772,0.383632,13],[0,29091321,0.199488,13],[0,21278810,0.567775,13],[0,12027154,0.383632,13],[0,25185066,0.966752,13],[0,1130758,0.107417,13],[0,26213027,0.26087,13],[0,19017294,0.015345,13],[0,13260708,0.537084,13],[0,24362696,0.076726,13],[0,3392274,0.138107,13],[0,29708098,0.199488,13],[0,17578148,0.506394,13],[0,4625828,0.138107,13],[0,10999192,0.414322,13],[0,17578148,0.383632,13],[0,20662033,0.168798,13],[0,308389,0.076726,13],[0,6064975,0.138107,13],[0,23334734,0.84399,13],[0,21895588,0.107417,13],[0,19634071,0.046036,13],[0,2158720,0.046036,13],[0,11410377,0.813299,13],[0,17989333,0.84399,13],[0,18606110,0.352941,13],[0,17578148,0.168798,13],[0,10999192,0.721228,13],[0,6064975,0.015345,13],[0,23334734,0.414322,13],[0,26624212,0.046036,13],[0,12232746,0.138107,13],[0,12232746,0.629156,13],[0,12438338,0.230179,13],[0,26829804,0.230179,13],[0,24157104,0.659847,13],[0,9354453,0.230179,13],[0,11821561,0.813299,13],[0,21278810,0.138107,13],[0,11615969,0.414322,13],[0,30324875,0.015345,13],[0,17783740,0.168798,13],[0,28474543,0.076726,13],[0,17166963,0.567775,13],[0,12232746,0.506394,13],[0,22717957,0.199488,13],[0,21073218,0.076726,13],[0,19428479,0.046036,13],[0,13466300,0.138107,13],[0,1953128,0.107417,13],[0,9354453,0.168798,13],[0,11821561,0.322251,13],[0,24773881,0.322251,13],[0,10176822,0.076726,13],[0,13466300,0.230179,13],[0,7092937,0.322251,13],[0,10176822,0.046036,13],[0,18194925,0.199488,13],[0,22512365,0.230179,13],[0,11821561,0.076726,13],[0,4831421,0.076726,13],[0,9148861,0.352941,13],[0,9148861,0.29156,13],[0,20456441,0.782609,13],[0,22512365,0.168798,13],[0,30119282,0.475703,13],[0,23540327,0.537084,13],[0,13055116,0.138107,13],[0,22306772,0.506394,13],[0,24568288,0.107417,13],[0,4009051,1.457801,13],[0,17989333,0.230179,13],[0,23334734,0.015345,13],[0,17783740,0.475703,13],[0,20662033,0.107417,13],[0,23540327,0.199488,13],[0,17989333,0.046036,13],[0,27652174,0.015345,13],[0,27240989,0.107417,13],[0,4831421,0.506394,13],[0,21689995,0.322251,13],[0,7092937,0.076726,13],[0,20456441,0.29156,13],[0,7092937,0.997442,13],[0,21073218,0.230179,13],[0,19222887,0.076726,13],[0,20250849,0.29156,13],[0,29708098,0.046036,13],[0,25390658,0.138107,13],[0,30324875,0.138107,13],[0,1130758,0.26087,13],[0,8943268,0.475703,13],[0,25390658,0.26087,13],[0,1336350,0.015345,14],[0,25801843,0.199488,14],[0,20045256,0.26087,14],[0,25801843,0.015345,14],[0,29708098,0.138107,14],[0,18400517,0.046036,14],[0,6064975,2.255754,14],[0,13466300,0.046036,14],[0,22306772,0.26087,14],[0,22306772,0.29156,14],[0,13466300,0.322251,14],[0,22306772,0.322251,14],[0,9354453,0.076726,14],[0,8120899,0.199488,14],[0,27446582,0.322251,14],[0,27446582,0.26087,14],[0,22512365,0.26087,14],[0,8120899,0.29156,14],[0,22512365,0.199488,14],[0,9354453,0.199488,14],[0,2775497,0.015345,14],[0,9560045,0.537084,14],[0,13671893,0.168798,14],[0,102796,0.046036,14],[0,1541943,0.567775,14],[0,21895588,0.015345,14],[0,12438338,0.046036,14],[0,1130758,0.076726,14],[0,12438338,0.659847,14],[0,5859383,0.015345,14],[0,26007435,0.168798,14],[0,5859383,0.046036,14],[0,10176822,0.629156,14],[0,5859383,0.107417,14],[0,5859383,0.29156,14],[0,26213027,0.168798,14],[0,1747535,0.107417,14],[0,9148861,0.046036,14],[0,3392274,2.439898,14],[0,27652174,0.199488,14],[0,17989333,0.29156,14],[0,2364312,0.352941,14],[0,26418620,0.076726,14],[0,22101180,0.414322,14],[0,18194925,0.168798,14],[0,22923549,0.445013,14],[0,8943268,0.414322,14],[0,23951511,0.352941,14],[0,21689995,0.26087,14],[0,8532083,0.230179,14],[0,16550186,0.015345,14],[0,21689995,0.506394,14],[0,25390658,0.383632,14],[0,24157104,0.537084,14],[0,11410377,0.230179,14],[0,23951511,0.26087,14],[0,1953128,0.046036,14],[0,12027154,0.168798,14],[0,10382415,0.567775,14],[0,21278810,0.046036,14],[0,24979473,0.352941,14],[0,29296913,0.537084,14],[0,16755778,0.199488,14],[0,17578148,0.138107,14],[0,17372555,0.046036,14],[0,17372555,0.138107,14],[0,24773881,0.506394,14],[0,17372555,0.29156,14],[0,8737676,0.046036,14],[0,21278810,0.230179,14],[0,24773881,0.230179,14],[0,11204784,0.84399,14],[0,21278810,0.076726,14],[0,16961371,0.107417,14],[0,16344594,0.230179,14],[0,8737676,0.26087,14],[0,8532083,0.383632,14],[0,7092937,0.26087,14],[0,11821561,0.26087,14],[0,21484403,0.230179,14],[0,8737676,0.475703,14],[0,23745919,0.537084,14],[0,11204784,0.383632,14],[0,5448198,0.046036,14],[0,16755778,0.046036,14],[0,7504122,0.230179,14],[0,10588007,0.046036,14],[0,24979473,0.567775,14],[0,12232746,0.076726,14],[0,24362696,0.29156,14],[0,7504122,0.29156,14],[0,24362696,0.352941,14],[0,23745919,0.659847,14],[0,23540327,0.445013,14],[0,23540327,0.26087,14],[0,23540327,0.383632,14],[0,23745919,0.84399,14],[0,25185066,0.138107,15],[0,22717957,0.383632,15],[0,24157104,0.322251,15],[0,23540327,0.168798,15],[0,23540327,0.29156,15],[0,22717957,0.26087,15],[0,9560045,0.015345,15],[0,12849523,0.046036,15],[0,23745919,0.322251,15],[0,22717957,0.076726,15],[0,13466300,0.199488,15],[0,23745919,0.352941,15],[0,22306772,0.138107,15],[0,23745919,0.383632,15],[0,23745919,0.445013,15],[0,29708098,0.015345,15],[0,21073218,0.015345,15],[0,21278810,0.414322,15],[0,10999192,0.26087,15],[0,21278810,0.383632,15],[0,7092937,0.138107,15],[0,26213027,0.29156,15],[0,17372555,0.199488,15],[0,17372555,0.26087,15],[0,21278810,0.29156,15],[0,26213027,0.199488,15],[0,17372555,0.352941,15],[0,7092937,0.107417,15],[0,3392274,0.445013,15],[0,21278810,0.107417,15],[0,24773881,0.107417,15],[0,20045256,0.076726,15],[0,2158720,0.076726,15],[0,13260708,0.107417,15],[0,20250849,0.076726,15],[0,13260708,0.076726,15],[0,11204784,0.629156,15],[0,9148861,0.076726,15],[0,23540327,0.107417,15],[0,23540327,0.138107,15],[0,23951511,0.475703,15],[0,9148861,0.168798,15],[0,9971230,0.199488,15],[0,6476160,0.445013,15],[0,24362696,0.690537,15],[0,22512365,0.352941,15],[0,13671893,0.383632,15],[0,16755778,0.015345,15],[0,16550186,0.199488,15],[0,12027154,0.046036,15],[0,12027154,0.076726,15],[0,12438338,0.076726,15],[0,17989333,0.199488,15],[0,24979473,0.506394,15],[0,29296913,0.107417,15],[0,10382415,0.475703,15],[0,21484403,0.383632,15],[0,22101180,0.475703,15],[0,11410377,0.598465,15],[0,308389,0.046036,15],[0,27446582,0.506394,15],[0,5448198,0.076726,15],[0,10588007,0.107417,15],[0,13671893,0.076726,15],[0,24157104,0.352941,15],[0,4625828,0.015345,15],[0,24157104,0.475703,15],[0,26007435,0.414322,15],[0,21895588,0.322251,15],[0,25390658,0.107417,15],[0,24979473,0.046036,15],[0,17578148,0.230179,15],[0,17989333,0.26087,15],[0,24979473,0.230179,15],[0,21895588,0.168798,15],[0,24979473,0.29156,15],[0,17372555,0.015345,16],[0,10588007,0.015345,16],[0,28885728,0.046036,16],[0,10588007,0.721228,16],[0,13260708,0.506394,16],[0,26418620,0.046036,16],[0,23745919,0.629156,16],[0,6064975,0.629156,16],[0,25185066,0.352941,16],[0,13055116,0.199488,16],[0,24979473,0.138107,16],[0,23951511,0.322251,16],[0,23129142,0.26087,16],[0,16139001,0.076726,16],[0,9971230,0.168798,16],[0,13055116,0.26087,16],[0,9971230,0.076726,16],[0,4625828,0.168798,16],[0,5448198,0.230179,16],[0,23951511,0.199488,16],[0,23745919,0.230179,16],[0,26418620,0.015345,16],[0,19634071,0.138107,16],[0,11410377,0.506394,16],[0,13260708,0.138107,16],[0,17989333,0.138107,16],[0,8326491,0.076726,16],[0,22512365,0.445013,16],[0,25390658,0.168798,16],[0,8532083,0.138107,16],[0,25390658,0.230179,16],[0,8532083,0.107417,16],[0,27446582,0.046036,16],[0,513981,0.107417,16],[0,8120899,0.322251,16],[0,12027154,0.107417,16],[0,29091321,0.015345,16],[0,21484403,0.445013,16],[0,29913690,0.076726,16],[0,21484403,0.598465,16],[0,29913690,0.352941,16],[0,5037013,3.882353,16],[0,6476160,0.046036,16],[0,29296913,0.506394,16],[0,29296913,0.322251,16],[0,17578148,0.322251,16],[0,17578148,0.352941,16],[0,25596250,0.015345,16],[0,308389,0.107417,16],[0,25596250,0.046036,16],[0,9560045,0.107417,16],[0,12232746,0.168798,16],[0,12232746,0.199488,16],[0,24362696,0.230179,16],[0,10999192,0.199488,16],[0,17783740,0.29156,16],[0,17783740,0.322251,16],[0,17783740,0.230179,16],[0,11204784,0.567775,16],[0,22923549,0.230179,16],[0,17783740,0.138107,16],[0,8326491,0.046036,16],[0,16344594,0.26087,16],[0,22306772,0.076726,16],[0,7915306,0.537084,16],[0,11821561,0.046036,16],[0,9765638,0.046036,16],[0,26624212,0.29156,16],[0,11204784,0.26087,16],[0,21484403,0.26087,16],[0,11204784,0.352941,16],[0,21689995,0.138107,16],[0,24157104,0.29156,16],[0,5448198,0.383632,16],[0,24773881,0.414322,17],[0,22923549,0.168798,17],[0,102796,0.199488,17],[0,13260708,0.26087,17],[0,24362696,0.138107,17],[0,10999192,0.506394,17],[0,10999192,0.046036,17],[0,22923549,0.29156,17],[0,23129142,0.015345,17],[0,13671893,0.107417,17],[0,24362696,0.168798,17],[0,24362696,0.26087,17],[0,5448198,0.168798,17],[0,9765638,0.107417,17],[0,26624212,0.168798,17],[0,8326491,0.168798,17],[0,24979473,0.107417,17],[0,22923549,0.475703,17],[0,27446582,0.230179,17],[0,27446582,0.199488,17],[0,27446582,0.168798,17],[0,11410377,0.168798,17],[0,22306772,0.168798,17],[0,27446582,0.015345,17],[0,22512365,0.322251,17],[0,7915306,0.076726,17],[0,27035397,0.199488,17],[0,23951511,0.383632,17],[0,11410377,0.567775,17],[0,28474543,0.015345,17],[0,19634071,0.168798,17],[0,14083077,0.076726,17],[0,29296913,0.168798,17],[0,26829804,0.046036,17],[0,23334734,0.046036,17],[0,21895588,0.29156,17],[0,8532083,0.199488,17],[0,21689995,0.230179,17],[0,21689995,0.199488,17],[0,11821561,0.199488,17],[0,11821561,0.107417,17],[0,17783740,0.26087,17],[0,26213027,0.076726,17],[0,17783740,0.383632,17],[0,17372555,0.168798,17],[0,17372555,0.107417,17],[0,11615969,0.352941,17],[0,11615969,0.475703,17],[0,17166963,0.107417,17],[0,23745919,0.26087,17],[0,25185066,0.046036,17],[0,25185066,0.230179,17],[0,25185066,0.076726,17],[0,5653790,0.107417,17],[0,12232746,0.352941,17],[0,25801843,0.138107,17],[0,21895588,0.046036,17],[0,17578148,0.107417,17],[0,17578148,0.046036,17],[0,13055116,0.015345,17],[0,12027154,0.87468,17],[0,17989333,0.445013,17],[0,10382415,0.076726,17],[0,10999192,0.015345,18],[0,24773881,0.26087,18],[0,26213027,0.352941,18],[0,26007435,0.107417,18],[0,17372555,0.076726,18],[0,9765638,0.199488,18],[0,26213027,0.445013,18],[0,13260708,0.352941,18],[0,13260708,0.168798,18],[0,30324875,0.997442,18],[0,23951511,0.537084,18],[0,12232746,0.26087,18],[0,22512365,0.29156,18],[0,11615969,0.782609,18],[0,22512365,0.138107,18],[0,10999192,0.138107,18],[0,5653790,0.076726,18],[0,10999192,0.230179,18],[0,12438338,0.29156,18],[0,9354453,0.046036,18],[0,24568288,0.26087,18],[0,8120899,0.015345,18],[0,21073218,0.138107,18],[0,13466300,0.475703,18],[0,21689995,0.076726,18],[0,13466300,0.015345,18],[0,12438338,0.138107,18],[0,26007435,0.199488,18],[0,10793600,0.567775,18],[0,16344594,0.076726,18],[0,22717957,0.690537,18],[0,27446582,0.107417,18],[0,26829804,0.138107,18],[0,24773881,0.046036,18],[0,19839664,0.475703,18],[0,17783740,0.352941,18],[0,12232746,0.015345,18],[0,26213027,0.230179,18],[0,11410377,0.199488,18],[0,11410377,0.29156,18],[0,11410377,0.107417,18],[0,20662033,0.046036,18],[0,11410377,0.076726,18],[0,8326491,0.445013,18],[0,17166963,0.015345,18],[0,27652174,0.230179,18],[0,11410377,0.751918,18],[0,24979473,0.322251,18],[0,23129142,0.076726,18],[0,10588007,0.138107,18],[0,21484403,0.046036,18],[0,5448198,0.107417,18],[0,26829804,0.168798,19],[0,24362696,0.107417,19],[0,11615969,0.138107,19],[0,20867626,0.966752,19],[0,18194925,0.107417,19],[0,21484403,0.199488,19],[0,5859383,0.322251,19],[0,5653790,0.046036,19],[0,11204784,0.414322,19],[0,23745919,0.598465,19],[0,21895588,0.199488,19],[0,1130758,0.475703,19],[0,4009051,0.445013,19],[0,21689995,0.168798,19],[0,23951511,0.168798,19],[0,17989333,0.107417,19],[0,23540327,0.230179,19],[0,12232746,0.107417,19],[0,24157104,0.506394,19],[0,21895588,0.076726,19],[0,13671893,0.26087,19],[0,21484403,0.29156,19],[0,17989333,0.322251,19],[0,8120899,0.352941,19],[0,10382415,0.168798,19],[0,1953128,0.168798,19],[0,17578148,0.015345,19],[0,5448198,0.015345,19],[0,13055116,0.107417,19],[0,8943268,0.076726,19],[0,25185066,0.015345,19],[0,11410377,0.046036,19],[0,18194925,0.26087,19],[0,30324875,0.199488,19],[0,26624212,0.076726,19],[0,22923549,0.199488,19],[0,11410377,0.138107,19],[0,22923549,0.138107,19],[0,22923549,0.414322,19],[0,13055116,0.046036,20],[0,27240989,0.046036,20],[0,22717957,0.168798,20],[0,29708098,0.076726,20],[0,22717957,0.138107,20],[0,18194925,0.046036,20],[0,12643931,0.107417,20],[0,11821561,0.168798,20],[0,17989333,0.015345,20],[0,22306772,0.199488,20],[0,10382415,0.046036,20],[0,13671893,0.015345,20],[0,24362696,0.199488,20],[0,9148861,0.015345,20],[0,24157104,0.168798,20],[0,10382415,0.138107,20],[0,23951511,0.076726,20],[0,13260708,0.046036,20],[0,13671893,0.138107,20],[0,24362696,0.383632,20],[0,25390658,0.015345,20],[0,5448198,0.138107,20],[0,21689995,0.567775,20],[0,11615969,0.26087,20],[0,22923549,0.076726,20],[0,26007435,0.138107,20],[0,24979473,0.168798,20],[0,26213027,0.046036,20],[0,24773881,0.015345,20],[0,17783740,0.199488,20],[0,11204784,0.659847,20],[0,29296913,0.076726,20],[0,26829804,0.107417,20],[0,23540327,0.076726,20],[0,10999192,0.076726,20],[0,22306772,0.107417,20],[0,11615969,0.199488,20],[0,8326491,0.107417,20],[0,24773881,0.076726,21],[0,26213027,0.414322,21],[0,17989333,0.168798,21],[0,24157104,0.567775,21],[0,23129142,0.107417,21],[0,7092937,0.046036,21],[0,13055116,0.29156,21],[0,8120899,0.046036,21],[0,11204784,0.506394,21],[0,11410377,0.015345,21],[0,12027154,0.537084,21],[0,11615969,0.046036,21],[0,11615969,0.230179,21],[0,10999192,0.107417,21],[0,22717957,0.015345,21],[0,21484403,0.138107,21],[0,12438338,0.107417,21],[0,11615969,0.322251,21],[0,13466300,0.076726,21],[0,29913690,0.015345,21],[0,13260708,0.015345,22],[0,25185066,0.107417,22],[0,8532083,0.046036,22],[0,11821561,0.015345,22],[0,21484403,0.107417,22],[0,22717957,0.107417,22],[0,16344594,0.445013,22],[0,13671893,0.199488,22],[0,24362696,0.015345,22],[0,11204784,0.046036,22],[0,24773881,0.138107,22],[0,23129142,0.659847,22],[0,26213027,0.138107,22],[0,24568288,0.015345,22],[0,21484403,0.629156,22],[0,22306772,0.046036,22],[0,8120899,0.076726,22],[0,29502505,0.046036,22],[0,21484403,0.322251,23],[0,10999192,0.168798,23],[0,23129142,0.046036,23],[0,8532083,0.414322,23],[0,24362696,0.046036,23],[0,13055116,0.168798,23],[0,26213027,0.015345,23],[0,11615969,0.29156,23],[0,26829804,0.076726,23],[0,29296913,0.138107,23],[0,23745919,0.138107,23],[0,21484403,0.076726,23],[0,25390658,0.046036,23],[0,24979473,0.076726,23],[0,22512365,0.076726,23],[0,9765638,0.015345,23],[0,23745919,0.168798,23],[0,9765638,0.138107,23],[0,12438338,0.015345,24],[0,10999192,0.29156,24],[0,21484403,0.168798,24],[0,23951511,0.230179,24],[0,11615969,0.107417,24],[0,11615969,0.076726,24],[0,22923549,0.26087,24],[0,24157104,0.199488,24],[0,13671893,0.046036,24],[0,24157104,0.26087,24],[0,26007435,0.046036,24],[0,11204784,0.322251,24],[0,17989333,0.076726,24],[0,11204784,0.199488,24],[0,12232746,0.046036,24],[0,29296913,0.046036,25],[0,17783740,0.107417,25],[0,17783740,0.076726,25],[0,27446582,0.076726,25],[0,22512365,0.046036,25],[0,3392274,0.905371,25],[0,22717957,0.046036,25],[0,11204784,0.168798,25],[0,11615969,0.015345,25],[0,24979473,0.015345,25],[0,22512365,0.107417,25],[0,25801843,0.076726,26],[0,21484403,0.015345,26],[0,22923549,0.107417,26],[0,21689995,0.015345,26],[0,21689995,0.107417,26],[0,23745919,0.107417,26],[0,24568288,0.046036,26],[0,21484403,0.352941,26],[0,23745919,0.199488,26],[0,23951511,0.046036,26],[0,23745919,0.076726,27],[0,23951511,0.138107,27],[0,24979473,0.199488,27],[0,8532083,0.015345,27],[0,13671893,0.352941,27],[0,11204784,0.076726,28],[0,11204784,0.015345,28],[0,14083077,0.015345,28],[0,22512365,0.015345,29],[0,26007435,0.076726,29],[0,11204784,0.107417,29],[0,17783740,0.015345,29],[0,8532083,0.168798,30],[0,23540327,0.046036,30],[0,11615969,0.168798,30],[0,29296913,0.015345,30],[0,17783740,0.046036,30],[0,23540327,0.015345,31],[0,11204784,0.138107,31],[0,10382415,0.015345,32],[0,24157104,0.230179,32],[0,23745919,0.015345,33],[0,8532083,0.076726,33],[0,24157104,0.383632,33],[0,23951511,0.015345,34],[0,22923549,0.015345,34],[0,21689995,0.629156,34],[0,23745919,0.29156,34],[0,23745919,0.046036,34],[0,23951511,0.107417,35],[0,22923549,0.046036,35],[0,24157104,0.015345,37],[0,24157104,0.076726,37],[0,21689995,0.046036,38],[0,26829804,0.015345,38],[0,24157104,0.138107,40],[0,24157104,0.046036,42],[0,24157104,0.107417,43],[1,19174398,1.764706,1],[1,16869279,4.496164,1],[1,16869279,4.465473,1],[1,18336173,3.14578,1],[1,18126617,4.710997,1],[1,18336173,3.943734,1],[1,18126617,4.741688,1],[1,17917061,3.759591,1],[1,17288392,2.716113,1],[1,17917061,3.790281,1],[1,18545730,4.741688,1],[1,19383955,3.391304,1],[1,18126617,6.890026,1],[1,17288392,2.869565,1],[1,17078836,4.035806,1],[1,18964842,2.040921,1],[1,16869279,4.803069,1],[1,16240611,2.347826,1],[1,17917061,3.667519,1],[1,16450167,2.040921,1],[1,18336173,4.005115,1],[1,16240611,2.194373,1],[1,17917061,2.132992,1],[1,18126617,4.588235,1],[1,18755286,5.386189,1],[1,16869279,4.649616,1],[1,16869279,4.618926,1],[1,16659723,7.350384,1],[1,16869279,4.557545,1],[1,17288392,2.624041,1],[1,18964842,3.207161,1],[1,17288392,2.654731,1],[1,18126617,4.649616,1],[1,19174398,1.242967,1],[1,19174398,1.120205,1],[1,19174398,1.089514,1],[1,19174398,1.058824,1],[1,18336173,3.176471,1],[1,17078836,3.360614,1],[1,19174398,1.028133,1],[1,18964842,1.856777,1],[1,19174398,0.905371,1],[1,17917061,3.882353,1],[1,19174398,0.751918,1],[1,19383955,2.838875,1],[1,17078836,3.176471,1],[1,17078836,3.14578,1],[1,17707504,5.202046,1],[1,15821498,3.360614,1],[1,16450167,0.905371,1],[1,19174398,5.723785,1],[1,18755286,5.079284,1],[1,17078836,3.974425,1],[1,17078836,3.943734,1],[1,19174398,1.641944,1],[1,18755286,3.575448,1],[1,17078836,3.851662,1],[1,17078836,3.820972,1],[1,16869279,4.250639,1],[1,15821498,3.452685,1],[1,17917061,3.851662,1],[1,17078836,3.667519,1],[1,17078836,3.636829,1],[1,17288392,2.900256,1],[1,19174398,1.519182,1],[1,18545730,4.925831,1],[1,19174398,1.42711,1],[1,19174398,1.304348,1],[1,17078836,3.452685,1],[1,19174398,1.273657,1],[1,18336173,2.194373,1],[1,18755286,3.023018,1],[1,18964842,2.378517,1],[1,18336173,2.132992,1],[1,17917061,3.514066,1],[1,18126617,4.097187,1],[1,17917061,3.299233,1],[1,16869279,5.386189,1],[1,18336173,1.97954,1],[1,18126617,4.127877,1],[1,18755286,2.777494,1],[1,18755286,3.084399,1],[1,18964842,2.317136,1],[1,18964842,2.286445,1],[1,18964842,2.255754,1],[1,18336173,3.452685,1],[1,18336173,1.826087,1],[1,18336173,1.703325,1],[1,18126617,3.851662,1],[1,18336173,2.654731,1],[1,18336173,2.777494,1],[1,17917061,3.360614,1],[1,18545730,4.250639,1],[1,16450167,1.918159,1],[1,18964842,2.624041,1],[1,18964842,2.59335,1],[1,17917061,3.391304,1],[1,18336173,2.501279,1],[1,15821498,4.097187,1],[1,18964842,2.531969,1],[1,18336173,2.409207,1],[1,18964842,2.501279,1],[1,18126617,3.943734,1],[1,18336173,2.347826,1],[1,16450167,1.795396,1],[1,18336173,2.225064,1],[1,18755286,3.268542,1],[1,18755286,2.685422,1],[1,18545730,4.434783,1],[1,18336173,0.29156,1],[1,18964842,2.992327,1],[1,18126617,4.465473,1],[1,15821498,3.851662,1],[1,18336173,4.31202,1],[1,16869279,4.925831,1],[1,16450167,2.01023,1],[1,15821498,3.790281,1],[1,16240611,2.470588,1],[1,19383955,3.7289,1],[1,16240611,2.439898,1],[1,18964842,3.084399,1],[1,17917061,3.207161,1],[1,17288392,2.378517,1],[1,16869279,4.83376,1],[1,17917061,2.439898,1],[1,17288392,2.194373,1],[1,18336173,1.488491,1],[1,18336173,1.273657,1],[1,18336173,1.212276,1],[1,16450167,1.611253,1],[1,18964842,2.132992,1],[1,18336173,1.181586,1],[1,17707504,5.41688,1],[1,17917061,3.268542,1],[1,18964842,2.102302,1],[1,18336173,1.058824,1],[1,18336173,0.997442,1],[1,17288392,2.255754,1],[1,19174398,3.7289,1],[1,18336173,2.992327,1],[1,18126617,4.342711,1],[1,17917061,2.317136,1],[1,16869279,5.079284,1],[1,15821498,0.936061,1],[1,17917061,4.158568,1],[1,16659723,3.667519,1],[1,19174398,4.741688,1],[1,16659723,2.286445,1],[1,16659723,3.575448,1],[1,15611942,4.772379,1],[1,16659723,3.544757,1],[1,17288392,4.741688,1],[1,15611942,4.680307,1],[1,15611942,4.649616,1],[1,15821498,2.286445,1],[1,16659723,3.329923,1],[1,15611942,4.618926,1],[1,16659723,3.299233,1],[1,17288392,4.803069,1],[1,16240611,3.14578,1],[1,16240611,3.176471,1],[1,16659723,2.409207,1],[1,16659723,3.207161,1],[1,16659723,4.526854,1],[1,15821498,2.501279,1],[1,16450167,4.895141,1],[1,16659723,4.496164,1],[1,17917061,4.28133,1],[1,15611942,5.202046,1],[1,15821498,0.475703,1],[1,15821498,0.537084,1],[1,16659723,4.373402,1],[1,17288392,4.404092,1],[1,15821498,0.751918,1],[1,16450167,4.680307,1],[1,19174398,4.83376,1],[1,16659723,4.158568,1],[1,16240611,2.992327,1],[1,17917061,3.974425,1],[1,16659723,4.066496,1],[1,16659723,3.913043,1],[1,16659723,3.882353,1],[1,16659723,3.851662,1],[1,17288392,4.588235,1],[1,19383955,1.826087,1],[1,15821498,1.488491,1],[1,19383955,1.887468,1],[1,19383955,1.918159,1],[1,15821498,2.102302,1],[1,19383955,1.97954,1],[1,16659723,2.900256,1],[1,19383955,2.071611,1],[1,19383955,2.194373,1],[1,18126617,6.092072,1],[1,15821498,1.703325,1],[1,15821498,2.040921,1],[1,19383955,2.409207,1],[1,15821498,2.01023,1],[1,16869279,3.514066,1],[1,15821498,1.856777,1],[1,18755286,4.005115,1],[1,18126617,6.214834,1],[1,19383955,2.56266,1],[1,16659723,2.624041,1],[1,19383955,2.59335,1],[1,16659723,3.176471,1],[1,15821498,2.225064,1],[1,15821498,1.273657,1],[1,15611942,4.434783,1],[1,17288392,4.895141,1],[1,16659723,3.053708,1],[1,15611942,4.404092,1],[1,16659723,2.439898,1],[1,15821498,1.304348,1],[1,19383955,0.26087,1],[1,19383955,2.624041,1],[1,19383955,1.120205,1],[1,16659723,7.13555,1],[1,15821498,1.365729,1],[1,19383955,1.365729,1],[1,19383955,1.396419,1],[1,16659723,2.961637,1],[1,19383955,1.672634,1],[1,19383955,1.734015,1],[1,15821498,1.42711,1],[1,19383955,1.795396,1],[1,15821498,3.299233,1],[1,15821498,3.268542,1],[1,16240611,4.772379,1],[1,17078836,2.255754,1],[1,18126617,5.140665,1],[1,17078836,2.132992,1],[1,18964842,1.457801,1],[1,18545730,5.140665,1],[1,16450167,5.785166,1],[1,17078836,2.01023,1],[1,17078836,1.948849,1],[1,17288392,3.391304,1],[1,15821498,3.237852,1],[1,19174398,4.035806,1],[1,15821498,3.14578,1],[1,17078836,1.795396,1],[1,16450167,5.754476,1],[1,16869279,3.913043,1],[1,17078836,1.672634,1],[1,16869279,3.882353,1],[1,17078836,1.42711,1],[1,17078836,3.084399,1],[1,18126617,5.079284,1],[1,16869279,4.097187,1],[1,19383955,3.023018,1],[1,17497948,6.460358,1],[1,18755286,4.83376,1],[1,17288392,3.11509,1],[1,17078836,2.869565,1],[1,18545730,5.048593,1],[1,17078836,2.808184,1],[1,18964842,1.028133,1],[1,18964842,1.120205,1],[1,17288392,3.14578,1],[1,18964842,1.212276,1],[1,18964842,1.304348,1],[1,18964842,1.396419,1],[1,17078836,2.746803,1],[1,17288392,3.176471,1],[1,17288392,3.268542,1],[1,17078836,2.59335,1],[1,17288392,3.329923,1],[1,17917061,4.526854,1],[1,17917061,4.434783,1],[1,17078836,0.567775,1],[1,17288392,3.882353,1],[1,17917061,4.373402,1],[1,15821498,2.746803,1],[1,15821498,4.31202,1],[1,15821498,2.685422,1],[1,18755286,4.404092,1],[1,15821498,2.654731,1],[1,16240611,2.808184,1],[1,16450167,0.352941,1],[1,15821498,2.59335,1],[1,17288392,4.127877,1],[1,17288392,4.158568,1],[1,16240611,2.838875,1],[1,16450167,0.414322,1],[1,19383955,5.232737,1],[1,16450167,1.42711,1],[1,18964842,1.580563,1],[1,16869279,3.606138,1],[1,18336173,3.606138,1],[1,18126617,5.294118,1],[1,17078836,1.335038,1],[1,17078836,1.304348,1],[1,17288392,3.636829,1],[1,17078836,1.181586,1],[1,16450167,5.693095,1],[1,15821498,3.11509,1],[1,16659723,2.225064,1],[1,17078836,1.150895,1],[1,17078836,1.120205,1],[1,16869279,3.790281,1],[1,18545730,5.294118,1],[1,18126617,5.324808,1],[1,15611942,6.092072,1],[1,18545730,5.355499,1],[1,18755286,3.667519,1],[1,17078836,0.84399,1],[1,15821498,2.992327,1],[1,16450167,5.508951,1],[1,17078836,0.629156,1],[1,16450167,2.470588,1],[1,17707504,2.59335,1],[1,18126617,0.537084,1],[1,16450167,2.409207,1],[1,17078836,4.895141,1],[1,18545730,2.194373,1],[1,18126617,0.813299,1],[1,16450167,2.378517,1],[1,18545730,2.225064,1],[1,18545730,2.255754,1],[1,17707504,2.808184,1],[1,17917061,2.470588,1],[1,18126617,1.304348,1],[1,18126617,1.42711,1],[1,18545730,2.317136,1],[1,17497948,2.470588,1],[1,18126617,1.734015,1],[1,17497948,4.496164,1],[1,18126617,1.948849,1],[1,18126617,1.97954,1],[1,18336173,7.933504,1],[1,17707504,2.132992,1],[1,17497948,3.514066,1],[1,17497948,3.544757,1],[1,17497948,2.255754,1],[1,17497948,2.286445,1],[1,17497948,2.317136,1],[1,17497948,3.636829,1],[1,17707504,2.286445,1],[1,17497948,3.667519,1],[1,19383955,6.368286,1],[1,17078836,5.079284,1],[1,17707504,2.317136,1],[1,17707504,2.347826,1],[1,18336173,3.299233,1],[1,17497948,2.347826,1],[1,18545730,2.040921,1],[1,17497948,3.851662,1],[1,17497948,3.882353,1],[1,17497948,3.913043,1],[1,17707504,2.531969,1],[1,16869279,1.856777,1],[1,16869279,1.887468,1],[1,17288392,1.764706,1],[1,17078836,4.618926,1],[1,16869279,1.948849,1],[1,18126617,2.378517,1],[1,16659723,6.767263,1],[1,17707504,2.992327,1],[1,16869279,2.071611,1],[1,16869279,2.163683,1],[1,17288392,1.672634,1],[1,16869279,2.225064,1],[1,16869279,2.286445,1],[1,17288392,1.611253,1],[1,16869279,2.317136,1],[1,16869279,2.347826,1],[1,17497948,2.716113,1],[1,18545730,2.961637,1],[1,16659723,6.368286,1],[1,17078836,8.148338,1],[1,17497948,2.531969,1],[1,17917061,2.869565,1],[1,18126617,2.040921,1],[1,17288392,2.040921,1],[1,18126617,2.102302,1],[1,19383955,5.508951,1],[1,17288392,2.01023,1],[1,18545730,2.59335,1],[1,18545730,2.624041,1],[1,17288392,1.97954,1],[1,16869279,0.567775,1],[1,17288392,1.856777,1],[1,18545730,2.716113,1],[1,16869279,0.936061,1],[1,16869279,1.120205,1],[1,16869279,1.181586,1],[1,17288392,1.795396,1],[1,16869279,1.365729,1],[1,16869279,1.457801,1],[1,16869279,1.641944,1],[1,18545730,2.746803,1],[1,17497948,1.549872,1],[1,17497948,1.457801,1],[1,16450167,3.452685,1],[1,16450167,3.483376,1],[1,18755286,1.734015,1],[1,17497948,1.396419,1],[1,16450167,6.368286,1],[1,17497948,1.826087,1],[1,18755286,1.580563,1],[1,17497948,1.273657,1],[1,19174398,2.838875,1],[1,19174398,2.071611,1],[1,18755286,1.488491,1],[1,17497948,1.089514,1],[1,17497948,1.028133,1],[1,17707504,1.212276,1],[1,19174398,2.040921,1],[1,18755286,1.273657,1],[1,17497948,0.905371,1],[1,17497948,1.887468,1],[1,16450167,2.961637,1],[1,17497948,1.795396,1],[1,17917061,2.746803,1],[1,19174398,2.654731,1],[1,16450167,3.084399,1],[1,19174398,2.624041,1],[1,18755286,2.071611,1],[1,18755286,2.040921,1],[1,15821498,6.030691,1],[1,18755286,1.97954,1],[1,19174398,2.808184,1],[1,18755286,1.918159,1],[1,16450167,3.207161,1],[1,19174398,2.439898,1],[1,16450167,3.237852,1],[1,16450167,6.675192,1],[1,16450167,3.268542,1],[1,18755286,1.887468,1],[1,17497948,1.672634,1],[1,16450167,3.391304,1],[1,19174398,2.255754,1],[1,16450167,5.877238,1],[1,19174398,2.961637,1],[1,19174398,2.992327,1],[1,19383955,4.803069,1],[1,16031054,2.01023,1],[1,16031054,1.97954,1],[1,17497948,3.391304,1],[1,17707504,1.703325,1],[1,17707504,1.764706,1],[1,18545730,6.675192,1],[1,18755286,2.132992,1],[1,17497948,3.421995,1],[1,17497948,2.132992,1],[1,16450167,2.808184,1],[1,16031054,1.519182,1],[1,17707504,2.040921,1],[1,17917061,2.777494,1],[1,17497948,2.225064,1],[1,16031054,1.089514,1],[1,17497948,3.176471,1],[1,18755286,0.905371,1],[1,19383955,3.053708,1],[1,19383955,4.588235,1],[1,17497948,1.918159,1],[1,16450167,4.005115,1],[1,16450167,4.035806,1],[1,19383955,3.14578,1],[1,16031054,2.501279,1],[1,16031054,2.470588,1],[1,16031054,2.409207,1],[1,19383955,3.176471,1],[1,16031054,2.347826,1],[1,16031054,2.317136,1],[1,19174398,1.887468,1],[1,19383955,3.207161,1],[1,17707504,1.519182,1],[1,16031054,2.225064,1],[1,16031054,2.194373,1],[1,17707504,1.580563,1],[1,19174398,1.826087,1],[1,17707504,1.611253,1],[1,17917061,1.42711,1],[1,17917061,1.488491,1],[1,17917061,1.611253,1],[1,17707504,4.741688,1],[1,18964842,3.882353,1],[1,19383955,5.846547,1],[1,17917061,1.672634,1],[1,18336173,4.404092,1],[1,17917061,1.795396,1],[1,19383955,5.723785,1],[1,18964842,3.759591,1],[1,16659723,0.598465,1],[1,16659723,0.87468,1],[1,16659723,0.997442,1],[1,16659723,1.089514,1],[1,16659723,1.120205,1],[1,16659723,1.150895,1],[1,16659723,1.212276,1],[1,16659723,1.242967,1],[1,16659723,1.273657,1],[1,17707504,4.066496,1],[1,18755286,2.59335,1],[1,18336173,5.355499,1],[1,18964842,5.294118,1],[1,18964842,4.526854,1],[1,17917061,5.938619,1],[1,17917061,3.023018,1],[1,17707504,6.122762,1],[1,17917061,1.028133,1],[1,17917061,1.058824,1],[1,17917061,1.120205,1],[1,17707504,4.404092,1],[1,16450167,0.598465,1],[1,17917061,1.304348,1],[1,18964842,4.250639,1],[1,17707504,4.496164,1],[1,17917061,1.335038,1],[1,17707504,4.557545,1],[1,17917061,1.365729,1],[1,18336173,5.171355,1],[1,17707504,4.618926,1],[1,16240611,1.488491,1],[1,18545730,1.703325,1],[1,18126617,3.606138,1],[1,18545730,1.672634,1],[1,18545730,1.641944,1],[1,18545730,1.611253,1],[1,18126617,3.636829,1],[1,18545730,1.549872,1],[1,17917061,1.97954,1],[1,18964842,3.391304,1],[1,18545730,1.457801,1],[1,18964842,3.360614,1],[1,17917061,2.040921,1],[1,18545730,1.304348,1],[1,18545730,1.242967,1],[1,18545730,1.181586,1],[1,16240611,1.887468,1],[1,18545730,1.089514,1],[1,18545730,0.87468,1],[1,18545730,0.567775,1],[1,16659723,1.304348,1],[1,16659723,1.365729,1],[1,18964842,3.7289,1],[1,18964842,3.69821,1],[1,16659723,1.42711,1],[1,16659723,1.488491,1],[1,16659723,1.519182,1],[1,19383955,6.122762,1],[1,18126617,3.514066,1],[1,17917061,1.826087,1],[1,17917061,1.856777,1],[1,16031054,4.219949,1],[1,18964842,3.544757,1],[1,16659723,1.918159,1],[1,16240611,0.997442,1],[1,16240611,1.365729,1],[1,16659723,2.040921,1],[1,16240611,1.396419,1],[1,18545730,1.764706,1],[1,16659723,2.102302,1],[1,16659723,2.163683,1],[1,16659723,5.693095,1],[1,16031054,3.084399,1],[1,17707504,3.176471,1],[1,17078836,4.434783,1],[1,18545730,3.268542,1],[1,18126617,2.685422,1],[1,18126617,2.716113,1],[1,16659723,5.508951,1],[1,17917061,4.618926,1],[1,17707504,3.237852,1],[1,18126617,2.746803,1],[1,16869279,3.207161,1],[1,16659723,5.44757,1],[1,17288392,1.181586,1],[1,17707504,3.268542,1],[1,16659723,5.355499,1],[1,16659723,5.324808,1],[1,17707504,3.299233,1],[1,18336173,4.772379,1],[1,18126617,2.838875,1],[1,18545730,3.023018,1],[1,18545730,10.173913,1],[1,16869279,2.59335,1],[1,18126617,2.470588,1],[1,18755286,2.255754,1],[1,17917061,4.557545,1],[1,16869279,2.716113,1],[1,16659723,6.092072,1],[1,17288392,5.570332,1],[1,18126617,2.531969,1],[1,18126617,2.59335,1],[1,16869279,2.808184,1],[1,18126617,2.624041,1],[1,16031054,2.992327,1],[1,18545730,3.207161,1],[1,17707504,3.14578,1],[1,16659723,5.815857,1],[1,16659723,5.785166,1],[1,16659723,5.754476,1],[1,16869279,2.930946,1],[1,17288392,1.519182,1],[1,18545730,3.882353,1],[1,17288392,0.414322,1],[1,17917061,5.202046,1],[1,17497948,2.992327,1],[1,18545730,3.974425,1],[1,18336173,5.723785,1],[1,17917061,5.386189,1],[1,18126617,3.237852,1],[1,17707504,3.7289,1],[1,17707504,3.790281,1],[1,16450167,2.255754,1],[1,17497948,3.084399,1],[1,18755286,2.439898,1],[1,16659723,4.803069,1],[1,17707504,3.851662,1],[1,17917061,2.961637,1],[1,18755286,2.501279,1],[1,17917061,2.992327,1],[1,16659723,7.68798,1],[1,17707504,4.035806,1],[1,16659723,5.263427,1],[1,17497948,2.869565,1],[1,17497948,2.900256,1],[1,17917061,4.741688,1],[1,17288392,5.109974,1],[1,18545730,3.575448,1],[1,17288392,0.751918,1],[1,17917061,4.83376,1],[1,16031054,3.360614,1],[1,17917061,4.86445,1],[1,17917061,4.895141,1],[1,18545730,3.636829,1],[1,18336173,6.092072,1],[1,16659723,5.140665,1],[1,17917061,4.987212,1],[1,18336173,4.741688,1],[1,18126617,2.992327,1],[1,17288392,0.537084,1],[1,17288392,0.506394,1],[1,18126617,3.084399,1],[1,17497948,2.961637,1],[1,8277473,3.084399,1],[1,8277473,3.053708,1],[1,8277473,2.961637,1],[1,8277473,2.900256,1],[1,8277473,2.869565,1],[1,8277473,2.777494,1],[1,8277473,2.716113,1],[1,8277473,2.439898,1],[1,8277473,2.409207,1],[1,8277473,2.317136,1],[1,8277473,2.255754,1],[1,8277473,2.225064,1],[1,8277473,2.194373,1],[1,8277473,2.132992,1],[1,8277473,2.102302,1],[1,8277473,2.071611,1],[1,8277473,2.01023,1],[1,8277473,1.948849,1],[1,8277473,1.795396,1],[1,8277473,1.734015,1],[1,8277473,1.703325,1],[1,8277473,1.120205,1],[1,8277473,1.028133,1],[1,19593511,1.181586,1],[1,19593511,1.212276,1],[1,8067916,5.723785,1],[1,8487029,2.470588,1],[1,8487029,2.317136,1],[1,8487029,2.255754,1],[1,8487029,2.194373,1],[1,8487029,2.163683,1],[1,8487029,2.071611,1],[1,8487029,2.01023,1],[1,8487029,1.795396,1],[1,8487029,1.672634,1],[1,8487029,1.611253,1],[1,8487029,1.42711,1],[1,8487029,1.365729,1],[1,8487029,1.335038,1],[1,8487029,1.028133,1],[1,8487029,0.87468,1],[1,8487029,0.567775,1],[1,19593511,1.028133,1],[1,19593511,1.120205,1],[1,8277473,5.508951,1],[1,8277473,4.772379,1],[1,8277473,3.882353,1],[1,8277473,3.790281,1],[1,8277473,3.69821,1],[1,8277473,3.514066,1],[1,8277473,3.360614,1],[1,8277473,3.176471,1],[1,8277473,3.14578,1],[1,7858360,3.7289,1],[1,7858360,3.483376,1],[1,7858360,3.268542,1],[1,7858360,3.11509,1],[1,7858360,2.961637,1],[1,7858360,2.716113,1],[1,7858360,2.685422,1],[1,7858360,2.531969,1],[1,7858360,2.378517,1],[1,7858360,2.317136,1],[1,7858360,2.225064,1],[1,7858360,2.194373,1],[1,7858360,1.887468,1],[1,7858360,1.856777,1],[1,7858360,1.826087,1],[1,7858360,1.734015,1],[1,7858360,1.672634,1],[1,7858360,1.641944,1],[1,7858360,1.580563,1],[1,7858360,1.42711,1],[1,7858360,1.365729,1],[1,7858360,1.335038,1],[1,7858360,1.242967,1],[1,7858360,1.212276,1],[1,7858360,1.120205,1],[1,7858360,0.997442,1],[1,8067916,5.048593,1],[1,8067916,3.391304,1],[1,8067916,3.299233,1],[1,8067916,3.237852,1],[1,8067916,3.176471,1],[1,8067916,3.14578,1],[1,8067916,2.930946,1],[1,8067916,2.777494,1],[1,8067916,2.685422,1],[1,8067916,2.624041,1],[1,8067916,2.409207,1],[1,8067916,2.378517,1],[1,8067916,2.286445,1],[1,8067916,2.102302,1],[1,8067916,1.97954,1],[1,8067916,1.795396,1],[1,8067916,1.703325,1],[1,8067916,1.672634,1],[1,8067916,1.42711,1],[1,8067916,1.365729,1],[1,8067916,0.936061,1],[1,19593511,1.549872,1],[1,19593511,1.611253,1],[1,19593511,1.703325,1],[1,19593511,1.734015,1],[1,7858360,3.820972,1],[1,7858360,3.790281,1],[1,9115698,1.365729,1],[1,9115698,1.150895,1],[1,9115698,1.028133,1],[1,9115698,0.936061,1],[1,8906141,4.465473,1],[1,8906141,3.943734,1],[1,8906141,3.790281,1],[1,8906141,3.69821,1],[1,8906141,3.391304,1],[1,8906141,3.268542,1],[1,8906141,3.084399,1],[1,8906141,3.023018,1],[1,8906141,2.900256,1],[1,8906141,2.531969,1],[1,8906141,2.470588,1],[1,8906141,2.286445,1],[1,8906141,2.194373,1],[1,8906141,2.163683,1],[1,8906141,2.01023,1],[1,8906141,1.948849,1],[1,8906141,1.887468,1],[1,8906141,1.856777,1],[1,8906141,1.795396,1],[1,8906141,1.703325,1],[1,8906141,1.672634,1],[1,8906141,1.641944,1],[1,9325254,2.347826,1],[1,9325254,2.317136,1],[1,9325254,1.97954,1],[1,9325254,1.918159,1],[1,9325254,1.856777,1],[1,9325254,1.764706,1],[1,9325254,1.703325,1],[1,9325254,1.488491,1],[1,9325254,1.42711,1],[1,9325254,1.212276,1],[1,9325254,0.997442,1],[1,9325254,0.87468,1],[1,9325254,0.751918,1],[1,9325254,0.015345,1],[1,9115698,3.452685,1],[1,9115698,3.299233,1],[1,9115698,2.869565,1],[1,9115698,2.685422,1],[1,9115698,2.255754,1],[1,9115698,2.132992,1],[1,9115698,1.97954,1],[1,9115698,1.918159,1],[1,9115698,1.856777,1],[1,9115698,1.703325,1],[1,9115698,1.519182,1],[1,9115698,1.42711,1],[1,9115698,1.396419,1],[1,8696585,1.703325,1],[1,8696585,1.519182,1],[1,8696585,1.488491,1],[1,8696585,0.905371,1],[1,8696585,0.87468,1],[1,8696585,0.537084,1],[1,8487029,6.55243,1],[1,8487029,4.987212,1],[1,8487029,4.649616,1],[1,8487029,4.557545,1],[1,8487029,4.465473,1],[1,8487029,4.31202,1],[1,8487029,4.189258,1],[1,8487029,4.158568,1],[1,8487029,4.035806,1],[1,8487029,3.882353,1],[1,8487029,3.851662,1],[1,8487029,3.575448,1],[1,8487029,3.544757,1],[1,8487029,3.452685,1],[1,8487029,3.237852,1],[1,8487029,3.207161,1],[1,8487029,3.176471,1],[1,8487029,2.961637,1],[1,8487029,2.716113,1],[1,8487029,2.685422,1],[1,8487029,2.531969,1],[1,8906141,1.549872,1],[1,8906141,1.488491,1],[1,8906141,1.457801,1],[1,8906141,1.365729,1],[1,8696585,4.28133,1],[1,8696585,3.69821,1],[1,8696585,3.452685,1],[1,8696585,3.391304,1],[1,8696585,3.299233,1],[1,8696585,2.961637,1],[1,8696585,2.777494,1],[1,8696585,2.746803,1],[1,8696585,2.685422,1],[1,8696585,2.654731,1],[1,8696585,2.59335,1],[1,8696585,2.439898,1],[1,8696585,2.378517,1],[1,8696585,2.347826,1],[1,8696585,2.255754,1],[1,8696585,2.194373,1],[1,8696585,2.163683,1],[1,8696585,2.071611,1],[1,8696585,2.040921,1],[1,8696585,1.97954,1],[1,8696585,1.887468,1],[1,8696585,1.764706,1],[1,8696585,1.734015,1],[1,6810579,3.11509,1],[1,6810579,3.053708,1],[1,6810579,2.869565,1],[1,6810579,2.716113,1],[1,6810579,2.624041,1],[1,6810579,2.501279,1],[1,6810579,2.439898,1],[1,6810579,2.286445,1],[1,6810579,2.255754,1],[1,6810579,2.225064,1],[1,6810579,2.102302,1],[1,6810579,2.071611,1],[1,6810579,1.703325,1],[1,6810579,1.580563,1],[1,6810579,1.457801,1],[1,6810579,1.396419,1],[1,6810579,1.242967,1],[1,6810579,1.150895,1],[1,6601022,4.496164,1],[1,6601022,3.820972,1],[1,6601022,3.391304,1],[1,6601022,3.023018,1],[1,6601022,2.59335,1],[1,6601022,2.317136,1],[1,6601022,2.286445,1],[1,6601022,1.734015,1],[1,7229691,1.028133,1],[1,7229691,0.936061,1],[1,7020135,3.299233,1],[1,7020135,3.237852,1],[1,7020135,3.14578,1],[1,7020135,2.961637,1],[1,7020135,2.777494,1],[1,7020135,2.470588,1],[1,7020135,2.409207,1],[1,7020135,2.378517,1],[1,7020135,2.317136,1],[1,7020135,2.225064,1],[1,7020135,2.102302,1],[1,7020135,2.071611,1],[1,7020135,1.918159,1],[1,7020135,1.795396,1],[1,7020135,1.734015,1],[1,7020135,1.580563,1],[1,7020135,1.519182,1],[1,7020135,1.488491,1],[1,7020135,1.457801,1],[1,7020135,1.242967,1],[1,7020135,0.87468,1],[1,7020135,0.598465,1],[1,6810579,3.820972,1],[1,6810579,3.575448,1],[1,6810579,3.14578,1],[1,6391466,1.181586,1],[1,6391466,1.089514,1],[1,6391466,0.84399,1],[1,19593511,4.31202,1],[1,6181910,2.56266,1],[1,6181910,2.286445,1],[1,6181910,2.194373,1],[1,6181910,2.163683,1],[1,6181910,2.071611,1],[1,6181910,1.734015,1],[1,6181910,1.672634,1],[1,6181910,1.457801,1],[1,6181910,1.396419,1],[1,6181910,1.304348,1],[1,6181910,1.212276,1],[1,6181910,1.028133,1],[1,19593511,4.342711,1],[1,6181910,0.813299,1],[1,5972354,2.869565,1],[1,5972354,2.470588,1],[1,5972354,2.409207,1],[1,5972354,2.163683,1],[1,5972354,2.132992,1],[1,5972354,2.102302,1],[1,5972354,1.97954,1],[1,5972354,1.948849,1],[1,6601022,1.611253,1],[1,6601022,1.519182,1],[1,6601022,1.457801,1],[1,6601022,1.396419,1],[1,6601022,1.335038,1],[1,6601022,1.212276,1],[1,6601022,1.181586,1],[1,6601022,1.150895,1],[1,6601022,1.089514,1],[1,6601022,0.87468,1],[1,6601022,0.813299,1],[1,6601022,0.721228,1],[1,6601022,0.629156,1],[1,19593511,4.189258,1],[1,6391466,2.992327,1],[1,6391466,2.869565,1],[1,6391466,2.56266,1],[1,6391466,2.378517,1],[1,6391466,2.317136,1],[1,6391466,2.225064,1],[1,6391466,2.194373,1],[1,6391466,2.040921,1],[1,6391466,1.948849,1],[1,6391466,1.918159,1],[1,6391466,1.887468,1],[1,6391466,1.795396,1],[1,6391466,1.672634,1],[1,7648804,0.659847,1],[1,19593511,2.378517,1],[1,19593511,2.409207,1],[1,19593511,2.531969,1],[1,19593511,2.56266,1],[1,7439247,7.534527,1],[1,7439247,6.337596,1],[1,7439247,6.245524,1],[1,7439247,5.785166,1],[1,7439247,5.754476,1],[1,7439247,5.508951,1],[1,7439247,5.294118,1],[1,7439247,5.263427,1],[1,7439247,5.202046,1],[1,7439247,5.140665,1],[1,7439247,4.895141,1],[1,7439247,4.86445,1],[1,7439247,4.772379,1],[1,7439247,4.710997,1],[1,7439247,4.680307,1],[1,7439247,4.404092,1],[1,7439247,4.342711,1],[1,7439247,4.158568,1],[1,7439247,4.035806,1],[1,7439247,3.974425,1],[1,7439247,3.943734,1],[1,7858360,0.966752,1],[1,19593511,2.071611,1],[1,19593511,2.194373,1],[1,19593511,2.225064,1],[1,7648804,3.667519,1],[1,7648804,3.636829,1],[1,7648804,3.452685,1],[1,7648804,3.268542,1],[1,7648804,2.808184,1],[1,7648804,2.716113,1],[1,7648804,2.531969,1],[1,7648804,2.378517,1],[1,7648804,2.347826,1],[1,7648804,2.286445,1],[1,7648804,2.163683,1],[1,7648804,2.132992,1],[1,7648804,2.071611,1],[1,7648804,2.01023,1],[1,7648804,1.918159,1],[1,7648804,1.887468,1],[1,7648804,1.795396,1],[1,7648804,1.734015,1],[1,7648804,1.703325,1],[1,7648804,1.42711,1],[1,7648804,1.365729,1],[1,7648804,1.242967,1],[1,7648804,1.181586,1],[1,7229691,4.772379,1],[1,7229691,4.158568,1],[1,7229691,4.127877,1],[1,7229691,3.913043,1],[1,7229691,3.882353,1],[1,7229691,3.69821,1],[1,7229691,3.575448,1],[1,7229691,3.360614,1],[1,7229691,3.268542,1],[1,7229691,3.053708,1],[1,7229691,2.838875,1],[1,7229691,2.808184,1],[1,7229691,2.746803,1],[1,7229691,2.716113,1],[1,7229691,2.654731,1],[1,7229691,2.56266,1],[1,7229691,2.531969,1],[1,7229691,2.439898,1],[1,7229691,2.409207,1],[1,7229691,2.286445,1],[1,7229691,2.255754,1],[1,7229691,2.01023,1],[1,7229691,1.856777,1],[1,7229691,1.826087,1],[1,7229691,1.764706,1],[1,7229691,1.611253,1],[1,7229691,1.488491,1],[1,7439247,3.851662,1],[1,7439247,3.790281,1],[1,7439247,3.69821,1],[1,7439247,3.667519,1],[1,7439247,3.575448,1],[1,7439247,3.483376,1],[1,7439247,3.176471,1],[1,7439247,3.053708,1],[1,7439247,2.777494,1],[1,7439247,2.716113,1],[1,7439247,2.685422,1],[1,7439247,2.654731,1],[1,7439247,2.624041,1],[1,7439247,2.56266,1],[1,7439247,2.470588,1],[1,7439247,2.439898,1],[1,7439247,2.378517,1],[1,7439247,2.286445,1],[1,7439247,2.255754,1],[1,7439247,2.225064,1],[1,7439247,2.194373,1],[1,7439247,2.040921,1],[1,7439247,1.918159,1],[1,7439247,1.764706,1],[1,7439247,1.703325,1],[1,19593511,2.716113,1],[1,19593511,2.777494,1],[1,11001704,1.918159,1],[1,11001704,1.734015,1],[1,11001704,1.703325,1],[1,11001704,1.672634,1],[1,11001704,1.457801,1],[1,11001704,1.242967,1],[1,11001704,1.181586,1],[1,11001704,1.120205,1],[1,11001704,1.089514,1],[1,11001704,0.751918,1],[1,10792148,4.588235,1],[1,10792148,4.496164,1],[1,10792148,4.250639,1],[1,10792148,3.974425,1],[1,10792148,3.851662,1],[1,10792148,3.69821,1],[1,10792148,3.667519,1],[1,10792148,3.544757,1],[1,10792148,3.360614,1],[1,10792148,3.299233,1],[1,10792148,3.14578,1],[1,10792148,3.11509,1],[1,10792148,3.084399,1],[1,10792148,3.053708,1],[1,10792148,3.023018,1],[1,10792148,2.961637,1],[1,11211260,2.409207,1],[1,11211260,2.378517,1],[1,11211260,2.102302,1],[1,11211260,1.764706,1],[1,11211260,1.734015,1],[1,11211260,1.641944,1],[1,11211260,1.611253,1],[1,11211260,1.488491,1],[1,11211260,1.089514,1],[1,11211260,0.997442,1],[1,11211260,0.966752,1],[1,11001704,4.588235,1],[1,11001704,4.496164,1],[1,11001704,3.636829,1],[1,11001704,3.514066,1],[1,11001704,3.452685,1],[1,11001704,3.11509,1],[1,11001704,2.808184,1],[1,11001704,2.624041,1],[1,11001704,2.56266,1],[1,11001704,2.501279,1],[1,11001704,2.286445,1],[1,11001704,2.225064,1],[1,11001704,2.163683,1],[1,11001704,2.071611,1],[1,11001704,1.97954,1],[1,11001704,1.948849,1],[1,10582591,2.685422,1],[1,10582591,2.654731,1],[1,10582591,2.470588,1],[1,10582591,2.409207,1],[1,10582591,2.347826,1],[1,10582591,2.255754,1],[1,10582591,2.102302,1],[1,10582591,2.040921,1],[1,10582591,1.97954,1],[1,10582591,1.948849,1],[1,10582591,1.856777,1],[1,10582591,1.611253,1],[1,10582591,1.519182,1],[1,10582591,1.488491,1],[1,10582591,1.365729,1],[1,10582591,1.335038,1],[1,10582591,1.304348,1],[1,10582591,1.089514,1],[1,10582591,1.028133,1],[1,10582591,0.936061,1],[1,10373035,5.601023,1],[1,10373035,5.386189,1],[1,10373035,3.820972,1],[1,10373035,3.575448,1],[1,10373035,3.237852,1],[1,10373035,3.11509,1],[1,10792148,2.900256,1],[1,10792148,2.838875,1],[1,10792148,2.746803,1],[1,10792148,2.624041,1],[1,10792148,2.470588,1],[1,10792148,2.439898,1],[1,10792148,2.409207,1],[1,10792148,2.378517,1],[1,10792148,2.347826,1],[1,10792148,2.317136,1],[1,10792148,2.255754,1],[1,10792148,2.194373,1],[1,10792148,2.102302,1],[1,10792148,1.887468,1],[1,10792148,1.734015,1],[1,10792148,1.150895,1],[1,10792148,1.058824,1],[1,10792148,0.659847,1],[1,10582591,6.491049,1],[1,10582591,6.460358,1],[1,10582591,4.465473,1],[1,10582591,3.974425,1],[1,10582591,3.391304,1],[1,10582591,3.11509,1],[1,10582591,2.838875,1],[1,10582591,2.777494,1],[1,10582591,2.746803,1],[1,12049485,0.782609,1],[1,12049485,0.506394,1],[1,11839929,3.391304,1],[1,11839929,3.360614,1],[1,11839929,2.716113,1],[1,11839929,2.685422,1],[1,11839929,2.225064,1],[1,11839929,2.102302,1],[1,11839929,2.071611,1],[1,11839929,1.856777,1],[1,11839929,1.764706,1],[1,11839929,1.703325,1],[1,11839929,1.641944,1],[1,11839929,1.549872,1],[1,11839929,1.304348,1],[1,11839929,1.273657,1],[1,11839929,1.242967,1],[1,11839929,1.181586,1],[1,11839929,1.028133,1],[1,11630373,5.263427,1],[1,11630373,3.974425,1],[1,11630373,3.421995,1],[1,11630373,3.360614,1],[1,11630373,3.237852,1],[1,11630373,3.084399,1],[1,11630373,2.869565,1],[1,12259042,0.87468,1],[1,12259042,0.84399,1],[1,12259042,0.506394,1],[1,12259042,0.199488,1],[1,12049485,3.023018,1],[1,12049485,2.900256,1],[1,12049485,2.869565,1],[1,12049485,2.59335,1],[1,12049485,2.56266,1],[1,12049485,2.501279,1],[1,12049485,2.439898,1],[1,12049485,2.378517,1],[1,12049485,2.225064,1],[1,12049485,1.97954,1],[1,12049485,1.856777,1],[1,12049485,1.764706,1],[1,12049485,1.549872,1],[1,12049485,1.365729,1],[1,12049485,1.335038,1],[1,12049485,1.304348,1],[1,12049485,1.242967,1],[1,12049485,1.212276,1],[1,12049485,1.150895,1],[1,12049485,1.120205,1],[1,12049485,1.028133,1],[1,12049485,0.966752,1],[1,12049485,0.936061,1],[1,11420816,2.040921,1],[1,11420816,1.948849,1],[1,11420816,1.918159,1],[1,11420816,1.887468,1],[1,11420816,1.672634,1],[1,11420816,1.611253,1],[1,11420816,1.519182,1],[1,11420816,1.365729,1],[1,11420816,1.304348,1],[1,11420816,1.212276,1],[1,11420816,1.150895,1],[1,11420816,0.936061,1],[1,11420816,0.721228,1],[1,11211260,4.710997,1],[1,11211260,4.31202,1],[1,11211260,4.219949,1],[1,11211260,3.667519,1],[1,11211260,3.606138,1],[1,11211260,3.421995,1],[1,11211260,3.391304,1],[1,11211260,3.176471,1],[1,11211260,3.023018,1],[1,11211260,2.961637,1],[1,11211260,2.900256,1],[1,11211260,2.838875,1],[1,11211260,2.59335,1],[1,11211260,2.56266,1],[1,11630373,2.746803,1],[1,11630373,2.624041,1],[1,11630373,2.439898,1],[1,11630373,2.225064,1],[1,11630373,2.163683,1],[1,11630373,2.132992,1],[1,11630373,1.918159,1],[1,11630373,1.887468,1],[1,11630373,1.734015,1],[1,11630373,1.641944,1],[1,11630373,1.549872,1],[1,11630373,1.304348,1],[1,11630373,1.120205,1],[1,11420816,5.662404,1],[1,11420816,3.820972,1],[1,11420816,3.299233,1],[1,11420816,3.268542,1],[1,11420816,3.176471,1],[1,11420816,3.14578,1],[1,11420816,3.11509,1],[1,11420816,3.053708,1],[1,11420816,2.900256,1],[1,11420816,2.716113,1],[1,11420816,2.470588,1],[1,11420816,2.317136,1],[1,11420816,2.255754,1],[1,11420816,2.163683,1],[1,9534810,3.790281,1],[1,9534810,3.759591,1],[1,9534810,3.544757,1],[1,9534810,3.514066,1],[1,9534810,3.483376,1],[1,9534810,3.421995,1],[1,9534810,3.391304,1],[1,9534810,3.329923,1],[1,9534810,3.268542,1],[1,9534810,3.14578,1],[1,9534810,2.869565,1],[1,9534810,2.808184,1],[1,9534810,2.624041,1],[1,9534810,2.59335,1],[1,9534810,2.56266,1],[1,9534810,2.470588,1],[1,9534810,2.317136,1],[1,9534810,2.194373,1],[1,9534810,2.163683,1],[1,9534810,2.132992,1],[1,9534810,2.102302,1],[1,9534810,2.071611,1],[1,9534810,1.856777,1],[1,9534810,1.672634,1],[1,9534810,1.519182,1],[1,9534810,1.457801,1],[1,9744366,1.335038,1],[1,9744366,1.212276,1],[1,9744366,1.120205,1],[1,9744366,1.028133,1],[1,9744366,0.997442,1],[1,9744366,0.690537,1],[1,9744366,0.659847,1],[1,9744366,0.598465,1],[1,9744366,0.506394,1],[1,9744366,0.383632,1],[1,9744366,0.29156,1],[1,9744366,0.199488,1],[1,9534810,10.112532,1],[1,9534810,8.363171,1],[1,9534810,7.381074,1],[1,9534810,6.859335,1],[1,9534810,6.675192,1],[1,9534810,6.122762,1],[1,9534810,5.969309,1],[1,9534810,5.355499,1],[1,9534810,5.294118,1],[1,9534810,5.109974,1],[1,9534810,4.772379,1],[1,9534810,4.28133,1],[1,9534810,4.189258,1],[1,9534810,4.127877,1],[1,9534810,3.974425,1],[1,9325254,4.465473,1],[1,9325254,4.342711,1],[1,9325254,4.127877,1],[1,9325254,4.005115,1],[1,9325254,3.943734,1],[1,9325254,3.913043,1],[1,9325254,3.882353,1],[1,9325254,3.820972,1],[1,9325254,3.759591,1],[1,9325254,3.69821,1],[1,9325254,3.636829,1],[1,9325254,3.514066,1],[1,9325254,3.452685,1],[1,9325254,3.360614,1],[1,9325254,3.329923,1],[1,9325254,3.299233,1],[1,9325254,3.084399,1],[1,9325254,3.053708,1],[1,9325254,2.961637,1],[1,9325254,2.930946,1],[1,9325254,2.808184,1],[1,9325254,2.777494,1],[1,9325254,2.624041,1],[1,9325254,2.501279,1],[1,9325254,2.439898,1],[1,9325254,2.409207,1],[1,9534810,1.058824,1],[1,9534810,0.997442,1],[1,9534810,0.966752,1],[1,9534810,0.936061,1],[1,9534810,0.813299,1],[1,9534810,0.751918,1],[1,9534810,0.230179,1],[1,9325254,9.375959,1],[1,9325254,9.283887,1],[1,9325254,8.915601,1],[1,9325254,8.056266,1],[1,9325254,7.473146,1],[1,9325254,7.442455,1],[1,9325254,6.491049,1],[1,9325254,6.337596,1],[1,9325254,6.306905,1],[1,9325254,6.122762,1],[1,9325254,6,1],[1,9325254,5.938619,1],[1,9325254,5.785166,1],[1,9325254,5.723785,1],[1,9325254,5.693095,1],[1,9325254,5.508951,1],[1,9325254,5.355499,1],[1,9325254,4.895141,1],[1,9325254,4.710997,1],[1,9325254,4.526854,1],[1,10163479,1.519182,1],[1,10163479,1.457801,1],[1,10163479,1.212276,1],[1,10163479,1.058824,1],[1,10163479,0.997442,1],[1,10163479,0.966752,1],[1,10163479,0.936061,1],[1,10163479,0.506394,1],[1,9953923,5.202046,1],[1,9953923,4.895141,1],[1,9953923,4.618926,1],[1,9953923,3.974425,1],[1,9953923,3.943734,1],[1,9953923,3.913043,1],[1,9953923,3.790281,1],[1,9953923,3.207161,1],[1,9953923,2.992327,1],[1,9953923,2.961637,1],[1,9953923,2.777494,1],[1,9953923,2.746803,1],[1,9953923,2.685422,1],[1,9953923,2.624041,1],[1,9953923,2.317136,1],[1,9953923,2.194373,1],[1,9953923,2.132992,1],[1,9953923,2.102302,1],[1,10373035,2.808184,1],[1,10373035,2.654731,1],[1,10373035,2.317136,1],[1,10373035,2.194373,1],[1,10373035,2.040921,1],[1,10373035,1.97954,1],[1,10373035,1.918159,1],[1,10373035,1.887468,1],[1,10373035,1.826087,1],[1,10373035,1.764706,1],[1,10373035,1.703325,1],[1,10373035,1.672634,1],[1,10373035,1.365729,1],[1,10163479,4.618926,1],[1,10163479,3.544757,1],[1,10163479,3.514066,1],[1,10163479,3.421995,1],[1,10163479,2.777494,1],[1,10163479,2.624041,1],[1,10163479,2.409207,1],[1,10163479,2.225064,1],[1,10163479,2.040921,1],[1,10163479,1.887468,1],[1,10163479,1.764706,1],[1,10163479,1.734015,1],[1,10163479,1.703325,1],[1,10163479,1.611253,1],[1,9744366,3.544757,1],[1,9744366,3.268542,1],[1,9744366,3.11509,1],[1,9744366,3.023018,1],[1,9744366,2.900256,1],[1,9744366,2.869565,1],[1,9744366,2.838875,1],[1,9744366,2.808184,1],[1,9744366,2.654731,1],[1,9744366,2.56266,1],[1,9744366,2.531969,1],[1,9744366,2.501279,1],[1,9744366,2.378517,1],[1,9744366,2.347826,1],[1,9744366,2.225064,1],[1,9744366,2.194373,1],[1,9744366,2.071611,1],[1,9744366,2.01023,1],[1,9744366,1.918159,1],[1,9744366,1.887468,1],[1,9744366,1.826087,1],[1,9744366,1.795396,1],[1,9744366,1.764706,1],[1,9744366,1.549872,1],[1,9744366,1.488491,1],[1,9744366,1.396419,1],[1,9744366,1.365729,1],[1,9953923,2.071611,1],[1,9953923,1.887468,1],[1,9953923,1.795396,1],[1,9953923,1.764706,1],[1,9953923,1.703325,1],[1,9953923,1.672634,1],[1,9953923,1.611253,1],[1,9953923,1.549872,1],[1,9953923,1.335038,1],[1,9953923,1.242967,1],[1,9953923,1.212276,1],[1,9953923,1.181586,1],[1,9953923,1.120205,1],[1,9953923,1.058824,1],[1,9953923,0.997442,1],[1,9953923,0.813299,1],[1,9953923,0.629156,1],[1,9953923,0.383632,1],[1,9744366,9.40665,1],[1,9744366,7.841432,1],[1,9744366,5.355499,1],[1,9744366,5.171355,1],[1,9744366,4.772379,1],[1,9744366,4.342711,1],[1,9744366,3.820972,1],[1,9744366,3.667519,1],[1,9744366,3.575448,1],[1,2409897,1.672634,1],[1,2409897,1.365729,1],[1,2409897,1.242967,1],[1,2409897,1.181586,1],[1,2409897,1.120205,1],[1,2409897,0.936061,1],[1,2409897,0.813299,1],[1,2409897,0.598465,1],[1,2200341,7.043478,1],[1,2200341,6.030691,1],[1,2200341,5.232737,1],[1,2200341,5.171355,1],[1,2200341,4.895141,1],[1,2200341,4.741688,1],[1,2200341,4.710997,1],[1,2200341,4.649616,1],[1,2200341,4.557545,1],[1,2200341,4.526854,1],[1,2200341,4.31202,1],[1,2200341,4.189258,1],[1,2200341,4.158568,1],[1,2200341,4.127877,1],[1,2200341,3.667519,1],[1,2200341,3.452685,1],[1,2200341,3.360614,1],[1,2200341,3.268542,1],[1,2409897,3.69821,1],[1,2409897,3.636829,1],[1,2409897,3.606138,1],[1,2409897,3.514066,1],[1,2409897,3.421995,1],[1,2409897,3.360614,1],[1,2409897,3.084399,1],[1,2409897,3.053708,1],[1,2409897,2.992327,1],[1,2409897,2.930946,1],[1,2409897,2.869565,1],[1,2409897,2.838875,1],[1,2409897,2.808184,1],[1,2409897,2.746803,1],[1,2409897,2.685422,1],[1,2409897,2.59335,1],[1,2409897,2.470588,1],[1,2409897,2.439898,1],[1,2409897,2.378517,1],[1,2409897,2.132992,1],[1,2409897,2.102302,1],[1,2409897,2.040921,1],[1,2409897,1.97954,1],[1,2409897,1.887468,1],[1,2409897,1.856777,1],[1,2409897,1.764706,1],[1,2409897,1.703325,1],[1,1990785,3.636829,1],[1,1990785,3.606138,1],[1,1990785,3.452685,1],[1,1990785,3.421995,1],[1,1990785,3.237852,1],[1,1990785,3.14578,1],[1,1990785,3.11509,1],[1,1990785,3.084399,1],[1,1990785,2.961637,1],[1,1990785,2.930946,1],[1,1990785,2.869565,1],[1,1990785,2.777494,1],[1,1990785,2.746803,1],[1,1990785,2.56266,1],[1,1990785,2.531969,1],[1,1990785,2.409207,1],[1,1990785,2.347826,1],[1,1990785,2.286445,1],[1,1990785,2.255754,1],[1,1990785,2.071611,1],[1,1990785,1.795396,1],[1,1990785,1.703325,1],[1,1990785,1.641944,1],[1,1990785,1.580563,1],[1,1990785,1.519182,1],[1,1990785,1.488491,1],[1,2200341,3.14578,1],[1,2200341,2.961637,1],[1,2200341,2.869565,1],[1,2200341,2.838875,1],[1,2200341,2.808184,1],[1,2200341,2.501279,1],[1,2200341,2.439898,1],[1,2200341,2.378517,1],[1,2200341,2.225064,1],[1,2200341,2.132992,1],[1,2200341,2.071611,1],[1,2200341,1.672634,1],[1,2200341,1.549872,1],[1,2200341,1.365729,1],[1,2200341,1.304348,1],[1,2200341,1.242967,1],[1,2200341,1.212276,1],[1,2200341,1.150895,1],[1,1990785,8.85422,1],[1,1990785,7.104859,1],[1,1990785,6.337596,1],[1,1990785,6.276215,1],[1,1990785,5.693095,1],[1,1990785,5.171355,1],[1,1990785,4.741688,1],[1,1990785,4.588235,1],[1,1990785,4.127877,1],[1,2619453,6.644501,1],[1,2619453,6.276215,1],[1,2619453,6.030691,1],[1,2619453,5.907928,1],[1,2619453,5.815857,1],[1,2619453,5.539642,1],[1,2619453,5.44757,1],[1,2619453,4.772379,1],[1,2619453,4.741688,1],[1,2619453,4.649616,1],[1,2619453,4.526854,1],[1,2619453,4.434783,1],[1,2619453,4.373402,1],[1,2619453,3.943734,1],[1,2619453,3.882353,1],[1,2619453,3.820972,1],[1,2619453,3.790281,1],[1,2619453,3.759591,1],[1,2619453,3.69821,1],[1,2619453,3.667519,1],[1,2619453,3.606138,1],[1,2619453,3.452685,1],[1,2619453,3.237852,1],[1,2619453,3.207161,1],[1,2619453,2.961637,1],[1,2619453,2.930946,1],[1,2829010,3.176471,1],[1,2829010,3.11509,1],[1,2829010,2.992327,1],[1,2829010,2.869565,1],[1,2829010,2.746803,1],[1,2829010,2.59335,1],[1,2829010,2.56266,1],[1,2829010,2.501279,1],[1,2829010,2.347826,1],[1,2829010,2.317136,1],[1,2829010,2.255754,1],[1,2829010,2.225064,1],[1,2829010,1.97954,1],[1,2829010,1.887468,1],[1,2829010,1.856777,1],[1,2829010,1.826087,1],[1,2829010,1.549872,1],[1,2829010,1.519182,1],[1,2829010,1.488491,1],[1,2829010,1.396419,1],[1,2829010,1.365729,1],[1,2829010,1.242967,1],[1,2829010,1.058824,1],[1,2829010,0.629156,1],[1,2829010,0.598465,1],[1,2829010,0.29156,1],[1,2829010,0.107417,1],[1,2619453,0.629156,1],[1,2619453,0.567775,1],[1,2619453,0.046036,1],[1,2409897,8.792839,1],[1,2409897,7.196931,1],[1,2409897,7.104859,1],[1,2409897,6.491049,1],[1,2409897,6.184143,1],[1,2409897,5.846547,1],[1,2409897,5.478261,1],[1,2409897,5.44757,1],[1,2409897,5.232737,1],[1,2409897,5.202046,1],[1,2409897,5.140665,1],[1,2409897,4.987212,1],[1,2409897,4.956522,1],[1,2409897,4.803069,1],[1,2409897,4.772379,1],[1,2409897,4.649616,1],[1,2409897,4.465473,1],[1,2409897,4.404092,1],[1,2409897,4.28133,1],[1,2409897,4.250639,1],[1,2409897,4.158568,1],[1,2409897,4.035806,1],[1,2409897,3.790281,1],[1,2409897,3.7289,1],[1,2619453,2.900256,1],[1,2619453,2.869565,1],[1,2619453,2.808184,1],[1,2619453,2.654731,1],[1,2619453,2.56266,1],[1,2619453,2.409207,1],[1,2619453,2.378517,1],[1,2619453,2.317136,1],[1,2619453,2.286445,1],[1,2619453,2.194373,1],[1,2619453,2.102302,1],[1,2619453,2.01023,1],[1,2619453,1.918159,1],[1,2619453,1.764706,1],[1,2619453,1.703325,1],[1,2619453,1.580563,1],[1,2619453,1.519182,1],[1,2619453,1.488491,1],[1,2619453,1.457801,1],[1,2619453,1.396419,1],[1,2619453,1.304348,1],[1,2619453,1.273657,1],[1,2619453,1.212276,1],[1,2619453,0.966752,1],[1,2619453,0.936061,1],[1,2619453,0.813299,1],[1,2619453,0.751918,1],[1,523891,3.207161,1],[1,523891,3.176471,1],[1,523891,3.14578,1],[1,523891,3.053708,1],[1,523891,2.869565,1],[1,523891,2.777494,1],[1,523891,2.59335,1],[1,523891,2.56266,1],[1,523891,2.470588,1],[1,523891,2.409207,1],[1,523891,2.378517,1],[1,523891,2.347826,1],[1,523891,2.225064,1],[1,523891,2.040921,1],[1,523891,1.918159,1],[1,523891,1.887468,1],[1,523891,1.856777,1],[1,523891,1.703325,1],[1,523891,1.611253,1],[1,523891,1.519182,1],[1,523891,1.457801,1],[1,523891,1.365729,1],[1,523891,0.966752,1],[1,523891,0.936061,1],[1,523891,0.352941,1],[1,314334,4.895141,1],[1,943003,2.040921,1],[1,943003,1.948849,1],[1,943003,1.918159,1],[1,943003,1.856777,1],[1,943003,1.826087,1],[1,943003,1.734015,1],[1,943003,1.549872,1],[1,943003,1.335038,1],[1,943003,1.181586,1],[1,943003,0.751918,1],[1,733447,3.421995,1],[1,733447,3.299233,1],[1,733447,3.053708,1],[1,733447,2.930946,1],[1,733447,2.838875,1],[1,733447,2.808184,1],[1,733447,2.654731,1],[1,733447,2.470588,1],[1,733447,2.409207,1],[1,733447,2.317136,1],[1,733447,1.948849,1],[1,733447,1.856777,1],[1,733447,1.826087,1],[1,733447,1.242967,1],[1,733447,1.181586,1],[1,523891,3.820972,1],[1,523891,3.329923,1],[1,314334,1.764706,1],[1,314334,1.641944,1],[1,314334,1.549872,1],[1,314334,1.488491,1],[1,314334,1.335038,1],[1,314334,1.273657,1],[1,314334,1.150895,1],[1,314334,0.966752,1],[1,104778,4.526854,1],[1,104778,3.299233,1],[1,104778,3.084399,1],[1,104778,2.900256,1],[1,104778,2.56266,1],[1,104778,2.531969,1],[1,104778,2.470588,1],[1,104778,2.439898,1],[1,104778,2.286445,1],[1,104778,2.132992,1],[1,104778,1.948849,1],[1,104778,1.856777,1],[1,104778,1.764706,1],[1,104778,1.703325,1],[1,104778,1.365729,1],[1,104778,1.273657,1],[1,104778,1.181586,1],[1,104778,1.150895,1],[1,314334,4.31202,1],[1,314334,4.219949,1],[1,314334,4.097187,1],[1,314334,4.035806,1],[1,314334,4.005115,1],[1,314334,3.974425,1],[1,314334,3.636829,1],[1,314334,3.483376,1],[1,314334,3.360614,1],[1,314334,3.11509,1],[1,314334,3.023018,1],[1,314334,2.838875,1],[1,314334,2.716113,1],[1,314334,2.685422,1],[1,314334,2.654731,1],[1,314334,2.624041,1],[1,314334,2.531969,1],[1,314334,2.501279,1],[1,314334,2.409207,1],[1,314334,2.378517,1],[1,314334,2.255754,1],[1,314334,2.225064,1],[1,314334,2.194373,1],[1,314334,2.132992,1],[1,314334,1.948849,1],[1,314334,1.887468,1],[1,314334,1.856777,1],[1,1781228,2.040921,1],[1,1781228,1.97954,1],[1,1781228,1.734015,1],[1,1781228,1.641944,1],[1,1781228,1.335038,1],[1,1781228,1.089514,1],[1,1781228,0.751918,1],[1,1571672,4.772379,1],[1,1571672,4.649616,1],[1,1571672,4.465473,1],[1,1571672,4.189258,1],[1,1571672,3.11509,1],[1,1571672,2.777494,1],[1,1571672,2.56266,1],[1,1571672,2.409207,1],[1,1571672,2.378517,1],[1,1571672,2.255754,1],[1,1571672,2.194373,1],[1,1571672,2.01023,1],[1,1571672,1.97954,1],[1,1571672,1.918159,1],[1,1571672,1.887468,1],[1,1571672,1.795396,1],[1,1571672,1.672634,1],[1,1571672,1.580563,1],[1,1571672,1.549872,1],[1,1990785,1.396419,1],[1,1990785,1.365729,1],[1,1990785,1.304348,1],[1,1990785,1.120205,1],[1,1781228,5.41688,1],[1,1781228,5.386189,1],[1,1781228,5.232737,1],[1,1781228,5.079284,1],[1,1781228,4.956522,1],[1,1781228,4.83376,1],[1,1781228,4.772379,1],[1,1781228,4.404092,1],[1,1781228,4.158568,1],[1,1781228,4.097187,1],[1,1781228,3.851662,1],[1,1781228,3.759591,1],[1,1781228,3.7289,1],[1,1781228,3.299233,1],[1,1781228,3.084399,1],[1,1781228,2.900256,1],[1,1781228,2.716113,1],[1,1781228,2.685422,1],[1,1781228,2.59335,1],[1,1781228,2.470588,1],[1,1781228,2.347826,1],[1,1781228,2.286445,1],[1,1781228,2.194373,1],[1,1152559,2.777494,1],[1,1152559,2.685422,1],[1,1152559,2.378517,1],[1,1152559,2.163683,1],[1,1152559,2.132992,1],[1,1152559,2.102302,1],[1,1152559,2.01023,1],[1,1152559,1.918159,1],[1,1152559,1.856777,1],[1,1152559,1.734015,1],[1,1152559,1.549872,1],[1,1152559,1.488491,1],[1,1152559,1.396419,1],[1,1152559,1.365729,1],[1,1152559,1.242967,1],[1,1152559,1.028133,1],[1,943003,3.360614,1],[1,943003,3.14578,1],[1,943003,3.084399,1],[1,943003,3.023018,1],[1,943003,2.808184,1],[1,943003,2.624041,1],[1,943003,2.470588,1],[1,943003,2.255754,1],[1,943003,2.225064,1],[1,943003,2.132992,1],[1,943003,2.071611,1],[1,1571672,1.089514,1],[1,1362116,4.189258,1],[1,1362116,2.961637,1],[1,1362116,2.900256,1],[1,1362116,2.838875,1],[1,1362116,2.777494,1],[1,1362116,2.746803,1],[1,1362116,2.56266,1],[1,1362116,2.439898,1],[1,1362116,2.378517,1],[1,1362116,2.347826,1],[1,1362116,2.317136,1],[1,1362116,2.01023,1],[1,1362116,1.887468,1],[1,1362116,1.519182,1],[1,1362116,1.488491,1],[1,1362116,1.365729,1],[1,1362116,1.273657,1],[1,1362116,1.242967,1],[1,1362116,1.181586,1],[1,1362116,1.058824,1],[1,1362116,0.690537,1],[1,1152559,4.127877,1],[1,1152559,3.882353,1],[1,1152559,3.11509,1],[1,1152559,3.023018,1],[1,1152559,2.961637,1],[1,5134129,4.895141,1],[1,5134129,4.741688,1],[1,5134129,4.710997,1],[1,5134129,4.680307,1],[1,5134129,4.649616,1],[1,5134129,4.557545,1],[1,5134129,4.342711,1],[1,5134129,4.250639,1],[1,5134129,4.189258,1],[1,5134129,4.158568,1],[1,5134129,4.127877,1],[1,5134129,4.066496,1],[1,5134129,3.943734,1],[1,5134129,3.7289,1],[1,5134129,3.636829,1],[1,5134129,3.575448,1],[1,5134129,3.544757,1],[1,5134129,3.514066,1],[1,5134129,3.421995,1],[1,5134129,3.329923,1],[1,5134129,3.207161,1],[1,5134129,3.176471,1],[1,5134129,3.14578,1],[1,5134129,3.11509,1],[1,5134129,3.084399,1],[1,5134129,3.053708,1],[1,5343685,3.483376,1],[1,5343685,3.329923,1],[1,5343685,3.268542,1],[1,5343685,3.207161,1],[1,5343685,3.14578,1],[1,5343685,3.084399,1],[1,5343685,3.023018,1],[1,5343685,2.900256,1],[1,5343685,2.746803,1],[1,5343685,2.716113,1],[1,5343685,1.918159,1],[1,5343685,1.734015,1],[1,5343685,1.580563,1],[1,5343685,1.549872,1],[1,5343685,1.488491,1],[1,5343685,1.150895,1],[1,5343685,1.120205,1],[1,5343685,0.966752,1],[1,5343685,0.445013,1],[1,5343685,0.26087,1],[1,5134129,5.969309,1],[1,5134129,5.815857,1],[1,5134129,5.631714,1],[1,5134129,5.508951,1],[1,5134129,5.44757,1],[1,5134129,5.324808,1],[1,5134129,5.109974,1],[1,4924572,3.514066,1],[1,4924572,3.452685,1],[1,4924572,3.360614,1],[1,4924572,3.207161,1],[1,4924572,3.14578,1],[1,4924572,3.11509,1],[1,4924572,3.053708,1],[1,4924572,2.900256,1],[1,4924572,2.838875,1],[1,4924572,2.624041,1],[1,4924572,2.531969,1],[1,4924572,2.470588,1],[1,4924572,2.439898,1],[1,4924572,2.378517,1],[1,4924572,2.317136,1],[1,4924572,1.948849,1],[1,4924572,1.826087,1],[1,4924572,1.519182,1],[1,4924572,1.42711,1],[1,4924572,1.212276,1],[1,4924572,1.150895,1],[1,4924572,1.028133,1],[1,4715016,4.895141,1],[1,4715016,4.86445,1],[1,4715016,4.710997,1],[1,4715016,3.11509,1],[1,5134129,2.961637,1],[1,5134129,2.869565,1],[1,5134129,2.716113,1],[1,5134129,2.685422,1],[1,5134129,2.654731,1],[1,5134129,2.59335,1],[1,5134129,2.501279,1],[1,5134129,2.317136,1],[1,5134129,2.286445,1],[1,5134129,2.225064,1],[1,5134129,2.132992,1],[1,5134129,2.01023,1],[1,5134129,1.918159,1],[1,5134129,1.887468,1],[1,5134129,1.826087,1],[1,5134129,1.795396,1],[1,5134129,1.549872,1],[1,5134129,1.396419,1],[1,5134129,1.120205,1],[1,5134129,0.782609,1],[1,4924572,5.079284,1],[1,4924572,4.925831,1],[1,4924572,4.83376,1],[1,4924572,4.219949,1],[1,4924572,4.158568,1],[1,4924572,3.943734,1],[1,4924572,3.882353,1],[1,5762797,3.790281,1],[1,5762797,3.606138,1],[1,5762797,3.575448,1],[1,5762797,3.514066,1],[1,5762797,3.329923,1],[1,5762797,3.237852,1],[1,5762797,3.14578,1],[1,5762797,2.992327,1],[1,5762797,2.930946,1],[1,5762797,2.777494,1],[1,5762797,2.716113,1],[1,5762797,2.685422,1],[1,5762797,2.624041,1],[1,5762797,2.470588,1],[1,5762797,2.409207,1],[1,5762797,2.317136,1],[1,5762797,2.286445,1],[1,5762797,2.163683,1],[1,5762797,1.795396,1],[1,5762797,1.703325,1],[1,5762797,1.580563,1],[1,5762797,1.549872,1],[1,5762797,1.519182,1],[1,5762797,1.457801,1],[1,5762797,1.335038,1],[1,5762797,1.120205,1],[1,5972354,1.918159,1],[1,5972354,1.856777,1],[1,5972354,1.826087,1],[1,5972354,1.580563,1],[1,5972354,1.42711,1],[1,5972354,1.396419,1],[1,5972354,1.181586,1],[1,5972354,1.120205,1],[1,5972354,0.782609,1],[1,5762797,8.117647,1],[1,5762797,7.841432,1],[1,5762797,7.565217,1],[1,5762797,7.503836,1],[1,5762797,6.644501,1],[1,5762797,6.613811,1],[1,5762797,6.061381,1],[1,5762797,5.907928,1],[1,5762797,5.539642,1],[1,5762797,5.202046,1],[1,5762797,5.079284,1],[1,5762797,5.048593,1],[1,5762797,4.803069,1],[1,5762797,4.404092,1],[1,5762797,4.219949,1],[1,5762797,4.097187,1],[1,5762797,4.035806,1],[1,5762797,3.974425,1],[1,5553241,3.053708,1],[1,5553241,3.023018,1],[1,5553241,2.930946,1],[1,5553241,2.869565,1],[1,5553241,2.808184,1],[1,5553241,2.716113,1],[1,5553241,2.531969,1],[1,5553241,2.347826,1],[1,5553241,2.040921,1],[1,5553241,1.519182,1],[1,5553241,1.488491,1],[1,5553241,1.335038,1],[1,5553241,1.212276,1],[1,5553241,0.659847,1],[1,5343685,4.86445,1],[1,5343685,4.741688,1],[1,5343685,4.680307,1],[1,5343685,4.557545,1],[1,5343685,4.250639,1],[1,5343685,4.158568,1],[1,5343685,4.127877,1],[1,5343685,4.097187,1],[1,5343685,4.035806,1],[1,5343685,3.7289,1],[1,5343685,3.69821,1],[1,5343685,3.606138,1],[1,5343685,3.575448,1],[1,5762797,1.058824,1],[1,5762797,0.997442,1],[1,5762797,0.659847,1],[1,5553241,5.938619,1],[1,5553241,5.508951,1],[1,5553241,5.44757,1],[1,5553241,5.355499,1],[1,5553241,5.294118,1],[1,5553241,5.232737,1],[1,5553241,5.109974,1],[1,5553241,5.048593,1],[1,5553241,4.741688,1],[1,5553241,4.680307,1],[1,5553241,4.465473,1],[1,5553241,4.434783,1],[1,5553241,4.342711,1],[1,5553241,3.974425,1],[1,5553241,3.851662,1],[1,5553241,3.759591,1],[1,5553241,3.7289,1],[1,5553241,3.544757,1],[1,5553241,3.421995,1],[1,5553241,3.360614,1],[1,5553241,3.329923,1],[1,5553241,3.299233,1],[1,5553241,3.14578,1],[1,5553241,3.084399,1],[1,3457678,0.138107,1],[1,3457678,0.076726,1],[1,3248122,2.930946,1],[1,3248122,2.255754,1],[1,3248122,1.97954,1],[1,3248122,1.672634,1],[1,3248122,1.611253,1],[1,3248122,1.396419,1],[1,3248122,1.242967,1],[1,3248122,1.212276,1],[1,3248122,1.120205,1],[1,3248122,0.997442,1],[1,3248122,0.966752,1],[1,3248122,0.936061,1],[1,3248122,0.905371,1],[1,3248122,0.84399,1],[1,3248122,0.598465,1],[1,3248122,0.383632,1],[1,3248122,0.322251,1],[1,3248122,0.26087,1],[1,3248122,0.230179,1],[1,3248122,0.199488,1],[1,3248122,0.107417,1],[1,3038566,4.956522,1],[1,3038566,4.035806,1],[1,3038566,3.7289,1],[1,3457678,2.56266,1],[1,3457678,2.501279,1],[1,3457678,2.409207,1],[1,3457678,2.102302,1],[1,3457678,2.071611,1],[1,3457678,1.795396,1],[1,3457678,1.734015,1],[1,3457678,1.641944,1],[1,3457678,1.611253,1],[1,3457678,1.549872,1],[1,3457678,1.396419,1],[1,3457678,1.304348,1],[1,3457678,1.273657,1],[1,3457678,1.150895,1],[1,3457678,1.120205,1],[1,3457678,1.028133,1],[1,3457678,0.966752,1],[1,3457678,0.813299,1],[1,3457678,0.782609,1],[1,3457678,0.721228,1],[1,3457678,0.598465,1],[1,3457678,0.506394,1],[1,3457678,0.445013,1],[1,3457678,0.414322,1],[1,3457678,0.29156,1],[1,3457678,0.26087,1],[1,3457678,0.168798,1],[1,2829010,5.263427,1],[1,2829010,5.140665,1],[1,2829010,5.079284,1],[1,2829010,5.017903,1],[1,2829010,4.86445,1],[1,2829010,4.588235,1],[1,2829010,4.557545,1],[1,2829010,4.526854,1],[1,2829010,4.404092,1],[1,2829010,4.189258,1],[1,2829010,4.035806,1],[1,2829010,4.005115,1],[1,2829010,3.974425,1],[1,2829010,3.943734,1],[1,2829010,3.913043,1],[1,2829010,3.759591,1],[1,2829010,3.7289,1],[1,2829010,3.636829,1],[1,2829010,3.606138,1],[1,2829010,3.544757,1],[1,2829010,3.514066,1],[1,2829010,3.483376,1],[1,2829010,3.360614,1],[1,2829010,3.329923,1],[1,2829010,3.299233,1],[1,2829010,3.268542,1],[1,3038566,2.624041,1],[1,3038566,2.531969,1],[1,3038566,2.378517,1],[1,3038566,2.163683,1],[1,3038566,2.102302,1],[1,3038566,2.040921,1],[1,3038566,1.826087,1],[1,3038566,1.795396,1],[1,3038566,1.734015,1],[1,3038566,1.641944,1],[1,3038566,1.457801,1],[1,3038566,1.396419,1],[1,2829010,8.731458,1],[1,2829010,7.71867,1],[1,2829010,7.350384,1],[1,2829010,7.227621,1],[1,2829010,6.460358,1],[1,2829010,6.306905,1],[1,2829010,5.907928,1],[1,2829010,5.662404,1],[1,2829010,5.601023,1],[1,2829010,5.570332,1],[1,2829010,5.508951,1],[1,2829010,5.478261,1],[1,2829010,5.44757,1],[1,2829010,5.41688,1],[1,2829010,5.324808,1],[1,4505460,1.150895,1],[1,4505460,1.120205,1],[1,4505460,0.966752,1],[1,4505460,0.87468,1],[1,4505460,0.84399,1],[1,4295903,3.084399,1],[1,4295903,2.808184,1],[1,4295903,2.378517,1],[1,4295903,2.317136,1],[1,4295903,2.225064,1],[1,4295903,2.102302,1],[1,4295903,1.948849,1],[1,4295903,1.764706,1],[1,4295903,1.734015,1],[1,4295903,1.703325,1],[1,4295903,1.549872,1],[1,4295903,1.519182,1],[1,4295903,1.273657,1],[1,4295903,1.150895,1],[1,4295903,0.84399,1],[1,4086347,3.667519,1],[1,4086347,3.514066,1],[1,4086347,2.470588,1],[1,4086347,2.347826,1],[1,4086347,2.286445,1],[1,4086347,2.225064,1],[1,4715016,2.961637,1],[1,4715016,2.654731,1],[1,4715016,2.501279,1],[1,4715016,2.225064,1],[1,4715016,2.071611,1],[1,4715016,1.948849,1],[1,4715016,1.795396,1],[1,4715016,1.734015,1],[1,4715016,1.672634,1],[1,4715016,1.641944,1],[1,4715016,1.580563,1],[1,4715016,1.549872,1],[1,4715016,1.42711,1],[1,4715016,1.058824,1],[1,4715016,1.028133,1],[1,4505460,3.084399,1],[1,4505460,2.132992,1],[1,4505460,2.071611,1],[1,4505460,1.948849,1],[1,4505460,1.887468,1],[1,4505460,1.856777,1],[1,4505460,1.580563,1],[1,4505460,1.549872,1],[1,4505460,1.365729,1],[1,4505460,1.273657,1],[1,4505460,1.242967,1],[1,4505460,1.181586,1],[1,3667235,3.14578,1],[1,3667235,3.023018,1],[1,3667235,2.900256,1],[1,3667235,2.59335,1],[1,3667235,2.531969,1],[1,3667235,2.347826,1],[1,3667235,2.255754,1],[1,3667235,2.102302,1],[1,3667235,2.040921,1],[1,3667235,1.918159,1],[1,3667235,1.703325,1],[1,3667235,1.611253,1],[1,3667235,1.580563,1],[1,3667235,1.396419,1],[1,3667235,1.304348,1],[1,3667235,1.212276,1],[1,3667235,1.150895,1],[1,3667235,0.997442,1],[1,3667235,0.905371,1],[1,3667235,0.751918,1],[1,3667235,0.721228,1],[1,3667235,0.659847,1],[1,3667235,0.567775,1],[1,3667235,0.475703,1],[1,3667235,0.445013,1],[1,3667235,0.076726,1],[1,3667235,0.015345,1],[1,4086347,2.132992,1],[1,4086347,1.97954,1],[1,4086347,1.918159,1],[1,4086347,1.703325,1],[1,4086347,1.611253,1],[1,4086347,1.335038,1],[1,4086347,0.537084,1],[1,3876791,4.342711,1],[1,3876791,3.329923,1],[1,3876791,3.11509,1],[1,3876791,2.869565,1],[1,3876791,2.746803,1],[1,3876791,2.716113,1],[1,3876791,2.685422,1],[1,3876791,2.56266,1],[1,3876791,2.501279,1],[1,3876791,2.132992,1],[1,3876791,2.071611,1],[1,3876791,1.887468,1],[1,3876791,1.764706,1],[1,3876791,1.580563,1],[1,3876791,1.42711,1],[1,3876791,1.304348,1],[1,3876791,1.181586,1],[1,3876791,0.567775,1],[1,3876791,0.537084,1],[1,3876791,0.475703,1],[1,13097267,5.907928,1],[1,13097267,5.877238,1],[1,14564160,2.746803,1],[1,13516379,5.877238,1],[1,13516379,6.061381,1],[1,15402386,0.84399,1],[1,14564160,2.685422,1],[1,13097267,5.662404,1],[1,13097267,5.631714,1],[1,14564160,2.654731,1],[1,13725935,6.55243,1],[1,14564160,2.624041,1],[1,13097267,5.601023,1],[1,13725935,5.877238,1],[1,14983273,1.97954,1],[1,13725935,5.539642,1],[1,12887710,1.242967,1],[1,13725935,5.41688,1],[1,13097267,5.44757,1],[1,13725935,5.386189,1],[1,13097267,5.079284,1],[1,13725935,5.294118,1],[1,15402386,1.335038,1],[1,15402386,1.304348,1],[1,14564160,3.268542,1],[1,13516379,4.86445,1],[1,12887710,0.905371,1],[1,14983273,1.672634,1],[1,15402386,1.273657,1],[1,15402386,1.242967,1],[1,13516379,4.925831,1],[1,15402386,1.181586,1],[1,12887710,0.997442,1],[1,13516379,5.232737,1],[1,13516379,5.294118,1],[1,13097267,6.675192,1],[1,13516379,5.44757,1],[1,13516379,5.631714,1],[1,15402386,1.028133,1],[1,12887710,1.089514,1],[1,14354604,1.212276,1],[1,13516379,5.693095,1],[1,14564160,2.961637,1],[1,14564160,2.900256,1],[1,12887710,1.150895,1],[1,13097267,3.913043,1],[1,13725935,3.636829,1],[1,13725935,3.514066,1],[1,13725935,3.452685,1],[1,13097267,3.851662,1],[1,13097267,3.790281,1],[1,14354604,1.304348,1],[1,13725935,3.329923,1],[1,13097267,3.7289,1],[1,13725935,3.299233,1],[1,13097267,3.667519,1],[1,14564160,2.286445,1],[1,13097267,3.575448,1],[1,13097267,3.544757,1],[1,12887710,1.396419,1],[1,13097267,3.514066,1],[1,13097267,3.483376,1],[1,14983273,2.01023,1],[1,13097267,3.391304,1],[1,14354604,1.457801,1],[1,14354604,1.519182,1],[1,13097267,3.360614,1],[1,13097267,3.207161,1],[1,13097267,4.925831,1],[1,13725935,5.263427,1],[1,13097267,4.895141,1],[1,13097267,4.526854,1],[1,13725935,5.171355,1],[1,13097267,4.434783,1],[1,13725935,4.925831,1],[1,13097267,4.219949,1],[1,14564160,2.439898,1],[1,12887710,1.273657,1],[1,13725935,4.618926,1],[1,13725935,4.557545,1],[1,15402386,0.383632,1],[1,13725935,4.342711,1],[1,13725935,4.035806,1],[1,13097267,4.097187,1],[1,14564160,2.409207,1],[1,13097267,4.005115,1],[1,13097267,3.974425,1],[1,13725935,3.913043,1],[1,13725935,3.790281,1],[1,13097267,3.943734,1],[1,13725935,3.667519,1],[1,13935492,1.42711,1],[1,15402386,2.163683,1],[1,15402386,2.01023,1],[1,12678154,1.42711,1],[1,12678154,1.457801,1],[1,12678154,1.488491,1],[1,13306823,1.672634,1],[1,13306823,1.488491,1],[1,12678154,1.641944,1],[1,12678154,1.672634,1],[1,12678154,1.764706,1],[1,15402386,1.918159,1],[1,12678154,1.826087,1],[1,13306823,1.42711,1],[1,12678154,1.856777,1],[1,12678154,1.918159,1],[1,12678154,1.948849,1],[1,12678154,1.97954,1],[1,12678154,2.01023,1],[1,13306823,1.396419,1],[1,13306823,1.365729,1],[1,12678154,2.102302,1],[1,12678154,2.194373,1],[1,13935492,1.764706,1],[1,13516379,2.716113,1],[1,13516379,2.777494,1],[1,15402386,2.59335,1],[1,13516379,2.900256,1],[1,12678154,1.242967,1],[1,12678154,1.273657,1],[1,13516379,2.930946,1],[1,13306823,2.378517,1],[1,13306823,2.347826,1],[1,13306823,2.255754,1],[1,15402386,2.56266,1],[1,13516379,3.053708,1],[1,13516379,3.11509,1],[1,15402386,2.531969,1],[1,15402386,2.470588,1],[1,13306823,2.132992,1],[1,12678154,1.396419,1],[1,15402386,2.378517,1],[1,13306823,2.071611,1],[1,15402386,2.317136,1],[1,15402386,2.286445,1],[1,13306823,1.795396,1],[1,13516379,3.790281,1],[1,13516379,3.974425,1],[1,13516379,4.035806,1],[1,13516379,4.066496,1],[1,13516379,4.127877,1],[1,14564160,3.7289,1],[1,14983273,1.488491,1],[1,13097267,7.473146,1],[1,15402386,1.734015,1],[1,13097267,7.16624,1],[1,14983273,1.519182,1],[1,13935492,0.445013,1],[1,14983273,1.549872,1],[1,15402386,1.641944,1],[1,13516379,4.496164,1],[1,13516379,4.557545,1],[1,14564160,3.329923,1],[1,13097267,6.797954,1],[1,15402386,1.519182,1],[1,15402386,1.42711,1],[1,13516379,4.680307,1],[1,13516379,4.710997,1],[1,13516379,4.803069,1],[1,13306823,1.335038,1],[1,13306823,1.181586,1],[1,12678154,2.378517,1],[1,14564160,5.508951,1],[1,13306823,1.120205,1],[1,13306823,1.028133,1],[1,14564160,4.404092,1],[1,13306823,0.936061,1],[1,12678154,2.56266,1],[1,12678154,2.685422,1],[1,12678154,3.452685,1],[1,13306823,0.721228,1],[1,13306823,0.690537,1],[1,13935492,0.84399,1],[1,14983273,1.365729,1],[1,13306823,0.567775,1],[1,13306823,0.537084,1],[1,13516379,3.268542,1],[1,14564160,4.219949,1],[1,13516379,3.575448,1],[1,14983273,1.396419,1],[1,14354604,0.936061,1],[1,13306823,0.230179,1],[1,12887710,4.83376,1],[1,13725935,1.181586,1],[1,14354604,3.514066,1],[1,14354604,3.544757,1],[1,13516379,8.639386,1],[1,14564160,1.150895,1],[1,14354604,3.575448,1],[1,14354604,3.606138,1],[1,14564160,1.089514,1],[1,15192829,0.567775,1],[1,12887710,4.925831,1],[1,14564160,1.028133,1],[1,14564160,0.966752,1],[1,13097267,1.212276,1],[1,14354604,3.7289,1],[1,14354604,3.759591,1],[1,13516379,9.007673,1],[1,14354604,3.943734,1],[1,13725935,0.966752,1],[1,15192829,0.383632,1],[1,14354604,3.974425,1],[1,14354604,4.005115,1],[1,14564160,1.42711,1],[1,13725935,2.040921,1],[1,15192829,1.181586,1],[1,13097267,1.764706,1],[1,13725935,1.97954,1],[1,15192829,0.87468,1],[1,13725935,1.826087,1],[1,13097267,1.641944,1],[1,13725935,1.764706,1],[1,15192829,0.84399,1],[1,14354604,3.268542,1],[1,13725935,1.641944,1],[1,13097267,1.549872,1],[1,12887710,4.219949,1],[1,13097267,1.488491,1],[1,13725935,1.549872,1],[1,12887710,4.434783,1],[1,13097267,1.457801,1],[1,14564160,1.304348,1],[1,13725935,1.365729,1],[1,14564160,1.273657,1],[1,12887710,4.710997,1],[1,13725935,1.212276,1],[1,14354604,4.925831,1],[1,14354604,5.079284,1],[1,14354604,5.508951,1],[1,14983273,2.501279,1],[1,14354604,5.815857,1],[1,14564160,0.659847,1],[1,14564160,0.629156,1],[1,14354604,5.877238,1],[1,14354604,6.276215,1],[1,14983273,2.56266,1],[1,13097267,0.905371,1],[1,14354604,6.306905,1],[1,14354604,6.613811,1],[1,14354604,7.012788,1],[1,14983273,2.59335,1],[1,14983273,3.391304,1],[1,14983273,3.14578,1],[1,13097267,0.690537,1],[1,14983273,3.023018,1],[1,14983273,2.930946,1],[1,14564160,0.322251,1],[1,13097267,0.414322,1],[1,13725935,0.659847,1],[1,14983273,2.439898,1],[1,14354604,4.189258,1],[1,14354604,4.219949,1],[1,14354604,4.342711,1],[1,19383955,6.951407,1],[1,14983273,7.810742,1],[1,14354604,4.373402,1],[1,14983273,6.890026,1],[1,14983273,6.276215,1],[1,14983273,5.109974,1],[1,14983273,5.048593,1],[1,12887710,5.048593,1],[1,14983273,4.86445,1],[1,14354604,4.404092,1],[1,14983273,4.588235,1],[1,14983273,4.250639,1],[1,13725935,0.26087,1],[1,14983273,4.097187,1],[1,14983273,3.974425,1],[1,14983273,3.7289,1],[1,14354604,4.496164,1],[1,14983273,3.606138,1],[1,14354604,4.803069,1],[1,15192829,2.992327,1],[1,13097267,2.470588,1],[1,12887710,1.887468,1],[1,14354604,2.132992,1],[1,12887710,1.948849,1],[1,15192829,2.961637,1],[1,15192829,2.900256,1],[1,15192829,2.654731,1],[1,12887710,2.01023,1],[1,15192829,2.378517,1],[1,12887710,2.163683,1],[1,12887710,2.317136,1],[1,13097267,2.439898,1],[1,14354604,2.255754,1],[1,12887710,2.470588,1],[1,15192829,2.255754,1],[1,14354604,2.347826,1],[1,14354604,2.378517,1],[1,12887710,2.716113,1],[1,14354604,2.470588,1],[1,15192829,2.225064,1],[1,14983273,2.286445,1],[1,14564160,1.703325,1],[1,15192829,4.250639,1],[1,13097267,3.084399,1],[1,15192829,4.219949,1],[1,15192829,4.097187,1],[1,13097267,3.053708,1],[1,15192829,3.69821,1],[1,14354604,1.641944,1],[1,13097267,2.961637,1],[1,12887710,1.457801,1],[1,12887710,1.580563,1],[1,12887710,1.611253,1],[1,12887710,1.641944,1],[1,13097267,2.900256,1],[1,12887710,1.672634,1],[1,12887710,1.703325,1],[1,13097267,2.746803,1],[1,14354604,1.826087,1],[1,13097267,2.685422,1],[1,12887710,1.764706,1],[1,13097267,2.59335,1],[1,14354604,1.887468,1],[1,13097267,2.531969,1],[1,14983273,2.040921,1],[1,12887710,3.544757,1],[1,15192829,1.764706,1],[1,13725935,2.746803,1],[1,13725935,2.716113,1],[1,13725935,2.685422,1],[1,12887710,3.636829,1],[1,15192829,1.734015,1],[1,13725935,2.654731,1],[1,13725935,2.531969,1],[1,15192829,1.672634,1],[1,13725935,2.409207,1],[1,15192829,1.641944,1],[1,13097267,2.01023,1],[1,15192829,1.580563,1],[1,14354604,3.053708,1],[1,14564160,1.457801,1],[1,13725935,2.255754,1],[1,13725935,2.225064,1],[1,15192829,1.335038,1],[1,15192829,1.304348,1],[1,13097267,1.918159,1],[1,15192829,1.273657,1],[1,14354604,3.084399,1],[1,14354604,2.501279,1],[1,15192829,2.194373,1],[1,13725935,3.207161,1],[1,14564160,1.580563,1],[1,13725935,3.176471,1],[1,14354604,2.838875,1],[1,15192829,2.163683,1],[1,13725935,3.11509,1],[1,13097267,2.163683,1],[1,15192829,1.97954,1],[1,15192829,1.948849,1],[1,13516379,6.276215,1],[1,12887710,2.992327,1],[1,12887710,3.14578,1],[1,12887710,3.207161,1],[1,14354604,2.992327,1],[1,13725935,2.992327,1],[1,13725935,2.961637,1],[1,13725935,2.900256,1],[1,12887710,3.452685,1],[1,13725935,2.869565,1],[1,14354604,3.023018,1],[1,13725935,2.808184,1],[1,15611942,1.519182,1],[1,13935492,4.005115,1],[1,15611942,1.396419,1],[1,14773717,2.439898,1],[1,13935492,3.943734,1],[1,15611942,1.335038,1],[1,14773717,5.539642,1],[1,14773717,5.601023,1],[1,14773717,6.797954,1],[1,13516379,1.304348,1],[1,12259042,2.685422,1],[1,14773717,6.920716,1],[1,15611942,1.181586,1],[1,12259042,2.56266,1],[1,14773717,7.012788,1],[1,13935492,3.636829,1],[1,14773717,7.442455,1],[1,15611942,0.936061,1],[1,12259042,2.317136,1],[1,15611942,0.87468,1],[1,13306823,6.153453,1],[1,14773717,4.465473,1],[1,14773717,4.618926,1],[1,14773717,4.83376,1],[1,15611942,1.97954,1],[1,12259042,3.023018,1],[1,13935492,4.127877,1],[1,13935492,4.066496,1],[1,14773717,4.86445,1],[1,14773717,4.925831,1],[1,13935492,4.035806,1],[1,15611942,1.918159,1],[1,15611942,1.826087,1],[1,13306823,6.429668,1],[1,15611942,1.795396,1],[1,14773717,5.079284,1],[1,14773717,2.470588,1],[1,12259042,2.961637,1],[1,13306823,6.521739,1],[1,14773717,5.294118,1],[1,13306823,4.189258,1],[1,12259042,1.764706,1],[1,12259042,1.703325,1],[1,14773717,1.795396,1],[1,13306823,4.066496,1],[1,13516379,1.457801,1],[1,14145048,3.14578,1],[1,14145048,1.734015,1],[1,12259042,1.611253,1],[1,15611942,0.659847,1],[1,13306823,3.790281,1],[1,14145048,3.176471,1],[1,12259042,1.519182,1],[1,12259042,1.488491,1],[1,14145048,1.703325,1],[1,13306823,7.104859,1],[1,13306823,3.759591,1],[1,13306823,3.7289,1],[1,13306823,3.69821,1],[1,13935492,3.421995,1],[1,14983273,0.107417,1],[1,12259042,2.225064,1],[1,13935492,3.544757,1],[1,14773717,2.409207,1],[1,12259042,2.163683,1],[1,14145048,0.322251,1],[1,14145048,1.826087,1],[1,12468598,1.242967,1],[1,13935492,3.514066,1],[1,15611942,0.84399,1],[1,12259042,2.102302,1],[1,14773717,2.225064,1],[1,14145048,2.961637,1],[1,14145048,1.795396,1],[1,14773717,2.163683,1],[1,14773717,2.102302,1],[1,14145048,1.764706,1],[1,12259042,2.01023,1],[1,14773717,2.071611,1],[1,14983273,0.383632,1],[1,12259042,1.918159,1],[1,15611942,2.930946,1],[1,13306823,4.342711,1],[1,14773717,4.066496,1],[1,13306823,5.508951,1],[1,15611942,2.900256,1],[1,13935492,5.324808,1],[1,15611942,2.746803,1],[1,15611942,2.716113,1],[1,14773717,3.176471,1],[1,14773717,2.777494,1],[1,15611942,2.685422,1],[1,15611942,3.820972,1],[1,15611942,2.654731,1],[1,13516379,0.598465,1],[1,15611942,2.624041,1],[1,14773717,3.207161,1],[1,15611942,2.531969,1],[1,15611942,2.501279,1],[1,13516379,0.629156,1],[1,14145048,2.777494,1],[1,13516379,0.445013,1],[1,15611942,3.544757,1],[1,13935492,5.754476,1],[1,14145048,2.531969,1],[1,14145048,2.470588,1],[1,14145048,2.439898,1],[1,13516379,0.475703,1],[1,13306823,5.324808,1],[1,15611942,3.237852,1],[1,13306823,5.109974,1],[1,15611942,3.176471,1],[1,14773717,2.992327,1],[1,14145048,2.255754,1],[1,13306823,4.86445,1],[1,14145048,2.225064,1],[1,13935492,5.693095,1],[1,13935492,5.662404,1],[1,13306823,4.83376,1],[1,13516379,0.506394,1],[1,14145048,2.071611,1],[1,13306823,4.496164,1],[1,13516379,0.813299,1],[1,13935492,6.368286,1],[1,13935492,4.189258,1],[1,14773717,2.746803,1],[1,13935492,7.319693,1],[1,14773717,2.685422,1],[1,14773717,4.097187,1],[1,13935492,7.381074,1],[1,13935492,7.442455,1],[1,14773717,4.342711,1],[1,13935492,7.534527,1],[1,14145048,2.838875,1],[1,13516379,1.058824,1],[1,12259042,4.158568,1],[1,13935492,8.455243,1],[1,13935492,10.388747,1],[1,14773717,2.501279,1],[1,13306823,5.785166,1],[1,14773717,4.373402,1],[1,12259042,3.7289,1],[1,15611942,3.913043,1],[1,13516379,0.690537,1],[1,13935492,5.171355,1],[1,15611942,4.097187,1],[1,14145048,1.97954,1],[1,13935492,5.109974,1],[1,15611942,2.439898,1],[1,13935492,5.048593,1],[1,13306823,5.662404,1],[1,13935492,4.86445,1],[1,13935492,4.83376,1],[1,13935492,5.815857,1],[1,13935492,6.184143,1],[1,13935492,4.526854,1],[1,13935492,4.342711,1],[1,13935492,6.306905,1],[1,13516379,0.751918,1],[1,13935492,6.337596,1],[1,15611942,2.378517,1],[1,13935492,4.31202,1],[1,13935492,4.219949,1],[1,13516379,2.040921,1],[1,13516379,2.378517,1],[1,13935492,3.268542,1],[1,12678154,0.84399,1],[1,14983273,0.813299,1],[1,12259042,1.273657,1],[1,13516379,2.01023,1],[1,13516379,1.97954,1],[1,13306823,2.501279,1],[1,12678154,0.87468,1],[1,14145048,1.058824,1],[1,14773717,3.913043,1],[1,14145048,0.782609,1],[1,13306823,2.59335,1],[1,12678154,0.905371,1],[1,12468598,2.716113,1],[1,13306823,2.654731,1],[1,12468598,2.470588,1],[1,13306823,2.685422,1],[1,12468598,2.409207,1],[1,15402386,3.636829,1],[1,13935492,3.299233,1],[1,12468598,2.286445,1],[1,14145048,4.28133,1],[1,13516379,2.470588,1],[1,14145048,5.44757,1],[1,13306823,8.332481,1],[1,14145048,4.189258,1],[1,13935492,3.360614,1],[1,14145048,4.404092,1],[1,13516379,2.347826,1],[1,14145048,4.31202,1],[1,15402386,3.176471,1],[1,14145048,4.588235,1],[1,15402386,3.329923,1],[1,15402386,2.992327,1],[1,15402386,3.360614,1],[1,13935492,2.59335,1],[1,13935492,2.439898,1],[1,13935492,2.716113,1],[1,14145048,5.140665,1],[1,13935492,2.746803,1],[1,14145048,0.87468,1],[1,13935492,2.808184,1],[1,15402386,2.777494,1],[1,14145048,0.966752,1],[1,13935492,2.409207,1],[1,15402386,3.452685,1],[1,15402386,3.514066,1],[1,13935492,2.378517,1],[1,15402386,3.606138,1],[1,13935492,2.930946,1],[1,13935492,2.961637,1],[1,14773717,3.943734,1],[1,14145048,0.997442,1],[1,13306823,2.56266,1],[1,13935492,3.14578,1],[1,13516379,0.076726,1],[1,15611942,0.506394,1],[1,14145048,1.457801,1],[1,14145048,3.483376,1],[1,13935492,1.826087,1],[1,13516379,1.764706,1],[1,12468598,1.580563,1],[1,15402386,2.654731,1],[1,14145048,3.69821,1],[1,12468598,1.549872,1],[1,12678154,1.150895,1],[1,13516379,1.734015,1],[1,13516379,2.624041,1],[1,12468598,1.488491,1],[1,15402386,4.373402,1],[1,12468598,1.457801,1],[1,14145048,3.759591,1],[1,13306823,3.14578,1],[1,14145048,1.488491,1],[1,14145048,3.7289,1],[1,13306823,8.086957,1],[1,12468598,1.365729,1],[1,13306823,3.391304,1],[1,13516379,2.685422,1],[1,12468598,1.826087,1],[1,14773717,0.905371,1],[1,13516379,1.611253,1],[1,14145048,0.751918,1],[1,12259042,1.150895,1],[1,14145048,4.127877,1],[1,13306823,3.636829,1],[1,12468598,1.764706,1],[1,13306823,2.900256,1],[1,14145048,3.544757,1],[1,14145048,4.097187,1],[1,14145048,1.580563,1],[1,14145048,4.035806,1],[1,13516379,2.531969,1],[1,13306823,2.930946,1],[1,14145048,3.421995,1],[1,14773717,0.966752,1],[1,13306823,3.514066,1],[1,14145048,4.005115,1],[1,14773717,3.790281,1],[1,14145048,3.851662,1],[1,14145048,3.606138,1],[1,14145048,1.42711,1],[1,8067916,0.997442,2],[1,19593511,1.672634,2],[1,3667235,2.378517,2],[1,8067916,1.058824,2],[1,18545730,0.751918,2],[1,8906141,0.997442,2],[1,14564160,1.335038,2],[1,2829010,1.795396,2],[1,14564160,1.488491,2],[1,3667235,2.071611,2],[1,3667235,1.97954,2],[1,3667235,1.734015,2],[1,14564160,0.598465,2],[1,18545730,2.470588,2],[1,8906141,1.150895,2],[1,3876791,0.506394,2],[1,18545730,1.150895,2],[1,18545730,1.028133,2],[1,14773717,3.084399,2],[1,18545730,1.826087,2],[1,2829010,1.948849,2],[1,14564160,0.29156,2],[1,19593511,1.457801,2],[1,8906141,1.120205,2],[1,3457678,1.672634,2],[1,18545730,1.97954,2],[1,2829010,0.87468,2],[1,18545730,0.997442,2],[1,16240611,1.856777,2],[1,8906141,1.028133,2],[1,19593511,1.580563,2],[1,8277473,0.87468,2],[1,13516379,0.322251,2],[1,18545730,0.84399,2],[1,3457678,1.703325,2],[1,2829010,2.194373,2],[1,3667235,1.365729,2],[1,2829010,1.212276,2],[1,18545730,3.667519,2],[1,13725935,0.352941,2],[1,8067916,2.071611,2],[1,14773717,3.514066,2],[1,3667235,0.690537,2],[1,3667235,1.335038,2],[1,19593511,1.273657,2],[1,8067916,2.163683,2],[1,18545730,3.421995,2],[1,3667235,0.813299,2],[1,14773717,3.606138,2],[1,19593511,1.396419,2],[1,19593511,1.42711,2],[1,2829010,1.335038,2],[1,8067916,2.194373,2],[1,8067916,2.225064,2],[1,3667235,0.84399,2],[1,14564160,0.905371,2],[1,14773717,3.636829,2],[1,16240611,2.378517,2],[1,3667235,1.273657,2],[1,3667235,1.120205,2],[1,3667235,1.242967,2],[1,8906141,0.414322,2],[1,16240611,2.317136,2],[1,16240611,2.286445,2],[1,13725935,0.230179,2],[1,18545730,2.992327,2],[1,8067916,2.439898,2],[1,3667235,1.641944,2],[1,2829010,1.764706,2],[1,3457678,1.887468,2],[1,8906141,0.936061,2],[1,8067916,1.488491,2],[1,8067916,1.519182,2],[1,8067916,1.549872,2],[1,18545730,2.531969,2],[1,8067916,1.611253,2],[1,8906141,0.905371,2],[1,8067916,1.641944,2],[1,3457678,2.01023,2],[1,18545730,2.56266,2],[1,8906141,0.87468,2],[1,16240611,1.97954,2],[1,3457678,2.225064,2],[1,14564160,1.212276,2],[1,2829010,0.936061,2],[1,8906141,0.782609,2],[1,2829010,0.997442,2],[1,2829010,1.734015,2],[1,2829010,1.120205,2],[1,3667235,1.549872,2],[1,3667235,1.488491,2],[1,2829010,1.641944,2],[1,2829010,1.181586,2],[1,17497948,2.624041,2],[1,3667235,0.26087,2],[1,3667235,0.322251,2],[1,3667235,0.383632,2],[1,3667235,1.457801,2],[1,14564160,3.636829,2],[1,13516379,4.434783,2],[1,13516379,4.404092,2],[1,13516379,3.759591,2],[1,13516379,3.667519,2],[1,13516379,1.887468,2],[1,3248122,0.751918,2],[1,13516379,3.299233,2],[1,3248122,0.659847,2],[1,14773717,0.751918,2],[1,8487029,4.127877,2],[1,3248122,0.567775,2],[1,3248122,0.537084,2],[1,8487029,3.69821,2],[1,3248122,0.475703,2],[1,13516379,2.071611,2],[1,3248122,0.414322,2],[1,13516379,2.163683,2],[1,13516379,2.194373,2],[1,8487029,3.421995,2],[1,3248122,0.29156,2],[1,14773717,1.519182,2],[1,8696585,0.352941,2],[1,14564160,2.716113,2],[1,16240611,2.654731,2],[1,2829010,4.097187,2],[1,14773717,1.242967,2],[1,8277473,1.764706,2],[1,3248122,1.304348,2],[1,14773717,1.212276,2],[1,8277473,1.97954,2],[1,14773717,1.089514,2],[1,13516379,1.641944,2],[1,8277473,2.163683,2],[1,14564160,3.176471,2],[1,8487029,4.588235,2],[1,8277473,2.56266,2],[1,8277473,2.624041,2],[1,8487029,4.373402,2],[1,8277473,2.654731,2],[1,8277473,2.746803,2],[1,8277473,2.838875,2],[1,8487029,0.936061,2],[1,3038566,1.549872,2],[1,13516379,3.14578,2],[1,13516379,2.439898,2],[1,8487029,1.058824,2],[1,8487029,1.089514,2],[1,8487029,1.242967,2],[1,8487029,1.273657,2],[1,8487029,2.59335,2],[1,8487029,1.396419,2],[1,8487029,1.488491,2],[1,3038566,1.120205,2],[1,8487029,1.580563,2],[1,13516379,2.961637,2],[1,13516379,2.501279,2],[1,3038566,1.089514,2],[1,8487029,2.225064,2],[1,8487029,1.703325,2],[1,8487029,1.856777,2],[1,8487029,1.887468,2],[1,8487029,2.132992,2],[1,8487029,3.391304,2],[1,8487029,3.360614,2],[1,14773717,0.015345,2],[1,8487029,3.329923,2],[1,8487029,0.445013,2],[1,13516379,2.225064,2],[1,13516379,3.237852,2],[1,13516379,2.286445,2],[1,13516379,2.317136,2],[1,8487029,3.11509,2],[1,3248122,0.076726,2],[1,3248122,0.046036,2],[1,8487029,2.838875,2],[1,3248122,0.015345,2],[1,14773717,0.168798,2],[1,8487029,2.777494,2],[1,3038566,2.470588,2],[1,8487029,2.746803,2],[1,14773717,0.352941,2],[1,8487029,0.782609,2],[1,3038566,2.071611,2],[1,14773717,0.414322,2],[1,17497948,1.488491,2],[1,14564160,1.611253,2],[1,8696585,2.56266,2],[1,3457678,0.997442,2],[1,14564160,1.826087,2],[1,18545730,5.079284,2],[1,8696585,2.501279,2],[1,3457678,0.87468,2],[1,8277473,1.335038,2],[1,17497948,1.242967,2],[1,17497948,1.212276,2],[1,8696585,2.225064,2],[1,17497948,1.181586,2],[1,13516379,0.997442,2],[1,17497948,1.150895,2],[1,14773717,2.654731,2],[1,8277473,1.365729,2],[1,8277473,1.396419,2],[1,2829010,2.624041,2],[1,17497948,1.058824,2],[1,2829010,2.654731,2],[1,17497948,2.040921,2],[1,17497948,2.01023,2],[1,3457678,1.335038,2],[1,17497948,1.948849,2],[1,18545730,4.772379,2],[1,8696585,3.14578,2],[1,8277473,0.997442,2],[1,2829010,2.286445,2],[1,17497948,1.856777,2],[1,16240611,2.59335,2],[1,8696585,2.900256,2],[1,14564160,1.519182,2],[1,8696585,2.869565,2],[1,8696585,2.838875,2],[1,14564160,1.549872,2],[1,17497948,1.703325,2],[1,8277473,1.181586,2],[1,3457678,1.181586,2],[1,17497948,1.611253,2],[1,8277473,1.212276,2],[1,17497948,1.519182,2],[1,8696585,1.304348,2],[1,14564160,2.347826,2],[1,8696585,1.273657,2],[1,8696585,1.242967,2],[1,8696585,1.150895,2],[1,2829010,3.14578,2],[1,8696585,1.058824,2],[1,14773717,2.347826,2],[1,14564160,2.531969,2],[1,14773717,2.194373,2],[1,13516379,1.42711,2],[1,2829010,3.452685,2],[1,8696585,0.751918,2],[1,14773717,1.856777,2],[1,3457678,0.046036,2],[1,2829010,3.667519,2],[1,3457678,0.015345,2],[1,14564160,2.56266,2],[1,2829010,3.69821,2],[1,14773717,1.734015,2],[1,14773717,1.641944,2],[1,13516379,1.120205,2],[1,8696585,1.826087,2],[1,8277473,1.42711,2],[1,14564160,1.97954,2],[1,3457678,0.690537,2],[1,3457678,0.567775,2],[1,8277473,1.549872,2],[1,3457678,0.537084,2],[1,8277473,1.580563,2],[1,17497948,0.721228,2],[1,17497948,0.690537,2],[1,2829010,2.838875,2],[1,14564160,2.163683,2],[1,13516379,1.242967,2],[1,8696585,1.641944,2],[1,2829010,2.930946,2],[1,13516379,1.365729,2],[1,2829010,3.053708,2],[1,8696585,1.396419,2],[1,3457678,0.383632,2],[1,8696585,1.365729,2],[1,2829010,3.084399,2],[1,6391466,1.42711,2],[1,5343685,2.501279,2],[1,6391466,1.549872,2],[1,6391466,1.580563,2],[1,5343685,2.317136,2],[1,6391466,1.734015,2],[1,6391466,1.764706,2],[1,6391466,1.826087,2],[1,5343685,2.286445,2],[1,13935492,2.869565,2],[1,6391466,2.132992,2],[1,13935492,2.777494,2],[1,13935492,2.685422,2],[1,13935492,2.624041,2],[1,13935492,2.56266,2],[1,5343685,2.194373,2],[1,5343685,2.132992,2],[1,5343685,2.071611,2],[1,5343685,1.795396,2],[1,6601022,0.414322,2],[1,5343685,1.672634,2],[1,5343685,1.611253,2],[1,6601022,0.84399,2],[1,5343685,1.42711,2],[1,5343685,1.396419,2],[1,5343685,1.273657,2],[1,6601022,0.997442,2],[1,5343685,1.242967,2],[1,6601022,1.120205,2],[1,5343685,0.997442,2],[1,5343685,0.659847,2],[1,17917061,1.734015,2],[1,5553241,0.690537,2],[1,17917061,1.641944,2],[1,17917061,1.549872,2],[1,5553241,0.046036,2],[1,17917061,1.457801,2],[1,17917061,1.396419,2],[1,14145048,3.299233,2],[1,14145048,3.360614,2],[1,18126617,3.483376,2],[1,17917061,1.273657,2],[1,14145048,3.391304,2],[1,18126617,3.575448,2],[1,14145048,3.514066,2],[1,5343685,3.851662,2],[1,17917061,0.997442,2],[1,17917061,0.966752,2],[1,17917061,0.905371,2],[1,6391466,0.966752,2],[1,17917061,0.721228,2],[1,5343685,3.421995,2],[1,5343685,3.391304,2],[1,5343685,3.299233,2],[1,14145048,3.790281,2],[1,5343685,3.237852,2],[1,17917061,0.383632,2],[1,5343685,2.992327,2],[1,5343685,2.869565,2],[1,6391466,1.212276,2],[1,6391466,1.273657,2],[1,6391466,1.304348,2],[1,5343685,2.56266,2],[1,6810579,1.519182,2],[1,6810579,1.549872,2],[1,16031054,1.795396,2],[1,14354604,0.659847,2],[1,6810579,1.795396,2],[1,6810579,1.856777,2],[1,6810579,1.887468,2],[1,6810579,2.01023,2],[1,6810579,2.040921,2],[1,13935492,1.304348,2],[1,6810579,2.132992,2],[1,6810579,2.163683,2],[1,14354604,0.721228,2],[1,5134129,3.391304,2],[1,13935492,1.181586,2],[1,16031054,1.611253,2],[1,5134129,3.299233,2],[1,6810579,2.838875,2],[1,16031054,1.42711,2],[1,5134129,3.023018,2],[1,6810579,3.483376,2],[1,5134129,2.930946,2],[1,5134129,2.808184,2],[1,5134129,2.777494,2],[1,5134129,2.746803,2],[1,16031054,1.273657,2],[1,5134129,2.531969,2],[1,14354604,0.87468,2],[1,16031054,1.150895,2],[1,16031054,1.120205,2],[1,5134129,2.163683,2],[1,14354604,0.905371,2],[1,13935492,1.948849,2],[1,5343685,0.537084,2],[1,6601022,1.580563,2],[1,13935492,1.856777,2],[1,5343685,0.475703,2],[1,13935492,1.641944,2],[1,5343685,0.352941,2],[1,13935492,1.580563,2],[1,16031054,2.439898,2],[1,5343685,0.138107,2],[1,14354604,0.138107,2],[1,14354604,0.199488,2],[1,14354604,0.230179,2],[1,6810579,0.721228,2],[1,6810579,0.751918,2],[1,5134129,4.618926,2],[1,6810579,0.84399,2],[1,5134129,4.588235,2],[1,5134129,4.434783,2],[1,14354604,0.537084,2],[1,6810579,1.058824,2],[1,6810579,1.120205,2],[1,13935492,1.549872,2],[1,6810579,1.181586,2],[1,14354604,0.567775,2],[1,16031054,1.948849,2],[1,16031054,1.918159,2],[1,5134129,4.097187,2],[1,6810579,1.365729,2],[1,16031054,1.856777,2],[1,5134129,4.005115,2],[1,5134129,3.913043,2],[1,13935492,6.061381,2],[1,5762797,8.363171,2],[1,19593511,4.710997,2],[1,5553241,3.69821,2],[1,5553241,3.575448,2],[1,14145048,2.040921,2],[1,5553241,3.483376,2],[1,5553241,3.207161,2],[1,14145048,2.347826,2],[1,19593511,4.465473,2],[1,14145048,2.501279,2],[1,5553241,2.961637,2],[1,5972354,0.87468,2],[1,5553241,2.900256,2],[1,14145048,2.56266,2],[1,5972354,0.997442,2],[1,14145048,2.59335,2],[1,5972354,1.058824,2],[1,14145048,2.716113,2],[1,5972354,1.365729,2],[1,13935492,5.478261,2],[1,13935492,5.386189,2],[1,5553241,2.654731,2],[1,5972354,1.488491,2],[1,5972354,1.519182,2],[1,5972354,1.549872,2],[1,5553241,2.624041,2],[1,5972354,1.641944,2],[1,5553241,2.59335,2],[1,5972354,1.795396,2],[1,5972354,1.887468,2],[1,5972354,2.040921,2],[1,5762797,1.304348,2],[1,5762797,1.396419,2],[1,5762797,1.42711,2],[1,5762797,1.488491,2],[1,5762797,1.672634,2],[1,5762797,0.966752,2],[1,5762797,1.734015,2],[1,5762797,1.764706,2],[1,5762797,1.826087,2],[1,5762797,0.905371,2],[1,5762797,1.887468,2],[1,5762797,1.918159,2],[1,5762797,2.071611,2],[1,14145048,0.84399,2],[1,5762797,2.194373,2],[1,5762797,2.225064,2],[1,5762797,2.255754,2],[1,5762797,2.347826,2],[1,5762797,0.383632,2],[1,5762797,2.746803,2],[1,14145048,0.537084,2],[1,14145048,1.549872,2],[1,5762797,3.084399,2],[1,5762797,3.268542,2],[1,5553241,4.189258,2],[1,5553241,4.097187,2],[1,14145048,0.199488,2],[1,5553241,4.066496,2],[1,14145048,0.138107,2],[1,5553241,4.035806,2],[1,14145048,1.948849,2],[1,5762797,4.925831,2],[1,13935492,3.820972,2],[1,6181910,1.641944,2],[1,17917061,3.084399,2],[1,13935492,3.759591,2],[1,6181910,1.795396,2],[1,17917061,2.930946,2],[1,13935492,3.7289,2],[1,13935492,3.606138,2],[1,13935492,3.575448,2],[1,6181910,2.378517,2],[1,17917061,2.716113,2],[1,17917061,2.685422,2],[1,5553241,1.549872,2],[1,17917061,2.59335,2],[1,18126617,1.641944,2],[1,17917061,2.501279,2],[1,6181910,3.790281,2],[1,14145048,2.930946,2],[1,18126617,1.795396,2],[1,5553241,1.457801,2],[1,17917061,2.194373,2],[1,14145048,3.023018,2],[1,17917061,2.071611,2],[1,18126617,2.163683,2],[1,14145048,3.053708,2],[1,5553241,1.181586,2],[1,5553241,1.120205,2],[1,18126617,2.347826,2],[1,5553241,0.905371,2],[1,5553241,0.782609,2],[1,5553241,0.751918,2],[1,6391466,0.567775,2],[1,5553241,2.470588,2],[1,5553241,2.439898,2],[1,5972354,3.053708,2],[1,17917061,4.496164,2],[1,5553241,2.378517,2],[1,5553241,2.317136,2],[1,17917061,4.404092,2],[1,5553241,2.225064,2],[1,6181910,0.168798,2],[1,18126617,0.322251,2],[1,18126617,0.629156,2],[1,18126617,0.905371,2],[1,18126617,0.936061,2],[1,18126617,1.058824,2],[1,18126617,1.150895,2],[1,18126617,1.212276,2],[1,6181910,0.690537,2],[1,6181910,0.721228,2],[1,6181910,0.751918,2],[1,18126617,1.273657,2],[1,6181910,0.936061,2],[1,17917061,3.544757,2],[1,6181910,1.089514,2],[1,17917061,3.483376,2],[1,17917061,3.452685,2],[1,6181910,1.120205,2],[1,6181910,1.150895,2],[1,6181910,1.181586,2],[1,6181910,1.242967,2],[1,6181910,1.335038,2],[1,13935492,3.913043,2],[1,17917061,3.176471,2],[1,13725935,2.163683,2],[1,13725935,2.071611,2],[1,7439247,3.882353,2],[1,7439247,3.913043,2],[1,14354604,3.14578,2],[1,7439247,4.28133,2],[1,13725935,1.795396,2],[1,7439247,4.618926,2],[1,14354604,3.329923,2],[1,13725935,1.580563,2],[1,7439247,5.079284,2],[1,4295903,2.040921,2],[1,14354604,3.360614,2],[1,13725935,1.457801,2],[1,13725935,1.335038,2],[1,13725935,1.304348,2],[1,19593511,2.624041,2],[1,4295903,1.672634,2],[1,4295903,1.611253,2],[1,4295903,1.488491,2],[1,4295903,1.42711,2],[1,4295903,1.365729,2],[1,4295903,1.335038,2],[1,4295903,1.242967,2],[1,4295903,1.181586,2],[1,7648804,0.87468,2],[1,4295903,1.058824,2],[1,7648804,0.966752,2],[1,4295903,0.997442,2],[1,7648804,1.089514,2],[1,14354604,3.69821,2],[1,4295903,0.690537,2],[1,14354604,2.286445,2],[1,4505460,2.01023,2],[1,18336173,5.294118,2],[1,4505460,1.703325,2],[1,14354604,2.439898,2],[1,4505460,1.488491,2],[1,7439247,1.549872,2],[1,4505460,1.42711,2],[1,18336173,5.601023,2],[1,7439247,1.672634,2],[1,14354604,2.624041,2],[1,7439247,1.734015,2],[1,14354604,2.685422,2],[1,7439247,1.826087,2],[1,4505460,1.089514,2],[1,7439247,1.948849,2],[1,7439247,1.97954,2],[1,14354604,2.930946,2],[1,18336173,5.969309,2],[1,7439247,2.132992,2],[1,18336173,6.122762,2],[1,7439247,2.501279,2],[1,4505460,0.782609,2],[1,4505460,0.751918,2],[1,7439247,2.746803,2],[1,13725935,2.378517,2],[1,7439247,2.838875,2],[1,18336173,6.245524,2],[1,7439247,2.992327,2],[1,13725935,2.317136,2],[1,7439247,3.237852,2],[1,7439247,3.268542,2],[1,3876791,1.856777,2],[1,3876791,1.826087,2],[1,7858360,1.273657,2],[1,7858360,1.304348,2],[1,3876791,1.734015,2],[1,3876791,1.703325,2],[1,3876791,1.672634,2],[1,3876791,1.549872,2],[1,3876791,1.519182,2],[1,3876791,1.396419,2],[1,3876791,1.273657,2],[1,7858360,1.764706,2],[1,7858360,1.795396,2],[1,3876791,1.212276,2],[1,3876791,1.150895,2],[1,16240611,1.273657,2],[1,7858360,1.948849,2],[1,16240611,1.304348,2],[1,16240611,1.335038,2],[1,13725935,0.721228,2],[1,7858360,2.347826,2],[1,16240611,1.42711,2],[1,7858360,2.624041,2],[1,16240611,1.457801,2],[1,16240611,1.519182,2],[1,16240611,1.549872,2],[1,3876791,0.966752,2],[1,19383955,3.360614,2],[1,18545730,0.506394,2],[1,19593511,1.795396,2],[1,18545730,0.629156,2],[1,16240611,1.734015,2],[1,7648804,1.304348,2],[1,14354604,3.882353,2],[1,13725935,0.997442,2],[1,14354604,4.066496,2],[1,7648804,1.764706,2],[1,7648804,1.826087,2],[1,4086347,1.672634,2],[1,4086347,1.641944,2],[1,7648804,2.470588,2],[1,16240611,0.537084,2],[1,16240611,0.567775,2],[1,7648804,2.838875,2],[1,7648804,3.11509,2],[1,4086347,1.181586,2],[1,19593511,2.255754,2],[1,4086347,1.058824,2],[1,4086347,0.782609,2],[1,4086347,0.721228,2],[1,19593511,2.040921,2],[1,4086347,0.445013,2],[1,19593511,2.01023,2],[1,14354604,4.956522,2],[1,14354604,5.109974,2],[1,14354604,5.41688,2],[1,14354604,5.754476,2],[1,3876791,2.347826,2],[1,3876791,2.317136,2],[1,7858360,0.936061,2],[1,16240611,0.84399,2],[1,7858360,1.058824,2],[1,3876791,2.01023,2],[1,3876791,1.918159,2],[1,4924572,2.716113,2],[1,4924572,2.685422,2],[1,14354604,1.120205,2],[1,14354604,1.150895,2],[1,19383955,6.429668,2],[1,4924572,2.163683,2],[1,4924572,2.132992,2],[1,19593511,3.11509,2],[1,4924572,2.071611,2],[1,4924572,2.040921,2],[1,4924572,2.01023,2],[1,18336173,0.475703,2],[1,4924572,1.918159,2],[1,18336173,0.567775,2],[1,4924572,1.856777,2],[1,7229691,0.751918,2],[1,7229691,0.84399,2],[1,18336173,1.120205,2],[1,4924572,1.734015,2],[1,4924572,1.672634,2],[1,7229691,0.997442,2],[1,18336173,1.242967,2],[1,7229691,1.058824,2],[1,7229691,1.089514,2],[1,4924572,1.641944,2],[1,18336173,1.365729,2],[1,18336173,1.396419,2],[1,7229691,1.365729,2],[1,4924572,1.611253,2],[1,7229691,1.42711,2],[1,7229691,1.519182,2],[1,7229691,1.549872,2],[1,5134129,2.071611,2],[1,5134129,2.040921,2],[1,7020135,0.84399,2],[1,5134129,1.948849,2],[1,7020135,0.966752,2],[1,16031054,0.936061,2],[1,5134129,1.703325,2],[1,5134129,1.641944,2],[1,5134129,1.611253,2],[1,5134129,1.42711,2],[1,7020135,1.335038,2],[1,7020135,1.365729,2],[1,7020135,1.396419,2],[1,7020135,1.42711,2],[1,5134129,1.150895,2],[1,7020135,1.611253,2],[1,7020135,1.703325,2],[1,5134129,0.936061,2],[1,5134129,0.506394,2],[1,5134129,0.29156,2],[1,7020135,1.948849,2],[1,5134129,0.138107,2],[1,14354604,0.966752,2],[1,16031054,0.721228,2],[1,14354604,0.997442,2],[1,16031054,0.629156,2],[1,7020135,2.347826,2],[1,4924572,3.299233,2],[1,16031054,0.445013,2],[1,4924572,3.023018,2],[1,7020135,2.930946,2],[1,4924572,2.961637,2],[1,18336173,3.053708,2],[1,7439247,0.782609,2],[1,7439247,0.813299,2],[1,17707504,2.071611,2],[1,7439247,0.966752,2],[1,18336173,3.391304,2],[1,17707504,1.97954,2],[1,14354604,1.549872,2],[1,17707504,1.887468,2],[1,4715016,2.317136,2],[1,4715016,2.132992,2],[1,14354604,1.703325,2],[1,4715016,1.97954,2],[1,14354604,1.764706,2],[1,4715016,1.918159,2],[1,4715016,1.887468,2],[1,17707504,1.549872,2],[1,7439247,1.304348,2],[1,17707504,1.457801,2],[1,17707504,1.42711,2],[1,17707504,1.365729,2],[1,14354604,1.856777,2],[1,17707504,1.273657,2],[1,4715016,1.611253,2],[1,7439247,1.396419,2],[1,4715016,1.396419,2],[1,4715016,1.335038,2],[1,4715016,1.212276,2],[1,4715016,0.966752,2],[1,4715016,0.87468,2],[1,18336173,4.803069,2],[1,14354604,2.225064,2],[1,7229691,1.580563,2],[1,18336173,1.672634,2],[1,7229691,1.734015,2],[1,7229691,1.795396,2],[1,18336173,1.734015,2],[1,18336173,1.795396,2],[1,7229691,1.97954,2],[1,7229691,2.040921,2],[1,4924572,1.457801,2],[1,17707504,3.759591,2],[1,7229691,2.347826,2],[1,14354604,1.242967,2],[1,7229691,2.501279,2],[1,13725935,4.83376,2],[1,17707504,3.514066,2],[1,13725935,4.680307,2],[1,7229691,3.023018,2],[1,4924572,1.396419,2],[1,7229691,3.14578,2],[1,7229691,3.207161,2],[1,17707504,3.11509,2],[1,13725935,3.69821,2],[1,17707504,3.023018,2],[1,13725935,3.360614,2],[1,4924572,1.304348,2],[1,4924572,1.242967,2],[1,4924572,1.089514,2],[1,7439247,0.506394,2],[1,14354604,1.365729,2],[1,18336173,2.685422,2],[1,18336173,2.716113,2],[1,19593511,5.079284,2],[1,1571672,1.273657,2],[1,10792148,1.396419,2],[1,10792148,1.42711,2],[1,1571672,1.242967,2],[1,10792148,1.488491,2],[1,16869279,2.378517,2],[1,10792148,1.549872,2],[1,15402386,0.352941,2],[1,16869279,2.255754,2],[1,10792148,1.703325,2],[1,16869279,2.132992,2],[1,16869279,2.102302,2],[1,15402386,0.445013,2],[1,15402386,0.506394,2],[1,10792148,1.948849,2],[1,16869279,1.826087,2],[1,15402386,0.537084,2],[1,16869279,1.764706,2],[1,16869279,1.703325,2],[1,16869279,1.672634,2],[1,1362116,2.59335,2],[1,15402386,0.567775,2],[1,16869279,1.519182,2],[1,16869279,1.488491,2],[1,15402386,0.659847,2],[1,1362116,2.255754,2],[1,1362116,2.132992,2],[1,10792148,2.071611,2],[1,16869279,1.304348,2],[1,15402386,0.721228,2],[1,16869279,1.242967,2],[1,10582591,2.378517,2],[1,16450167,2.624041,2],[1,10582591,2.531969,2],[1,10582591,2.624041,2],[1,16450167,2.685422,2],[1,16450167,2.716113,2],[1,16450167,2.746803,2],[1,10582591,2.869565,2],[1,10582591,2.900256,2],[1,10582591,2.930946,2],[1,10582591,3.759591,2],[1,12887710,1.519182,2],[1,12887710,1.42711,2],[1,1571672,2.716113,2],[1,15192829,3.391304,2],[1,1571672,2.531969,2],[1,15192829,3.514066,2],[1,10792148,0.690537,2],[1,15192829,4.649616,2],[1,1571672,1.948849,2],[1,16869279,3.023018,2],[1,1571672,1.856777,2],[1,15402386,0.199488,2],[1,1571672,1.734015,2],[1,1571672,1.703325,2],[1,1571672,1.641944,2],[1,10792148,1.089514,2],[1,1571672,1.611253,2],[1,10792148,1.242967,2],[1,10792148,1.304348,2],[1,1571672,1.365729,2],[1,12887710,0.567775,2],[1,12887710,0.537084,2],[1,15402386,1.580563,2],[1,15402386,1.611253,2],[1,1152559,1.672634,2],[1,10792148,4.465473,2],[1,10792148,4.925831,2],[1,15402386,1.764706,2],[1,1152559,1.335038,2],[1,1152559,1.273657,2],[1,15402386,1.795396,2],[1,1152559,1.181586,2],[1,19383955,2.869565,2],[1,19174398,0.414322,2],[1,19174398,0.475703,2],[1,19174398,0.567775,2],[1,19174398,0.659847,2],[1,19174398,0.84399,2],[1,1152559,1.058824,2],[1,19174398,0.966752,2],[1,19174398,0.997442,2],[1,11001704,0.87468,2],[1,11001704,0.905371,2],[1,11001704,0.966752,2],[1,11001704,0.997442,2],[1,1152559,0.966752,2],[1,11001704,1.058824,2],[1,11001704,1.150895,2],[1,11001704,1.580563,2],[1,11001704,1.611253,2],[1,19174398,1.611253,2],[1,1362116,1.795396,2],[1,1362116,1.672634,2],[1,1362116,1.580563,2],[1,16869279,1.089514,2],[1,15402386,0.813299,2],[1,1362116,1.457801,2],[1,1362116,1.396419,2],[1,15402386,0.905371,2],[1,15402386,0.936061,2],[1,1362116,1.212276,2],[1,15402386,0.966752,2],[1,1362116,1.150895,2],[1,10792148,2.286445,2],[1,1362116,1.028133,2],[1,1362116,0.966752,2],[1,1362116,0.87468,2],[1,15402386,1.058824,2],[1,12887710,1.028133,2],[1,15402386,1.212276,2],[1,10792148,2.56266,2],[1,12887710,0.936061,2],[1,10792148,2.777494,2],[1,12887710,0.87468,2],[1,10792148,2.992327,2],[1,1152559,2.255754,2],[1,15402386,1.396419,2],[1,16450167,3.667519,2],[1,12887710,0.690537,2],[1,15402386,1.549872,2],[1,1152559,1.948849,2],[1,10792148,3.514066,2],[1,1990785,2.163683,2],[1,1990785,2.102302,2],[1,1990785,2.040921,2],[1,1990785,1.97954,2],[1,1990785,1.948849,2],[1,1990785,1.918159,2],[1,10163479,0.751918,2],[1,15192829,0.537084,2],[1,1990785,1.764706,2],[1,1990785,1.734015,2],[1,16450167,0.966752,2],[1,10163479,1.028133,2],[1,16450167,0.997442,2],[1,10163479,1.089514,2],[1,1990785,1.672634,2],[1,10163479,1.150895,2],[1,10163479,1.181586,2],[1,10163479,1.304348,2],[1,1990785,1.549872,2],[1,15192829,0.659847,2],[1,16450167,1.058824,2],[1,10163479,1.580563,2],[1,15192829,0.690537,2],[1,16450167,1.181586,2],[1,16450167,1.212276,2],[1,16450167,1.242967,2],[1,16450167,1.365729,2],[1,16450167,1.396419,2],[1,1990785,1.181586,2],[1,1990785,1.058824,2],[1,1990785,0.997442,2],[1,16450167,0.046036,2],[1,9953923,1.42711,2],[1,9953923,1.457801,2],[1,9953923,1.519182,2],[1,18964842,1.488491,2],[1,9953923,1.641944,2],[1,14983273,3.544757,2],[1,18964842,1.641944,2],[1,18964842,1.672634,2],[1,1990785,6.675192,2],[1,9953923,2.01023,2],[1,1990785,6.122762,2],[1,9953923,2.163683,2],[1,18964842,1.948849,2],[1,9953923,2.470588,2],[1,9953923,2.501279,2],[1,9953923,2.654731,2],[1,1990785,4.496164,2],[1,1990785,3.851662,2],[1,1990785,3.759591,2],[1,9953923,3.14578,2],[1,1990785,3.483376,2],[1,1990785,3.391304,2],[1,16450167,0.751918,2],[1,15192829,0.230179,2],[1,15192829,0.26087,2],[1,1990785,2.716113,2],[1,18964842,2.746803,2],[1,15192829,0.352941,2],[1,15192829,0.414322,2],[1,1990785,2.194373,2],[1,1781228,1.519182,2],[1,1781228,1.42711,2],[1,1781228,1.273657,2],[1,1781228,1.242967,2],[1,1781228,1.181586,2],[1,10582591,0.690537,2],[1,1781228,1.058824,2],[1,1781228,1.028133,2],[1,1781228,0.966752,2],[1,1781228,0.87468,2],[1,1781228,0.84399,2],[1,1781228,0.659847,2],[1,1781228,0.567775,2],[1,10582591,1.150895,2],[1,10582591,1.181586,2],[1,1781228,0.383632,2],[1,1781228,0.29156,2],[1,12887710,2.56266,2],[1,10582591,1.42711,2],[1,16869279,4.710997,2],[1,10582591,1.457801,2],[1,10582591,1.549872,2],[1,10582591,1.672634,2],[1,16450167,2.439898,2],[1,12887710,1.918159,2],[1,10582591,2.01023,2],[1,12887710,1.856777,2],[1,10582591,2.132992,2],[1,16450167,2.56266,2],[1,10582591,2.317136,2],[1,12887710,1.826087,2],[1,1781228,4.803069,2],[1,10373035,0.782609,2],[1,15192829,1.242967,2],[1,1781228,3.913043,2],[1,15192829,1.365729,2],[1,15192829,1.396419,2],[1,15192829,1.549872,2],[1,10373035,1.120205,2],[1,10373035,1.150895,2],[1,15192829,1.611253,2],[1,10373035,1.242967,2],[1,10373035,1.273657,2],[1,1781228,2.531969,2],[1,10373035,1.488491,2],[1,1781228,2.225064,2],[1,10373035,1.641944,2],[1,16450167,1.672634,2],[1,16450167,1.703325,2],[1,1781228,2.132992,2],[1,1781228,2.102302,2],[1,1781228,2.01023,2],[1,16450167,1.856777,2],[1,15192829,1.826087,2],[1,10373035,2.777494,2],[1,10373035,2.838875,2],[1,10373035,2.900256,2],[1,16450167,1.97954,2],[1,12887710,2.961637,2],[1,1781228,1.703325,2],[1,1781228,1.672634,2],[1,1781228,1.611253,2],[1,16659723,1.580563,2],[1,314334,1.703325,2],[1,11839929,0.690537,2],[1,16659723,1.457801,2],[1,314334,1.580563,2],[1,11839929,0.84399,2],[1,15611942,2.194373,2],[1,15611942,2.225064,2],[1,16659723,1.181586,2],[1,11839929,0.966752,2],[1,11839929,0.997442,2],[1,314334,1.396419,2],[1,15611942,2.255754,2],[1,16659723,1.028133,2],[1,314334,1.120205,2],[1,314334,0.997442,2],[1,15611942,4.741688,2],[1,314334,0.598465,2],[1,16659723,0.690537,2],[1,104778,4.219949,2],[1,104778,3.820972,2],[1,11839929,1.120205,2],[1,11839929,1.150895,2],[1,104778,3.544757,2],[1,104778,2.869565,2],[1,11839929,1.212276,2],[1,104778,2.255754,2],[1,104778,2.194373,2],[1,104778,2.163683,2],[1,11839929,1.396419,2],[1,11839929,1.42711,2],[1,523891,1.028133,2],[1,523891,0.87468,2],[1,11630373,1.703325,2],[1,11630373,1.795396,2],[1,11630373,1.97954,2],[1,11630373,2.040921,2],[1,523891,0.29156,2],[1,16659723,2.685422,2],[1,15611942,1.120205,2],[1,12468598,1.028133,2],[1,11630373,2.255754,2],[1,16659723,2.531969,2],[1,12468598,0.936061,2],[1,12468598,0.905371,2],[1,15611942,1.273657,2],[1,11630373,3.11509,2],[1,12468598,0.84399,2],[1,12468598,0.782609,2],[1,314334,2.900256,2],[1,15611942,1.457801,2],[1,15611942,1.488491,2],[1,16659723,2.132992,2],[1,15611942,1.549872,2],[1,15611942,1.611253,2],[1,15611942,1.641944,2],[1,314334,2.347826,2],[1,314334,2.286445,2],[1,15611942,1.948849,2],[1,11839929,0.598465,2],[1,15611942,2.040921,2],[1,15611942,2.132992,2],[1,12259042,2.716113,2],[1,12049485,1.181586,2],[1,12049485,1.273657,2],[1,12049485,1.396419,2],[1,12049485,1.457801,2],[1,12049485,1.703325,2],[1,12049485,1.734015,2],[1,12049485,1.948849,2],[1,12259042,1.457801,2],[1,104778,0.997442,2],[1,12259042,1.396419,2],[1,19383955,1.273657,2],[1,104778,0.936061,2],[1,12259042,1.335038,2],[1,19383955,1.42711,2],[1,19383955,1.457801,2],[1,19383955,1.611253,2],[1,104778,0.84399,2],[1,19383955,1.703325,2],[1,104778,0.506394,2],[1,19383955,2.102302,2],[1,19383955,2.132992,2],[1,12259042,0.782609,2],[1,12259042,0.813299,2],[1,19383955,2.163683,2],[1,12259042,1.181586,2],[1,12259042,0.966752,2],[1,19383955,2.347826,2],[1,12259042,1.028133,2],[1,12259042,1.058824,2],[1,19383955,2.378517,2],[1,11839929,1.488491,2],[1,104778,1.97954,2],[1,11839929,1.580563,2],[1,104778,1.918159,2],[1,12468598,0.414322,2],[1,11839929,1.795396,2],[1,104778,1.734015,2],[1,11839929,2.163683,2],[1,11839929,2.194373,2],[1,11839929,2.255754,2],[1,11839929,2.347826,2],[1,11839929,2.746803,2],[1,104778,1.549872,2],[1,104778,1.457801,2],[1,104778,1.42711,2],[1,104778,1.396419,2],[1,15611942,4.28133,2],[1,104778,1.304348,2],[1,104778,1.120205,2],[1,104778,1.089514,2],[1,19383955,0.537084,2],[1,19383955,0.782609,2],[1,19383955,0.936061,2],[1,12049485,0.690537,2],[1,12049485,0.751918,2],[1,12049485,0.813299,2],[1,12049485,0.84399,2],[1,12049485,0.87468,2],[1,12259042,3.514066,2],[1,19383955,1.058824,2],[1,12049485,1.089514,2],[1,12678154,1.212276,2],[1,11211260,1.795396,2],[1,11211260,1.887468,2],[1,11211260,1.918159,2],[1,11211260,1.97954,2],[1,11211260,2.347826,2],[1,12678154,1.120205,2],[1,16659723,7.503836,2],[1,943003,1.120205,2],[1,943003,0.84399,2],[1,12678154,0.997442,2],[1,12678154,0.966752,2],[1,15402386,2.716113,2],[1,11211260,3.237852,2],[1,11211260,3.299233,2],[1,943003,0.721228,2],[1,11211260,3.7289,2],[1,12678154,0.721228,2],[1,15402386,2.838875,2],[1,15402386,3.023018,2],[1,733447,2.777494,2],[1,733447,2.716113,2],[1,733447,2.59335,2],[1,11420816,0.383632,2],[1,733447,2.531969,2],[1,15402386,3.268542,2],[1,733447,2.378517,2],[1,733447,2.286445,2],[1,11420816,0.629156,2],[1,11420816,0.690537,2],[1,733447,2.225064,2],[1,12678154,2.040921,2],[1,19174398,1.795396,2],[1,15402386,1.887468,2],[1,11001704,2.01023,2],[1,943003,3.176471,2],[1,11001704,2.194373,2],[1,12678154,1.734015,2],[1,11001704,2.900256,2],[1,11001704,2.930946,2],[1,11001704,3.084399,2],[1,12678154,1.580563,2],[1,12678154,1.519182,2],[1,943003,2.869565,2],[1,15402386,2.225064,2],[1,11211260,0.751918,2],[1,11211260,0.87468,2],[1,943003,1.887468,2],[1,943003,1.764706,2],[1,943003,1.672634,2],[1,943003,1.580563,2],[1,11211260,1.242967,2],[1,11211260,1.273657,2],[1,11211260,1.304348,2],[1,11211260,1.365729,2],[1,11211260,1.396419,2],[1,11211260,1.457801,2],[1,12678154,1.304348,2],[1,943003,1.365729,2],[1,11211260,1.580563,2],[1,11211260,1.672634,2],[1,11211260,1.703325,2],[1,523891,2.992327,2],[1,523891,2.930946,2],[1,523891,2.624041,2],[1,523891,2.531969,2],[1,523891,2.286445,2],[1,16659723,4.219949,2],[1,523891,1.948849,2],[1,15611942,0.567775,2],[1,15611942,0.598465,2],[1,523891,1.826087,2],[1,16659723,4.035806,2],[1,523891,1.795396,2],[1,16659723,3.974425,2],[1,523891,1.734015,2],[1,11630373,0.966752,2],[1,15611942,0.629156,2],[1,523891,1.549872,2],[1,16659723,3.759591,2],[1,12468598,1.335038,2],[1,16659723,3.69821,2],[1,523891,1.335038,2],[1,523891,1.273657,2],[1,11630373,1.242967,2],[1,16659723,3.514066,2],[1,523891,1.212276,2],[1,16659723,3.421995,2],[1,16659723,3.391304,2],[1,11630373,1.335038,2],[1,11630373,1.365729,2],[1,11630373,1.396419,2],[1,523891,1.150895,2],[1,733447,2.163683,2],[1,11420816,0.84399,2],[1,733447,2.040921,2],[1,11420816,0.997442,2],[1,11420816,1.028133,2],[1,11420816,1.058824,2],[1,11420816,1.120205,2],[1,733447,1.795396,2],[1,11420816,1.181586,2],[1,733447,1.734015,2],[1,733447,1.672634,2],[1,11420816,1.273657,2],[1,733447,1.457801,2],[1,733447,1.273657,2],[1,11420816,1.826087,2],[1,733447,1.212276,2],[1,12468598,2.040921,2],[1,15402386,3.943734,2],[1,11420816,2.071611,2],[1,12468598,1.795396,2],[1,12468598,1.703325,2],[1,11420816,2.501279,2],[1,16659723,5.079284,2],[1,11420816,2.531969,2],[1,12468598,1.641944,2],[1,12468598,1.611253,2],[1,12468598,1.42711,2],[1,11420816,3.421995,2],[1,733447,0.690537,2],[1,523891,4.127877,2],[1,16659723,4.557545,2],[1,15821498,1.948849,2],[1,14983273,1.580563,2],[1,9534810,0.168798,2],[1,2409897,3.882353,2],[1,2619453,3.575448,2],[1,9744366,1.856777,2],[1,2619453,3.636829,2],[1,14983273,2.317136,2],[1,2619453,3.7289,2],[1,2409897,3.974425,2],[1,17078836,2.501279,2],[1,9325254,0.721228,2],[1,2409897,1.028133,2],[1,9744366,1.948849,2],[1,2619453,3.913043,2],[1,2619453,0.782609,2],[1,2619453,3.974425,2],[1,2619453,4.035806,2],[1,17078836,2.409207,2],[1,2619453,4.066496,2],[1,9744366,1.97954,2],[1,13097267,2.102302,2],[1,2619453,1.058824,2],[1,17078836,3.299233,2],[1,13097267,2.071611,2],[1,9744366,1.089514,2],[1,2619453,1.028133,2],[1,2619453,3.421995,2],[1,2409897,1.580563,2],[1,2409897,1.549872,2],[1,2619453,3.514066,2],[1,17078836,3.023018,2],[1,13097267,1.734015,2],[1,9115698,0.721228,2],[1,2409897,1.42711,2],[1,17078836,2.900256,2],[1,9744366,1.519182,2],[1,2409897,3.575448,2],[1,13097267,1.335038,2],[1,15821498,2.900256,2],[1,15821498,1.887468,2],[1,17078836,2.654731,2],[1,2409897,3.667519,2],[1,13097267,1.120205,2],[1,17288392,1.396419,2],[1,13097267,1.089514,2],[1,17078836,1.764706,2],[1,2619453,7.780051,2],[1,2829010,0.015345,2],[1,17078836,1.734015,2],[1,2829010,0.046036,2],[1,9744366,2.439898,2],[1,9744366,2.470588,2],[1,17078836,1.641944,2],[1,17078836,1.611253,2],[1,18755286,2.01023,2],[1,15821498,0.721228,2],[1,17078836,1.549872,2],[1,9115698,0.29156,2],[1,17078836,1.488491,2],[1,17078836,1.457801,2],[1,13097267,0.997442,2],[1,13097267,0.966752,2],[1,17078836,1.365729,2],[1,2829010,0.168798,2],[1,2409897,4.342711,2],[1,2409897,0.997442,2],[1,2619453,0.721228,2],[1,17078836,2.317136,2],[1,14773717,5.44757,2],[1,18755286,2.470588,2],[1,2409897,0.84399,2],[1,15821498,2.194373,2],[1,17078836,2.225064,2],[1,17078836,2.194373,2],[1,14983273,2.347826,2],[1,2409897,0.659847,2],[1,17288392,1.089514,2],[1,14983273,1.457801,2],[1,17078836,2.040921,2],[1,2200341,6.368286,2],[1,14773717,5.232737,2],[1,14983273,2.409207,2],[1,2409897,4.680307,2],[1,17078836,1.887468,2],[1,2619453,4.956522,2],[1,9744366,2.286445,2],[1,9534810,2.225064,2],[1,15821498,3.176471,2],[1,2619453,2.163683,2],[1,2619453,1.672634,2],[1,2409897,2.654731,2],[1,9534810,2.501279,2],[1,9534810,2.777494,2],[1,9534810,3.207161,2],[1,9534810,4.066496,2],[1,2619453,2.225064,2],[1,13097267,3.023018,2],[1,2409897,2.56266,2],[1,9534810,4.680307,2],[1,9534810,4.803069,2],[1,2409897,2.501279,2],[1,2619453,1.549872,2],[1,13097267,6.368286,2],[1,9534810,0.782609,2],[1,15821498,3.053708,2],[1,9534810,0.721228,2],[1,13097267,2.930946,2],[1,2619453,2.040921,2],[1,9115698,2.071611,2],[1,2409897,3.11509,2],[1,14983273,1.795396,2],[1,13306823,2.746803,2],[1,9115698,1.948849,2],[1,14983273,1.918159,2],[1,9115698,1.826087,2],[1,9534810,1.181586,2],[1,9115698,1.641944,2],[1,2409897,2.900256,2],[1,9534810,1.365729,2],[1,13306823,3.667519,2],[1,13097267,5.969309,2],[1,13097267,6.122762,2],[1,2619453,1.887468,2],[1,9534810,1.42711,2],[1,2409897,2.777494,2],[1,2409897,2.716113,2],[1,2619453,1.795396,2],[1,9534810,0.905371,2],[1,9534810,1.97954,2],[1,2619453,2.777494,2],[1,14983273,2.132992,2],[1,2409897,1.948849,2],[1,15821498,1.212276,2],[1,9744366,0.475703,2],[1,13097267,2.225064,2],[1,9325254,0.414322,2],[1,17078836,3.7289,2],[1,14983273,1.641944,2],[1,9744366,0.567775,2],[1,2619453,3.053708,2],[1,2619453,1.120205,2],[1,9744366,0.629156,2],[1,13097267,2.132992,2],[1,2409897,1.734015,2],[1,2619453,3.084399,2],[1,9744366,0.751918,2],[1,2409897,3.544757,2],[1,9744366,0.87468,2],[1,9744366,0.905371,2],[1,14983273,0.230179,2],[1,2619453,1.089514,2],[1,9534810,0.690537,2],[1,13097267,2.808184,2],[1,13097267,2.716113,2],[1,9115698,1.304348,2],[1,2409897,3.299233,2],[1,14983273,0.537084,2],[1,9534810,6.214834,2],[1,14983273,0.506394,2],[1,13097267,2.501279,2],[1,2409897,2.409207,2],[1,2409897,3.329923,2],[1,15821498,1.396419,2],[1,9534810,0.598465,2],[1,2409897,3.391304,2],[1,9115698,1.089514,2],[1,2409897,2.317136,2],[1,2409897,2.255754,2],[1,14983273,2.071611,2],[1,9115698,0.997442,2],[1,9534810,0.445013,2],[1,2619453,2.746803,2],[1,13097267,2.347826,2],[1,17288392,3.084399,2],[1,8906141,1.918159,2],[1,13097267,0.506394,2],[1,14983273,2.869565,2],[1,2200341,1.519182,2],[1,17288392,3.207161,2],[1,17288392,3.237852,2],[1,2200341,1.457801,2],[1,9325254,3.11509,2],[1,17288392,3.299233,2],[1,18755286,0.966752,2],[1,13306823,1.457801,2],[1,9325254,2.992327,2],[1,2200341,1.273657,2],[1,9325254,1.304348,2],[1,9325254,1.335038,2],[1,2619453,0.26087,2],[1,13306823,1.580563,2],[1,9325254,1.396419,2],[1,9953923,0.445013,2],[1,13306823,2.409207,2],[1,17288392,2.531969,2],[1,2619453,0.445013,2],[1,13306823,1.150895,2],[1,13306823,1.242967,2],[1,2200341,1.826087,2],[1,8906141,2.930946,2],[1,2200341,1.764706,2],[1,8906141,2.777494,2],[1,2200341,1.734015,2],[1,8906141,2.624041,2],[1,13097267,0.629156,2],[1,9325254,3.237852,2],[1,2200341,1.703325,2],[1,13097267,0.598465,2],[1,17288392,2.838875,2],[1,17288392,2.930946,2],[1,9744366,3.913043,2],[1,17288392,3.023018,2],[1,9325254,3.14578,2],[1,13097267,0.537084,2],[1,14983273,1.212276,2],[1,8906141,1.519182,2],[1,13306823,2.225064,2],[1,9953923,0.84399,2],[1,18964842,0.751918,2],[1,13516379,0.26087,2],[1,2409897,6.398977,2],[1,14983273,1.181586,2],[1,9325254,1.795396,2],[1,9325254,1.948849,2],[1,13097267,0.199488,2],[1,13306823,2.194373,2],[1,18964842,1.058824,2],[1,15821498,2.624041,2],[1,13097267,0.138107,2],[1,18964842,1.181586,2],[1,18964842,1.242967,2],[1,9953923,1.273657,2],[1,9325254,1.887468,2],[1,9953923,1.304348,2],[1,2829010,0.721228,2],[1,2200341,0.997442,2],[1,9325254,2.716113,2],[1,14983273,1.242967,2],[1,2200341,0.936061,2],[1,9325254,2.59335,2],[1,18755286,0.84399,2],[1,9953923,0.567775,2],[1,9325254,1.519182,2],[1,18755286,0.782609,2],[1,18964842,0.29156,2],[1,15821498,2.531969,2],[1,9325254,1.549872,2],[1,9325254,1.611253,2],[1,18964842,0.352941,2],[1,18964842,0.567775,2],[1,9953923,0.690537,2],[1,8906141,1.611253,2],[1,9325254,2.470588,2],[1,9325254,1.734015,2],[1,9953923,0.782609,2],[1,18755286,1.672634,2],[1,2200341,2.470588,2],[1,2200341,2.409207,2],[1,2619453,0.598465,2],[1,17288392,1.887468,2],[1,13306823,2.470588,2],[1,17078836,0.659847,2],[1,2200341,2.317136,2],[1,2200341,2.286445,2],[1,9325254,6.214834,2],[1,18755286,1.519182,2],[1,18755286,1.396419,2],[1,17078836,0.506394,2],[1,2200341,2.194373,2],[1,14983273,2.685422,2],[1,18755286,1.365729,2],[1,2200341,2.102302,2],[1,15821498,2.317136,2],[1,13306823,0.352941,2],[1,2409897,5.048593,2],[1,13097267,0.936061,2],[1,13306823,0.168798,2],[1,17078836,1.273657,2],[1,2619453,0.690537,2],[1,17288392,1.703325,2],[1,15821498,0.445013,2],[1,2200341,2.930946,2],[1,17288392,1.734015,2],[1,18755286,1.764706,2],[1,13097267,0.84399,2],[1,2200341,2.900256,2],[1,15821498,0.26087,2],[1,17078836,0.997442,2],[1,2200341,2.716113,2],[1,2200341,2.654731,2],[1,2200341,2.624041,2],[1,18755286,1.703325,2],[1,17078836,0.87468,2],[1,13097267,0.751918,2],[1,17078836,0.813299,2],[1,2200341,2.59335,2],[1,2200341,2.01023,2],[1,17288392,2.347826,2],[1,2619453,0.475703,2],[1,9325254,1.120205,2],[1,17288392,2.317136,2],[1,14773717,4.035806,2],[1,15821498,2.378517,2],[1,2200341,1.856777,2],[1,17288392,2.470588,2],[1,13306823,0.506394,2],[1,9325254,5.079284,2],[1,13306823,4.772379,2],[1,13306823,0.629156,2],[1,14983273,1.335038,2],[1,13306823,0.445013,2],[1,9325254,1.058824,2],[1,2200341,1.918159,2],[1,13306823,0.813299,2],[1,13306823,0.475703,2],[1,17288392,2.439898,2],[1,14983273,2.716113,2],[1,13306823,0.966752,2],[1,733447,0.966752,3],[1,733447,1.304348,3],[1,733447,2.071611,3],[1,2619453,0.87468,3],[1,14145048,3.452685,3],[1,14773717,0.659847,3],[1,2619453,0.905371,3],[1,14773717,0.721228,3],[1,733447,0.936061,3],[1,15611942,0.721228,3],[1,523891,2.071611,3],[1,3038566,1.212276,3],[1,5343685,2.685422,3],[1,523891,2.501279,3],[1,523891,1.304348,3],[1,733447,2.255754,3],[1,5553241,0.813299,3],[1,2619453,0.997442,3],[1,5343685,2.654731,3],[1,15611942,0.322251,3],[1,5343685,3.360614,3],[1,3038566,1.242967,3],[1,3038566,1.304348,3],[1,2619453,0.352941,3],[1,733447,1.488491,3],[1,733447,1.580563,3],[1,15821498,2.930946,3],[1,733447,1.42711,3],[1,14983273,0.87468,3],[1,2619453,0.537084,3],[1,733447,1.641944,3],[1,5343685,2.409207,3],[1,2619453,1.335038,3],[1,14145048,3.667519,3],[1,5343685,2.930946,3],[1,14145048,3.237852,3],[1,15611942,0.168798,3],[1,2619453,1.150895,3],[1,3038566,0.905371,3],[1,733447,1.058824,3],[1,15821498,3.023018,3],[1,5343685,2.59335,3],[1,3038566,0.84399,3],[1,14983273,0.84399,3],[1,2619453,0.506394,3],[1,5343685,3.176471,3],[1,5553241,0.26087,3],[1,2619453,0.659847,3],[1,14983273,1.150895,3],[1,733447,0.905371,3],[1,3038566,1.181586,3],[1,733447,1.396419,3],[1,5553241,0.383632,3],[1,523891,1.488491,3],[1,15611942,0.537084,3],[1,18755286,1.242967,3],[1,104778,1.058824,3],[1,19383955,0.29156,3],[1,19383955,0.475703,3],[1,19383955,0.598465,3],[1,19383955,2.654731,3],[1,14773717,3.053708,3],[1,19383955,0.87468,3],[1,2829010,0.659847,3],[1,2829010,2.132992,3],[1,2829010,2.040921,3],[1,18755286,1.150895,3],[1,104778,1.028133,3],[1,2829010,0.690537,3],[1,18755286,1.058824,3],[1,2829010,1.611253,3],[1,18755286,1.028133,3],[1,19383955,1.089514,3],[1,5553241,2.777494,3],[1,104778,1.887468,3],[1,2829010,0.352941,3],[1,104778,1.826087,3],[1,2829010,2.378517,3],[1,2829010,0.383632,3],[1,2829010,0.414322,3],[1,104778,1.672634,3],[1,104778,1.641944,3],[1,5553241,3.11509,3],[1,104778,1.611253,3],[1,104778,1.580563,3],[1,2829010,0.567775,3],[1,14145048,2.317136,3],[1,104778,1.488491,3],[1,5553241,3.391304,3],[1,14773717,2.869565,3],[1,104778,1.242967,3],[1,14145048,2.01023,3],[1,14145048,1.181586,3],[1,5762797,0.84399,3],[1,104778,0.567775,3],[1,19383955,2.040921,3],[1,2829010,0.966752,3],[1,18755286,0.721228,3],[1,18755286,0.659847,3],[1,18755286,0.537084,3],[1,14145048,1.150895,3],[1,14145048,1.089514,3],[1,5762797,1.150895,3],[1,19383955,2.255754,3],[1,104778,0.383632,3],[1,18755286,0.506394,3],[1,5762797,1.181586,3],[1,2829010,0.751918,3],[1,2829010,0.84399,3],[1,18755286,0.322251,3],[1,19383955,3.11509,3],[1,2829010,1.304348,3],[1,19383955,1.150895,3],[1,19383955,1.212276,3],[1,19383955,1.242967,3],[1,14145048,1.335038,3],[1,104778,0.87468,3],[1,14145048,1.273657,3],[1,14145048,1.212276,3],[1,5762797,0.26087,3],[1,5762797,0.322251,3],[1,18755286,0.936061,3],[1,2829010,1.150895,3],[1,5762797,0.414322,3],[1,19383955,1.549872,3],[1,5762797,0.506394,3],[1,2829010,1.089514,3],[1,104778,0.813299,3],[1,5762797,0.567775,3],[1,104778,0.721228,3],[1,14773717,1.396419,3],[1,14773717,1.42711,3],[1,15611942,0.997442,3],[1,18126617,1.519182,3],[1,14983273,0.567775,3],[1,14773717,1.611253,3],[1,18126617,1.365729,3],[1,5553241,1.611253,3],[1,15611942,1.242967,3],[1,2829010,3.820972,3],[1,2619453,2.470588,3],[1,2619453,2.716113,3],[1,14773717,1.97954,3],[1,14983273,0.322251,3],[1,14983273,0.29156,3],[1,2829010,3.421995,3],[1,2829010,3.391304,3],[1,2619453,3.14578,3],[1,14983273,0.690537,3],[1,523891,1.181586,3],[1,18126617,2.132992,3],[1,5553241,1.42711,3],[1,14773717,0.997442,3],[1,18126617,1.918159,3],[1,14773717,1.028133,3],[1,523891,1.120205,3],[1,18126617,1.764706,3],[1,2619453,2.071611,3],[1,18126617,1.703325,3],[1,523891,0.84399,3],[1,523891,0.782609,3],[1,18126617,1.672634,3],[1,523891,0.690537,3],[1,14773717,1.304348,3],[1,523891,0.659847,3],[1,523891,0.537084,3],[1,14773717,1.365729,3],[1,5553241,2.163683,3],[1,14983273,0.046036,3],[1,314334,1.42711,3],[1,2619453,3.851662,3],[1,5553241,2.409207,3],[1,18755286,2.56266,3],[1,15611942,2.286445,3],[1,5553241,2.501279,3],[1,314334,0.84399,3],[1,314334,0.445013,3],[1,314334,0.414322,3],[1,2829010,2.716113,3],[1,104778,2.378517,3],[1,104778,2.225064,3],[1,2829010,0.230179,3],[1,2829010,2.470588,3],[1,5553241,2.685422,3],[1,2829010,2.409207,3],[1,5553241,2.746803,3],[1,314334,2.163683,3],[1,314334,2.102302,3],[1,18126617,1.242967,3],[1,314334,1.97954,3],[1,2619453,3.299233,3],[1,2619453,3.360614,3],[1,2619453,3.391304,3],[1,314334,1.734015,3],[1,18126617,1.089514,3],[1,18126617,1.028133,3],[1,2619453,3.544757,3],[1,314334,1.672634,3],[1,18126617,0.751918,3],[1,15611942,2.163683,3],[1,18126617,0.567775,3],[1,5553241,1.764706,3],[1,18126617,0.352941,3],[1,314334,1.611253,3],[1,5553241,1.918159,3],[1,14564160,0.475703,3],[1,4505460,0.813299,3],[1,18545730,2.132992,3],[1,18545730,2.163683,3],[1,14564160,0.537084,3],[1,3667235,1.948849,3],[1,14564160,0.567775,3],[1,1781228,1.948849,3],[1,4505460,0.936061,3],[1,1781228,1.887468,3],[1,4505460,1.058824,3],[1,1781228,1.212276,3],[1,14354604,2.808184,3],[1,1781228,1.150895,3],[1,14983273,2.531969,3],[1,14354604,2.59335,3],[1,4505460,1.304348,3],[1,1781228,0.905371,3],[1,15821498,0.659847,3],[1,1990785,0.936061,3],[1,1990785,0.782609,3],[1,14354604,3.11509,3],[1,15192829,1.089514,3],[1,15192829,1.150895,3],[1,14564160,0.168798,3],[1,18545730,1.273657,3],[1,15192829,1.212276,3],[1,14564160,0.199488,3],[1,18545730,1.365729,3],[1,3876791,0.230179,3],[1,15192829,1.457801,3],[1,14564160,0.26087,3],[1,4505460,0.659847,3],[1,4505460,0.721228,3],[1,2200341,2.255754,3],[1,1781228,2.56266,3],[1,14564160,0.414322,3],[1,1781228,2.409207,3],[1,1781228,2.163683,3],[1,3667235,0.29156,3],[1,1571672,2.132992,3],[1,3667235,0.230179,3],[1,14354604,1.396419,3],[1,2409897,1.212276,3],[1,14564160,1.181586,3],[1,14564160,1.242967,3],[1,4924572,0.721228,3],[1,2409897,1.273657,3],[1,4924572,0.87468,3],[1,4924572,0.905371,3],[1,4924572,0.936061,3],[1,18336173,2.470588,3],[1,15402386,0.322251,3],[1,1571672,1.519182,3],[1,1571672,1.396419,3],[1,14354604,1.335038,3],[1,4924572,1.181586,3],[1,2409897,1.396419,3],[1,1781228,0.107417,3],[1,4715016,0.567775,3],[1,14564160,0.751918,3],[1,3667235,1.181586,3],[1,14354604,2.194373,3],[1,4715016,1.304348,3],[1,14354604,2.040921,3],[1,4715016,1.519182,3],[1,3667235,1.058824,3],[1,15821498,0.84399,3],[1,4715016,1.703325,3],[1,15821498,0.87468,3],[1,14354604,1.795396,3],[1,2409897,0.905371,3],[1,3667235,0.537084,3],[1,3667235,0.506394,3],[1,3667235,0.414322,3],[1,14354604,1.611253,3],[1,14354604,1.580563,3],[1,1571672,2.286445,3],[1,4086347,1.42711,3],[1,3876791,1.488491,3],[1,4086347,1.457801,3],[1,3876791,1.457801,3],[1,4086347,1.549872,3],[1,4086347,1.580563,3],[1,18964842,0.199488,3],[1,15192829,0.168798,3],[1,4086347,1.856777,3],[1,4086347,1.887468,3],[1,15192829,0.29156,3],[1,4086347,2.01023,3],[1,1990785,2.59335,3],[1,4086347,2.040921,3],[1,18964842,2.716113,3],[1,2200341,1.028133,3],[1,2200341,1.058824,3],[1,14983273,3.053708,3],[1,18964842,2.961637,3],[1,3876791,2.163683,3],[1,3876791,2.194373,3],[1,18964842,1.335038,3],[1,18964842,1.519182,3],[1,18964842,1.150895,3],[1,18964842,1.611253,3],[1,4086347,0.414322,3],[1,18964842,0.997442,3],[1,14983273,3.575448,3],[1,18964842,0.936061,3],[1,18964842,0.87468,3],[1,4086347,0.629156,3],[1,4086347,0.690537,3],[1,4086347,0.966752,3],[1,18964842,0.690537,3],[1,4086347,1.120205,3],[1,18964842,0.598465,3],[1,4086347,1.242967,3],[1,4086347,1.273657,3],[1,4086347,1.396419,3],[1,14354604,3.391304,3],[1,4295903,1.795396,3],[1,2200341,1.795396,3],[1,4295903,1.826087,3],[1,4295903,1.856777,3],[1,1990785,1.457801,3],[1,15192829,0.721228,3],[1,3876791,0.659847,3],[1,4295903,1.887468,3],[1,18545730,0.905371,3],[1,18545730,0.966752,3],[1,1990785,1.335038,3],[1,1990785,1.273657,3],[1,2200341,1.887468,3],[1,1990785,1.242967,3],[1,1990785,1.212276,3],[1,18336173,6.736573,3],[1,1990785,1.089514,3],[1,3876791,0.629156,3],[1,1990785,1.028133,3],[1,3876791,1.120205,3],[1,2200341,1.335038,3],[1,2200341,1.396419,3],[1,3876791,1.058824,3],[1,4295903,0.567775,3],[1,2200341,1.42711,3],[1,1990785,1.856777,3],[1,4295903,0.966752,3],[1,2200341,1.488491,3],[1,4295903,1.028133,3],[1,4295903,1.089514,3],[1,4295903,1.120205,3],[1,4295903,1.212276,3],[1,3876791,0.936061,3],[1,14983273,2.777494,3],[1,3876791,0.690537,3],[1,4295903,1.457801,3],[1,15192829,0.598465,3],[1,15192829,0.629156,3],[1,18545730,0.659847,3],[1,14354604,0.782609,3],[1,14354604,0.751918,3],[1,2409897,3.913043,3],[1,15821498,2.071611,3],[1,5134129,3.452685,3],[1,15821498,2.132992,3],[1,16031054,1.672634,3],[1,15402386,1.97954,3],[1,5134129,3.606138,3],[1,16031054,1.764706,3],[1,5134129,3.820972,3],[1,15402386,2.102302,3],[1,19174398,2.102302,3],[1,15402386,2.132992,3],[1,943003,2.194373,3],[1,15821498,2.255754,3],[1,943003,2.102302,3],[1,3248122,0.813299,3],[1,943003,1.97954,3],[1,16031054,1.028133,3],[1,5134129,1.97954,3],[1,16031054,1.058824,3],[1,5134129,2.102302,3],[1,1152559,0.997442,3],[1,5134129,2.255754,3],[1,16031054,1.181586,3],[1,5134129,2.378517,3],[1,19174398,1.212276,3],[1,16031054,1.242967,3],[1,16031054,1.304348,3],[1,14354604,0.84399,3],[1,1152559,0.905371,3],[1,19174398,1.335038,3],[1,19174398,1.365729,3],[1,19174398,1.396419,3],[1,19174398,1.488491,3],[1,16031054,1.396419,3],[1,1152559,0.751918,3],[1,16031054,1.457801,3],[1,5343685,0.936061,3],[1,19174398,3.237852,3],[1,5343685,1.028133,3],[1,5343685,1.089514,3],[1,14983273,1.304348,3],[1,5343685,1.365729,3],[1,3038566,1.887468,3],[1,943003,0.690537,3],[1,943003,0.445013,3],[1,5343685,1.457801,3],[1,3038566,1.672634,3],[1,3038566,1.580563,3],[1,14145048,4.526854,3],[1,15402386,3.207161,3],[1,5343685,1.703325,3],[1,733447,2.56266,3],[1,5343685,2.040921,3],[1,3038566,1.365729,3],[1,3038566,1.335038,3],[1,733447,2.439898,3],[1,14354604,0.598465,3],[1,3248122,0.782609,3],[1,15402386,2.409207,3],[1,14983273,1.42711,3],[1,14354604,0.475703,3],[1,943003,1.519182,3],[1,14354604,0.352941,3],[1,14354604,0.26087,3],[1,943003,1.457801,3],[1,3248122,0.445013,3],[1,5343685,0.29156,3],[1,5343685,0.322251,3],[1,943003,1.304348,3],[1,5343685,0.414322,3],[1,5343685,0.506394,3],[1,3248122,0.168798,3],[1,943003,1.212276,3],[1,3248122,0.138107,3],[1,5343685,0.567775,3],[1,5343685,0.87468,3],[1,2409897,1.918159,3],[1,1362116,1.856777,3],[1,18336173,1.641944,3],[1,18336173,1.580563,3],[1,2409897,2.071611,3],[1,4924572,1.580563,3],[1,18336173,1.519182,3],[1,2409897,2.347826,3],[1,1362116,1.42711,3],[1,18336173,1.457801,3],[1,18336173,1.42711,3],[1,18336173,1.304348,3],[1,14564160,1.887468,3],[1,14564160,1.948849,3],[1,1362116,1.120205,3],[1,15402386,0.997442,3],[1,18336173,1.150895,3],[1,14564160,2.040921,3],[1,1362116,0.813299,3],[1,4924572,1.335038,3],[1,4924572,1.365729,3],[1,1571672,1.150895,3],[1,2409897,1.519182,3],[1,1571672,1.028133,3],[1,2409897,1.611253,3],[1,1571672,0.905371,3],[1,1571672,0.690537,3],[1,1571672,0.445013,3],[1,1571672,0.352941,3],[1,15402386,0.475703,3],[1,15821498,1.120205,3],[1,18336173,1.918159,3],[1,15821498,1.150895,3],[1,1362116,2.654731,3],[1,15821498,1.181586,3],[1,15402386,0.598465,3],[1,15402386,0.629156,3],[1,2409897,1.826087,3],[1,4924572,1.488491,3],[1,5134129,0.322251,3],[1,5134129,0.659847,3],[1,5134129,0.721228,3],[1,1152559,1.212276,3],[1,5134129,1.058824,3],[1,5134129,1.181586,3],[1,5134129,1.242967,3],[1,5134129,1.304348,3],[1,5134129,1.335038,3],[1,19174398,0.322251,3],[1,19174398,0.383632,3],[1,19174398,0.506394,3],[1,19174398,0.537084,3],[1,5134129,1.580563,3],[1,2409897,3.176471,3],[1,19174398,0.721228,3],[1,5134129,1.734015,3],[1,5134129,1.764706,3],[1,1152559,1.120205,3],[1,5134129,1.856777,3],[1,18336173,0.905371,3],[1,1362116,0.659847,3],[1,18336173,0.87468,3],[1,1362116,0.629156,3],[1,1362116,0.29156,3],[1,1362116,0.199488,3],[1,14564160,2.102302,3],[1,4924572,2.194373,3],[1,2409897,2.624041,3],[1,14354604,1.028133,3],[1,16031054,0.352941,3],[1,3457678,0.107417,3],[1,15821498,1.519182,3],[1,16031054,0.475703,3],[1,15821498,1.580563,3],[1,4924572,4.618926,3],[1,15821498,1.641944,3],[1,1152559,1.611253,3],[1,15402386,1.672634,3],[1,3248122,1.488491,3],[1,6810579,0.905371,3],[1,7229691,1.457801,3],[1,13935492,0.015345,3],[1,16869279,1.42711,3],[1,17078836,2.071611,3],[1,13516379,1.856777,3],[1,7229691,1.641944,3],[1,16659723,3.636829,3],[1,6810579,0.659847,3],[1,7439247,2.102302,3],[1,19593511,0.905371,3],[1,6810579,0.567775,3],[1,17707504,1.396419,3],[1,11630373,1.212276,3],[1,7439247,2.163683,3],[1,8277473,0.598465,3],[1,17078836,2.163683,3],[1,7439247,2.347826,3],[1,8696585,0.107417,3],[1,7439247,2.531969,3],[1,7229691,1.703325,3],[1,13097267,1.242967,3],[1,11630373,1.488491,3],[1,11630373,1.519182,3],[1,17078836,2.286445,3],[1,17078836,2.347826,3],[1,12468598,1.273657,3],[1,13935492,1.672634,3],[1,13725935,2.439898,3],[1,16659723,3.14578,3],[1,13935492,1.734015,3],[1,8696585,0.322251,3],[1,11630373,0.84399,3],[1,13935492,0.997442,3],[1,13935492,1.028133,3],[1,11630373,0.87468,3],[1,16869279,1.150895,3],[1,8487029,2.378517,3],[1,10792148,2.132992,3],[1,17497948,2.439898,3],[1,16659723,3.943734,3],[1,17078836,1.212276,3],[1,11630373,1.028133,3],[1,17078836,1.242967,3],[1,6810579,1.97954,3],[1,9744366,2.624041,3],[1,6810579,1.764706,3],[1,6810579,1.734015,3],[1,13935492,1.365729,3],[1,13725935,0.506394,3],[1,13097267,1.058824,3],[1,7439247,2.01023,3],[1,6810579,1.488491,3],[1,13097267,1.150895,3],[1,6810579,1.42711,3],[1,13935492,1.488491,3],[1,6810579,1.335038,3],[1,17078836,1.97954,3],[1,6810579,1.273657,3],[1,11630373,1.089514,3],[1,11630373,1.150895,3],[1,6810579,1.028133,3],[1,6810579,0.997442,3],[1,8487029,2.56266,3],[1,7229691,1.948849,3],[1,7229691,2.102302,3],[1,8696585,0.966752,3],[1,8696585,0.997442,3],[1,16450167,0.168798,3],[1,7229691,2.624041,3],[1,9744366,1.304348,3],[1,8696585,1.335038,3],[1,8696585,1.457801,3],[1,12468598,0.997442,3],[1,12468598,0.966752,3],[1,8696585,1.580563,3],[1,8696585,1.611253,3],[1,16869279,1.734015,3],[1,13097267,1.948849,3],[1,13516379,1.181586,3],[1,13725935,2.347826,3],[1,10792148,1.97954,3],[1,13516379,1.089514,3],[1,16659723,2.01023,3],[1,13725935,3.943734,3],[1,10792148,1.856777,3],[1,9744366,0.966752,3],[1,13725935,1.734015,3],[1,13935492,3.053708,3],[1,6391466,1.641944,3],[1,13516379,0.84399,3],[1,16659723,1.97954,3],[1,6391466,1.611253,3],[1,8696585,2.317136,3],[1,16450167,0.199488,3],[1,13516379,0.782609,3],[1,7439247,2.900256,3],[1,7439247,2.930946,3],[1,16659723,3.084399,3],[1,11630373,1.672634,3],[1,16450167,0.138107,3],[1,7439247,3.023018,3],[1,8696585,0.445013,3],[1,12468598,1.212276,3],[1,13097267,1.304348,3],[1,17078836,2.624041,3],[1,13935492,2.01023,3],[1,8696585,0.567775,3],[1,6601022,1.242967,3],[1,12468598,1.150895,3],[1,13935492,2.040921,3],[1,13935492,2.071611,3],[1,8696585,0.598465,3],[1,13935492,2.132992,3],[1,7229691,1.887468,3],[1,13935492,2.163683,3],[1,12468598,1.120205,3],[1,7439247,1.365729,3],[1,8696585,0.690537,3],[1,6601022,1.028133,3],[1,6601022,0.966752,3],[1,7229691,1.918159,3],[1,8696585,0.721228,3],[1,6601022,0.936061,3],[1,8696585,0.782609,3],[1,8696585,0.813299,3],[1,11630373,2.102302,3],[1,8696585,0.84399,3],[1,17497948,0.414322,3],[1,10163479,1.120205,3],[1,9953923,0.598465,3],[1,16659723,7.595908,3],[1,17497948,0.322251,3],[1,17707504,0.87468,3],[1,9953923,0.537084,3],[1,8277473,1.856777,3],[1,8067916,0.751918,3],[1,7229691,0.87468,3],[1,13935492,0.383632,3],[1,8277473,1.918159,3],[1,11001704,1.42711,3],[1,7020135,2.194373,3],[1,8277473,2.286445,3],[1,11001704,1.396419,3],[1,7020135,2.040921,3],[1,13516379,4.465473,3],[1,13516379,4.189258,3],[1,7020135,1.97954,3],[1,8277473,3.606138,3],[1,13516379,3.820972,3],[1,9953923,0.322251,3],[1,16659723,7.012788,3],[1,17707504,0.84399,3],[1,19593511,0.997442,3],[1,11420816,0.138107,3],[1,17497948,2.163683,3],[1,9953923,0.199488,3],[1,8487029,0.29156,3],[1,13935492,0.076726,3],[1,7020135,1.826087,3],[1,12887710,0.598465,3],[1,16450167,4.741688,3],[1,12678154,1.795396,3],[1,10163479,0.537084,3],[1,17497948,1.42711,3],[1,17707504,1.028133,3],[1,7229691,0.629156,3],[1,11211260,0.537084,3],[1,11211260,0.598465,3],[1,11001704,1.826087,3],[1,7229691,0.721228,3],[1,10792148,3.483376,3],[1,8067916,0.905371,3],[1,11211260,0.84399,3],[1,17497948,0.936061,3],[1,8067916,1.335038,3],[1,11001704,1.641944,3],[1,9953923,0.721228,3],[1,17707504,0.936061,3],[1,12887710,0.782609,3],[1,10792148,2.531969,3],[1,11211260,1.150895,3],[1,11211260,1.335038,3],[1,17497948,2.071611,3],[1,13097267,0.168798,3],[1,8277473,1.611253,3],[1,16869279,0.352941,3],[1,7229691,0.046036,3],[1,11211260,1.549872,3],[1,12678154,1.181586,3],[1,11211260,1.826087,3],[1,16240611,1.918159,3],[1,7020135,1.150895,3],[1,8487029,0.966752,3],[1,16659723,5.386189,3],[1,12468598,1.948849,3],[1,8487029,0.997442,3],[1,17078836,0.475703,3],[1,16450167,1.457801,3],[1,12887710,1.181586,3],[1,7020135,0.905371,3],[1,13097267,0.721228,3],[1,12468598,1.672634,3],[1,8487029,1.150895,3],[1,16450167,1.519182,3],[1,7020135,0.721228,3],[1,11420816,2.808184,3],[1,12468598,1.519182,3],[1,12468598,1.396419,3],[1,10373035,0.352941,3],[1,16869279,1.028133,3],[1,16659723,4.618926,3],[1,13516379,3.023018,3],[1,17078836,0.751918,3],[1,19593511,1.519182,3],[1,13516379,2.56266,3],[1,17078836,0.936061,3],[1,17078836,0.966752,3],[1,17078836,1.028133,3],[1,8487029,2.286445,3],[1,13935492,0.87468,3],[1,16659723,4.189258,3],[1,13935492,0.905371,3],[1,13935492,0.936061,3],[1,11420816,0.322251,3],[1,11420816,0.445013,3],[1,16869279,0.414322,3],[1,16450167,3.329923,3],[1,11420816,0.567775,3],[1,9953923,1.396419,3],[1,7020135,1.764706,3],[1,13097267,0.475703,3],[1,10163479,1.365729,3],[1,13097267,0.567775,3],[1,10163479,1.42711,3],[1,17707504,1.181586,3],[1,13097267,0.659847,3],[1,12887710,0.414322,3],[1,17078836,0.322251,3],[1,17707504,0.690537,3],[1,17078836,0.445013,3],[1,7020135,1.181586,3],[1,7020135,1.212276,3],[1,16869279,0.813299,3],[1,11420816,1.734015,3],[1,8487029,0.905371,3],[1,7020135,1.273657,3],[1,13516379,3.176471,3],[1,17078836,0.383632,3],[1,16450167,1.150895,3],[1,8487029,0.813299,3],[1,17707504,0.629156,3],[1,11420816,1.335038,3],[1,17078836,0.352941,3],[1,11420816,1.242967,3],[1,7020135,1.641944,3],[1,16869279,0.537084,3],[1,12049485,0.598465,3],[1,13306823,1.641944,3],[1,10582591,1.580563,3],[1,13725935,0.905371,3],[1,5972354,2.501279,3],[1,5972354,2.225064,3],[1,13935492,4.434783,3],[1,11001704,0.690537,3],[1,13306823,1.764706,3],[1,7858360,0.84399,3],[1,5972354,1.611253,3],[1,5972354,1.457801,3],[1,9115698,0.659847,3],[1,5972354,1.212276,3],[1,5972354,1.150895,3],[1,10582591,1.273657,3],[1,5972354,1.028133,3],[1,7858360,0.813299,3],[1,5972354,0.936061,3],[1,13306823,2.01023,3],[1,5972354,0.84399,3],[1,9325254,2.040921,3],[1,12049485,0.659847,3],[1,13306823,2.163683,3],[1,5972354,0.690537,3],[1,12049485,0.905371,3],[1,16450167,0.445013,3],[1,5972354,0.598465,3],[1,17288392,0.322251,3],[1,5972354,0.537084,3],[1,12049485,1.058824,3],[1,17917061,4.066496,3],[1,12049485,0.138107,3],[1,12887710,0.29156,3],[1,17288392,1.580563,3],[1,7858360,1.181586,3],[1,10582591,2.163683,3],[1,9534810,0.076726,3],[1,10373035,2.01023,3],[1,10582591,1.734015,3],[1,7439247,0.567775,3],[1,17288392,1.335038,3],[1,9325254,9.744246,3],[1,13725935,1.028133,3],[1,6181910,0.26087,3],[1,7648804,1.273657,3],[1,12049485,0.414322,3],[1,12049485,0.445013,3],[1,9115698,0.445013,3],[1,9953923,2.347826,3],[1,17288392,1.120205,3],[1,7648804,1.396419,3],[1,7648804,1.457801,3],[1,17917061,4.250639,3],[1,17707504,2.470588,3],[1,17288392,0.936061,3],[1,9115698,0.475703,3],[1,7648804,1.488491,3],[1,12049485,0.475703,3],[1,9115698,0.506394,3],[1,13306823,0.598465,3],[1,16450167,1.887468,3],[1,9325254,4.404092,3],[1,16869279,5.478261,3],[1,19593511,1.335038,3],[1,9115698,2.102302,3],[1,13725935,0.199488,3],[1,14145048,0.659847,3],[1,13306823,2.961637,3],[1,14145048,0.690537,3],[1,5762797,2.439898,3],[1,5762797,2.378517,3],[1,12259042,0.690537,3],[1,9325254,0.046036,3],[1,12259042,0.721228,3],[1,13725935,0.046036,3],[1,7439247,0.84399,3],[1,9325254,0.936061,3],[1,10582591,0.782609,3],[1,17707504,2.255754,3],[1,16450167,2.163683,3],[1,12259042,0.936061,3],[1,16240611,2.255754,3],[1,16450167,0.659847,3],[1,9325254,0.690537,3],[1,12259042,1.089514,3],[1,19593511,2.132992,3],[1,9325254,0.659847,3],[1,14145048,0.905371,3],[1,9325254,0.629156,3],[1,19593511,2.163683,3],[1,16450167,0.690537,3],[1,9325254,0.567775,3],[1,9325254,0.506394,3],[1,9953923,3.882353,3],[1,12259042,1.641944,3],[1,12259042,1.42711,3],[1,17288392,0.29156,3],[1,5972354,0.383632,3],[1,7439247,0.659847,3],[1,10582591,0.352941,3],[1,12259042,0.046036,3],[1,7439247,1.058824,3],[1,16240611,0.383632,3],[1,17288392,0.138107,3],[1,16240611,0.414322,3],[1,7648804,2.255754,3],[1,19593511,1.856777,3],[1,9953923,4.250639,3],[1,7439247,0.997442,3],[1,10582591,1.212276,3],[1,19593511,1.304348,3],[1,9115698,1.058824,3],[1,16450167,0.506394,3],[1,12259042,0.352941,3],[1,9115698,1.120205,3],[1,9325254,1.242967,3],[1,5762797,2.900256,3],[1,5762797,2.838875,3],[1,5762797,2.808184,3],[1,12259042,0.475703,3],[1,7648804,2.900256,3],[1,9325254,1.150895,3],[1,16240611,2.132992,3],[1,12259042,0.537084,3],[1,9115698,1.457801,3],[1,12259042,0.598465,3],[1,9534810,9.529412,3],[1,11839929,0.782609,3],[1,17917061,1.181586,3],[1,17917061,1.242967,3],[1,7439247,1.273657,3],[1,6391466,0.813299,3],[1,6391466,0.782609,3],[1,6391466,0.751918,3],[1,16659723,1.335038,3],[1,11839929,0.87468,3],[1,9534810,5.079284,3],[1,13097267,2.992327,3],[1,8906141,0.629156,3],[1,10373035,1.212276,3],[1,8067916,1.887468,3],[1,13725935,1.150895,3],[1,9534810,1.549872,3],[1,17917061,1.703325,3],[1,8906141,1.212276,3],[1,9534810,1.641944,3],[1,16659723,0.966752,3],[1,16240611,1.212276,3],[1,8067916,1.918159,3],[1,10373035,1.396419,3],[1,9534810,1.703325,3],[1,13725935,1.120205,3],[1,16450167,1.549872,3],[1,16659723,1.058824,3],[1,8906141,1.058824,3],[1,10373035,1.304348,3],[1,9534810,1.795396,3],[1,8906141,0.813299,3],[1,9534810,2.409207,3],[1,10373035,0.997442,3],[1,16659723,1.734015,3],[1,13097267,2.194373,3],[1,13725935,1.273657,3],[1,9744366,0.721228,3],[1,13725935,0.567775,3],[1,11839929,0.567775,3],[1,11839929,0.506394,3],[1,19593511,0.690537,3],[1,13725935,1.488491,3],[1,8696585,3.053708,3],[1,16869279,2.01023,3],[1,8696585,2.930946,3],[1,11839929,0.383632,3],[1,13516379,0.537084,3],[1,13725935,1.611253,3],[1,6391466,1.335038,3],[1,19593511,0.414322,3],[1,6391466,0.905371,3],[1,13725935,0.629156,3],[1,17917061,0.936061,3],[1,17917061,0.84399,3],[1,11839929,0.659847,3],[1,6391466,0.997442,3],[1,11001704,1.028133,3],[1,9744366,0.138107,3],[1,10792148,1.764706,3],[1,9953923,1.856777,3],[1,16450167,0.230179,3],[1,9744366,0.352941,3],[1,13097267,2.286445,3],[1,9744366,0.414322,3],[1,17917061,0.506394,3],[1,9744366,0.537084,3],[1,9534810,0.567775,3],[1,17917061,2.409207,3],[1,13306823,5.232737,3],[1,17917061,2.56266,3],[1,17707504,1.734015,3],[1,9534810,0.506394,3],[1,17917061,2.654731,3],[1,12468598,0.567775,3],[1,7439247,1.089514,3],[1,17288392,2.102302,3],[1,7858360,1.457801,3],[1,16240611,1.058824,3],[1,13935492,3.790281,3],[1,11001704,0.782609,3],[1,17707504,1.795396,3],[1,6181910,0.905371,3],[1,16450167,3.023018,3],[1,7648804,1.150895,3],[1,12468598,0.537084,3],[1,19593511,0.230179,3],[1,16240611,1.028133,3],[1,16450167,1.734015,3],[1,9534810,0.322251,3],[1,17288392,1.826087,3],[1,11839929,1.948849,3],[1,9534810,0.26087,3],[1,6181910,0.445013,3],[1,16240611,0.966752,3],[1,9115698,0.199488,3],[1,17288392,1.641944,3],[1,16450167,1.764706,3],[1,9534810,0.107417,3],[1,10792148,1.273657,3],[1,17917061,2.102302,3],[1,16659723,0.782609,3],[1,9534810,1.089514,3],[1,13516379,0.168798,3],[1,16659723,0.84399,3],[1,9534810,1.120205,3],[1,10373035,1.611253,3],[1,8277473,0.383632,3],[1,9534810,1.150895,3],[1,8906141,1.335038,3],[1,7648804,0.721228,3],[1,13725935,1.089514,3],[1,7439247,1.181586,3],[1,10792148,1.365729,3],[1,6391466,0.506394,3],[1,6391466,0.537084,3],[1,17288392,2.746803,3],[1,7648804,1.028133,3],[1,17917061,2.286445,3],[1,16240611,1.120205,3],[1,17288392,3.053708,3],[1,9534810,0.629156,3],[1,11001704,0.813299,3],[1,16659723,0.659847,3],[1,16240611,1.150895,3],[1,9534810,0.659847,3],[1,9534810,0.87468,3],[1,16240611,1.948849,4],[1,10163479,0.414322,4],[1,14564160,0.690537,4],[1,15192829,0.107417,4],[1,16450167,0.813299,4],[1,13725935,0.168798,4],[1,8067916,1.273657,4],[1,8067916,1.948849,4],[1,14564160,0.721228,4],[1,10163479,0.322251,4],[1,16450167,1.826087,4],[1,7858360,1.089514,4],[1,3876791,1.97954,4],[1,16240611,0.905371,4],[1,13725935,0.782609,4],[1,7858360,1.396419,4],[1,16450167,1.580563,4],[1,7858360,1.519182,4],[1,16240611,1.089514,4],[1,14564160,0.046036,4],[1,15192829,1.703325,4],[1,10373035,1.580563,4],[1,10373035,1.519182,4],[1,14564160,0.107417,4],[1,3876791,1.028133,4],[1,10373035,1.089514,4],[1,3876791,0.905371,4],[1,10373035,1.058824,4],[1,10373035,1.028133,4],[1,12887710,2.777494,4],[1,4086347,0.813299,4],[1,4086347,0.751918,4],[1,10582591,0.87468,4],[1,10582591,0.813299,4],[1,1781228,1.120205,4],[1,10582591,0.659847,4],[1,4086347,0.506394,4],[1,19593511,1.948849,4],[1,4086347,0.352941,4],[1,4086347,0.29156,4],[1,1781228,1.304348,4],[1,1781228,1.457801,4],[1,10582591,0.475703,4],[1,1781228,1.549872,4],[1,10582591,0.414322,4],[1,10582591,0.29156,4],[1,7858360,0.751918,4],[1,7858360,0.87468,4],[1,16450167,1.948849,4],[1,1990785,1.42711,4],[1,10163479,1.672634,4],[1,8067916,0.659847,4],[1,3876791,0.414322,4],[1,10163479,1.242967,4],[1,3876791,0.352941,4],[1,1990785,1.611253,4],[1,3876791,0.29156,4],[1,3876791,0.26087,4],[1,3876791,0.076726,4],[1,10163479,0.84399,4],[1,8067916,0.782609,4],[1,14564160,0.230179,4],[1,10163479,0.659847,4],[1,10163479,0.629156,4],[1,18964842,3.14578,4],[1,10163479,0.567775,4],[1,14564160,0.445013,4],[1,1990785,2.132992,4],[1,3667235,2.225064,4],[1,3876791,0.782609,4],[1,3876791,0.751918,4],[1,10373035,0.813299,4],[1,18545730,0.230179,4],[1,10373035,0.751918,4],[1,10373035,0.629156,4],[1,3876791,0.721228,4],[1,18545730,0.352941,4],[1,18545730,0.414322,4],[1,18545730,0.445013,4],[1,16240611,1.672634,4],[1,15192829,0.905371,4],[1,13725935,0.537084,4],[1,18545730,0.598465,4],[1,19593511,1.764706,4],[1,1990785,0.721228,4],[1,1990785,0.84399,4],[1,1990785,0.87468,4],[1,10373035,0.445013,4],[1,15192829,0.782609,4],[1,18755286,0.138107,4],[1,8906141,1.181586,4],[1,18755286,0.230179,4],[1,18755286,0.26087,4],[1,18755286,0.383632,4],[1,8906141,1.273657,4],[1,15821498,1.611253,4],[1,9534810,1.396419,4],[1,13516379,0.29156,4],[1,13516379,0.230179,4],[1,18755286,0.690537,4],[1,13516379,0.138107,4],[1,13516379,0.046036,4],[1,13516379,0.015345,4],[1,17288392,2.808184,4],[1,18755286,1.089514,4],[1,18755286,1.212276,4],[1,8906141,3.759591,4],[1,17288392,2.071611,4],[1,19593511,0.322251,4],[1,9534810,0.414322,4],[1,18755286,1.42711,4],[1,2829010,0.537084,4],[1,14983273,1.611253,4],[1,2829010,0.475703,4],[1,9534810,0.383632,4],[1,8696585,0.936061,4],[1,2409897,1.457801,4],[1,2409897,1.488491,4],[1,2829010,2.900256,4],[1,8696585,1.918159,4],[1,8696585,1.948849,4],[1,9744366,1.150895,4],[1,13516379,1.028133,4],[1,2829010,2.531969,4],[1,2829010,2.439898,4],[1,13516379,0.721228,4],[1,8696585,3.023018,4],[1,13516379,0.352941,4],[1,2829010,2.102302,4],[1,2829010,2.01023,4],[1,2409897,1.795396,4],[1,14983273,2.163683,4],[1,15821498,1.335038,4],[1,9744366,0.168798,4],[1,14773717,3.69821,4],[1,9744366,0.107417,4],[1,2829010,1.273657,4],[1,17078836,4.987212,4],[1,9534810,3.360614,4],[1,8906141,0.721228,4],[1,2829010,0.905371,4],[1,9534810,1.764706,4],[1,14983273,0.199488,4],[1,17288392,0.199488,4],[1,2619453,0.107417,4],[1,14983273,0.352941,4],[1,9325254,1.365729,4],[1,9115698,0.87468,4],[1,2619453,0.29156,4],[1,9115698,0.966752,4],[1,9325254,1.273657,4],[1,2619453,0.414322,4],[1,9115698,1.242967,4],[1,9325254,1.089514,4],[1,14983273,0.629156,4],[1,9115698,1.488491,4],[1,18755286,4.250639,4],[1,9325254,0.966752,4],[1,14983273,0.721228,4],[1,9325254,0.107417,4],[1,14983273,0.751918,4],[1,9325254,0.905371,4],[1,9325254,0.199488,4],[1,9325254,0.230179,4],[1,14983273,0.997442,4],[1,9325254,0.322251,4],[1,9325254,0.383632,4],[1,9325254,0.598465,4],[1,9325254,0.537084,4],[1,2829010,0.322251,4],[1,9534810,0.138107,4],[1,2829010,0.138107,4],[1,9115698,0.414322,4],[1,2829010,0.076726,4],[1,17288392,1.457801,4],[1,17288392,1.42711,4],[1,9534810,0.046036,4],[1,13306823,0.015345,4],[1,13306823,0.046036,4],[1,17288392,1.150895,4],[1,9325254,7.810742,4],[1,13306823,0.138107,4],[1,2619453,4.618926,4],[1,13306823,0.29156,4],[1,13306823,0.322251,4],[1,17288392,0.721228,4],[1,13306823,0.782609,4],[1,13306823,1.734015,4],[1,17288392,0.598465,4],[1,17288392,0.567775,4],[1,9115698,0.629156,4],[1,14983273,0.138107,4],[1,13306823,1.918159,4],[1,9325254,1.672634,4],[1,2619453,3.329923,4],[1,2619453,3.268542,4],[1,18964842,1.273657,4],[1,8277473,0.905371,4],[1,17497948,1.97954,4],[1,18964842,1.089514,4],[1,9953923,1.089514,4],[1,2200341,0.782609,4],[1,17497948,1.641944,4],[1,17497948,1.580563,4],[1,13097267,0.230179,4],[1,18964842,0.966752,4],[1,9953923,0.936061,4],[1,3457678,0.936061,4],[1,17497948,1.335038,4],[1,17497948,1.304348,4],[1,3457678,0.629156,4],[1,13097267,0.26087,4],[1,17497948,0.782609,4],[1,17497948,0.659847,4],[1,9953923,0.659847,4],[1,17497948,0.629156,4],[1,17497948,0.598465,4],[1,2200341,0.84399,4],[1,13097267,0.29156,4],[1,17497948,0.445013,4],[1,18964842,0.322251,4],[1,2200341,0.905371,4],[1,3667235,1.028133,4],[1,9953923,3.7289,4],[1,3667235,0.936061,4],[1,16450167,0.567775,4],[1,16450167,0.537084,4],[1,3667235,0.782609,4],[1,16450167,0.475703,4],[1,19593511,1.242967,4],[1,14564160,0.997442,4],[1,3667235,0.598465,4],[1,8277473,0.26087,4],[1,16240611,2.531969,4],[1,17497948,2.838875,4],[1,16450167,0.322251,4],[1,8277473,0.414322,4],[1,3667235,0.352941,4],[1,16450167,0.29156,4],[1,9953923,1.97954,4],[1,17497948,2.654731,4],[1,14564160,1.120205,4],[1,8277473,0.629156,4],[1,8277473,0.659847,4],[1,8277473,0.721228,4],[1,2200341,0.598465,4],[1,8277473,0.782609,4],[1,2200341,0.629156,4],[1,14564160,1.365729,4],[1,17078836,0.782609,4],[1,3038566,0.936061,4],[1,17078836,1.058824,4],[1,13097267,0.87468,4],[1,9744366,2.716113,4],[1,15821498,0.690537,4],[1,17078836,1.918159,4],[1,13097267,1.181586,4],[1,13516379,1.948849,4],[1,14773717,0.782609,4],[1,2409897,0.445013,4],[1,13516379,1.703325,4],[1,19593511,0.87468,4],[1,17078836,2.102302,4],[1,19593511,0.84399,4],[1,14773717,1.181586,4],[1,8696585,0.138107,4],[1,14773717,1.273657,4],[1,13097267,1.273657,4],[1,2409897,1.089514,4],[1,15821498,0.997442,4],[1,14773717,1.549872,4],[1,17078836,2.531969,4],[1,14773717,1.826087,4],[1,8696585,0.659847,4],[1,14773717,2.01023,4],[1,17078836,2.777494,4],[1,2200341,0.966752,4],[1,8277473,1.887468,4],[1,13516379,4.895141,4],[1,13516379,4.618926,4],[1,19593511,1.058824,4],[1,9953923,0.230179,4],[1,9953923,0.107417,4],[1,8487029,0.352941,4],[1,14773717,0.046036,4],[1,13097267,0.445013,4],[1,2200341,1.611253,4],[1,8487029,0.629156,4],[1,8487029,0.659847,4],[1,17078836,0.230179,4],[1,14773717,0.26087,4],[1,8487029,0.721228,4],[1,14773717,0.322251,4],[1,8487029,0.751918,4],[1,2200341,2.040921,4],[1,14773717,0.475703,4],[1,14773717,0.567775,4],[1,17078836,0.537084,4],[1,17078836,0.598465,4],[1,17078836,0.690537,4],[1,3038566,1.273657,4],[1,17078836,0.721228,4],[1,15821498,0.138107,4],[1,12468598,0.322251,4],[1,5134129,0.414322,4],[1,11420816,0.199488,4],[1,7020135,1.887468,4],[1,6181910,0.414322,4],[1,12468598,0.199488,4],[1,6391466,1.028133,4],[1,16659723,1.672634,4],[1,5134129,0.199488,4],[1,12468598,0.168798,4],[1,11839929,2.992327,4],[1,12049485,0.015345,4],[1,943003,0.87468,4],[1,943003,0.936061,4],[1,16031054,0.690537,4],[1,12049485,0.168798,4],[1,943003,0.997442,4],[1,12678154,1.058824,4],[1,16031054,0.537084,4],[1,104778,1.335038,4],[1,6181910,0.383632,4],[1,17917061,0.475703,4],[1,104778,1.212276,4],[1,12049485,0.29156,4],[1,18126617,0.506394,4],[1,12678154,1.089514,4],[1,11420816,1.580563,4],[1,733447,1.335038,4],[1,104778,2.071611,4],[1,11420816,1.42711,4],[1,733447,1.519182,4],[1,7020135,1.549872,4],[1,16031054,0.84399,4],[1,12678154,0.445013,4],[1,733447,1.764706,4],[1,733447,1.918159,4],[1,18126617,1.396419,4],[1,11420816,0.905371,4],[1,18126617,1.335038,4],[1,17917061,3.053708,4],[1,6181910,0.87468,4],[1,5134129,0.813299,4],[1,16031054,0.813299,4],[1,733447,2.194373,4],[1,104778,2.040921,4],[1,6181910,0.629156,4],[1,15611942,3.023018,4],[1,12468598,0.506394,4],[1,5343685,3.053708,4],[1,6181910,0.537084,4],[1,11420816,0.29156,4],[1,12468598,0.475703,4],[1,15402386,2.071611,4],[1,18336173,0.629156,4],[1,19383955,3.452685,4],[1,17917061,0.537084,4],[1,15402386,1.948849,4],[1,18126617,0.107417,4],[1,11001704,1.795396,4],[1,18126617,0.046036,4],[1,7229691,0.813299,4],[1,1152559,0.598465,4],[1,16659723,1.641944,4],[1,4924572,1.795396,4],[1,18336173,1.089514,4],[1,1152559,0.782609,4],[1,7229691,1.120205,4],[1,1152559,0.813299,4],[1,18336173,1.335038,4],[1,7229691,1.212276,4],[1,7229691,1.242967,4],[1,7229691,1.304348,4],[1,17917061,0.598465,4],[1,7229691,1.335038,4],[1,11001704,1.365729,4],[1,11001704,1.335038,4],[1,7229691,1.672634,4],[1,19383955,0.414322,4],[1,18126617,0.475703,4],[1,943003,1.242967,4],[1,13935492,0.26087,4],[1,12049485,0.322251,4],[1,943003,1.396419,4],[1,314334,1.242967,4],[1,18126617,0.414322,4],[1,11211260,1.519182,4],[1,4924572,2.501279,4],[1,943003,1.488491,4],[1,18126617,0.383632,4],[1,19383955,0.168798,4],[1,11211260,1.120205,4],[1,12678154,1.335038,4],[1,11211260,1.058824,4],[1,11211260,1.028133,4],[1,5553241,1.826087,4],[1,5553241,1.856777,4],[1,4924572,2.102302,4],[1,18126617,0.168798,4],[1,5553241,1.887468,4],[1,15402386,2.347826,4],[1,11211260,0.782609,4],[1,11211260,0.721228,4],[1,11211260,0.659847,4],[1,11211260,0.475703,4],[1,5343685,2.347826,4],[1,5343685,2.470588,4],[1,6391466,1.488491,4],[1,5343685,0.905371,4],[1,5343685,0.84399,4],[1,5343685,0.813299,4],[1,5343685,0.751918,4],[1,5343685,0.721228,4],[1,523891,0.751918,4],[1,5343685,0.598465,4],[1,13935492,1.918159,4],[1,6601022,1.549872,4],[1,5553241,1.058824,4],[1,13935492,1.611253,4],[1,314334,0.87468,4],[1,5553241,1.089514,4],[1,11630373,1.42711,4],[1,5343685,0.199488,4],[1,17917061,1.948849,4],[1,5343685,0.107417,4],[1,11630373,1.273657,4],[1,5343685,0.015345,4],[1,6391466,1.365729,4],[1,523891,1.242967,4],[1,6810579,0.537084,4],[1,14354604,0.168798,4],[1,11839929,0.322251,4],[1,5343685,2.225064,4],[1,16659723,2.071611,4],[1,15611942,1.365729,4],[1,5343685,2.01023,4],[1,12468598,0.751918,4],[1,5343685,2.255754,4],[1,6601022,0.29156,4],[1,5553241,0.721228,4],[1,5343685,1.764706,4],[1,18126617,4.956522,4],[1,15611942,1.058824,4],[1,15611942,1.028133,4],[1,16659723,0.905371,4],[1,5553241,0.87468,4],[1,6601022,0.537084,4],[1,15611942,0.905371,4],[1,6601022,0.598465,4],[1,5343685,1.519182,4],[1,17917061,1.887468,4],[1,13935492,2.286445,4],[1,6601022,0.905371,4],[1,11630373,2.01023,4],[1,5343685,1.304348,4],[1,314334,0.936061,4],[1,5343685,1.212276,4],[1,5553241,0.537084,4],[1,5553241,0.506394,4],[1,15611942,0.445013,4],[1,11630373,0.690537,4],[1,6391466,0.076726,4],[1,11630373,0.629156,4],[1,15611942,0.26087,4],[1,12468598,0.659847,4],[1,5134129,2.470588,4],[1,733447,0.322251,4],[1,16659723,1.856777,4],[1,733447,0.813299,4],[1,733447,0.997442,4],[1,17917061,0.29156,4],[1,13935492,0.813299,4],[1,7020135,0.936061,4],[1,16659723,0.26087,4],[1,11839929,1.335038,4],[1,733447,1.120205,4],[1,733447,1.150895,4],[1,7020135,1.089514,4],[1,5134129,1.672634,4],[1,13935492,0.782609,4],[1,5134129,1.488491,4],[1,17917061,0.322251,4],[1,11420816,1.641944,4],[1,314334,0.721228,4],[1,5134129,5.386189,4],[1,14354604,0.322251,4],[1,5343685,2.624041,4],[1,6391466,1.120205,4],[1,11839929,0.414322,4],[1,14354604,0.383632,4],[1,14354604,0.414322,4],[1,523891,1.42711,4],[1,6810579,0.782609,4],[1,6810579,0.936061,4],[1,6810579,1.304348,4],[1,16659723,0.721228,4],[1,13935492,1.396419,4],[1,6810579,1.672634,4],[1,5134129,3.69821,4],[1,5553241,1.365729,4],[1,14354604,0.690537,4],[1,13935492,1.335038,4],[1,17917061,0.138107,4],[1,11630373,0.936061,4],[1,5343685,2.808184,4],[1,18126617,1.887468,4],[1,13935492,1.089514,4],[1,16031054,1.549872,4],[1,13935492,1.058824,4],[1,11630373,0.813299,4],[1,10792148,1.918159,4],[1,314334,1.365729,4],[1,10792148,1.826087,4],[1,13725935,1.396419,4],[1,13725935,1.242967,4],[1,1571672,0.26087,4],[1,10792148,1.795396,4],[1,5762797,0.475703,4],[1,14145048,0.813299,4],[1,4295903,1.641944,4],[1,12887710,1.304348,4],[1,5762797,2.102302,4],[1,1571672,0.997442,4],[1,10792148,1.641944,4],[1,10792148,1.580563,4],[1,4295903,1.396419,4],[1,1571672,1.212276,4],[1,1571672,1.304348,4],[1,12259042,0.751918,4],[1,10792148,1.335038,4],[1,7648804,0.782609,4],[1,1571672,1.457801,4],[1,7648804,0.936061,4],[1,1571672,1.488491,4],[1,12887710,1.365729,4],[1,10792148,1.028133,4],[1,5762797,3.053708,4],[1,15402386,0.782609,4],[1,11839929,0.813299,4],[1,16869279,1.212276,4],[1,14145048,0.598465,4],[1,14145048,0.629156,4],[1,5553241,6.398977,4],[1,4505460,1.028133,4],[1,12259042,0.567775,4],[1,5553241,0.29156,4],[1,16869279,1.273657,4],[1,7439247,2.071611,4],[1,4505460,0.905371,4],[1,15402386,0.690537,4],[1,7439247,2.59335,4],[1,104778,0.659847,4],[1,4505460,0.690537,4],[1,4505460,0.629156,4],[1,6391466,0.659847,4],[1,12259042,0.629156,4],[1,4505460,0.567775,4],[1,16869279,1.549872,4],[1,16869279,1.580563,4],[1,16869279,1.611253,4],[1,10792148,2.01023,4],[1,17917061,1.519182,4],[1,16240611,0.445013,4],[1,12259042,0.997442,4],[1,5762797,0.813299,4],[1,5762797,1.948849,4],[1,7648804,2.685422,4],[1,11839929,0.936061,4],[1,5762797,0.936061,4],[1,1781228,0.445013,4],[1,4086347,1.365729,4],[1,16240611,0.629156,4],[1,4086347,1.304348,4],[1,1781228,0.475703,4],[1,19383955,2.501279,4],[1,16240611,0.690537,4],[1,10582591,1.058824,4],[1,16240611,0.721228,4],[1,1781228,0.629156,4],[1,16240611,0.751918,4],[1,16240611,0.782609,4],[1,5762797,1.028133,4],[1,14145048,1.120205,4],[1,4086347,1.028133,4],[1,5762797,1.611253,4],[1,104778,0.199488,4],[1,4086347,0.905371,4],[1,12468598,0.690537,4],[1,4295903,0.87468,4],[1,15402386,0.26087,4],[1,10792148,0.966752,4],[1,12259042,1.242967,4],[1,10792148,0.936061,4],[1,10792148,0.629156,4],[1,4295903,0.629156,4],[1,5762797,1.97954,4],[1,13725935,1.058824,4],[1,1571672,2.624041,4],[1,4295903,0.383632,4],[1,10582591,1.764706,4],[1,4295903,0.168798,4],[1,7648804,1.335038,4],[1,4086347,2.255754,4],[1,4086347,2.194373,4],[1,4086347,2.163683,4],[1,10582591,1.641944,4],[1,13725935,0.87468,4],[1,314334,1.457801,4],[1,13725935,0.84399,4],[1,5762797,0.721228,4],[1,16240611,0.352941,4],[1,4086347,1.826087,4],[1,4086347,1.795396,4],[1,4086347,1.764706,4],[1,19383955,0.751918,4],[1,5553241,2.286445,4],[1,19174398,0.352941,4],[1,11001704,0.414322,4],[1,19383955,0.84399,4],[1,7439247,0.751918,4],[1,6181910,0.046036,4],[1,6181910,0.015345,4],[1,5972354,1.764706,4],[1,19174398,0.046036,4],[1,19383955,2.930946,4],[1,12049485,0.629156,4],[1,5972354,1.734015,4],[1,14354604,1.42711,4],[1,7439247,0.87468,4],[1,19383955,0.905371,4],[1,5972354,1.089514,4],[1,5553241,2.838875,4],[1,5972354,0.905371,4],[1,17707504,1.826087,4],[1,7439247,1.120205,4],[1,17707504,1.641944,4],[1,5972354,0.813299,4],[1,17707504,1.335038,4],[1,17707504,1.304348,4],[1,5972354,0.721228,4],[1,11001704,1.304348,4],[1,18336173,1.764706,4],[1,11001704,1.212276,4],[1,19174398,1.181586,4],[1,18336173,2.01023,4],[1,19383955,0.445013,4],[1,15611942,2.102302,4],[1,4924572,1.273657,4],[1,5553241,2.102302,4],[1,15402386,1.856777,4],[1,11001704,0.84399,4],[1,7439247,0.414322,4],[1,18336173,2.255754,4],[1,4924572,1.120205,4],[1,11839929,1.058824,4],[1,19174398,0.936061,4],[1,19174398,0.87468,4],[1,19383955,0.659847,4],[1,19383955,0.690537,4],[1,11001704,0.721228,4],[1,11001704,0.659847,4],[1,19174398,0.629156,4],[1,19174398,0.598465,4],[1,7439247,0.721228,4],[1,11001704,0.598465,4],[1,11001704,0.567775,4],[1,6391466,0.936061,4],[1,104778,0.905371,4],[1,12259042,0.230179,4],[1,12259042,0.29156,4],[1,4715016,0.690537,4],[1,1362116,0.506394,4],[1,4715016,0.629156,4],[1,1362116,0.567775,4],[1,14145048,0.352941,4],[1,4715016,0.475703,4],[1,1362116,0.751918,4],[1,17707504,0.782609,4],[1,1362116,0.782609,4],[1,5553241,0.322251,4],[1,17707504,0.721228,4],[1,14354604,2.317136,4],[1,1362116,0.936061,4],[1,4505460,1.611253,4],[1,16869279,0.782609,4],[1,14145048,0.414322,4],[1,16869279,0.87468,4],[1,6391466,0.87468,4],[1,19383955,1.519182,4],[1,16869279,0.997442,4],[1,14145048,0.475703,4],[1,7439247,1.611253,4],[1,17707504,1.242967,4],[1,19383955,1.028133,4],[1,14354604,1.97954,4],[1,4715016,1.488491,4],[1,5972354,0.567775,4],[1,4715016,1.457801,4],[1,12887710,0.506394,4],[1,12259042,1.365729,4],[1,4715016,1.365729,4],[1,104778,0.966752,4],[1,314334,1.795396,4],[1,12259042,0.015345,4],[1,314334,1.304348,4],[1,4715016,1.273657,4],[1,4715016,1.242967,4],[1,17917061,0.659847,4],[1,19383955,1.335038,4],[1,5553241,0.352941,4],[1,12887710,0.751918,4],[1,15402386,1.365729,4],[1,14145048,1.856777,4],[1,17707504,0.966752,4],[1,4715016,0.997442,4],[1,1152559,3.268542,4],[1,14145048,0.107417,4],[1,16659723,1.549872,4],[1,12887710,1.058824,4],[1,9534810,0.015345,5],[1,13306823,0.107417,5],[1,13306823,0.199488,5],[1,19383955,0.322251,5],[1,12049485,0.537084,5],[1,13306823,0.383632,5],[1,14983273,1.120205,5],[1,12259042,0.107417,5],[1,2619453,0.015345,5],[1,14983273,1.089514,5],[1,2619453,0.138107,5],[1,2619453,0.230179,5],[1,19383955,1.488491,5],[1,2619453,0.383632,5],[1,19383955,1.580563,5],[1,104778,0.690537,5],[1,104778,0.629156,5],[1,14983273,1.058824,5],[1,104778,0.537084,5],[1,12259042,0.905371,5],[1,104778,0.29156,5],[1,104778,0.107417,5],[1,314334,1.212276,5],[1,16659723,0.936061,5],[1,314334,1.089514,5],[1,314334,1.028133,5],[1,314334,0.905371,5],[1,9534810,1.304348,5],[1,15821498,1.672634,5],[1,14983273,1.703325,5],[1,314334,0.506394,5],[1,16659723,0.751918,5],[1,314334,0.230179,5],[1,16659723,0.629156,5],[1,16659723,0.537084,5],[1,16659723,0.475703,5],[1,16659723,0.445013,5],[1,16659723,0.352941,5],[1,16659723,0.29156,5],[1,11839929,1.365729,5],[1,9534810,0.352941,5],[1,15821498,1.97954,5],[1,9534810,0.199488,5],[1,12049485,0.26087,5],[1,11001704,0.29156,5],[1,1152559,1.304348,5],[1,15402386,1.703325,5],[1,12887710,0.322251,5],[1,16450167,0.782609,5],[1,12887710,0.352941,5],[1,15192829,0.199488,5],[1,16450167,0.84399,5],[1,10163479,0.352941,5],[1,15192829,0.445013,5],[1,10163479,0.445013,5],[1,10163479,0.475703,5],[1,16450167,0.87468,5],[1,12887710,0.629156,5],[1,15192829,0.506394,5],[1,12887710,0.659847,5],[1,12887710,0.721228,5],[1,10163479,0.598465,5],[1,16869279,0.230179,5],[1,10163479,0.782609,5],[1,18964842,0.905371,5],[1,11211260,0.414322,5],[1,11001704,2.132992,5],[1,1152559,0.445013,5],[1,16450167,0.015345,5],[1,16450167,0.076726,5],[1,16450167,0.107417,5],[1,18964842,1.703325,5],[1,19174398,1.150895,5],[1,11001704,0.936061,5],[1,13097267,0.046036,5],[1,1152559,1.089514,5],[1,19174398,0.782609,5],[1,11001704,0.506394,5],[1,11001704,0.475703,5],[1,1152559,1.150895,5],[1,19174398,0.199488,5],[1,11001704,0.383632,5],[1,11001704,0.352941,5],[1,16450167,0.721228,5],[1,10373035,0.966752,5],[1,1571672,0.598465,5],[1,1571672,0.629156,5],[1,1571672,0.813299,5],[1,1571672,1.335038,5],[1,16450167,1.641944,5],[1,10792148,0.506394,5],[1,16450167,2.225064,5],[1,1781228,1.856777,5],[1,10582591,1.242967,5],[1,1781228,0.322251,5],[1,1781228,1.488491,5],[1,10582591,0.506394,5],[1,10582591,0.537084,5],[1,10582591,0.629156,5],[1,1781228,0.936061,5],[1,10582591,0.905371,5],[1,1781228,0.721228,5],[1,1781228,0.782609,5],[1,1781228,0.813299,5],[1,1362116,0.383632,5],[1,10163479,0.905371,5],[1,16450167,0.936061,5],[1,1362116,0.475703,5],[1,1362116,0.598465,5],[1,10163479,1.641944,5],[1,15192829,0.813299,5],[1,16450167,1.488491,5],[1,16869279,0.966752,5],[1,1990785,0.966752,5],[1,1990785,0.905371,5],[1,10792148,2.163683,5],[1,1990785,0.813299,5],[1,10373035,0.475703,5],[1,15402386,0.751918,5],[1,1990785,0.690537,5],[1,10373035,0.537084,5],[1,15192829,0.966752,5],[1,15192829,1.028133,5],[1,10792148,2.040921,5],[1,10373035,0.936061,5],[1,2409897,1.335038,5],[1,523891,0.598465,5],[1,523891,0.905371,5],[1,523891,0.997442,5],[1,2409897,0.87468,5],[1,12468598,1.304348,5],[1,2409897,0.782609,5],[1,11630373,1.181586,5],[1,15611942,0.751918,5],[1,2409897,0.414322,5],[1,2409897,0.046036,5],[1,15611942,0.690537,5],[1,17078836,1.519182,5],[1,11630373,0.997442,5],[1,15821498,0.352941,5],[1,15821498,0.322251,5],[1,15611942,0.475703,5],[1,11630373,0.721228,5],[1,13097267,0.782609,5],[1,11630373,0.567775,5],[1,11839929,0.905371,5],[1,314334,1.519182,5],[1,15821498,1.457801,5],[1,11839929,0.721228,5],[1,11839929,0.629156,5],[1,2409897,2.225064,5],[1,9744366,0.322251,5],[1,9744366,0.445013,5],[1,11839929,0.445013,5],[1,9744366,0.782609,5],[1,15611942,1.672634,5],[1,9744366,1.181586,5],[1,12468598,0.813299,5],[1,12468598,0.87468,5],[1,15611942,1.089514,5],[1,16659723,2.716113,5],[1,9744366,1.42711,5],[1,523891,0.168798,5],[1,523891,0.414322,5],[1,523891,0.567775,5],[1,9953923,0.475703,5],[1,12678154,0.782609,5],[1,12678154,0.813299,5],[1,12678154,1.028133,5],[1,943003,0.966752,5],[1,9953923,0.506394,5],[1,18964842,0.046036,5],[1,18964842,0.076726,5],[1,943003,1.028133,5],[1,943003,1.058824,5],[1,18964842,0.26087,5],[1,11211260,2.255754,5],[1,943003,1.273657,5],[1,18964842,0.414322,5],[1,2200341,0.87468,5],[1,11211260,1.42711,5],[1,943003,1.703325,5],[1,12678154,1.365729,5],[1,18964842,0.813299,5],[1,9953923,0.905371,5],[1,16659723,4.649616,5],[1,733447,1.028133,5],[1,733447,1.089514,5],[1,15821498,0.076726,5],[1,17078836,0.414322,5],[1,11420816,1.457801,5],[1,17078836,0.29156,5],[1,733447,2.01023,5],[1,11420816,0.813299,5],[1,11420816,0.782609,5],[1,11420816,0.659847,5],[1,13097267,0.352941,5],[1,11420816,0.506394,5],[1,9953923,0.046036,5],[1,9953923,0.076726,5],[1,11420816,0.475703,5],[1,11420816,0.26087,5],[1,9953923,0.168798,5],[1,12678154,0.629156,5],[1,12678154,0.751918,5],[1,9953923,0.414322,5],[1,4924572,0.997442,5],[1,7439247,0.537084,5],[1,4924572,1.058824,5],[1,8277473,0.690537,5],[1,18336173,2.286445,5],[1,7439247,0.199488,5],[1,18126617,1.580563,5],[1,8277473,0.84399,5],[1,13725935,3.421995,5],[1,14564160,1.396419,5],[1,17497948,2.102302,5],[1,17707504,2.961637,5],[1,13725935,5.202046,5],[1,3457678,1.457801,5],[1,8277473,0.966752,5],[1,8277473,1.058824,5],[1,8277473,1.089514,5],[1,8277473,1.242967,5],[1,18336173,1.611253,5],[1,17497948,1.365729,5],[1,17497948,0.997442,5],[1,4924572,0.506394,5],[1,8067916,2.347826,5],[1,14564160,0.782609,5],[1,4924572,0.567775,5],[1,13725935,0.107417,5],[1,14564160,0.84399,5],[1,3667235,0.966752,5],[1,4924572,0.598465,5],[1,3667235,0.87468,5],[1,14564160,0.936061,5],[1,17917061,2.838875,5],[1,3667235,0.629156,5],[1,8277473,0.29156,5],[1,14564160,1.058824,5],[1,8277473,0.445013,5],[1,4924572,0.84399,5],[1,7439247,0.629156,5],[1,3667235,0.199488,5],[1,3667235,0.168798,5],[1,3667235,0.138107,5],[1,3667235,0.107417,5],[1,8487029,0.414322,5],[1,16031054,0.567775,5],[1,13935492,0.414322,5],[1,14773717,0.138107,5],[1,5762797,0.107417,5],[1,8487029,0.690537,5],[1,8487029,0.84399,5],[1,3038566,1.611253,5],[1,3038566,1.488491,5],[1,5134129,0.26087,5],[1,8487029,1.120205,5],[1,5134129,0.445013,5],[1,8487029,1.304348,5],[1,5134129,0.475703,5],[1,5762797,0.199488,5],[1,3038566,1.058824,5],[1,5134129,0.690537,5],[1,3038566,0.813299,5],[1,5134129,0.87468,5],[1,5134129,0.905371,5],[1,13935492,0.598465,5],[1,7229691,1.396419,5],[1,7229691,1.181586,5],[1,7229691,0.905371,5],[1,18336173,0.966752,5],[1,17497948,0.84399,5],[1,3457678,0.475703,5],[1,7229691,0.782609,5],[1,18336173,0.84399,5],[1,7229691,0.690537,5],[1,18336173,0.690537,5],[1,18126617,1.856777,5],[1,7229691,0.445013,5],[1,14145048,0.383632,5],[1,18336173,0.26087,5],[1,5553241,4.956522,5],[1,14564160,2.777494,5],[1,3248122,0.721228,5],[1,6391466,0.26087,5],[1,19593511,1.089514,5],[1,14145048,0.567775,5],[1,13935492,0.230179,5],[1,8487029,0.383632,5],[1,16240611,0.87468,5],[1,7858360,1.150895,5],[1,4295903,1.580563,5],[1,3876791,1.641944,5],[1,3876791,1.611253,5],[1,6181910,0.29156,5],[1,3876791,1.242967,5],[1,16240611,1.242967,5],[1,7858360,2.255754,5],[1,18126617,0.598465,5],[1,5972354,1.335038,5],[1,16240611,1.580563,5],[1,3876791,0.87468,5],[1,13725935,1.918159,5],[1,13725935,2.132992,5],[1,18126617,0.659847,5],[1,13725935,3.053708,5],[1,4505460,0.997442,5],[1,7439247,1.856777,5],[1,7439247,1.795396,5],[1,18545730,0.537084,5],[1,16240611,0.598465,5],[1,16240611,0.659847,5],[1,13725935,0.936061,5],[1,4086347,1.212276,5],[1,4086347,1.150895,5],[1,4086347,0.936061,5],[1,4295903,0.598465,5],[1,4295903,0.659847,5],[1,5553241,2.071611,5],[1,4295903,0.721228,5],[1,4086347,0.567775,5],[1,4295903,0.782609,5],[1,6181910,0.138107,5],[1,6181910,0.107417,5],[1,4295903,0.905371,5],[1,4086347,0.26087,5],[1,18126617,0.29156,5],[1,4086347,0.138107,5],[1,7648804,0.997442,5],[1,14354604,3.667519,5],[1,7648804,0.598465,5],[1,7648804,0.567775,5],[1,4715016,0.84399,5],[1,3876791,0.168798,5],[1,4715016,1.089514,5],[1,4715016,1.150895,5],[1,17707504,1.058824,5],[1,8067916,1.089514,5],[1,17707504,1.089514,5],[1,17707504,1.120205,5],[1,14564160,0.506394,5],[1,6181910,0.475703,5],[1,7439247,1.212276,5],[1,13725935,0.414322,5],[1,17707504,1.856777,5],[1,8067916,1.457801,5],[1,7439247,0.905371,5],[1,5553241,1.580563,5],[1,18126617,1.488491,5],[1,8067916,1.580563,5],[1,8067916,1.734015,5],[1,4924572,0.383632,5],[1,13725935,0.383632,5],[1,18126617,0.690537,5],[1,4505460,1.212276,5],[1,17707504,0.26087,5],[1,5972354,0.659847,5],[1,18545730,0.690537,5],[1,17707504,0.352941,5],[1,17917061,6.061381,5],[1,7439247,1.580563,5],[1,18545730,0.813299,5],[1,13725935,0.475703,5],[1,18126617,0.721228,5],[1,17707504,0.567775,5],[1,5972354,0.506394,5],[1,18126617,0.782609,5],[1,17707504,0.598465,5],[1,7439247,1.488491,5],[1,4715016,0.721228,5],[1,5553241,1.672634,5],[1,4715016,0.782609,5],[1,5553241,1.641944,5],[1,3876791,0.322251,5],[1,4715016,0.813299,5],[1,7020135,0.168798,5],[1,19593511,0.659847,5],[1,6391466,0.414322,5],[1,14773717,3.11509,5],[1,5762797,1.641944,5],[1,16031054,1.365729,5],[1,13935492,0.966752,5],[1,14354604,0.813299,5],[1,8906141,0.26087,5],[1,8906141,0.29156,5],[1,17288392,0.475703,5],[1,13935492,1.212276,5],[1,13935492,1.273657,5],[1,17288392,4.557545,5],[1,5553241,1.028133,5],[1,13935492,1.519182,5],[1,6391466,0.475703,5],[1,9115698,0.84399,5],[1,7020135,0.537084,5],[1,8696585,0.29156,5],[1,14773717,1.488491,5],[1,18126617,4.005115,5],[1,17917061,0.567775,5],[1,14983273,0.26087,5],[1,7020135,0.506394,5],[1,6391466,0.383632,5],[1,17917061,0.230179,5],[1,8696585,0.629156,5],[1,17917061,0.107417,5],[1,5553241,0.629156,5],[1,8696585,1.212276,5],[1,13516379,1.212276,5],[1,5343685,2.378517,5],[1,8696585,2.01023,5],[1,5343685,2.163683,5],[1,17288392,1.058824,5],[1,18755286,0.813299,5],[1,5343685,0.782609,5],[1,14354604,0.046036,5],[1,17288392,3.421995,5],[1,18755286,0.997442,5],[1,17288392,2.59335,5],[1,17288392,2.409207,5],[1,17288392,1.212276,5],[1,2829010,0.506394,5],[1,17288392,1.242967,5],[1,17288392,1.365729,5],[1,5762797,0.782609,5],[1,5343685,1.335038,5],[1,5553241,0.84399,5],[1,6601022,0.782609,5],[1,5762797,0.87468,5],[1,6810579,1.212276,5],[1,14354604,0.445013,5],[1,5343685,1.856777,5],[1,5134129,5.723785,5],[1,8906141,0.751918,5],[1,8906141,0.84399,5],[1,8906141,1.089514,5],[1,5343685,0.230179,5],[1,18755286,0.29156,5],[1,5343685,0.383632,5],[1,6601022,0.383632,5],[1,6601022,0.475703,5],[1,18755286,0.567775,5],[1,17288392,0.966752,5],[1,17288392,0.997442,5],[1,5762797,0.690537,5],[1,5343685,0.690537,5],[1,17288392,1.028133,5],[1,9115698,1.212276,5],[1,17917061,1.150895,5],[1,14983273,0.598465,5],[1,6391466,0.721228,5],[1,16031054,0.997442,5],[1,14773717,0.936061,5],[1,14145048,1.028133,5],[1,5553241,0.598465,5],[1,9325254,0.138107,5],[1,9325254,0.168798,5],[1,16031054,0.966752,5],[1,16031054,0.905371,5],[1,14773717,0.84399,5],[1,5553241,0.076726,5],[1,5553241,0.567775,5],[1,5553241,0.475703,5],[1,14773717,0.813299,5],[1,7020135,1.304348,5],[1,3038566,0.352941,5],[1,13935492,0.751918,5],[1,13935492,0.721228,5],[1,9325254,0.29156,5],[1,13935492,0.690537,5],[1,5553241,0.230179,5],[1,6391466,0.629156,5],[1,14983273,0.905371,5],[1,9325254,0.475703,5],[1,5134129,1.028133,5],[1,5553241,1.304348,5],[1,3038566,0.598465,5],[1,9115698,0.905371,5],[1,17917061,0.751918,5],[1,7020135,0.567775,5],[1,14773717,1.150895,5],[1,14773717,1.120205,5],[1,14983273,0.475703,5],[1,14773717,1.058824,5],[1,5553241,0.445013,6],[1,4086347,2.071611,6],[1,17707504,0.537084,6],[1,7439247,1.519182,6],[1,17917061,0.629156,6],[1,4295903,0.199488,6],[1,1571672,0.966752,6],[1,5553241,1.97954,6],[1,10792148,2.225064,6],[1,5553241,1.948849,6],[1,19383955,0.383632,6],[1,5343685,1.641944,6],[1,1571672,0.659847,6],[1,10792148,0.475703,6],[1,7648804,0.506394,6],[1,1571672,0.475703,6],[1,5553241,0.199488,6],[1,7648804,0.813299,6],[1,1571672,0.751918,6],[1,16240611,0.475703,6],[1,4715016,0.659847,6],[1,6181910,0.199488,6],[1,1781228,0.076726,6],[1,1362116,0.537084,6],[1,16869279,0.445013,6],[1,4715016,0.414322,6],[1,12468598,0.138107,6],[1,16240611,0.26087,6],[1,1362116,0.84399,6],[1,12887710,1.120205,6],[1,1362116,0.905371,6],[1,12468598,1.089514,6],[1,15611942,0.966752,6],[1,19383955,0.107417,6],[1,17917061,0.690537,6],[1,15402386,0.138107,6],[1,10792148,0.905371,6],[1,11839929,0.168798,6],[1,11839929,0.230179,6],[1,4505460,0.26087,6],[1,314334,1.058824,6],[1,6181910,0.230179,6],[1,16869279,1.396419,6],[1,12049485,0.199488,6],[1,13725935,1.519182,6],[1,6391466,0.690537,6],[1,7439247,2.317136,6],[1,15402386,0.414322,6],[1,4295903,0.936061,6],[1,10792148,1.181586,6],[1,12049485,0.383632,6],[1,13725935,1.948849,6],[1,4505460,0.506394,6],[1,17917061,0.813299,6],[1,10792148,0.567775,6],[1,10792148,1.212276,6],[1,1571672,1.120205,6],[1,12468598,1.058824,6],[1,10792148,0.598465,6],[1,5343685,2.961637,6],[1,10792148,1.519182,6],[1,6181910,0.322251,6],[1,17917061,1.089514,6],[1,16869279,1.058824,6],[1,10792148,0.782609,6],[1,6601022,0.322251,6],[1,10792148,0.813299,6],[1,5343685,1.97954,6],[1,17707504,0.138107,6],[1,6391466,1.058824,6],[1,12049485,0.352941,6],[1,943003,1.089514,6],[1,943003,1.150895,6],[1,16031054,0.414322,6],[1,16031054,0.383632,6],[1,7020135,0.751918,6],[1,13935492,0.199488,6],[1,13935492,0.168798,6],[1,16031054,0.29156,6],[1,16031054,0.26087,6],[1,7020135,0.690537,6],[1,7229691,0.107417,6],[1,7020135,0.629156,6],[1,11211260,1.212276,6],[1,943003,1.611253,6],[1,18336173,0.168798,6],[1,733447,0.84399,6],[1,6391466,0.138107,6],[1,18336173,0.322251,6],[1,733447,0.782609,6],[1,5553241,1.273657,6],[1,733447,0.721228,6],[1,11211260,0.629156,6],[1,7229691,0.567775,6],[1,11211260,0.567775,6],[1,11211260,0.445013,6],[1,11211260,0.322251,6],[1,733447,0.629156,6],[1,16659723,0.414322,6],[1,11420816,0.87468,6],[1,11420816,0.966752,6],[1,314334,0.138107,6],[1,12678154,0.598465,6],[1,5134129,1.089514,6],[1,5134129,0.629156,6],[1,5134129,0.598465,6],[1,5134129,0.567775,6],[1,11420816,0.414322,6],[1,11420816,0.352941,6],[1,12678154,0.322251,6],[1,314334,0.015345,6],[1,5134129,1.212276,6],[1,12678154,0.168798,6],[1,11420816,1.488491,6],[1,5134129,0.383632,6],[1,13935492,0.506394,6],[1,5134129,0.230179,6],[1,943003,0.659847,6],[1,5134129,0.168798,6],[1,12678154,0.936061,6],[1,943003,0.782609,6],[1,943003,0.813299,6],[1,16031054,0.751918,6],[1,943003,0.905371,6],[1,7020135,1.058824,6],[1,16031054,0.598465,6],[1,7020135,0.997442,6],[1,16031054,0.506394,6],[1,6810579,0.629156,6],[1,5343685,0.076726,6],[1,6810579,0.138107,6],[1,19174398,0.29156,6],[1,14354604,0.076726,6],[1,5343685,0.629156,6],[1,16659723,0.138107,6],[1,18126617,1.181586,6],[1,523891,0.721228,6],[1,18126617,1.120205,6],[1,11001704,0.046036,6],[1,12887710,0.445013,6],[1,12887710,0.475703,6],[1,523891,0.629156,6],[1,14354604,0.015345,6],[1,5343685,1.181586,6],[1,4715016,1.120205,6],[1,523891,0.475703,6],[1,12468598,0.383632,6],[1,18126617,0.997442,6],[1,16869279,0.138107,6],[1,4715016,0.905371,6],[1,18126617,0.966752,6],[1,11839929,1.089514,6],[1,18126617,5.969309,6],[1,523891,0.322251,6],[1,1362116,0.168798,6],[1,1362116,0.26087,6],[1,1362116,0.352941,6],[1,733447,0.567775,6],[1,6391466,0.352941,6],[1,1152559,0.537084,6],[1,1152559,0.567775,6],[1,6391466,0.046036,6],[1,13935492,0.107417,6],[1,7229691,0.966752,6],[1,7020135,0.414322,6],[1,11630373,0.322251,6],[1,15611942,0.046036,6],[1,314334,0.537084,6],[1,11630373,0.445013,6],[1,11630373,0.598465,6],[1,1152559,0.87468,6],[1,15611942,0.352941,6],[1,15611942,0.414322,6],[1,314334,0.751918,6],[1,314334,0.782609,6],[1,7439247,0.26087,6],[1,5553241,1.150895,6],[1,13935492,1.150895,6],[1,11630373,1.058824,6],[1,19174398,0.690537,6],[1,12468598,0.598465,6],[1,7439247,0.690537,6],[1,4924572,0.751918,6],[1,6810579,0.690537,6],[1,5553241,0.966752,6],[1,4924572,0.629156,6],[1,18964842,0.475703,6],[1,18964842,0.383632,6],[1,17497948,0.26087,6],[1,17497948,0.230179,6],[1,17497948,0.199488,6],[1,12259042,0.383632,6],[1,8487029,0.015345,6],[1,5762797,0.076726,6],[1,104778,0.782609,6],[1,2200341,1.580563,6],[1,14773717,0.107417,6],[1,8487029,0.598465,6],[1,17078836,0.168798,6],[1,14773717,0.230179,6],[1,14773717,0.383632,6],[1,14773717,0.506394,6],[1,14773717,0.598465,6],[1,5762797,0.138107,6],[1,14773717,0.629156,6],[1,5762797,0.168798,6],[1,8487029,1.212276,6],[1,3038566,1.150895,6],[1,8487029,1.549872,6],[1,3038566,1.028133,6],[1,15821498,0.199488,6],[1,15821498,0.230179,6],[1,3038566,0.87468,6],[1,15821498,0.29156,6],[1,3038566,0.751918,6],[1,15821498,0.414322,6],[1,3038566,0.629156,6],[1,3876791,0.383632,6],[1,16450167,1.028133,6],[1,3876791,0.199488,6],[1,3876791,0.107417,6],[1,3876791,0.046036,6],[1,3876791,0.015345,6],[1,10163479,0.690537,6],[1,8067916,0.813299,6],[1,8067916,0.87468,6],[1,8067916,1.150895,6],[1,5972354,0.352941,6],[1,15192829,0.475703,6],[1,8067916,1.304348,6],[1,8067916,1.396419,6],[1,10163479,0.26087,6],[1,15192829,0.322251,6],[1,10163479,0.138107,6],[1,10163479,0.076726,6],[1,8067916,1.764706,6],[1,15192829,0.138107,6],[1,13725935,0.29156,6],[1,16450167,0.629156,6],[1,13097267,0.076726,6],[1,8277473,0.352941,6],[1,8277473,0.475703,6],[1,8277473,0.537084,6],[1,2200341,0.414322,6],[1,13097267,0.107417,6],[1,2200341,0.751918,6],[1,17497948,0.966752,6],[1,17497948,0.87468,6],[1,14564160,2.378517,6],[1,13516379,0.199488,6],[1,2409897,3.14578,6],[1,18755286,0.87468,6],[1,19593511,0.29156,6],[1,9115698,0.107417,6],[1,104778,0.352941,6],[1,15821498,1.918159,6],[1,9534810,0.29156,6],[1,17288392,1.488491,6],[1,17288392,1.304348,6],[1,13306823,0.26087,6],[1,9115698,0.537084,6],[1,17288392,0.690537,6],[1,5762797,1.856777,6],[1,9115698,0.598465,6],[1,14145048,0.936061,6],[1,9115698,0.751918,6],[1,17288392,0.230179,6],[1,9115698,0.813299,6],[1,2619453,0.168798,6],[1,2619453,0.199488,6],[1,2619453,0.322251,6],[1,14983273,0.414322,6],[1,14983273,0.445013,6],[1,9115698,1.335038,6],[1,9325254,1.028133,6],[1,9325254,0.26087,6],[1,9325254,0.782609,6],[1,9325254,0.352941,6],[1,14983273,0.936061,6],[1,9325254,0.445013,6],[1,15821498,0.506394,6],[1,3038566,0.567775,6],[1,15821498,0.567775,6],[1,15821498,0.598465,6],[1,15821498,0.629156,6],[1,3038566,0.445013,6],[1,3038566,0.414322,6],[1,15821498,0.782609,6],[1,2409897,0.138107,6],[1,15821498,0.905371,6],[1,2409897,0.690537,6],[1,14773717,1.335038,6],[1,19593511,0.782609,6],[1,2409897,0.966752,6],[1,19593511,0.751918,6],[1,15821498,1.028133,6],[1,8696585,0.414322,6],[1,15821498,1.089514,6],[1,13516379,1.396419,6],[1,8696585,1.028133,6],[1,12259042,0.659847,6],[1,2829010,2.685422,6],[1,5762797,0.445013,6],[1,8906141,0.138107,6],[1,19593511,0.567775,6],[1,8906141,0.199488,6],[1,8906141,0.322251,6],[1,9744366,0.230179,6],[1,9744366,0.015345,6],[1,8906141,0.506394,6],[1,5762797,0.629156,6],[1,104778,0.445013,6],[1,5972354,0.445013,6],[1,18545730,1.058824,6],[1,1990785,1.150895,6],[1,4086347,0.659847,6],[1,10373035,0.29156,6],[1,10582591,0.84399,6],[1,10582591,0.751918,6],[1,19383955,0.721228,6],[1,10373035,0.414322,6],[1,18545730,0.936061,6],[1,1781228,1.396419,6],[1,4086347,0.076726,6],[1,7858360,0.567775,6],[1,13725935,0.445013,6],[1,10582591,0.445013,6],[1,18545730,0.782609,6],[1,3876791,0.997442,6],[1,15192829,1.42711,6],[1,3876791,0.84399,6],[1,3876791,0.813299,6],[1,14564160,0.076726,6],[1,3876791,1.335038,6],[1,10373035,0.84399,6],[1,13725935,0.751918,6],[1,7858360,1.028133,6],[1,7858360,0.905371,6],[1,18545730,0.475703,6],[1,14145048,2.808184,6],[1,1990785,0.537084,6],[1,1990785,0.598465,6],[1,19383955,0.813299,6],[1,18545730,0.721228,6],[1,6181910,0.076726,6],[1,8067916,0.598465,6],[1,4086347,0.87468,6],[1,8067916,0.629156,6],[1,4086347,1.089514,6],[1,3876791,0.598465,6],[1,1781228,0.690537,6],[1,10582591,0.966752,6],[1,4086347,0.997442,6],[1,19383955,0.506394,6],[1,4086347,0.84399,6],[1,1781228,0.537084,6],[1,16450167,1.273657,6],[1,2829010,3.237852,7],[1,2409897,1.058824,7],[1,15611942,0.076726,7],[1,7858360,0.690537,7],[1,7858360,0.721228,7],[1,5762797,0.29156,7],[1,8696585,0.475703,7],[1,7648804,0.475703,7],[1,314334,0.475703,7],[1,7858360,0.782609,7],[1,5343685,4.31202,7],[1,733447,0.537084,7],[1,733447,0.475703,7],[1,15611942,0.138107,7],[1,1571672,1.181586,7],[1,11630373,0.537084,7],[1,7020135,0.352941,7],[1,15611942,0.199488,7],[1,7020135,0.29156,7],[1,1781228,0.598465,7],[1,15611942,0.29156,7],[1,314334,0.567775,7],[1,11630373,0.659847,7],[1,16659723,0.813299,7],[1,17288392,0.076726,7],[1,15611942,0.383632,7],[1,13516379,0.905371,7],[1,4295903,0.445013,7],[1,1781228,0.506394,7],[1,3038566,0.383632,7],[1,7648804,0.414322,7],[1,733447,1.365729,7],[1,314334,0.26087,7],[1,3038566,0.475703,7],[1,3038566,0.506394,7],[1,13935492,0.659847,7],[1,18126617,0.445013,7],[1,14983273,0.966752,7],[1,4086347,1.519182,7],[1,1781228,0.352941,7],[1,5553241,0.414322,7],[1,16240611,1.181586,7],[1,5134129,0.997442,7],[1,12678154,0.506394,7],[1,13725935,0.690537,7],[1,8696585,0.26087,7],[1,9325254,0.076726,7],[1,15821498,0.966752,7],[1,14983273,1.028133,7],[1,1571672,0.84399,7],[1,5762797,0.230179,7],[1,5553241,2.56266,7],[1,7020135,0.659847,7],[1,2409897,0.629156,7],[1,1571672,0.782609,7],[1,314334,0.322251,7],[1,2409897,0.567775,7],[1,14773717,0.87468,7],[1,2409897,0.383632,7],[1,7020135,1.028133,7],[1,104778,0.598465,7],[1,8487029,2.624041,7],[1,104778,0.322251,7],[1,6601022,0.567775,7],[1,6601022,0.659847,7],[1,2829010,0.199488,7],[1,2829010,0.26087,7],[1,9115698,0.230179,7],[1,12049485,0.567775,7],[1,18126617,0.26087,7],[1,4086347,0.598465,7],[1,523891,0.506394,7],[1,17288392,1.918159,7],[1,4295903,0.751918,7],[1,5343685,1.058824,7],[1,9115698,0.782609,7],[1,7648804,1.120205,7],[1,11839929,0.475703,7],[1,10582591,0.598465,7],[1,17288392,0.383632,7],[1,104778,0.26087,7],[1,14983273,0.015345,7],[1,6601022,0.107417,7],[1,11839929,0.199488,7],[1,19383955,0.567775,7],[1,12468598,0.721228,7],[1,17288392,0.352941,7],[1,10792148,0.721228,7],[1,5343685,1.948849,7],[1,9115698,0.567775,7],[1,5343685,1.826087,7],[1,10792148,0.751918,7],[1,17288392,0.813299,7],[1,6601022,0.352941,7],[1,17288392,0.87468,7],[1,1781228,0.997442,7],[1,13306823,0.076726,7],[1,2619453,0.076726,7],[1,17917061,0.414322,7],[1,17917061,0.445013,7],[1,9744366,0.046036,7],[1,5762797,0.598465,7],[1,8906141,0.383632,7],[1,19593511,0.475703,7],[1,7858360,0.506394,7],[1,6391466,0.445013,7],[1,9744366,0.26087,7],[1,314334,0.813299,7],[1,19593511,0.537084,7],[1,10582591,0.997442,7],[1,7648804,0.751918,7],[1,7858360,0.598465,7],[1,5762797,0.537084,7],[1,19383955,0.352941,7],[1,17917061,0.26087,7],[1,13935492,1.97954,7],[1,523891,0.813299,7],[1,18755286,0.598465,7],[1,13935492,1.703325,7],[1,18755286,0.475703,7],[1,18755286,0.445013,7],[1,15611942,0.813299,7],[1,6810579,0.046036,7],[1,2829010,0.782609,7],[1,6810579,0.383632,7],[1,18755286,0.168798,7],[1,6810579,0.475703,7],[1,8906141,0.690537,7],[1,14354604,0.107417,7],[1,5553241,2.255754,7],[1,1781228,1.365729,7],[1,8906141,0.537084,7],[1,12887710,0.26087,7],[1,2200341,0.690537,7],[1,14145048,0.076726,7],[1,8277473,0.813299,7],[1,8277473,0.751918,7],[1,7439247,0.29156,7],[1,7439247,0.383632,7],[1,16869279,0.751918,7],[1,12468598,0.629156,7],[1,12049485,0.046036,7],[1,12259042,0.076726,7],[1,3667235,0.046036,7],[1,4924572,0.966752,7],[1,7439247,0.598465,7],[1,8277473,0.506394,7],[1,16450167,0.26087,7],[1,8067916,0.506394,7],[1,1362116,0.997442,7],[1,16869279,0.598465,7],[1,18964842,0.445013,7],[1,18336173,0.782609,7],[1,18336173,0.813299,7],[1,12049485,0.076726,7],[1,1152559,0.107417,7],[1,17497948,0.567775,7],[1,18964842,0.629156,7],[1,18964842,0.659847,7],[1,8067916,0.383632,7],[1,18964842,0.721228,7],[1,17917061,2.531969,7],[1,9953923,0.87468,7],[1,18964842,0.782609,7],[1,8277473,1.488491,7],[1,2200341,0.813299,7],[1,16869279,0.84399,7],[1,16031054,0.046036,7],[1,18126617,1.611253,7],[1,8067916,0.414322,7],[1,7439247,1.028133,7],[1,4715016,0.445013,7],[1,4715016,0.537084,7],[1,4715016,0.598465,7],[1,8067916,1.181586,7],[1,7439247,1.42711,7],[1,8067916,1.120205,7],[1,8067916,1.028133,7],[1,8067916,0.966752,7],[1,14564160,0.138107,7],[1,18545730,1.212276,7],[1,1362116,0.445013,7],[1,12887710,0.813299,7],[1,12468598,0.352941,7],[1,16869279,0.383632,7],[1,8067916,0.690537,7],[1,12468598,0.29156,7],[1,8067916,0.721228,7],[1,3876791,0.445013,7],[1,13097267,0.015345,7],[1,8277473,0.199488,7],[1,5972354,0.29156,7],[1,11001704,0.537084,7],[1,19174398,0.445013,7],[1,13725935,0.138107,7],[1,11001704,0.445013,7],[1,4924572,0.537084,7],[1,5972354,0.475703,7],[1,19174398,0.26087,7],[1,4924572,0.475703,7],[1,19174398,0.168798,7],[1,10163479,0.107417,7],[1,4924572,0.199488,7],[1,18126617,1.457801,7],[1,6181910,0.659847,7],[1,10163479,0.168798,7],[1,16450167,1.335038,7],[1,6181910,0.567775,7],[1,8067916,0.567775,7],[1,4505460,0.598465,7],[1,18545730,0.26087,7],[1,10373035,0.659847,7],[1,5134129,0.107417,7],[1,14773717,0.29156,7],[1,18545730,0.29156,7],[1,14773717,0.199488,7],[1,5134129,0.046036,7],[1,17078836,0.26087,7],[1,10373035,0.567775,7],[1,13935492,0.475703,7],[1,17078836,0.076726,7],[1,18545730,0.383632,7],[1,8067916,0.138107,7],[1,13935492,0.352941,7],[1,8487029,0.537084,7],[1,13935492,0.322251,7],[1,8487029,0.475703,7],[1,13935492,0.29156,7],[1,5134129,0.966752,7],[1,1571672,0.29156,7],[1,3038566,0.659847,7],[1,3038566,0.721228,7],[1,5134129,0.84399,7],[1,11420816,0.598465,7],[1,13935492,0.567775,7],[1,3038566,0.966752,7],[1,13725935,1.703325,7],[1,5972354,0.751918,7],[1,3038566,0.997442,7],[1,18545730,0.168798,7],[1,10373035,0.905371,7],[1,10373035,0.87468,7],[1,4505460,0.445013,7],[1,11420816,0.168798,7],[1,5134129,0.352941,7],[1,4505460,0.475703,7],[1,12678154,0.659847,7],[1,18545730,0.199488,7],[1,18336173,0.721228,7],[1,17707504,0.445013,7],[1,18336173,0.598465,7],[1,17497948,0.475703,7],[1,7229691,0.659847,7],[1,18336173,0.506394,7],[1,14145048,0.230179,7],[1,14145048,0.26087,7],[1,8277473,1.641944,7],[1,16031054,0.107417,7],[1,7229691,0.506394,7],[1,7229691,0.414322,7],[1,14145048,0.445013,7],[1,18964842,0.107417,7],[1,16659723,0.506394,7],[1,14145048,0.506394,7],[1,8487029,0.322251,7],[1,1990785,0.414322,7],[1,8487029,0.230179,7],[1,13935492,0.138107,7],[1,5762797,0.046036,7],[1,9953923,0.26087,7],[1,2200341,1.089514,7],[1,16031054,0.199488,7],[1,13097267,0.322251,7],[1,7229691,0.199488,7],[1,18336173,0.138107,7],[1,6391466,0.230179,7],[1,18126617,0.015345,8],[1,12049485,0.230179,8],[1,12259042,0.138107,8],[1,19383955,0.230179,8],[1,104778,0.751918,8],[1,12468598,0.076726,8],[1,18126617,0.84399,8],[1,104778,0.046036,8],[1,5762797,0.751918,8],[1,6391466,0.107417,8],[1,314334,0.107417,8],[1,5972354,0.414322,8],[1,19383955,0.966752,8],[1,104778,0.414322,8],[1,19383955,0.076726,8],[1,16659723,0.076726,8],[1,6391466,0.598465,8],[1,314334,0.383632,8],[1,104778,0.475703,8],[1,5972354,0.322251,8],[1,314334,0.690537,8],[1,6391466,0.29156,8],[1,12468598,0.107417,8],[1,14145048,0.168798,8],[1,5972354,0.199488,8],[1,4086347,0.322251,8],[1,4086347,0.199488,8],[1,7858360,0.659847,8],[1,10582591,0.383632,8],[1,10582591,0.230179,8],[1,3876791,1.795396,8],[1,10373035,1.181586,8],[1,18545730,0.107417,8],[1,1990785,0.506394,8],[1,1990785,0.659847,8],[1,1990785,0.751918,8],[1,10373035,0.383632,8],[1,10373035,0.26087,8],[1,8067916,0.537084,8],[1,8067916,0.84399,8],[1,8067916,1.242967,8],[1,10163479,0.383632,8],[1,13725935,0.015345,8],[1,2200341,0.230179,8],[1,10792148,1.672634,8],[1,10792148,1.457801,8],[1,7648804,0.629156,8],[1,14354604,3.636829,8],[1,7648804,0.905371,8],[1,15402386,0.29156,8],[1,10792148,0.87468,8],[1,15402386,0.046036,8],[1,10792148,0.445013,8],[1,10792148,0.230179,8],[1,4295903,0.322251,8],[1,4295903,0.230179,8],[1,16240611,0.29156,8],[1,16240611,0.506394,8],[1,1781228,0.414322,8],[1,7858360,0.199488,8],[1,13725935,0.813299,8],[1,7858360,0.26087,8],[1,7858360,0.29156,8],[1,7858360,0.352941,8],[1,2409897,0.230179,8],[1,8696585,0.199488,8],[1,19593511,0.721228,8],[1,8696585,1.120205,8],[1,13516379,0.383632,8],[1,19593511,0.598465,8],[1,8906141,0.107417,8],[1,19593511,0.445013,8],[1,8906141,0.659847,8],[1,18755286,0.629156,8],[1,18755286,0.751918,8],[1,19593511,0.168798,8],[1,19593511,0.138107,8],[1,17288392,1.273657,8],[1,17288392,0.659847,8],[1,14983273,0.076726,8],[1,17288392,0.445013,8],[1,14983273,0.168798,8],[1,14983273,0.659847,8],[1,9325254,0.84399,8],[1,18964842,1.365729,8],[1,2200341,0.659847,8],[1,8277473,1.273657,8],[1,17497948,0.506394,8],[1,17497948,0.383632,8],[1,17497948,0.352941,8],[1,18964842,0.168798,8],[1,18964842,0.138107,8],[1,17497948,0.107417,8],[1,18964842,0.015345,8],[1,17497948,0.015345,8],[1,9953923,0.29156,8],[1,8487029,0.199488,8],[1,8487029,0.26087,8],[1,9953923,0.138107,8],[1,14773717,0.076726,8],[1,17078836,0.199488,8],[1,3038566,1.42711,8],[1,8487029,1.181586,8],[1,15821498,0.168798,8],[1,15611942,0.107417,8],[1,733447,0.138107,8],[1,733447,0.168798,8],[1,733447,0.383632,8],[1,733447,0.751918,8],[1,7020135,0.782609,8],[1,7020135,0.813299,8],[1,5134129,1.273657,8],[1,12678154,0.537084,8],[1,5134129,0.751918,8],[1,11420816,0.537084,8],[1,5134129,0.537084,8],[1,15402386,3.14578,8],[1,7229691,0.168798,8],[1,7229691,0.230179,8],[1,7229691,0.322251,8],[1,7229691,0.352941,8],[1,11211260,0.690537,8],[1,1152559,0.26087,8],[1,18336173,0.936061,8],[1,5553241,0.168798,8],[1,5553241,0.107417,8],[1,5553241,0.015345,8],[1,17917061,0.076726,8],[1,6601022,0.168798,8],[1,6601022,0.199488,8],[1,6601022,0.26087,8],[1,523891,0.076726,8],[1,523891,0.445013,8],[1,14354604,0.29156,8],[1,14354604,0.629156,8],[1,16659723,4.005115,8],[1,13935492,1.120205,8],[1,11630373,0.905371,8],[1,7020135,0.076726,8],[1,11630373,0.751918,8],[1,7020135,0.107417,8],[1,7020135,0.138107,8],[1,7020135,0.199488,8],[1,7020135,0.26087,8],[1,17707504,0.905371,8],[1,1362116,0.076726,8],[1,1362116,0.138107,8],[1,4715016,0.751918,8],[1,1362116,0.414322,8],[1,17707504,0.813299,8],[1,17707504,0.751918,8],[1,16869279,0.629156,8],[1,16869279,0.721228,8],[1,1362116,1.304348,8],[1,17707504,0.414322,8],[1,17707504,0.168798,8],[1,4505460,0.29156,8],[1,7648804,0.138107,8],[1,7648804,0.199488,8],[1,1571672,0.414322,8],[1,7648804,0.29156,8],[1,1571672,0.567775,8],[1,7648804,0.352941,8],[1,7648804,0.383632,8],[1,18336173,1.028133,8],[1,1152559,0.629156,8],[1,1152559,0.84399,8],[1,1152559,0.936061,8],[1,7439247,0.445013,8],[1,4924572,0.782609,8],[1,4924572,0.690537,8],[1,4924572,0.29156,8],[1,4924572,0.230179,8],[1,19174398,0.076726,8],[1,4924572,0.168798,8],[1,11001704,0.322251,8],[1,4924572,0.076726,8],[1,11001704,0.26087,8],[1,11001704,0.230179,8],[1,11001704,0.199488,8],[1,14354604,2.01023,8],[1,7439247,1.457801,8],[1,4715016,0.936061,8],[1,16869279,0.107417,8],[1,19593511,0.352941,9],[1,19593511,0.199488,9],[1,19593511,0.383632,9],[1,10792148,0.107417,9],[1,10582591,0.322251,9],[1,10582591,0.168798,9],[1,10582591,0.046036,9],[1,10373035,1.42711,9],[1,10163479,0.29156,9],[1,9953923,0.966752,9],[1,9744366,0.076726,9],[1,9534810,1.918159,9],[1,9534810,0.537084,9],[1,9115698,1.181586,9],[1,9115698,0.352941,9],[1,9115698,0.322251,9],[1,9115698,0.26087,9],[1,9115698,0.138107,9],[1,9115698,0.076726,9],[1,8906141,0.598465,9],[1,8906141,0.567775,9],[1,8906141,0.352941,9],[1,8906141,0.076726,9],[1,8696585,0.230179,9],[1,8696585,0.046036,9],[1,8487029,0.506394,9],[1,8277473,0.567775,9],[1,8277473,0.230179,9],[1,8067916,0.29156,9],[1,7648804,0.690537,9],[1,7648804,0.26087,9],[1,7439247,1.641944,9],[1,7229691,0.537084,9],[1,16031054,0.230179,9],[1,16031054,0.076726,9],[1,15821498,0.813299,9],[1,15402386,2.194373,9],[1,15402386,0.230179,9],[1,15402386,0.107417,9],[1,15192829,0.997442,9],[1,14983273,0.782609,9],[1,14773717,0.690537,9],[1,14773717,0.537084,9],[1,14145048,0.721228,9],[1,13935492,1.242967,9],[1,12887710,0.199488,9],[1,12887710,0.107417,9],[1,12678154,0.475703,9],[1,11839929,0.352941,9],[1,11630373,0.414322,9],[1,11630373,0.26087,9],[1,11630373,0.230179,9],[1,11630373,0.168798,9],[1,11420816,0.751918,9],[1,11420816,0.076726,9],[1,11211260,0.936061,9],[1,11211260,0.813299,9],[1,11211260,0.506394,9],[1,11211260,0.383632,9],[1,11211260,0.29156,9],[1,10792148,0.537084,9],[1,10792148,0.26087,9],[1,10792148,0.199488,9],[1,2200341,1.120205,9],[1,2200341,0.721228,9],[1,2200341,0.537084,9],[1,2200341,0.506394,9],[1,2200341,0.445013,9],[1,2200341,0.383632,9],[1,2200341,0.168798,9],[1,1781228,5.048593,9],[1,1781228,0.26087,9],[1,1571672,0.87468,9],[1,1362116,0.322251,9],[1,1362116,0.107417,9],[1,1362116,0.046036,9],[1,1152559,0.721228,9],[1,1152559,0.690537,9],[1,1152559,0.506394,9],[1,1152559,0.475703,9],[1,1152559,0.383632,9],[1,943003,0.567775,9],[1,943003,0.414322,9],[1,943003,0.383632,9],[1,733447,0.87468,9],[1,733447,0.414322,9],[1,733447,0.29156,9],[1,733447,0.230179,9],[1,523891,0.383632,9],[1,104778,0.230179,9],[1,104778,0.138107,9],[1,104778,0.076726,9],[1,104778,0.015345,9],[1,7229691,0.015345,9],[1,7020135,0.475703,9],[1,6810579,0.813299,9],[1,6810579,0.26087,9],[1,6601022,0.751918,9],[1,6601022,0.015345,9],[1,6391466,0.322251,9],[1,6181910,0.598465,9],[1,6181910,0.506394,9],[1,6181910,0.352941,9],[1,5972354,0.26087,9],[1,5972354,0.230179,9],[1,5553241,2.194373,9],[1,5553241,1.242967,9],[1,5343685,0.046036,9],[1,4924572,0.659847,9],[1,4924572,0.414322,9],[1,4505460,0.414322,9],[1,4505460,0.352941,9],[1,4295903,0.506394,9],[1,4295903,0.352941,9],[1,4086347,0.383632,9],[1,3876791,1.089514,9],[1,3876791,0.138107,9],[1,3038566,0.138107,9],[1,3038566,0.076726,9],[1,2409897,0.751918,9],[1,2409897,0.352941,9],[1,2409897,0.29156,9],[1,2409897,0.26087,9],[1,2409897,0.076726,9],[1,17497948,0.168798,9],[1,19174398,0.107417,9],[1,18755286,0.352941,9],[1,16869279,0.690537,9],[1,16450167,0.383632,9],[1,18755286,0.076726,9],[1,16869279,0.905371,9],[1,17497948,0.751918,9],[1,16869279,0.475703,9],[1,17707504,1.150895,9],[1,17078836,0.015345,9],[1,17288392,1.549872,9],[1,17707504,0.997442,9],[1,17707504,0.659847,9],[1,16659723,0.230179,9],[1,17707504,0.475703,9],[1,19383955,0.997442,9],[1,19383955,0.629156,9],[1,17288392,0.168798,9],[1,18545730,0.138107,9],[1,16869279,0.26087,9],[1,17288392,0.046036,9],[1,18336173,0.751918,9],[1,17288392,0.629156,9],[1,18126617,1.549872,9],[1,18964842,0.537084,9],[1,16659723,0.383632,9],[1,4086347,1.734015,10],[1,17078836,3.207161,10],[1,3038566,0.046036,10],[1,18336173,0.076726,10],[1,9115698,0.690537,10],[1,18336173,0.199488,10],[1,10373035,0.322251,10],[1,10373035,0.138107,10],[1,10582591,0.138107,10],[1,4295903,0.076726,10],[1,10373035,0.046036,10],[1,4086347,0.168798,10],[1,16869279,0.168798,10],[1,11211260,0.352941,10],[1,2200341,0.046036,10],[1,18545730,0.076726,10],[1,18336173,0.659847,10],[1,18336173,0.445013,10],[1,11001704,0.629156,10],[1,11001704,0.138107,10],[1,2409897,0.168798,10],[1,10792148,1.120205,10],[1,18336173,0.383632,10],[1,2409897,0.322251,10],[1,10792148,0.383632,10],[1,18336173,0.230179,10],[1,10792148,0.29156,10],[1,16869279,0.322251,10],[1,10792148,0.138107,10],[1,2409897,0.506394,10],[1,2409897,0.537084,10],[1,10582591,0.567775,10],[1,16869279,0.659847,10],[1,10582591,0.199488,10],[1,8067916,0.230179,10],[1,8067916,0.199488,10],[1,5972354,0.629156,10],[1,7858360,0.537084,10],[1,7858360,0.383632,10],[1,6391466,0.168798,10],[1,7648804,1.212276,10],[1,7648804,0.84399,10],[1,17497948,0.813299,10],[1,17707504,0.383632,10],[1,7648804,0.322251,10],[1,6601022,0.046036,10],[1,7648804,0.046036,10],[1,6601022,0.445013,10],[1,7439247,0.230179,10],[1,6810579,0.199488,10],[1,6810579,0.29156,10],[1,6810579,0.322251,10],[1,6810579,0.352941,10],[1,7229691,0.598465,10],[1,6810579,0.598465,10],[1,7020135,0.230179,10],[1,7020135,0.445013,10],[1,17288392,0.107417,10],[1,4295903,0.107417,10],[1,4295903,0.138107,10],[1,4295903,0.26087,10],[1,17288392,0.782609,10],[1,4295903,0.537084,10],[1,4505460,0.322251,10],[1,9115698,0.015345,10],[1,17288392,0.84399,10],[1,8906141,0.475703,10],[1,4505460,0.383632,10],[1,8906141,0.168798,10],[1,19593511,0.629156,10],[1,8906141,0.015345,10],[1,8696585,0.383632,10],[1,17497948,0.076726,10],[1,8696585,0.076726,10],[1,4924572,0.352941,10],[1,8487029,0.107417,10],[1,17917061,2.900256,10],[1,8277473,3.11509,10],[1,17497948,0.29156,10],[1,8277473,0.322251,10],[1,17917061,0.352941,10],[1,12678154,0.567775,10],[1,11630373,0.782609,10],[1,11839929,0.015345,10],[1,314334,0.659847,10],[1,18755286,0.046036,10],[1,314334,1.181586,10],[1,11839929,0.107417,10],[1,1362116,0.015345,10],[1,11839929,0.29156,10],[1,16659723,0.168798,10],[1,15402386,0.015345,10],[1,12049485,0.107417,10],[1,19174398,0.138107,10],[1,733447,0.659847,10],[1,12259042,0.26087,10],[1,12678154,0.29156,10],[1,12678154,0.26087,10],[1,15192829,0.046036,10],[1,12259042,0.445013,10],[1,15192829,0.015345,10],[1,943003,0.629156,10],[1,16240611,0.168798,10],[1,18755286,0.414322,10],[1,14773717,3.759591,10],[1,18964842,0.230179,10],[1,19383955,0.015345,10],[1,12468598,0.230179,10],[1,14564160,0.015345,10],[1,12468598,0.445013,10],[1,1152559,0.352941,10],[1,1990785,0.475703,10],[1,1990785,0.352941,10],[1,19383955,0.199488,10],[1,16869279,0.015345,10],[1,12887710,0.230179,10],[1,18545730,0.322251,10],[1,1781228,0.199488,10],[1,13097267,0.383632,10],[1,16659723,0.015345,10],[1,1781228,0.168798,10],[1,16031054,0.015345,10],[1,314334,0.168798,10],[1,12887710,0.168798,10],[1,314334,0.352941,10],[1,1362116,1.089514,10],[1,11630373,0.475703,10],[1,16659723,0.199488,10],[1,943003,0.537084,10],[1,943003,0.138107,10],[1,11630373,0.352941,10],[1,1571672,0.322251,10],[1,15611942,0.015345,10],[1,13935492,0.046036,10],[1,1571672,0.506394,10],[1,943003,0.168798,10],[1,943003,0.352941,11],[1,733447,0.598465,11],[1,12887710,0.383632,11],[1,19593511,0.936061,11],[1,8067916,0.322251,11],[1,8067916,0.475703,11],[1,5762797,0.015345,11],[1,17917061,0.199488,11],[1,13516379,0.107417,11],[1,14145048,0.046036,11],[1,8277473,0.107417,11],[1,8487029,0.168798,11],[1,8487029,0.046036,11],[1,5134129,0.015345,11],[1,4715016,0.506394,11],[1,943003,0.107417,11],[1,17707504,0.107417,11],[1,104778,0.168798,11],[1,7229691,0.29156,11],[1,16031054,0.782609,11],[1,314334,0.046036,11],[1,314334,0.199488,11],[1,7439247,0.107417,11],[1,314334,0.29156,11],[1,6810579,0.076726,11],[1,7439247,0.352941,11],[1,6601022,0.506394,11],[1,314334,0.629156,11],[1,7648804,0.076726,11],[1,6601022,0.076726,11],[1,7648804,0.230179,11],[1,16240611,0.076726,11],[1,523891,0.26087,11],[1,6391466,0.199488,11],[1,15192829,0.076726,11],[1,6391466,0.015345,11],[1,7858360,0.138107,11],[1,7858360,0.230179,11],[1,7858360,0.322251,11],[1,7858360,0.445013,11],[1,7858360,0.629156,11],[1,19174398,0.813299,11],[1,8067916,0.076726,11],[1,17917061,0.015345,11],[1,5972354,0.107417,11],[1,19174398,0.230179,11],[1,10163479,0.199488,11],[1,10163479,0.230179,11],[1,4086347,0.015345,11],[1,3038566,0.690537,11],[1,3038566,0.537084,11],[1,3038566,0.29156,11],[1,3038566,0.230179,11],[1,12259042,0.414322,11],[1,10373035,0.690537,11],[1,3038566,0.107417,11],[1,12259042,0.322251,11],[1,1152559,0.659847,11],[1,3038566,0.015345,11],[1,11839929,0.537084,11],[1,10582591,0.26087,11],[1,10582591,0.721228,11],[1,10792148,0.076726,11],[1,10792148,0.322251,11],[1,18336173,0.352941,11],[1,10792148,0.84399,11],[1,16659723,0.322251,11],[1,1571672,0.383632,11],[1,2409897,0.107417,11],[1,1571672,0.537084,11],[1,2409897,0.015345,11],[1,18336173,0.537084,11],[1,1781228,0.138107,11],[1,1990785,0.199488,11],[1,16869279,0.199488,11],[1,8696585,0.506394,11],[1,4715016,0.199488,11],[1,4715016,0.168798,11],[1,4505460,0.537084,11],[1,12887710,0.138107,11],[1,16659723,0.046036,11],[1,19174398,0.015345,11],[1,17288392,0.905371,11],[1,943003,0.475703,11],[1,12678154,0.414322,11],[1,12678154,0.383632,11],[1,943003,0.598465,11],[1,4295903,0.29156,11],[1,17288392,0.26087,11],[1,19593511,0.076726,11],[1,17288392,0.015345,11],[1,1152559,0.168798,11],[1,12678154,0.107417,11],[1,12678154,0.138107,11],[1,18964842,0.506394,12],[1,2409897,0.199488,12],[1,5972354,0.076726,12],[1,4924572,0.26087,12],[1,6810579,0.230179,12],[1,4924572,0.107417,12],[1,18755286,0.015345,12],[1,1781228,0.046036,12],[1,4086347,0.107417,12],[1,4086347,0.230179,12],[1,4715016,0.322251,12],[1,6810579,0.414322,12],[1,6810579,0.506394,12],[1,1990785,0.567775,12],[1,2200341,0.475703,12],[1,2200341,0.199488,12],[1,17707504,0.230179,12],[1,17707504,0.506394,12],[1,1152559,0.076726,12],[1,6181910,0.84399,12],[1,4924572,0.813299,12],[1,17917061,0.046036,12],[1,733447,0.107417,12],[1,3038566,0.26087,12],[1,523891,0.107417,12],[1,2409897,0.721228,12],[1,5762797,2.961637,12],[1,2409897,0.475703,12],[1,5972354,0.046036,12],[1,6601022,0.138107,12],[1,1571672,0.107417,12],[1,3038566,0.782609,12],[1,6601022,0.230179,12],[1,1152559,0.199488,12],[1,4086347,0.046036,12],[1,7648804,0.168798,12],[1,12678154,0.076726,12],[1,11630373,0.506394,12],[1,11630373,0.29156,12],[1,11630373,0.199488,12],[1,8067916,0.107417,12],[1,11630373,0.107417,12],[1,8067916,0.168798,12],[1,8067916,0.352941,12],[1,8277473,0.046036,12],[1,11211260,0.230179,12],[1,8277473,0.138107,12],[1,10792148,0.997442,12],[1,10792148,0.352941,12],[1,16869279,0.506394,12],[1,10582591,0.076726,12],[1,10373035,0.506394,12],[1,10373035,0.230179,12],[1,10373035,0.107417,12],[1,10163479,0.046036,12],[1,9115698,0.383632,12],[1,19593511,0.046036,12],[1,8906141,0.230179,12],[1,19593511,0.26087,12],[1,8906141,0.445013,12],[1,19593511,0.506394,12],[1,16031054,0.322251,12],[1,16031054,0.659847,12],[1,16031054,0.138107,12],[1,7229691,0.138107,12],[1,15611942,0.230179,12],[1,7229691,0.26087,12],[1,15402386,0.076726,12],[1,17707504,0.076726,12],[1,16240611,0.199488,12],[1,13935492,2.838875,12],[1,13935492,0.537084,12],[1,13725935,0.598465,12],[1,13725935,0.076726,12],[1,12887710,0.046036,12],[1,12678154,0.352941,12],[1,17707504,0.046036,12],[1,16869279,0.29156,13],[1,10792148,0.414322,13],[1,18755286,0.107417,13],[1,12259042,0.168798,13],[1,1152559,0.414322,13],[1,10373035,0.598465,13],[1,15402386,0.168798,13],[1,16240611,0.046036,13],[1,10373035,0.199488,13],[1,1152559,0.29156,13],[1,17078836,0.107417,13],[1,15821498,0.015345,13],[1,12678154,0.199488,13],[1,19383955,0.138107,13],[1,4295903,0.475703,13],[1,1152559,0.046036,13],[1,4295903,0.813299,13],[1,12678154,0.230179,13],[1,1152559,0.015345,13],[1,11630373,0.138107,13],[1,12887710,0.076726,13],[1,1571672,0.936061,13],[1,943003,0.29156,13],[1,1781228,0.015345,13],[1,12887710,0.015345,13],[1,11420816,0.230179,13],[1,1781228,0.230179,13],[1,1990785,0.230179,13],[1,1990785,0.29156,13],[1,1990785,0.445013,13],[1,1990785,0.629156,13],[1,11839929,0.076726,13],[1,2200341,0.29156,13],[1,14145048,0.015345,13],[1,18545730,0.046036,13],[1,11211260,0.076726,13],[1,11001704,0.168798,13],[1,18336173,0.414322,13],[1,14145048,0.29156,13],[1,7439247,0.168798,13],[1,5972354,0.138107,13],[1,8696585,0.168798,13],[1,4715016,0.383632,13],[1,4715016,0.29156,13],[1,4924572,0.138107,13],[1,8696585,0.015345,13],[1,4924572,0.322251,13],[1,7229691,0.475703,13],[1,7020135,0.046036,13],[1,8487029,0.138107,13],[1,7648804,0.445013,13],[1,5972354,0.015345,13],[1,5134129,0.076726,13],[1,6810579,0.168798,13],[1,7020135,0.383632,13],[1,6810579,0.015345,13],[1,8067916,0.445013,14],[1,16659723,0.567775,14],[1,1571672,0.721228,14],[1,11630373,0.383632,14],[1,11839929,0.046036,14],[1,1362116,0.230179,14],[1,11420816,0.046036,14],[1,1990785,0.046036,14],[1,1990785,0.138107,14],[1,11420816,0.015345,14],[1,8277473,0.015345,14],[1,16869279,0.046036,14],[1,1990785,0.383632,14],[1,16869279,0.076726,14],[1,11211260,0.26087,14],[1,5553241,0.138107,14],[1,2200341,0.322251,14],[1,18545730,0.015345,14],[1,2200341,0.567775,14],[1,17707504,0.199488,14],[1,16031054,0.168798,14],[1,7020135,0.322251,14],[1,314334,0.076726,14],[1,15821498,0.383632,14],[1,15821498,0.107417,14],[1,15821498,0.046036,14],[1,523891,0.138107,14],[1,19383955,0.046036,14],[1,733447,0.445013,14],[1,7439247,0.076726,14],[1,17707504,0.29156,14],[1,943003,0.076726,14],[1,13935492,0.629156,14],[1,943003,0.230179,14],[1,943003,0.26087,14],[1,6810579,0.107417,14],[1,13516379,2.102302,14],[1,7439247,0.322251,14],[1,943003,0.506394,14],[1,17707504,0.322251,14],[1,16659723,0.107417,14],[1,7439247,0.475703,14],[1,17707504,0.015345,14],[1,7648804,0.537084,14],[1,1152559,0.230179,14],[1,12468598,0.26087,14],[1,11839929,0.26087,14],[1,8906141,0.046036,14],[1,10373035,0.076726,14],[1,3038566,0.199488,14],[1,9953923,0.015345,14],[1,10373035,0.721228,14],[1,18336173,0.107417,14],[1,4715016,0.230179,14],[1,4295903,0.414322,14],[1,18126617,0.199488,14],[1,10792148,0.046036,14],[1,17497948,0.138107,14],[1,11211260,0.046036,14],[1,4505460,0.230179,14],[1,8487029,0.076726,14],[1,18126617,0.138107,14],[1,19593511,0.107417,15],[1,4924572,0.445013,15],[1,11420816,0.107417,15],[1,4924572,0.015345,15],[1,10163479,0.015345,15],[1,1571672,1.058824,15],[1,17497948,0.537084,15],[1,1152559,0.138107,15],[1,5972354,0.168798,15],[1,8067916,0.046036,15],[1,10373035,0.015345,15],[1,1571672,0.199488,15],[1,12678154,0.015345,15],[1,7229691,0.076726,15],[1,18755286,0.199488,15],[1,11839929,0.138107,15],[1,10373035,0.168798,15],[1,16240611,0.107417,15],[1,523891,0.199488,15],[1,2200341,0.138107,15],[1,7439247,0.015345,15],[1,8277473,0.076726,15],[1,733447,0.352941,15],[1,10792148,0.168798,15],[1,17917061,0.168798,15],[1,2200341,0.26087,15],[1,1990785,0.322251,15],[1,16240611,0.322251,15],[1,4924572,0.046036,15],[1,1990785,0.168798,15],[1,10582591,0.107417,15],[1,943003,0.199488,16],[1,4505460,0.138107,16],[1,7858360,0.107417,16],[1,6810579,0.445013,16],[1,12468598,0.046036,16],[1,1152559,0.322251,16],[1,733447,0.26087,16],[1,7858360,0.015345,16],[1,12678154,0.046036,16],[1,16240611,0.230179,16],[1,9115698,0.046036,16],[1,7439247,0.138107,16],[1,4295903,0.046036,16],[1,17078836,0.046036,16],[1,7020135,0.015345,16],[1,7648804,0.015345,16],[1,3038566,0.168798,16],[1,1990785,0.107417,16],[1,11001704,0.107417,16],[1,11630373,0.076726,16],[1,4715016,0.352941,16],[1,1571672,0.230179,16],[1,1571672,0.138107,16],[1,2200341,0.107417,16],[1,7858360,0.414322,16],[1,10582591,0.015345,17],[1,2200341,0.015345,17],[1,2200341,0.352941,17],[1,19593511,0.015345,17],[1,7858360,0.475703,17],[1,733447,0.506394,17],[1,733447,0.199488,17],[1,1571672,0.046036,17],[1,1990785,0.26087,17],[1,9115698,0.168798,18],[1,17497948,0.046036,18],[1,1990785,0.076726,18],[1,10792148,0.015345,18],[1,11630373,0.015345,18],[1,18126617,0.076726,18],[1,7229691,0.383632,18],[1,8067916,0.26087,18],[1,5553241,1.396419,18],[1,16240611,0.015345,18],[1,4505460,0.107417,18],[1,12468598,0.015345,18],[1,7858360,0.046036,18],[1,523891,0.015345,18],[1,7858360,0.168798,19],[1,4715016,0.046036,19],[1,18336173,0.015345,19],[1,8067916,0.015345,19],[1,11211260,0.138107,19],[1,943003,0.322251,19],[1,523891,0.230179,20],[1,733447,0.076726,20],[1,3038566,0.322251,20],[1,11001704,0.076726,20],[1,1571672,0.168798,20],[1,4505460,0.015345,20],[1,4505460,0.199488,20],[1,7439247,0.046036,20],[1,4715016,0.076726,20],[1,4715016,0.107417,20],[1,943003,0.015345,20],[1,7648804,0.107417,20],[1,4295903,0.015345,21],[1,18336173,0.046036,21],[1,4505460,0.168798,21],[1,11211260,0.168798,21],[1,733447,0.046036,21],[1,733447,0.015345,21],[1,8277473,0.168798,21],[1,4505460,0.076726,22],[1,4505460,0.046036,22],[1,11001704,0.015345,22],[1,943003,0.046036,22],[1,18126617,0.230179,22],[1,17078836,0.138107,22],[1,11630373,0.046036,22],[1,16240611,0.138107,23],[1,2200341,0.076726,23],[1,4715016,0.26087,23],[1,11211260,0.199488,24],[1,523891,0.046036,24],[1,11211260,0.107417,24],[1,4715016,0.015345,25],[1,11211260,0.015345,25],[1,1571672,0.015345,25],[1,7858360,0.076726,25],[1,1571672,0.076726,27],[1,1990785,0.015345,29],[1,4715016,0.138107,32],[2,8823387,2.317136,1],[2,12145133,1.97954,1],[2,16089706,5.232737,1],[2,23148416,8.025575,1],[2,20241889,4.710997,1],[2,20241889,4.434783,1],[2,20034280,5.263427,1],[2,12145133,1.948849,1],[2,16089706,4.31202,1],[2,8823387,2.347826,1],[2,14428833,2.286445,1],[2,8823387,2.409207,1],[2,8823387,2.378517,1],[2,14428833,1.641944,1],[2,8823387,2.808184,1],[2,14428833,2.317136,1],[2,8823387,2.163683,1],[2,8823387,2.102302,1],[2,311414,1.42711,1],[2,14428833,1.580563,1],[2,14428833,2.409207,1],[2,14428833,1.519182,1],[2,16089706,4.373402,1],[2,2595114,3.299233,1],[2,16089706,5.324808,1],[2,8823387,2.040921,1],[2,16089706,4.005115,1],[2,8823387,2.531969,1],[2,8823387,2.225064,1],[2,8823387,2.286445,1],[2,20241889,4.588235,1],[2,8823387,2.56266,1],[2,16089706,4.496164,1],[2,14428833,2.225064,1],[2,20241889,5.662404,1],[2,20241889,5.693095,1],[2,12145133,2.132992,1],[2,14428833,1.918159,1],[2,311414,1.212276,1],[2,8823387,3.421995,1],[2,16089706,4.710997,1],[2,16089706,4.28133,1],[2,20034280,4.925831,1],[2,2387505,6,1],[2,8823387,3.575448,1],[2,8823387,3.606138,1],[2,14428833,2.071611,1],[2,2595114,3.514066,1],[2,12145133,2.163683,1],[2,311414,0.782609,1],[2,8823387,3.667519,1],[2,20241889,6.153453,1],[2,14428833,2.132992,1],[2,14428833,2.102302,1],[2,8823387,2.838875,1],[2,16089706,4.158568,1],[2,16089706,4.250639,1],[2,8823387,2.869565,1],[2,8823387,2.930946,1],[2,8823387,2.992327,1],[2,12145133,2.194373,1],[2,20241889,5.202046,1],[2,16089706,5.017903,1],[2,14428833,2.255754,1],[2,311414,1.304348,1],[2,20241889,5.294118,1],[2,8823387,3.913043,1],[2,8823387,3.053708,1],[2,8823387,3.11509,1],[2,20034280,5.202046,1],[2,14428833,1.856777,1],[2,8823387,3.207161,1],[2,8823387,3.268542,1],[2,12145133,2.01023,1],[2,16089706,4.465473,1],[2,12145133,2.040921,1],[2,8823387,3.299233,1],[2,2595114,2.624041,1],[2,14428833,0.567775,1],[2,16089706,6.58312,1],[2,14428833,0.659847,1],[2,16089706,6.460358,1],[2,16089706,6.337596,1],[2,16089706,6.276215,1],[2,14428833,0.936061,1],[2,12145133,1.519182,1],[2,14428833,1.028133,1],[2,16089706,6.030691,1],[2,14428833,1.150895,1],[2,14428833,1.181586,1],[2,16089706,5.693095,1],[2,14428833,1.365729,1],[2,16089706,5.631714,1],[2,16089706,5.539642,1],[2,14428833,1.42711,1],[2,8823387,0.659847,1],[2,20241889,0.475703,1],[2,20241889,0.537084,1],[2,20241889,0.721228,1],[2,2595114,2.685422,1],[2,20241889,0.813299,1],[2,20241889,0.87468,1],[2,20241889,0.936061,1],[2,20034280,6.675192,1],[2,12145133,1.212276,1],[2,2595114,2.071611,1],[2,2595114,2.102302,1],[2,2595114,1.519182,1],[2,2595114,1.396419,1],[2,2595114,1.212276,1],[2,2595114,1.058824,1],[2,2595114,2.163683,1],[2,2595114,1.028133,1],[2,2595114,0.936061,1],[2,2595114,0.659847,1],[2,2595114,2.194373,1],[2,2595114,0.445013,1],[2,2595114,2.225064,1],[2,2595114,2.255754,1],[2,2595114,2.378517,1],[2,20034280,6.184143,1],[2,2595114,2.501279,1],[2,2595114,2.531969,1],[2,2595114,2.56266,1],[2,12145133,1.058824,1],[2,12145133,1.028133,1],[2,12145133,0.782609,1],[2,12145133,0.629156,1],[2,12145133,0.199488,1],[2,20034280,6.030691,1],[2,8823387,1.549872,1],[2,20241889,2.992327,1],[2,20241889,3.023018,1],[2,8823387,1.611253,1],[2,20241889,3.14578,1],[2,20241889,3.176471,1],[2,12145133,1.734015,1],[2,12145133,1.764706,1],[2,2595114,3.14578,1],[2,8823387,1.672634,1],[2,8823387,1.703325,1],[2,16089706,5.478261,1],[2,8823387,1.764706,1],[2,12145133,1.856777,1],[2,12145133,1.887468,1],[2,20241889,3.452685,1],[2,12145133,1.918159,1],[2,8823387,1.795396,1],[2,20241889,3.544757,1],[2,16089706,5.44757,1],[2,20241889,3.69821,1],[2,20241889,3.790281,1],[2,8823387,1.97954,1],[2,20034280,5.355499,1],[2,20241889,3.851662,1],[2,20241889,3.882353,1],[2,20241889,0.966752,1],[2,20241889,1.028133,1],[2,20241889,1.242967,1],[2,2595114,2.777494,1],[2,2595114,2.808184,1],[2,20241889,1.304348,1],[2,20241889,1.549872,1],[2,12145133,1.641944,1],[2,20241889,1.734015,1],[2,20241889,1.795396,1],[2,2595114,2.930946,1],[2,20241889,2.071611,1],[2,20241889,2.163683,1],[2,8823387,1.396419,1],[2,20241889,2.225064,1],[2,8823387,1.42711,1],[2,20241889,2.378517,1],[2,20241889,2.409207,1],[2,20241889,2.470588,1],[2,20241889,2.501279,1],[2,20241889,2.531969,1],[2,20241889,2.56266,1],[2,20241889,2.59335,1],[2,20241889,2.716113,1],[2,20241889,2.869565,1],[2,20241889,2.900256,1],[2,8823387,1.519182,1],[2,311414,3.820972,1],[2,23148416,4.772379,1],[2,311414,3.759591,1],[2,10069042,4.496164,1],[2,23148416,4.895141,1],[2,311414,3.606138,1],[2,23148416,5.079284,1],[2,6332078,1.457801,1],[2,311414,3.452685,1],[2,23148416,5.263427,1],[2,10069042,4.710997,1],[2,2179896,7.043478,1],[2,16089706,0.506394,1],[2,23148416,5.324808,1],[2,16089706,0.997442,1],[2,11937524,1.304348,1],[2,20449498,5.140665,1],[2,11937524,1.764706,1],[2,10069042,4.005115,1],[2,23148416,3.820972,1],[2,23148416,3.943734,1],[2,23148416,3.974425,1],[2,311414,4.342711,1],[2,10069042,4.189258,1],[2,6332078,1.120205,1],[2,311414,4.097187,1],[2,10069042,4.342711,1],[2,23148416,4.373402,1],[2,2179896,6.491049,1],[2,23148416,4.404092,1],[2,311414,4.035806,1],[2,311414,4.005115,1],[2,23148416,4.496164,1],[2,23148416,4.618926,1],[2,311414,3.913043,1],[2,6332078,1.273657,1],[2,11937524,2.777494,1],[2,20449498,3.882353,1],[2,23148416,5.570332,1],[2,6332078,1.519182,1],[2,11937524,2.808184,1],[2,20449498,3.820972,1],[2,11937524,2.869565,1],[2,11937524,2.930946,1],[2,20449498,3.636829,1],[2,11937524,2.992327,1],[2,11937524,3.084399,1],[2,11937524,3.11509,1],[2,11937524,3.14578,1],[2,20449498,3.421995,1],[2,11937524,3.176471,1],[2,11937524,3.268542,1],[2,20449498,3.237852,1],[2,11937524,3.299233,1],[2,20449498,4.83376,1],[2,23148416,5.355499,1],[2,11937524,1.97954,1],[2,311414,3.391304,1],[2,10069042,4.741688,1],[2,20449498,4.496164,1],[2,11937524,2.255754,1],[2,11937524,2.317136,1],[2,11937524,2.347826,1],[2,11937524,2.409207,1],[2,11937524,2.439898,1],[2,20449498,4.219949,1],[2,11937524,2.501279,1],[2,23148416,5.508951,1],[2,11937524,2.56266,1],[2,11937524,2.59335,1],[2,11937524,2.624041,1],[2,11937524,2.685422,1],[2,10484260,1.703325,1],[2,10069042,2.409207,1],[2,2179896,5.232737,1],[2,10484260,1.549872,1],[2,10484260,1.519182,1],[2,10484260,1.488491,1],[2,10484260,1.457801,1],[2,10484260,1.365729,1],[2,10069042,2.59335,1],[2,2179896,5.539642,1],[2,10069042,2.716113,1],[2,10069042,2.930946,1],[2,311414,5.539642,1],[2,10069042,3.084399,1],[2,2179896,5.601023,1],[2,23148416,0.997442,1],[2,23148416,1.089514,1],[2,23148416,1.365729,1],[2,10484260,2.470588,1],[2,2179896,4.127877,1],[2,10069042,2.132992,1],[2,2179896,4.28133,1],[2,2179896,4.31202,1],[2,2179896,4.373402,1],[2,2179896,4.465473,1],[2,10484260,2.255754,1],[2,10069042,2.255754,1],[2,10069042,2.317136,1],[2,10484260,2.102302,1],[2,10484260,2.071611,1],[2,10069042,2.347826,1],[2,10484260,1.948849,1],[2,10484260,1.918159,1],[2,10484260,1.826087,1],[2,10484260,1.795396,1],[2,10484260,1.764706,1],[2,23148416,2.654731,1],[2,23148416,2.685422,1],[2,23148416,2.716113,1],[2,23148416,2.808184,1],[2,23148416,2.869565,1],[2,10069042,3.606138,1],[2,10069042,3.667519,1],[2,10069042,3.69821,1],[2,23148416,3.176471,1],[2,311414,4.803069,1],[2,10069042,3.790281,1],[2,23148416,3.299233,1],[2,23148416,3.421995,1],[2,6332078,0.813299,1],[2,23148416,3.514066,1],[2,311414,4.588235,1],[2,23148416,3.69821,1],[2,10069042,3.974425,1],[2,23148416,1.42711,1],[2,23148416,1.519182,1],[2,23148416,1.641944,1],[2,23148416,1.703325,1],[2,23148416,1.764706,1],[2,23148416,1.795396,1],[2,23148416,1.97954,1],[2,10069042,3.14578,1],[2,23148416,2.071611,1],[2,23148416,2.132992,1],[2,10069042,3.237852,1],[2,10069042,3.268542,1],[2,10069042,3.299233,1],[2,23148416,2.470588,1],[2,2179896,5.907928,1],[2,23148416,2.531969,1],[2,23148416,2.56266,1],[2,23148416,2.59335,1],[2,8823387,5.539642,1],[2,16089706,2.961637,1],[2,2387505,3.544757,1],[2,2387505,3.575448,1],[2,311414,2.501279,1],[2,10069042,5.232737,1],[2,2387505,3.667519,1],[2,2387505,3.69821,1],[2,311414,2.439898,1],[2,20241889,8.332481,1],[2,23148416,6.705882,1],[2,2387505,3.790281,1],[2,2387505,3.820972,1],[2,2387505,3.851662,1],[2,16089706,3.11509,1],[2,16089706,3.14578,1],[2,2387505,3.943734,1],[2,2387505,3.974425,1],[2,2387505,2.808184,1],[2,311414,2.746803,1],[2,16089706,2.59335,1],[2,8823387,5.907928,1],[2,16089706,2.624041,1],[2,16089706,2.654731,1],[2,2387505,3.053708,1],[2,2387505,3.084399,1],[2,311414,2.685422,1],[2,11937524,4.895141,1],[2,311414,2.654731,1],[2,16089706,2.746803,1],[2,2387505,3.299233,1],[2,10069042,5.109974,1],[2,16089706,2.838875,1],[2,6332078,1.856777,1],[2,16089706,2.900256,1],[2,16089706,2.930946,1],[2,311414,2.040921,1],[2,311414,1.918159,1],[2,16089706,3.667519,1],[2,311414,1.856777,1],[2,14428833,2.777494,1],[2,14428833,2.746803,1],[2,311414,1.826087,1],[2,311414,1.734015,1],[2,8823387,4.618926,1],[2,8823387,4.588235,1],[2,2387505,4.925831,1],[2,14428833,2.654731,1],[2,311414,1.703325,1],[2,311414,1.641944,1],[2,14428833,2.59335,1],[2,20241889,6.982097,1],[2,14428833,2.56266,1],[2,311414,1.488491,1],[2,16089706,3.176471,1],[2,11937524,5.44757,1],[2,311414,2.409207,1],[2,2387505,4.097187,1],[2,2387505,4.158568,1],[2,2387505,4.189258,1],[2,23148416,6.859335,1],[2,311414,2.255754,1],[2,2387505,4.28133,1],[2,311414,2.194373,1],[2,2387505,4.373402,1],[2,311414,2.163683,1],[2,311414,2.132992,1],[2,311414,2.102302,1],[2,23148416,7.104859,1],[2,311414,2.071611,1],[2,16089706,3.544757,1],[2,16089706,3.575448,1],[2,16089706,1.764706,1],[2,311414,3.207161,1],[2,16089706,1.826087,1],[2,20449498,2.01023,1],[2,20449498,1.948849,1],[2,20449498,1.918159,1],[2,20449498,1.641944,1],[2,20449498,1.611253,1],[2,20449498,1.212276,1],[2,20449498,0.87468,1],[2,2387505,0.598465,1],[2,2387505,1.089514,1],[2,2387505,1.181586,1],[2,2387505,1.242967,1],[2,11937524,4.005115,1],[2,2387505,1.42711,1],[2,2387505,1.488491,1],[2,2387505,1.549872,1],[2,20449498,3.11509,1],[2,16089706,1.396419,1],[2,11937524,3.421995,1],[2,11937524,3.452685,1],[2,20449498,2.930946,1],[2,20449498,2.838875,1],[2,11937524,3.575448,1],[2,16089706,1.519182,1],[2,20449498,2.56266,1],[2,20449498,2.531969,1],[2,20449498,2.501279,1],[2,16089706,1.641944,1],[2,20449498,2.378517,1],[2,16089706,1.672634,1],[2,20449498,2.317136,1],[2,10069042,4.86445,1],[2,20449498,2.255754,1],[2,16089706,1.734015,1],[2,2387505,2.102302,1],[2,2387505,2.132992,1],[2,311414,3.023018,1],[2,311414,2.930946,1],[2,311414,2.900256,1],[2,16089706,2.102302,1],[2,16089706,2.132992,1],[2,8823387,6.398977,1],[2,311414,2.838875,1],[2,16089706,2.225064,1],[2,2387505,2.409207,1],[2,16089706,2.347826,1],[2,23148416,6.245524,1],[2,16089706,2.409207,1],[2,16089706,2.439898,1],[2,2387505,2.716113,1],[2,2387505,2.746803,1],[2,6332078,1.764706,1],[2,2387505,1.580563,1],[2,311414,3.176471,1],[2,2387505,1.611253,1],[2,23148416,5.754476,1],[2,16089706,1.918159,1],[2,2387505,1.672634,1],[2,2387505,1.703325,1],[2,311414,3.14578,1],[2,16089706,1.948849,1],[2,2387505,1.764706,1],[2,2387505,1.795396,1],[2,16089706,2.01023,1],[2,23148416,5.815857,1],[2,23148416,5.846547,1],[2,16089706,2.040921,1],[2,23148416,5.938619,1],[2,2387505,2.01023,1],[2,2387505,2.071611,1],[2,10276651,3.176471,1],[2,10276651,3.053708,1],[2,23356025,6.030691,1],[2,10276651,2.930946,1],[2,10276651,2.900256,1],[2,10276651,2.808184,1],[2,10276651,2.746803,1],[2,10276651,2.716113,1],[2,10276651,2.685422,1],[2,6954905,5.478261,1],[2,10276651,2.59335,1],[2,3010332,0.322251,1],[2,3010332,1.089514,1],[2,3010332,1.150895,1],[2,3010332,1.273657,1],[2,103805,5.41688,1],[2,10276651,2.470588,1],[2,3010332,1.703325,1],[2,16297316,4.588235,1],[2,10276651,4.219949,1],[2,10276651,4.035806,1],[2,10276651,4.005115,1],[2,10276651,3.974425,1],[2,10276651,3.882353,1],[2,15051661,3.483376,1],[2,16297316,4.803069,1],[2,23356025,5.140665,1],[2,10276651,3.790281,1],[2,10276651,3.69821,1],[2,6332078,6.705882,1],[2,10276651,3.514066,1],[2,10276651,3.483376,1],[2,10276651,3.360614,1],[2,6954905,4.987212,1],[2,10276651,3.299233,1],[2,15051661,1.457801,1],[2,10276651,3.237852,1],[2,10276651,1.580563,1],[2,10276651,1.335038,1],[2,3010332,2.777494,1],[2,6954905,5.907928,1],[2,3010332,2.869565,1],[2,3010332,2.930946,1],[2,3010332,2.992327,1],[2,10276651,1.150895,1],[2,103805,3.820972,1],[2,6954905,6.030691,1],[2,103805,3.790281,1],[2,103805,3.544757,1],[2,19411452,7.074169,1],[2,103805,3.176471,1],[2,3010332,3.421995,1],[2,15051661,1.703325,1],[2,3010332,3.544757,1],[2,103805,2.654731,1],[2,3010332,1.764706,1],[2,6332078,6.920716,1],[2,3010332,1.856777,1],[2,3010332,1.887468,1],[2,6332078,6.951407,1],[2,3010332,1.948849,1],[2,3010332,1.97954,1],[2,103805,5.048593,1],[2,3010332,2.040921,1],[2,3010332,2.102302,1],[2,3010332,2.163683,1],[2,3010332,2.225064,1],[2,15051661,1.611253,1],[2,10276651,1.918159,1],[2,3010332,2.317136,1],[2,3010332,2.56266,1],[2,3010332,2.59335,1],[2,15051661,2.900256,1],[2,3010332,2.685422,1],[2,19619061,3.299233,1],[2,12352742,5.171355,1],[2,19619061,3.023018,1],[2,12352742,5.386189,1],[2,12352742,5.41688,1],[2,16297316,3.452685,1],[2,23356025,2.992327,1],[2,16297316,3.514066,1],[2,16297316,3.544757,1],[2,23356025,3.084399,1],[2,16297316,3.606138,1],[2,10276651,5.601023,1],[2,6332078,5.44757,1],[2,23356025,3.421995,1],[2,19619061,2.59335,1],[2,19619061,2.56266,1],[2,23356025,3.452685,1],[2,12352742,5.785166,1],[2,8615778,0.997442,1],[2,12352742,4.28133,1],[2,19619061,4.649616,1],[2,8615778,0.966752,1],[2,19619061,4.588235,1],[2,19619061,4.496164,1],[2,19619061,4.31202,1],[2,19619061,4.250639,1],[2,12352742,4.618926,1],[2,19619061,4.127877,1],[2,19619061,4.066496,1],[2,19619061,4.005115,1],[2,12352742,4.741688,1],[2,19619061,3.882353,1],[2,12352742,4.86445,1],[2,19619061,3.790281,1],[2,19619061,3.636829,1],[2,19619061,3.514066,1],[2,19619061,3.391304,1],[2,23356025,4.005115,1],[2,6954905,4.097187,1],[2,19619061,1.120205,1],[2,10276651,4.83376,1],[2,23356025,4.066496,1],[2,6332078,6.030691,1],[2,10276651,4.710997,1],[2,10276651,4.649616,1],[2,10276651,4.465473,1],[2,10276651,4.404092,1],[2,16297316,4.28133,1],[2,6954905,4.342711,1],[2,10276651,4.373402,1],[2,16297316,4.373402,1],[2,23356025,4.618926,1],[2,10276651,4.28133,1],[2,10276651,4.250639,1],[2,6954905,4.496164,1],[2,23356025,4.710997,1],[2,16297316,3.759591,1],[2,19619061,2.409207,1],[2,19619061,2.378517,1],[2,19619061,2.317136,1],[2,16297316,3.820972,1],[2,6954905,3.913043,1],[2,10276651,5.324808,1],[2,6332078,5.631714,1],[2,15051661,4.342711,1],[2,19619061,1.918159,1],[2,19619061,1.887468,1],[2,19619061,1.856777,1],[2,19619061,1.826087,1],[2,19619061,1.611253,1],[2,19619061,1.580563,1],[2,23356025,3.759591,1],[2,19619061,1.365729,1],[2,19619061,1.335038,1],[2,19619061,1.273657,1],[2,12560351,1.795396,1],[2,14221224,2.56266,1],[2,5294032,4.066496,1],[2,12560351,1.918159,1],[2,14221224,2.470588,1],[2,14221224,2.347826,1],[2,12560351,2.225064,1],[2,5294032,3.759591,1],[2,8408169,4.987212,1],[2,8408169,4.895141,1],[2,12560351,2.409207,1],[2,12560351,2.439898,1],[2,14221224,2.194373,1],[2,5294032,3.636829,1],[2,5294032,3.514066,1],[2,8408169,4.618926,1],[2,14221224,1.97954,1],[2,14221224,1.948849,1],[2,103805,1.058824,1],[2,103805,1.028133,1],[2,14221224,3.084399,1],[2,14221224,3.053708,1],[2,14221224,3.023018,1],[2,103805,0.966752,1],[2,103805,0.813299,1],[2,14221224,2.838875,1],[2,5294032,4.342711,1],[2,14221224,2.716113,1],[2,3010332,7.749361,1],[2,3010332,8.117647,1],[2,12560351,0.966752,1],[2,14221224,2.685422,1],[2,12560351,1.335038,1],[2,12560351,1.457801,1],[2,12560351,1.488491,1],[2,12560351,1.549872,1],[2,12560351,1.641944,1],[2,14221224,1.273657,1],[2,8408169,3.299233,1],[2,8408169,3.268542,1],[2,5294032,2.255754,1],[2,8408169,3.176471,1],[2,14221224,1.150895,1],[2,8408169,3.084399,1],[2,8408169,3.053708,1],[2,3217941,0.445013,1],[2,3217941,0.690537,1],[2,3217941,0.966752,1],[2,19203843,4.956522,1],[2,3217941,1.856777,1],[2,3217941,1.887468,1],[2,3217941,1.97954,1],[2,3217941,2.102302,1],[2,3217941,2.163683,1],[2,3217941,2.194373,1],[2,3217941,2.225064,1],[2,14221224,1.918159,1],[2,5294032,3.237852,1],[2,8408169,4.373402,1],[2,14221224,1.826087,1],[2,5294032,3.11509,1],[2,12560351,3.11509,1],[2,14221224,1.703325,1],[2,5294032,2.992327,1],[2,5294032,2.930946,1],[2,14221224,1.611253,1],[2,14221224,1.580563,1],[2,5294032,2.808184,1],[2,8408169,3.913043,1],[2,5294032,2.746803,1],[2,5294032,2.59335,1],[2,14221224,1.457801,1],[2,14221224,1.365729,1],[2,8408169,3.514066,1],[2,12560351,3.882353,1],[2,3010332,4.710997,1],[2,19411452,5.539642,1],[2,19411452,5.508951,1],[2,3010332,4.772379,1],[2,103805,1.948849,1],[2,103805,1.856777,1],[2,19411452,4.86445,1],[2,19411452,4.772379,1],[2,19411452,4.741688,1],[2,103805,1.795396,1],[2,19411452,4.618926,1],[2,19411452,4.434783,1],[2,19411452,4.219949,1],[2,19411452,4.066496,1],[2,19411452,3.974425,1],[2,3010332,5.969309,1],[2,19411452,3.820972,1],[2,103805,1.457801,1],[2,3010332,3.636829,1],[2,15051661,1.795396,1],[2,16297316,6.429668,1],[2,103805,2.56266,1],[2,3010332,3.820972,1],[2,103805,2.501279,1],[2,3010332,3.882353,1],[2,103805,2.470588,1],[2,3010332,3.943734,1],[2,15051661,1.887468,1],[2,3010332,4.005115,1],[2,19411452,6.245524,1],[2,103805,2.317136,1],[2,19411452,6.153453,1],[2,3010332,4.250639,1],[2,15051661,2.531969,1],[2,103805,2.225064,1],[2,19411452,5.907928,1],[2,15051661,2.071611,1],[2,19411452,2.439898,1],[2,19411452,2.317136,1],[2,19411452,2.286445,1],[2,19411452,2.194373,1],[2,19411452,2.102302,1],[2,103805,1.120205,1],[2,19411452,1.97954,1],[2,19411452,1.948849,1],[2,19411452,1.918159,1],[2,19411452,1.795396,1],[2,19411452,1.519182,1],[2,19411452,1.488491,1],[2,19411452,1.273657,1],[2,19411452,1.212276,1],[2,19411452,1.089514,1],[2,19411452,0.966752,1],[2,19411452,0.905371,1],[2,19411452,0.87468,1],[2,14221224,3.421995,1],[2,19411452,3.606138,1],[2,19411452,3.544757,1],[2,19411452,3.483376,1],[2,103805,1.396419,1],[2,19411452,3.391304,1],[2,19411452,3.360614,1],[2,19411452,3.329923,1],[2,19411452,3.299233,1],[2,19411452,3.11509,1],[2,19411452,3.023018,1],[2,3010332,6.491049,1],[2,19411452,2.900256,1],[2,19411452,2.838875,1],[2,19411452,2.808184,1],[2,103805,1.304348,1],[2,103805,1.212276,1],[2,103805,1.181586,1],[2,19411452,2.501279,1],[2,19411452,2.470588,1],[2,5501642,3.391304,1],[2,12145133,4.189258,1],[2,6954905,1.150895,1],[2,5501642,3.023018,1],[2,12145133,4.618926,1],[2,12145133,4.710997,1],[2,6954905,1.396419,1],[2,6954905,1.42711,1],[2,6954905,1.580563,1],[2,6954905,1.611253,1],[2,6954905,1.641944,1],[2,15051661,5.478261,1],[2,5501642,2.439898,1],[2,6954905,1.764706,1],[2,10276651,6.368286,1],[2,6954905,1.856777,1],[2,5501642,2.255754,1],[2,5501642,2.163683,1],[2,20034280,2.132992,1],[2,12145133,3.023018,1],[2,12145133,3.053708,1],[2,20034280,1.918159,1],[2,12145133,3.084399,1],[2,12145133,3.14578,1],[2,20034280,1.396419,1],[2,20034280,1.365729,1],[2,12145133,3.207161,1],[2,20034280,0.87468,1],[2,20034280,0.506394,1],[2,16089706,7.16624,1],[2,12145133,3.575448,1],[2,5501642,3.69821,1],[2,12145133,3.667519,1],[2,12145133,3.69821,1],[2,6954905,0.598465,1],[2,12145133,3.820972,1],[2,12145133,3.974425,1],[2,23356025,1.120205,1],[2,6954905,2.286445,1],[2,6954905,2.317136,1],[2,23356025,1.42711,1],[2,6954905,2.409207,1],[2,6954905,2.439898,1],[2,23356025,1.611253,1],[2,23356025,1.641944,1],[2,6332078,4.710997,1],[2,23356025,1.887468,1],[2,6332078,4.741688,1],[2,23356025,2.01023,1],[2,6954905,2.777494,1],[2,6954905,2.869565,1],[2,6954905,2.961637,1],[2,8615778,5.202046,1],[2,16297316,0.690537,1],[2,16297316,1.150895,1],[2,5501642,2.132992,1],[2,6954905,1.948849,1],[2,23356025,0.537084,1],[2,5501642,2.040921,1],[2,5501642,1.918159,1],[2,5501642,1.887468,1],[2,23356025,0.966752,1],[2,5501642,1.826087,1],[2,5501642,1.734015,1],[2,6954905,2.040921,1],[2,5501642,1.611253,1],[2,5501642,1.396419,1],[2,5501642,1.335038,1],[2,12145133,6.276215,1],[2,5501642,1.120205,1],[2,12145133,6.491049,1],[2,23356025,1.028133,1],[2,6954905,2.163683,1],[2,23356025,1.058824,1],[2,12145133,2.439898,1],[2,6332078,2.624041,1],[2,10069042,6.061381,1],[2,6332078,2.746803,1],[2,10069042,6.337596,1],[2,20034280,4.28133,1],[2,6332078,2.992327,1],[2,20034280,4.219949,1],[2,6332078,3.237852,1],[2,12145133,2.501279,1],[2,6332078,3.268542,1],[2,6332078,3.329923,1],[2,20034280,4.158568,1],[2,20034280,4.066496,1],[2,12145133,2.716113,1],[2,6332078,3.452685,1],[2,6332078,3.606138,1],[2,6332078,3.69821,1],[2,20034280,4.803069,1],[2,20034280,4.772379,1],[2,12145133,2.317136,1],[2,20034280,4.618926,1],[2,20034280,4.588235,1],[2,20034280,4.526854,1],[2,2595114,3.790281,1],[2,2595114,3.820972,1],[2,20034280,4.434783,1],[2,23148416,8.547315,1],[2,6332078,2.071611,1],[2,20034280,4.404092,1],[2,6332078,2.225064,1],[2,12145133,2.409207,1],[2,10069042,5.723785,1],[2,6332078,2.347826,1],[2,6332078,2.409207,1],[2,6332078,2.531969,1],[2,20034280,4.342711,1],[2,20034280,3.176471,1],[2,20034280,3.14578,1],[2,20034280,3.11509,1],[2,20034280,3.084399,1],[2,20034280,3.023018,1],[2,20034280,2.992327,1],[2,20034280,2.961637,1],[2,20034280,2.930946,1],[2,20034280,2.869565,1],[2,20034280,2.808184,1],[2,20034280,2.716113,1],[2,20034280,2.685422,1],[2,20034280,2.654731,1],[2,20034280,2.470588,1],[2,20034280,2.439898,1],[2,20034280,2.378517,1],[2,20034280,2.225064,1],[2,12145133,2.992327,1],[2,20034280,2.163683,1],[2,2595114,4.250639,1],[2,2595114,4.28133,1],[2,6332078,3.790281,1],[2,6332078,3.913043,1],[2,2595114,4.31202,1],[2,5501642,4.097187,1],[2,6332078,4.005115,1],[2,6332078,4.127877,1],[2,20034280,3.667519,1],[2,6332078,4.404092,1],[2,20034280,3.636829,1],[2,20034280,3.606138,1],[2,20034280,3.544757,1],[2,20034280,3.514066,1],[2,20034280,3.483376,1],[2,20034280,3.452685,1],[2,20034280,3.360614,1],[2,12145133,2.869565,1],[2,20034280,3.237852,1],[2,2802723,5.508951,1],[2,2802723,5.570332,1],[2,12352742,1.580563,1],[2,12352742,1.611253,1],[2,12352742,1.856777,1],[2,12352742,2.01023,1],[2,12352742,2.040921,1],[2,2802723,6.245524,1],[2,12352742,2.132992,1],[2,19619061,7.104859,1],[2,12352742,2.194373,1],[2,12352742,2.255754,1],[2,23356025,2.746803,1],[2,8615778,1.97954,1],[2,12352742,2.347826,1],[2,12352742,2.378517,1],[2,2802723,6.644501,1],[2,12352742,2.501279,1],[2,2802723,3.483376,1],[2,2802723,3.514066,1],[2,6954905,3.483376,1],[2,16297316,2.961637,1],[2,16297316,2.992327,1],[2,8615778,2.194373,1],[2,16297316,3.023018,1],[2,8615778,2.102302,1],[2,16297316,3.084399,1],[2,6954905,3.514066,1],[2,2802723,3.882353,1],[2,2802723,4.496164,1],[2,2802723,4.526854,1],[2,19619061,8.670077,1],[2,2802723,5.079284,1],[2,19619061,8.117647,1],[2,19619061,8.086957,1],[2,2802723,5.41688,1],[2,2802723,5.44757,1],[2,12352742,3.544757,1],[2,8615778,1.488491,1],[2,19619061,5.44757,1],[2,8615778,1.457801,1],[2,8615778,1.396419,1],[2,12352742,3.7289,1],[2,12352742,3.759591,1],[2,12352742,3.790281,1],[2,19619061,5.171355,1],[2,8615778,1.273657,1],[2,19619061,5.048593,1],[2,12352742,3.943734,1],[2,23356025,2.961637,1],[2,16297316,3.421995,1],[2,8615778,1.150895,1],[2,8615778,1.089514,1],[2,12352742,4.158568,1],[2,8615778,1.058824,1],[2,8615778,1.028133,1],[2,12352742,2.624041,1],[2,8615778,1.918159,1],[2,12352742,2.808184,1],[2,2802723,7.043478,1],[2,2802723,7.074169,1],[2,12352742,2.838875,1],[2,8615778,1.826087,1],[2,16297316,3.207161,1],[2,8615778,1.764706,1],[2,12352742,3.023018,1],[2,12352742,3.053708,1],[2,12352742,3.14578,1],[2,12352742,3.329923,1],[2,12352742,3.360614,1],[2,6954905,3.606138,1],[2,16297316,3.299233,1],[2,2802723,7.749361,1],[2,8615778,1.519182,1],[2,2802723,7.841432,1],[2,2802723,1.181586,1],[2,19826670,3.084399,1],[2,19826670,2.930946,1],[2,19826670,2.900256,1],[2,19826670,2.869565,1],[2,19826670,2.808184,1],[2,19826670,2.654731,1],[2,6954905,3.14578,1],[2,19826670,2.59335,1],[2,23356025,2.470588,1],[2,19826670,2.470588,1],[2,19826670,2.439898,1],[2,19826670,2.255754,1],[2,19826670,2.102302,1],[2,19826670,2.071611,1],[2,19826670,1.948849,1],[2,19826670,1.856777,1],[2,19826670,1.764706,1],[2,16297316,1.42711,1],[2,16297316,1.580563,1],[2,16297316,1.611253,1],[2,19826670,4.803069,1],[2,16297316,1.856777,1],[2,19826670,4.496164,1],[2,2802723,0.322251,1],[2,2802723,0.506394,1],[2,19826670,3.882353,1],[2,19826670,3.790281,1],[2,19826670,3.667519,1],[2,19826670,3.575448,1],[2,2802723,0.997442,1],[2,19826670,3.452685,1],[2,19826670,3.421995,1],[2,19826670,3.360614,1],[2,2802723,1.089514,1],[2,19826670,3.299233,1],[2,8615778,3.544757,1],[2,2802723,2.624041,1],[2,16297316,2.501279,1],[2,16297316,2.531969,1],[2,16297316,2.56266,1],[2,8615778,2.777494,1],[2,2802723,2.838875,1],[2,8615778,2.746803,1],[2,16297316,2.624041,1],[2,2802723,2.992327,1],[2,16297316,2.654731,1],[2,2802723,3.053708,1],[2,16297316,2.685422,1],[2,8615778,2.624041,1],[2,8615778,2.56266,1],[2,2802723,3.268542,1],[2,10276651,5.877238,1],[2,6332078,5.048593,1],[2,8615778,2.347826,1],[2,2802723,3.452685,1],[2,19826670,1.641944,1],[2,19826670,1.549872,1],[2,19826670,1.089514,1],[2,2802723,1.549872,1],[2,2802723,1.611253,1],[2,2802723,1.703325,1],[2,2802723,1.795396,1],[2,2802723,1.887468,1],[2,2802723,1.948849,1],[2,2802723,1.97954,1],[2,16297316,2.194373,1],[2,8615778,3.207161,1],[2,23356025,2.501279,1],[2,23356025,2.531969,1],[2,16297316,2.317136,1],[2,2802723,2.255754,1],[2,2802723,2.378517,1],[2,6954905,3.268542,1],[2,16297316,2.439898,1],[2,10691869,2.255754,1],[2,1349459,1.089514,1],[2,1349459,1.150895,1],[2,10691869,2.194373,1],[2,22733198,0.936061,1],[2,22733198,1.242967,1],[2,22733198,1.457801,1],[2,22733198,1.580563,1],[2,10691869,2.01023,1],[2,22733198,1.948849,1],[2,1349459,1.580563,1],[2,1349459,1.641944,1],[2,1349459,1.734015,1],[2,22733198,2.01023,1],[2,22733198,2.102302,1],[2,22733198,2.163683,1],[2,1349459,1.856777,1],[2,22733198,2.378517,1],[2,1349459,1.918159,1],[2,21902762,1.795396,1],[2,6124469,5.662404,1],[2,21902762,1.734015,1],[2,6124469,5.693095,1],[2,21902762,1.703325,1],[2,21902762,1.457801,1],[2,6124469,5.846547,1],[2,21902762,1.396419,1],[2,21902762,1.335038,1],[2,21902762,1.089514,1],[2,21902762,1.058824,1],[2,10691869,2.470588,1],[2,10691869,2.439898,1],[2,6539687,3.667519,1],[2,21902762,0.966752,1],[2,21902762,0.905371,1],[2,6124469,5.938619,1],[2,10691869,2.347826,1],[2,21902762,0.690537,1],[2,10691869,2.286445,1],[2,5916860,2.716113,1],[2,22733198,2.869565,1],[2,6124469,6.276215,1],[2,5916860,2.59335,1],[2,10691869,1.611253,1],[2,22733198,2.961637,1],[2,1349459,3.084399,1],[2,6539687,3.360614,1],[2,5916860,2.409207,1],[2,5916860,2.317136,1],[2,15674488,0.751918,1],[2,10691869,1.488491,1],[2,9446215,4.342711,1],[2,5916860,2.225064,1],[2,15674488,1.457801,1],[2,9446215,4.250639,1],[2,15674488,1.703325,1],[2,10691869,1.396419,1],[2,15674488,1.856777,1],[2,5916860,2.132992,1],[2,5916860,3.421995,1],[2,10691869,1.856777,1],[2,22733198,2.470588,1],[2,1349459,2.040921,1],[2,5916860,3.360614,1],[2,1349459,2.102302,1],[2,1349459,2.132992,1],[2,22733198,2.501279,1],[2,5916860,3.207161,1],[2,22733198,2.624041,1],[2,1349459,2.347826,1],[2,5916860,3.14578,1],[2,5916860,3.084399,1],[2,5916860,3.053708,1],[2,5916860,3.023018,1],[2,5916860,2.992327,1],[2,5916860,2.961637,1],[2,22733198,2.777494,1],[2,1349459,2.624041,1],[2,22733198,2.808184,1],[2,726632,3.7289,1],[2,726632,3.69821,1],[2,10691869,3.421995,1],[2,21902762,3.7289,1],[2,10691869,3.391304,1],[2,14844052,3.69821,1],[2,21902762,3.636829,1],[2,726632,3.421995,1],[2,21902762,3.544757,1],[2,21902762,3.514066,1],[2,726632,3.391304,1],[2,21902762,3.452685,1],[2,21902762,3.421995,1],[2,726632,3.360614,1],[2,726632,3.207161,1],[2,6124469,5.263427,1],[2,726632,2.900256,1],[2,5916860,4.035806,1],[2,21902762,3.084399,1],[2,6124469,4.649616,1],[2,21902762,4.710997,1],[2,726632,4.588235,1],[2,726632,4.404092,1],[2,21902762,4.526854,1],[2,6124469,4.83376,1],[2,5916860,4.987212,1],[2,726632,4.28133,1],[2,21902762,4.373402,1],[2,5916860,4.925831,1],[2,726632,4.250639,1],[2,726632,4.127877,1],[2,726632,4.097187,1],[2,21902762,4.189258,1],[2,6539687,4.342711,1],[2,6124469,4.925831,1],[2,5916860,4.649616,1],[2,6124469,5.017903,1],[2,726632,3.820972,1],[2,726632,3.759591,1],[2,726632,1.672634,1],[2,726632,1.519182,1],[2,726632,1.212276,1],[2,21902762,2.56266,1],[2,21902762,2.470588,1],[2,6124469,5.539642,1],[2,726632,0.936061,1],[2,726632,0.782609,1],[2,21902762,2.347826,1],[2,21902762,2.317136,1],[2,21902762,2.255754,1],[2,21902762,2.163683,1],[2,21902762,2.132992,1],[2,21902762,2.102302,1],[2,21902762,2.01023,1],[2,10691869,2.808184,1],[2,21902762,1.918159,1],[2,21902762,1.887468,1],[2,21902762,1.856777,1],[2,21902762,1.826087,1],[2,5916860,4.005115,1],[2,21902762,3.023018,1],[2,21902762,2.992327,1],[2,726632,2.654731,1],[2,726632,2.56266,1],[2,6124469,5.386189,1],[2,726632,2.409207,1],[2,21902762,2.838875,1],[2,726632,2.347826,1],[2,21902762,2.746803,1],[2,10691869,3.084399,1],[2,10691869,3.053708,1],[2,10691869,3.023018,1],[2,21902762,2.716113,1],[2,726632,2.132992,1],[2,726632,2.071611,1],[2,726632,2.01023,1],[2,726632,1.887468,1],[2,726632,1.734015,1],[2,21902762,2.654731,1],[2,1557068,1.764706,1],[2,1557068,1.795396,1],[2,1557068,1.826087,1],[2,1557068,1.887468,1],[2,1557068,1.948849,1],[2,1557068,1.97954,1],[2,21487543,6.675192,1],[2,1557068,2.071611,1],[2,1557068,2.225064,1],[2,1557068,2.317136,1],[2,1557068,2.347826,1],[2,1557068,2.501279,1],[2,1557068,2.531969,1],[2,21487543,5.877238,1],[2,1557068,2.961637,1],[2,21487543,5.662404,1],[2,1557068,3.023018,1],[2,1557068,3.084399,1],[2,11314697,3.882353,1],[2,11314697,1.611253,1],[2,11314697,1.641944,1],[2,11314697,1.672634,1],[2,11314697,1.795396,1],[2,11314697,1.826087,1],[2,22733198,4.680307,1],[2,11314697,2.102302,1],[2,11314697,2.132992,1],[2,6124469,6.368286,1],[2,11314697,2.225064,1],[2,11314697,2.286445,1],[2,11314697,2.439898,1],[2,5916860,1.120205,1],[2,11314697,2.59335,1],[2,11314697,2.746803,1],[2,5916860,0.782609,1],[2,5916860,0.598465,1],[2,1557068,0.813299,1],[2,11314697,3.176471,1],[2,1557068,1.641944,1],[2,14636443,3.575448,1],[2,21487543,3.514066,1],[2,6747296,1.396419,1],[2,21487543,3.237852,1],[2,21487543,3.176471,1],[2,21487543,3.14578,1],[2,21487543,3.084399,1],[2,21487543,3.023018,1],[2,21487543,2.900256,1],[2,21487543,2.808184,1],[2,21487543,2.777494,1],[2,21487543,2.685422,1],[2,21487543,2.654731,1],[2,21487543,2.624041,1],[2,21487543,2.59335,1],[2,6747296,1.795396,1],[2,21487543,2.531969,1],[2,6747296,1.826087,1],[2,21487543,2.439898,1],[2,21487543,2.163683,1],[2,1557068,3.207161,1],[2,11314697,4.158568,1],[2,11314697,4.434783,1],[2,6747296,0.905371,1],[2,21487543,4.496164,1],[2,21487543,4.465473,1],[2,21487543,4.434783,1],[2,21487543,4.404092,1],[2,14636443,3.974425,1],[2,21487543,4.28133,1],[2,6747296,1.089514,1],[2,21487543,4.127877,1],[2,21487543,4.066496,1],[2,6747296,1.181586,1],[2,21487543,3.913043,1],[2,6747296,1.273657,1],[2,21487543,3.759591,1],[2,21487543,3.7289,1],[2,21487543,3.667519,1],[2,21487543,3.606138,1],[2,9446215,2.746803,1],[2,15674488,2.777494,1],[2,22733198,3.452685,1],[2,9446215,2.624041,1],[2,5916860,1.703325,1],[2,5916860,1.672634,1],[2,9446215,2.501279,1],[2,9446215,2.470588,1],[2,9446215,2.439898,1],[2,5916860,1.611253,1],[2,21695153,5.232737,1],[2,9446215,2.317136,1],[2,9446215,2.286445,1],[2,9446215,2.255754,1],[2,15674488,3.023018,1],[2,9446215,2.194373,1],[2,21695153,4.987212,1],[2,21695153,4.956522,1],[2,22733198,3.544757,1],[2,9446215,3.69821,1],[2,15674488,2.071611,1],[2,15674488,2.132992,1],[2,22733198,3.207161,1],[2,10691869,1.365729,1],[2,15674488,2.225064,1],[2,15674488,2.255754,1],[2,9446215,3.391304,1],[2,15674488,2.286445,1],[2,9446215,3.237852,1],[2,15674488,2.409207,1],[2,9446215,3.14578,1],[2,22733198,3.299233,1],[2,9446215,2.992327,1],[2,22733198,3.360614,1],[2,5916860,1.856777,1],[2,5916860,1.795396,1],[2,15674488,2.716113,1],[2,15674488,2.746803,1],[2,9446215,2.777494,1],[2,21695153,3.11509,1],[2,21695153,3.084399,1],[2,21695153,3.053708,1],[2,21695153,2.992327,1],[2,21695153,2.961637,1],[2,21695153,2.869565,1],[2,9446215,0.782609,1],[2,21695153,2.777494,1],[2,21695153,2.746803,1],[2,21695153,2.56266,1],[2,21695153,2.286445,1],[2,21695153,2.163683,1],[2,21695153,2.132992,1],[2,10691869,1.028133,1],[2,22733198,3.759591,1],[2,21695153,2.102302,1],[2,21695153,1.734015,1],[2,11314697,1.304348,1],[2,11314697,1.396419,1],[2,11314697,1.549872,1],[2,9446215,2.071611,1],[2,15674488,3.207161,1],[2,9446215,1.734015,1],[2,21695153,4.496164,1],[2,21695153,4.373402,1],[2,9446215,1.641944,1],[2,21695153,4.31202,1],[2,9446215,1.549872,1],[2,21695153,4.127877,1],[2,9446215,1.457801,1],[2,9446215,1.365729,1],[2,21695153,3.820972,1],[2,9446215,1.120205,1],[2,21695153,3.69821,1],[2,21695153,3.667519,1],[2,21695153,3.636829,1],[2,21695153,3.452685,1],[2,21695153,3.391304,1],[2,21695153,3.329923,1],[2,21695153,3.268542,1],[2,9653824,2.102302,1],[2,934241,2.531969,1],[2,1141850,0.598465,1],[2,1141850,0.997442,1],[2,1141850,1.058824,1],[2,9653824,1.948849,1],[2,22110371,4.925831,1],[2,1141850,1.304348,1],[2,22110371,4.680307,1],[2,1141850,1.549872,1],[2,1141850,1.580563,1],[2,1141850,1.611253,1],[2,22110371,4.465473,1],[2,1141850,1.672634,1],[2,22110371,4.373402,1],[2,1141850,1.703325,1],[2,1141850,1.764706,1],[2,1141850,1.795396,1],[2,1141850,1.826087,1],[2,934241,3.882353,1],[2,10899479,6.736573,1],[2,9653824,2.992327,1],[2,9653824,2.961637,1],[2,15466879,1.488491,1],[2,934241,3.790281,1],[2,934241,3.69821,1],[2,934241,3.575448,1],[2,9653824,2.746803,1],[2,15466879,1.089514,1],[2,9653824,2.685422,1],[2,9653824,2.654731,1],[2,9653824,2.624041,1],[2,934241,3.268542,1],[2,9653824,2.56266,1],[2,934241,3.207161,1],[2,9653824,2.501279,1],[2,934241,3.176471,1],[2,934241,3.053708,1],[2,934241,2.59335,1],[2,934241,1.856777,1],[2,934241,1.795396,1],[2,22110371,3.391304,1],[2,934241,1.764706,1],[2,22110371,3.360614,1],[2,934241,1.672634,1],[2,22110371,3.299233,1],[2,1141850,2.409207,1],[2,934241,1.580563,1],[2,934241,1.519182,1],[2,22110371,3.207161,1],[2,22110371,3.11509,1],[2,22110371,2.992327,1],[2,934241,1.488491,1],[2,22110371,2.961637,1],[2,934241,1.273657,1],[2,6124469,1.212276,1],[2,6124469,1.703325,1],[2,6124469,1.856777,1],[2,6124469,1.918159,1],[2,22110371,4.158568,1],[2,934241,2.439898,1],[2,22110371,4.097187,1],[2,22110371,4.005115,1],[2,9653824,1.856777,1],[2,22110371,3.882353,1],[2,22110371,3.851662,1],[2,22110371,3.759591,1],[2,9653824,1.764706,1],[2,934241,2.347826,1],[2,934241,2.317136,1],[2,1141850,2.163683,1],[2,934241,2.286445,1],[2,934241,2.071611,1],[2,934241,1.97954,1],[2,9653824,1.703325,1],[2,22110371,3.544757,1],[2,1141850,2.255754,1],[2,1141850,2.347826,1],[2,934241,1.948849,1],[2,22317980,1.028133,1],[2,15466879,2.378517,1],[2,14844052,1.672634,1],[2,14844052,1.611253,1],[2,14844052,1.580563,1],[2,15466879,2.624041,1],[2,10899479,3.575448,1],[2,10899479,3.636829,1],[2,10899479,3.667519,1],[2,14844052,1.42711,1],[2,10899479,3.820972,1],[2,10899479,3.882353,1],[2,14844052,1.273657,1],[2,15466879,2.900256,1],[2,22317980,1.058824,1],[2,22317980,1.365729,1],[2,22317980,1.396419,1],[2,22317980,1.42711,1],[2,22317980,1.672634,1],[2,22317980,0.966752,1],[2,10899479,1.948849,1],[2,10899479,2.163683,1],[2,10899479,2.194373,1],[2,15466879,1.703325,1],[2,10899479,2.409207,1],[2,10899479,2.470588,1],[2,10899479,2.501279,1],[2,15466879,1.856777,1],[2,15466879,1.887468,1],[2,10899479,2.59335,1],[2,10899479,2.624041,1],[2,10899479,2.654731,1],[2,15466879,1.918159,1],[2,10899479,2.808184,1],[2,15466879,2.01023,1],[2,15466879,2.102302,1],[2,10899479,2.992327,1],[2,15466879,2.163683,1],[2,10899479,3.084399,1],[2,15466879,1.519182,1],[2,9653824,3.575448,1],[2,22317980,3.268542,1],[2,22317980,3.329923,1],[2,10899479,6.214834,1],[2,934241,5.048593,1],[2,9653824,3.452685,1],[2,934241,4.925831,1],[2,22317980,3.790281,1],[2,9653824,3.360614,1],[2,934241,4.772379,1],[2,9653824,3.299233,1],[2,934241,4.618926,1],[2,9653824,3.237852,1],[2,22317980,4.097187,1],[2,9653824,3.176471,1],[2,934241,4.31202,1],[2,934241,4.097187,1],[2,934241,4.035806,1],[2,934241,3.943734,1],[2,9653824,4.28133,1],[2,22317980,1.734015,1],[2,15466879,1.611253,1],[2,22317980,2.01023,1],[2,9653824,4.127877,1],[2,10899479,1.764706,1],[2,22317980,2.132992,1],[2,22317980,2.378517,1],[2,22317980,2.409207,1],[2,22317980,2.439898,1],[2,22317980,2.470588,1],[2,10899479,1.611253,1],[2,22317980,2.654731,1],[2,22317980,2.716113,1],[2,22317980,2.746803,1],[2,22317980,2.777494,1],[2,10899479,1.457801,1],[2,22317980,2.900256,1],[2,934241,5.478261,1],[2,10899479,1.242967,1],[2,726632,6.245524,1],[2,9861433,1.856777,1],[2,9861433,1.887468,1],[2,9861433,1.918159,1],[2,9861433,2.01023,1],[2,14844052,2.716113,1],[2,14844052,2.746803,1],[2,14844052,2.808184,1],[2,9861433,2.194373,1],[2,14844052,2.838875,1],[2,726632,5.815857,1],[2,6124469,3.943734,1],[2,9861433,2.286445,1],[2,14844052,2.869565,1],[2,10691869,4.741688,1],[2,6124469,4.005115,1],[2,9861433,2.378517,1],[2,5916860,6.644501,1],[2,5916860,6.613811,1],[2,22525589,3.759591,1],[2,9861433,1.028133,1],[2,22525589,3.851662,1],[2,726632,7.043478,1],[2,22525589,3.974425,1],[2,14844052,2.59335,1],[2,9861433,1.304348,1],[2,22525589,4.189258,1],[2,9861433,1.396419,1],[2,22525589,4.342711,1],[2,726632,6.675192,1],[2,9861433,1.488491,1],[2,9861433,1.549872,1],[2,22525589,4.526854,1],[2,9861433,1.580563,1],[2,6124469,3.667519,1],[2,9861433,1.703325,1],[2,9861433,1.734015,1],[2,9861433,1.795396,1],[2,726632,6.276215,1],[2,11107088,2.470588,1],[2,11107088,2.531969,1],[2,11107088,2.59335,1],[2,11107088,2.654731,1],[2,11107088,2.685422,1],[2,10691869,4.189258,1],[2,11107088,2.838875,1],[2,6124469,4.465473,1],[2,11107088,3.176471,1],[2,21902762,5.140665,1],[2,726632,4.956522,1],[2,6124469,4.526854,1],[2,11107088,3.268542,1],[2,6124469,4.557545,1],[2,10691869,4.035806,1],[2,726632,4.772379,1],[2,11107088,3.421995,1],[2,22525589,6.429668,1],[2,21902762,4.83376,1],[2,726632,4.680307,1],[2,14844052,2.961637,1],[2,726632,5.508951,1],[2,9861433,2.59335,1],[2,14844052,3.084399,1],[2,14844052,3.11509,1],[2,6124469,4.31202,1],[2,14844052,3.207161,1],[2,11107088,1.641944,1],[2,11107088,1.672634,1],[2,726632,5.079284,1],[2,11107088,1.918159,1],[2,22525589,6.061381,1],[2,11107088,2.102302,1],[2,11107088,2.132992,1],[2,11107088,2.163683,1],[2,11107088,2.225064,1],[2,11107088,2.286445,1],[2,11107088,2.317136,1],[2,11107088,2.378517,1],[2,11107088,2.409207,1],[2,22110371,2.531969,1],[2,6124469,3.11509,1],[2,22110371,2.439898,1],[2,14844052,2.286445,1],[2,22525589,0.26087,1],[2,22110371,2.378517,1],[2,22110371,2.194373,1],[2,22525589,0.629156,1],[2,22110371,2.163683,1],[2,14844052,2.317136,1],[2,22525589,1.058824,1],[2,22525589,1.212276,1],[2,22110371,2.040921,1],[2,22525589,1.273657,1],[2,22525589,1.304348,1],[2,1141850,3.053708,1],[2,22525589,1.396419,1],[2,22525589,1.42711,1],[2,22110371,1.856777,1],[2,6124469,3.237852,1],[2,6124469,2.040921,1],[2,6124469,2.071611,1],[2,22110371,2.869565,1],[2,6124469,2.132992,1],[2,6124469,2.194373,1],[2,22110371,2.777494,1],[2,6124469,2.225064,1],[2,6124469,2.317136,1],[2,6124469,2.409207,1],[2,6124469,2.470588,1],[2,14844052,2.071611,1],[2,14844052,2.102302,1],[2,1141850,2.654731,1],[2,14844052,2.194373,1],[2,6124469,2.930946,1],[2,1141850,2.746803,1],[2,1141850,2.808184,1],[2,6124469,2.992327,1],[2,6124469,3.053708,1],[2,14844052,2.255754,1],[2,22525589,2.102302,1],[2,22525589,2.163683,1],[2,22525589,2.225064,1],[2,22525589,2.439898,1],[2,22525589,2.470588,1],[2,22525589,2.531969,1],[2,22525589,2.746803,1],[2,22525589,2.777494,1],[2,22525589,2.869565,1],[2,22525589,2.900256,1],[2,22525589,2.930946,1],[2,22525589,2.992327,1],[2,22525589,3.053708,1],[2,22525589,3.11509,1],[2,22525589,3.237852,1],[2,10691869,6.429668,1],[2,22525589,3.329923,1],[2,726632,7.473146,1],[2,5916860,8.025575,1],[2,22525589,3.483376,1],[2,22525589,1.519182,1],[2,22110371,1.641944,1],[2,22525589,1.549872,1],[2,22110371,1.580563,1],[2,1141850,3.176471,1],[2,1141850,3.207161,1],[2,22110371,1.058824,1],[2,6124469,3.329923,1],[2,6124469,3.391304,1],[2,22525589,1.856777,1],[2,22525589,1.887468,1],[2,22525589,1.948849,1],[2,1141850,3.360614,1],[2,14844052,2.439898,1],[2,1141850,3.636829,1],[2,1141850,3.69821,1],[2,1141850,3.790281,1],[2,1141850,3.851662,1],[2,1141850,4.189258,1],[2,14844052,2.501279,1],[2,1972287,2.961637,1],[2,1972287,3.023018,1],[2,9030997,5.723785,1],[2,1972287,3.14578,1],[2,20864716,5.355499,1],[2,5709251,1.212276,1],[2,20864716,4.987212,1],[2,20864716,4.925831,1],[2,20864716,4.895141,1],[2,1972287,3.575448,1],[2,1972287,3.606138,1],[2,1972287,3.69821,1],[2,20864716,4.649616,1],[2,9030997,4.956522,1],[2,1972287,4.066496,1],[2,20864716,4.219949,1],[2,1972287,4.127877,1],[2,9030997,4.741688,1],[2,20864716,3.974425,1],[2,1972287,2.102302,1],[2,1972287,2.163683,1],[2,1972287,2.194373,1],[2,1972287,2.255754,1],[2,5709251,1.580563,1],[2,5709251,1.549872,1],[2,1972287,2.409207,1],[2,1972287,2.439898,1],[2,1972287,2.470588,1],[2,1972287,2.501279,1],[2,1972287,2.59335,1],[2,5709251,1.488491,1],[2,5709251,1.457801,1],[2,5709251,1.42711,1],[2,1972287,2.746803,1],[2,1972287,2.777494,1],[2,5709251,1.396419,1],[2,9030997,5.877238,1],[2,5709251,1.365729,1],[2,20864716,5.601023,1],[2,22940807,3.053708,1],[2,22940807,3.084399,1],[2,22940807,3.11509,1],[2,20864716,2.071611,1],[2,22940807,3.176471,1],[2,20864716,2.040921,1],[2,20864716,2.01023,1],[2,20864716,1.918159,1],[2,22940807,3.268542,1],[2,20864716,1.795396,1],[2,22940807,3.329923,1],[2,22940807,3.514066,1],[2,11729915,0.87468,1],[2,20864716,1.734015,1],[2,20864716,1.641944,1],[2,11729915,0.905371,1],[2,20864716,1.580563,1],[2,20864716,1.42711,1],[2,20864716,1.396419,1],[2,20864716,1.365729,1],[2,20864716,3.790281,1],[2,20864716,3.69821,1],[2,20864716,3.667519,1],[2,20864716,3.514066,1],[2,20864716,3.483376,1],[2,20864716,3.299233,1],[2,20864716,3.084399,1],[2,20864716,3.023018,1],[2,20864716,2.961637,1],[2,20864716,2.869565,1],[2,20864716,2.838875,1],[2,20864716,2.777494,1],[2,22940807,2.777494,1],[2,11729915,0.782609,1],[2,20864716,2.470588,1],[2,519023,1.120205,1],[2,20864716,2.409207,1],[2,11729915,0.813299,1],[2,20864716,2.225064,1],[2,20864716,2.163683,1],[2,15882097,4.035806,1],[2,22940807,1.304348,1],[2,5709251,3.421995,1],[2,22940807,1.396419,1],[2,22940807,1.519182,1],[2,22940807,1.580563,1],[2,5709251,3.268542,1],[2,519023,1.703325,1],[2,5709251,3.14578,1],[2,5709251,3.084399,1],[2,5709251,3.053708,1],[2,5709251,3.023018,1],[2,5709251,2.992327,1],[2,22940807,1.641944,1],[2,5709251,2.930946,1],[2,5709251,2.900256,1],[2,22940807,1.703325,1],[2,5709251,2.838875,1],[2,5709251,2.808184,1],[2,519023,2.102302,1],[2,519023,2.040921,1],[2,5709251,3.943734,1],[2,519023,2.01023,1],[2,22940807,0.84399,1],[2,15882097,3.544757,1],[2,519023,1.887468,1],[2,5709251,3.790281,1],[2,22940807,0.905371,1],[2,22940807,0.997442,1],[2,22940807,1.028133,1],[2,22940807,1.058824,1],[2,5709251,3.636829,1],[2,15882097,3.820972,1],[2,15882097,3.851662,1],[2,6747296,5.785166,1],[2,22940807,1.089514,1],[2,519023,1.826087,1],[2,5709251,3.514066,1],[2,5709251,3.483376,1],[2,22940807,2.409207,1],[2,22940807,2.439898,1],[2,9030997,6.429668,1],[2,1972287,0.966752,1],[2,1972287,1.212276,1],[2,1972287,1.242967,1],[2,1972287,1.304348,1],[2,1972287,1.42711,1],[2,1972287,1.457801,1],[2,1972287,1.519182,1],[2,22940807,2.470588,1],[2,5709251,1.826087,1],[2,1972287,1.672634,1],[2,1972287,1.703325,1],[2,1972287,1.734015,1],[2,5709251,1.764706,1],[2,1972287,1.826087,1],[2,22940807,2.654731,1],[2,1972287,2.01023,1],[2,5709251,1.672634,1],[2,5709251,2.777494,1],[2,22940807,1.734015,1],[2,519023,1.672634,1],[2,5709251,2.685422,1],[2,5709251,2.654731,1],[2,5709251,2.624041,1],[2,5709251,2.59335,1],[2,22940807,1.795396,1],[2,5709251,2.531969,1],[2,5709251,2.439898,1],[2,5709251,2.409207,1],[2,22940807,1.856777,1],[2,5709251,2.347826,1],[2,519023,1.611253,1],[2,5709251,2.286445,1],[2,519023,1.488491,1],[2,5709251,2.225064,1],[2,5709251,2.132992,1],[2,22940807,2.286445,1],[2,22940807,2.378517,1],[2,2179896,0.966752,1],[2,2179896,1.058824,1],[2,20657107,4.097187,1],[2,2179896,1.273657,1],[2,2179896,1.335038,1],[2,2179896,1.519182,1],[2,20657107,3.452685,1],[2,20657107,3.421995,1],[2,2179896,1.734015,1],[2,20657107,3.084399,1],[2,20657107,3.053708,1],[2,20657107,2.992327,1],[2,2179896,2.071611,1],[2,20657107,2.838875,1],[2,20657107,2.777494,1],[2,20657107,2.685422,1],[2,2179896,2.255754,1],[2,20657107,2.59335,1],[2,2179896,2.378517,1],[2,22940807,5.815857,1],[2,9030997,3.299233,1],[2,9030997,3.268542,1],[2,22940807,5.969309,1],[2,9030997,3.14578,1],[2,9030997,3.11509,1],[2,22940807,6.092072,1],[2,11729915,4.526854,1],[2,9030997,2.869565,1],[2,11729915,4.772379,1],[2,9030997,2.501279,1],[2,9030997,2.132992,1],[2,9030997,1.97954,1],[2,22940807,6.368286,1],[2,22940807,6.398977,1],[2,2179896,0.629156,1],[2,2179896,0.751918,1],[2,2179896,0.84399,1],[2,2179896,0.87468,1],[2,20657107,4.28133,1],[2,2179896,3.084399,1],[2,10484260,3.14578,1],[2,2179896,3.237852,1],[2,2179896,3.299233,1],[2,2179896,3.329923,1],[2,2179896,3.360614,1],[2,2179896,3.391304,1],[2,2179896,3.421995,1],[2,2179896,3.483376,1],[2,10069042,1.672634,1],[2,10069042,1.703325,1],[2,10484260,2.777494,1],[2,10484260,2.746803,1],[2,2179896,3.667519,1],[2,2179896,3.69821,1],[2,2179896,3.7289,1],[2,2179896,3.759591,1],[2,10069042,1.948849,1],[2,2179896,3.882353,1],[2,2179896,3.974425,1],[2,20657107,2.439898,1],[2,2179896,2.501279,1],[2,2179896,2.531969,1],[2,20657107,2.255754,1],[2,22940807,6.644501,1],[2,10069042,0.352941,1],[2,20657107,2.071611,1],[2,22940807,6.982097,1],[2,2179896,2.685422,1],[2,20657107,1.795396,1],[2,20657107,1.764706,1],[2,2179896,2.716113,1],[2,20657107,1.703325,1],[2,20657107,1.457801,1],[2,20657107,1.42711,1],[2,20657107,1.212276,1],[2,2179896,2.838875,1],[2,10484260,3.667519,1],[2,10069042,1.150895,1],[2,2179896,2.992327,1],[2,22940807,4.618926,1],[2,22940807,4.741688,1],[2,22940807,4.803069,1],[2,22940807,4.86445,1],[2,22940807,4.895141,1],[2,22940807,4.925831,1],[2,22940807,4.956522,1],[2,22940807,5.017903,1],[2,22940807,5.171355,1],[2,22940807,5.294118,1],[2,11729915,0.997442,1],[2,11729915,1.212276,1],[2,11729915,1.273657,1],[2,11729915,1.304348,1],[2,11729915,1.365729,1],[2,11729915,1.42711,1],[2,11729915,1.549872,1],[2,11729915,1.580563,1],[2,11729915,1.641944,1],[2,11729915,1.764706,1],[2,22940807,3.69821,1],[2,20864716,1.304348,1],[2,22940807,3.759591,1],[2,20864716,1.273657,1],[2,20864716,1.212276,1],[2,22940807,3.790281,1],[2,22940807,3.820972,1],[2,20864716,1.089514,1],[2,20864716,0.936061,1],[2,22940807,3.882353,1],[2,22940807,3.913043,1],[2,519023,0.567775,1],[2,519023,0.475703,1],[2,22940807,4.127877,1],[2,22940807,4.158568,1],[2,22940807,4.189258,1],[2,22940807,4.219949,1],[2,22940807,4.404092,1],[2,22940807,4.588235,1],[2,20864716,0.782609,1],[2,11729915,2.961637,1],[2,11729915,2.992327,1],[2,11729915,3.023018,1],[2,11729915,3.053708,1],[2,9030997,4.158568,1],[2,9030997,4.127877,1],[2,11729915,3.207161,1],[2,11729915,3.237852,1],[2,11729915,3.268542,1],[2,9030997,4.066496,1],[2,9030997,3.974425,1],[2,11729915,3.452685,1],[2,9030997,3.851662,1],[2,9030997,3.820972,1],[2,11729915,3.636829,1],[2,9030997,3.790281,1],[2,9030997,3.759591,1],[2,22940807,5.601023,1],[2,9030997,3.69821,1],[2,9030997,3.544757,1],[2,11729915,1.795396,1],[2,11729915,1.856777,1],[2,11729915,1.887468,1],[2,22940807,5.386189,1],[2,11729915,1.948849,1],[2,11729915,2.040921,1],[2,11729915,2.071611,1],[2,11729915,2.102302,1],[2,11729915,2.163683,1],[2,11729915,2.194373,1],[2,11729915,2.255754,1],[2,11729915,2.317136,1],[2,11729915,2.378517,1],[2,11729915,2.409207,1],[2,9030997,4.465473,1],[2,11729915,2.470588,1],[2,9030997,4.404092,1],[2,11729915,2.716113,1],[2,11729915,2.746803,1],[2,11729915,2.838875,1],[2,9238606,3.544757,1],[2,15259270,2.040921,1],[2,15259270,2.01023,1],[2,15259270,1.97954,1],[2,15259270,1.887468,1],[2,9238606,3.176471,1],[2,15259270,1.856777,1],[2,6747296,4.496164,1],[2,15259270,1.826087,1],[2,21279934,6.061381,1],[2,9238606,3.053708,1],[2,21279934,5.969309,1],[2,21279934,5.938619,1],[2,15259270,1.703325,1],[2,21279934,5.877238,1],[2,21279934,5.846547,1],[2,5709251,5.048593,1],[2,5709251,4.987212,1],[2,21279934,5.508951,1],[2,21279934,7.289003,1],[2,6539687,1.089514,1],[2,6539687,0.966752,1],[2,15259270,2.992327,1],[2,15259270,2.716113,1],[2,15259270,2.624041,1],[2,15259270,2.501279,1],[2,15259270,2.409207,1],[2,21279934,7.043478,1],[2,15259270,2.286445,1],[2,21279934,6.982097,1],[2,9238606,3.851662,1],[2,9238606,3.790281,1],[2,15259270,2.132992,1],[2,15259270,2.102302,1],[2,21279934,6.797954,1],[2,9238606,3.667519,1],[2,9238606,3.606138,1],[2,9238606,3.575448,1],[2,21279934,6.613811,1],[2,9238606,2.470588,1],[2,21279934,4.741688,1],[2,21279934,4.710997,1],[2,21279934,4.680307,1],[2,21279934,4.618926,1],[2,21279934,4.557545,1],[2,21279934,4.526854,1],[2,21279934,4.434783,1],[2,21279934,4.404092,1],[2,21279934,4.342711,1],[2,21279934,4.219949,1],[2,21279934,4.189258,1],[2,21279934,4.127877,1],[2,21279934,3.851662,1],[2,21279934,3.790281,1],[2,21279934,3.421995,1],[2,21279934,3.329923,1],[2,21279934,3.237852,1],[2,21279934,3.176471,1],[2,21279934,2.900256,1],[2,5709251,4.86445,1],[2,15259270,1.580563,1],[2,21279934,5.294118,1],[2,21279934,5.232737,1],[2,21279934,5.202046,1],[2,15259270,1.519182,1],[2,21279934,5.171355,1],[2,9238606,2.654731,1],[2,15259270,1.42711,1],[2,9238606,2.624041,1],[2,15259270,1.396419,1],[2,15259270,1.273657,1],[2,21279934,4.987212,1],[2,21279934,4.956522,1],[2,9238606,2.56266,1],[2,519023,4.526854,1],[2,15259270,1.212276,1],[2,21279934,4.895141,1],[2,15259270,1.150895,1],[2,21279934,4.803069,1],[2,14636443,2.378517,1],[2,14636443,2.347826,1],[2,6747296,2.439898,1],[2,14636443,2.286445,1],[2,14636443,2.225064,1],[2,14636443,2.194373,1],[2,14636443,2.132992,1],[2,14636443,2.102302,1],[2,14636443,2.071611,1],[2,14636443,2.040921,1],[2,14636443,2.01023,1],[2,6124469,6.797954,1],[2,14636443,1.948849,1],[2,6747296,2.531969,1],[2,14636443,1.887468,1],[2,14636443,1.795396,1],[2,14636443,1.734015,1],[2,14636443,1.641944,1],[2,6747296,2.624041,1],[2,21487543,2.071611,1],[2,21487543,2.040921,1],[2,21487543,1.97954,1],[2,21487543,1.703325,1],[2,21487543,1.519182,1],[2,21487543,1.242967,1],[2,21487543,1.150895,1],[2,21487543,1.089514,1],[2,21487543,1.028133,1],[2,6747296,1.97954,1],[2,6747296,2.01023,1],[2,6747296,2.040921,1],[2,6747296,2.071611,1],[2,6539687,3.053708,1],[2,14636443,2.716113,1],[2,6747296,2.286445,1],[2,14636443,2.59335,1],[2,14636443,2.531969,1],[2,6747296,2.347826,1],[2,14636443,2.409207,1],[2,6539687,2.317136,1],[2,6539687,2.286445,1],[2,6747296,3.360614,1],[2,9238606,4.710997,1],[2,6747296,3.421995,1],[2,6539687,2.225064,1],[2,21279934,7.902813,1],[2,6539687,2.071611,1],[2,6747296,3.544757,1],[2,6747296,3.575448,1],[2,6747296,3.606138,1],[2,21279934,7.749361,1],[2,21279934,7.71867,1],[2,9238606,4.434783,1],[2,6539687,1.856777,1],[2,6539687,1.703325,1],[2,6539687,1.549872,1],[2,15259270,3.851662,1],[2,21279934,7.350384,1],[2,9238606,4.127877,1],[2,14636443,1.519182,1],[2,14636443,1.488491,1],[2,14636443,1.335038,1],[2,6539687,2.869565,1],[2,14636443,1.304348,1],[2,9238606,6.429668,1],[2,21279934,9.375959,1],[2,21279934,9.038363,1],[2,6539687,2.716113,1],[2,9238606,5.508951,1],[2,9238606,5.386189,1],[2,6747296,2.838875,1],[2,6747296,2.869565,1],[2,9238606,5.232737,1],[2,6539687,2.531969,1],[2,6747296,3.053708,1],[2,6747296,3.11509,1],[2,6539687,2.409207,1],[2,6124469,7.442455,1],[2,21279934,8.179028,1],[2,21072325,3.452685,1],[2,21072325,3.421995,1],[2,21072325,3.360614,1],[2,21072325,3.237852,1],[2,21072325,3.14578,1],[2,15882097,1.795396,1],[2,21072325,2.961637,1],[2,519023,3.176471,1],[2,21072325,2.900256,1],[2,21072325,2.869565,1],[2,21072325,2.838875,1],[2,5709251,4.649616,1],[2,519023,3.14578,1],[2,21072325,2.59335,1],[2,21072325,2.56266,1],[2,15882097,1.97954,1],[2,21072325,2.194373,1],[2,21072325,2.01023,1],[2,21072325,1.856777,1],[2,21072325,5.938619,1],[2,21072325,5.815857,1],[2,21072325,5.570332,1],[2,21072325,5.539642,1],[2,21072325,5.386189,1],[2,21072325,5.324808,1],[2,21072325,5.171355,1],[2,21072325,4.680307,1],[2,519023,3.514066,1],[2,21072325,4.28133,1],[2,21072325,4.250639,1],[2,21072325,4.035806,1],[2,21072325,3.974425,1],[2,21072325,3.943734,1],[2,15882097,1.365729,1],[2,15882097,1.42711,1],[2,21072325,3.606138,1],[2,15882097,1.549872,1],[2,21072325,3.544757,1],[2,519023,3.391304,1],[2,5709251,4.465473,1],[2,519023,2.777494,1],[2,15882097,2.59335,1],[2,15882097,2.685422,1],[2,519023,2.685422,1],[2,15882097,2.746803,1],[2,519023,2.59335,1],[2,519023,2.531969,1],[2,15882097,2.838875,1],[2,15882097,2.869565,1],[2,15882097,2.900256,1],[2,15882097,2.930946,1],[2,519023,2.501279,1],[2,519023,2.470588,1],[2,519023,2.439898,1],[2,15882097,3.053708,1],[2,15882097,3.176471,1],[2,15882097,3.237852,1],[2,15882097,3.299233,1],[2,15882097,3.329923,1],[2,21072325,1.734015,1],[2,21072325,1.672634,1],[2,519023,3.053708,1],[2,21072325,1.519182,1],[2,21072325,1.488491,1],[2,21072325,1.457801,1],[2,21072325,1.42711,1],[2,21072325,1.396419,1],[2,519023,2.900256,1],[2,21072325,1.212276,1],[2,15882097,2.194373,1],[2,21072325,0.84399,1],[2,21072325,0.690537,1],[2,15882097,2.225064,1],[2,15882097,2.255754,1],[2,6747296,4.956522,1],[2,15882097,2.317136,1],[2,519023,2.838875,1],[2,15882097,2.409207,1],[2,15882097,2.439898,1],[2,1764677,1.795396,1],[2,1764677,1.826087,1],[2,1764677,1.856777,1],[2,15259270,0.997442,1],[2,1764677,1.887468,1],[2,1764677,2.040921,1],[2,1764677,2.071611,1],[2,1764677,2.102302,1],[2,1764677,2.194373,1],[2,1764677,2.225064,1],[2,1764677,2.317136,1],[2,1764677,2.439898,1],[2,1764677,2.470588,1],[2,1764677,2.531969,1],[2,1764677,2.654731,1],[2,1764677,2.746803,1],[2,1764677,2.808184,1],[2,11522306,1.42711,1],[2,11522306,1.519182,1],[2,11522306,1.549872,1],[2,21279934,2.869565,1],[2,21279934,2.838875,1],[2,21279934,2.470588,1],[2,21279934,2.439898,1],[2,21279934,2.409207,1],[2,21279934,2.378517,1],[2,21279934,2.347826,1],[2,21279934,2.255754,1],[2,21279934,2.225064,1],[2,21279934,1.764706,1],[2,21279934,1.734015,1],[2,21279934,1.672634,1],[2,21279934,1.641944,1],[2,21279934,1.396419,1],[2,21279934,1.120205,1],[2,21279934,0.537084,1],[2,1764677,0.813299,1],[2,1764677,1.089514,1],[2,1764677,1.42711,1],[2,1764677,1.734015,1],[2,15259270,0.751918,1],[2,9238606,2.071611,1],[2,9238606,1.97954,1],[2,11522306,2.685422,1],[2,9238606,1.887468,1],[2,21072325,7.872123,1],[2,9238606,1.826087,1],[2,21072325,7.71867,1],[2,11522306,2.900256,1],[2,11522306,2.961637,1],[2,21072325,7.595908,1],[2,11522306,3.176471,1],[2,21072325,6.951407,1],[2,21072325,6.890026,1],[2,21072325,6.828645,1],[2,21072325,6.736573,1],[2,21072325,6.521739,1],[2,21072325,6.429668,1],[2,21072325,6.398977,1],[2,21072325,6.276215,1],[2,1764677,3.268542,1],[2,11522306,1.764706,1],[2,1764677,3.452685,1],[2,11522306,1.795396,1],[2,11522306,1.826087,1],[2,1764677,3.575448,1],[2,9238606,2.378517,1],[2,11522306,1.948849,1],[2,9238606,2.317136,1],[2,9238606,2.255754,1],[2,11522306,2.102302,1],[2,9238606,2.225064,1],[2,11522306,2.163683,1],[2,9238606,2.194373,1],[2,11522306,2.255754,1],[2,11522306,2.286445,1],[2,11522306,2.317136,1],[2,11522306,2.347826,1],[2,11522306,2.378517,1],[2,9238606,2.132992,1],[2,18996234,5.41688,1],[2,13390788,3.544757,1],[2,13390788,3.514066,1],[2,3840769,1.028133,1],[2,14013615,2.746803,1],[2,13390788,3.391304,1],[2,18373407,3.943734,1],[2,13390788,3.329923,1],[2,3840769,1.058824,1],[2,18788625,7.595908,1],[2,13390788,3.299233,1],[2,18996234,5.263427,1],[2,18996234,5.232737,1],[2,13390788,3.268542,1],[2,3425550,4.465473,1],[2,7785342,1.304348,1],[2,3840769,1.150895,1],[2,18788625,7.227621,1],[2,7785342,1.335038,1],[2,18996234,5.079284,1],[2,18996234,5.048593,1],[2,5086423,1.703325,1],[2,4048378,2.01023,1],[2,16504925,4.526854,1],[2,18788625,6.982097,1],[2,18373407,3.7289,1],[2,3840769,7.258312,1],[2,3425550,5.202046,1],[2,18996234,4.83376,1],[2,17750579,0.905371,1],[2,18996234,4.772379,1],[2,18788625,6.644501,1],[2,12767961,2.59335,1],[2,7370124,1.304348,1],[2,4878814,3.851662,1],[2,7370124,0.721228,1],[2,5086423,1.826087,1],[2,4048378,1.549872,1],[2,14013615,0.383632,1],[2,3840769,0.475703,1],[2,4048378,1.672634,1],[2,13390788,5.324808,1],[2,13390788,5.232737,1],[2,16504925,4.035806,1],[2,18373407,4.496164,1],[2,18788625,2.56266,1],[2,17958188,9.099744,1],[2,13390788,4.496164,1],[2,18788625,2.59335,1],[2,18996234,5.601023,1],[2,16504925,4.127877,1],[2,14013615,2.501279,1],[2,13390788,4.097187,1],[2,14013615,2.624041,1],[2,13390788,3.943734,1],[2,14013615,2.654731,1],[2,13390788,3.851662,1],[2,18996234,5.478261,1],[2,13390788,3.820972,1],[2,4048378,1.764706,1],[2,13390788,3.759591,1],[2,12767961,2.746803,1],[2,13390788,3.7289,1],[2,12767961,2.808184,1],[2,18788625,2.777494,1],[2,18788625,6.153453,1],[2,17750579,1.764706,1],[2,18788625,6,1],[2,4048378,3.053708,1],[2,18788625,5.846547,1],[2,18996234,4.127877,1],[2,17958188,7.626598,1],[2,3840769,1.948849,1],[2,18373407,2.716113,1],[2,4048378,3.14578,1],[2,18373407,2.624041,1],[2,18996234,4.097187,1],[2,3840769,2.01023,1],[2,4048378,3.176471,1],[2,18996234,4.035806,1],[2,18996234,4.005115,1],[2,18373407,2.501279,1],[2,17750579,1.826087,1],[2,17750579,1.856777,1],[2,18996234,3.882353,1],[2,18373407,2.470588,1],[2,17750579,1.918159,1],[2,18373407,2.439898,1],[2,18788625,2.961637,1],[2,7785342,1.519182,1],[2,18996234,3.7289,1],[2,18996234,3.69821,1],[2,18996234,3.667519,1],[2,18996234,3.636829,1],[2,18996234,3.606138,1],[2,17750579,2.01023,1],[2,3840769,1.396419,1],[2,18373407,3.483376,1],[2,14013615,2.777494,1],[2,18996234,4.649616,1],[2,18996234,4.618926,1],[2,4048378,2.132992,1],[2,18788625,6.306905,1],[2,4048378,2.225064,1],[2,18788625,2.716113,1],[2,4048378,2.255754,1],[2,3840769,1.672634,1],[2,14013615,0.138107,1],[2,3840769,1.764706,1],[2,4048378,2.378517,1],[2,4048378,2.409207,1],[2,14221224,0.659847,1],[2,18788625,2.746803,1],[2,18996234,4.250639,1],[2,18373407,2.992327,1],[2,18996234,4.28133,1],[2,18996234,4.31202,1],[2,17750579,1.703325,1],[2,18373407,3.023018,1],[2,4048378,2.869565,1],[2,17750579,1.580563,1],[2,13390788,2.930946,1],[2,4048378,2.777494,1],[2,4048378,2.746803,1],[2,4048378,2.654731,1],[2,18373407,3.053708,1],[2,7785342,1.488491,1],[2,4048378,2.59335,1],[2,18788625,6.245524,1],[2,16712534,2.654731,1],[2,18788625,8.148338,1],[2,18165798,5.631714,1],[2,4463596,0.782609,1],[2,18788625,1.734015,1],[2,18788625,1.764706,1],[2,18788625,1.826087,1],[2,16712534,2.746803,1],[2,16712534,2.808184,1],[2,16712534,2.900256,1],[2,16712534,2.992327,1],[2,16712534,3.053708,1],[2,7162514,1.150895,1],[2,5086423,3.237852,1],[2,7992951,5.355499,1],[2,18165798,5.907928,1],[2,13183179,0.659847,1],[2,16712534,4.31202,1],[2,18788625,2.040921,1],[2,3425550,1.519182,1],[2,18373407,6.184143,1],[2,18788625,2.102302,1],[2,5086423,2.838875,1],[2,14013615,3.636829,1],[2,18788625,2.163683,1],[2,18165798,6.214834,1],[2,5086423,2.685422,1],[2,5086423,2.654731,1],[2,4878814,1.335038,1],[2,16504925,2.654731,1],[2,18788625,2.255754,1],[2,3425550,1.457801,1],[2,3425550,1.856777,1],[2,4463596,1.826087,1],[2,4463596,1.734015,1],[2,16504925,2.225064,1],[2,14221224,1.028133,1],[2,16712534,2.194373,1],[2,16504925,2.317136,1],[2,17542970,3.053708,1],[2,4463596,1.703325,1],[2,17542970,3.176471,1],[2,18788625,1.396419,1],[2,5294032,1.856777,1],[2,16712534,2.225064,1],[2,16712534,2.317136,1],[2,4463596,1.549872,1],[2,4463596,1.519182,1],[2,5294032,1.795396,1],[2,4463596,1.488491,1],[2,4463596,1.335038,1],[2,16712534,2.347826,1],[2,16712534,2.439898,1],[2,18788625,1.549872,1],[2,16712534,2.501279,1],[2,16504925,2.501279,1],[2,16712534,2.56266,1],[2,18788625,1.580563,1],[2,16504925,2.531969,1],[2,16712534,2.59335,1],[2,16504925,2.56266,1],[2,12767961,2.378517,1],[2,16712534,2.624041,1],[2,18788625,1.672634,1],[2,7370124,2.225064,1],[2,18996234,6.092072,1],[2,16504925,3.7289,1],[2,4878814,2.317136,1],[2,7370124,2.163683,1],[2,7370124,2.132992,1],[2,18788625,2.317136,1],[2,4048378,0.966752,1],[2,7370124,2.102302,1],[2,5294032,0.751918,1],[2,5086423,2.317136,1],[2,4048378,1.028133,1],[2,18996234,5.754476,1],[2,14013615,3.329923,1],[2,7370124,2.01023,1],[2,4878814,2.56266,1],[2,5086423,2.255754,1],[2,5086423,2.194373,1],[2,4048378,1.058824,1],[2,5086423,2.071611,1],[2,4048378,1.089514,1],[2,7370124,1.918159,1],[2,4878814,2.777494,1],[2,14013615,3.176471,1],[2,4048378,1.273657,1],[2,4878814,2.900256,1],[2,7370124,1.795396,1],[2,7370124,1.672634,1],[2,4048378,1.365729,1],[2,5086423,1.97954,1],[2,18788625,2.409207,1],[2,3425550,4.127877,1],[2,16504925,2.746803,1],[2,14013615,3.514066,1],[2,16504925,2.808184,1],[2,14221224,0.87468,1],[2,8200560,3.69821,1],[2,5294032,1.611253,1],[2,14221224,0.84399,1],[2,18996234,6.951407,1],[2,5294032,1.549872,1],[2,5294032,1.519182,1],[2,16504925,3.023018,1],[2,5294032,1.488491,1],[2,5086423,2.56266,1],[2,5086423,2.531969,1],[2,3425550,4.035806,1],[2,5294032,1.365729,1],[2,4878814,2.225064,1],[2,4878814,2.194373,1],[2,4878814,2.01023,1],[2,7370124,2.347826,1],[2,16504925,3.575448,1],[2,4048378,0.905371,1],[2,16504925,3.483376,1],[2,4878814,1.887468,1],[2,4878814,1.856777,1],[2,14013615,3.391304,1],[2,5086423,2.470588,1],[2,4878814,1.703325,1],[2,4878814,1.641944,1],[2,18373407,5.785166,1],[2,4878814,1.549872,1],[2,16504925,3.207161,1],[2,4878814,1.519182,1],[2,3840769,4.250639,1],[2,3840769,4.31202,1],[2,7992951,2.716113,1],[2,17958188,4.035806,1],[2,7785342,2.071611,1],[2,7785342,2.132992,1],[2,7785342,2.255754,1],[2,7785342,2.378517,1],[2,7785342,2.470588,1],[2,7785342,2.501279,1],[2,7785342,2.654731,1],[2,7785342,2.716113,1],[2,7785342,2.746803,1],[2,17958188,3.974425,1],[2,17958188,3.913043,1],[2,7785342,2.900256,1],[2,17958188,3.882353,1],[2,7785342,2.961637,1],[2,7785342,3.023018,1],[2,7785342,3.268542,1],[2,7992951,2.59335,1],[2,16920143,3.69821,1],[2,7785342,3.575448,1],[2,17958188,3.851662,1],[2,16920143,3.483376,1],[2,17958188,3.820972,1],[2,7785342,3.69821,1],[2,7785342,3.820972,1],[2,18788625,4.588235,1],[2,7992951,2.470588,1],[2,18165798,9.682864,1],[2,16920143,3.207161,1],[2,18788625,4.710997,1],[2,4255987,1.519182,1],[2,4255987,1.488491,1],[2,3840769,3.237852,1],[2,4048378,5.017903,1],[2,4255987,1.396419,1],[2,3840769,3.299233,1],[2,4255987,1.335038,1],[2,13390788,0.567775,1],[2,18996234,1.611253,1],[2,4048378,5.048593,1],[2,18996234,1.549872,1],[2,3840769,3.329923,1],[2,3840769,3.360614,1],[2,5086423,1.058824,1],[2,3840769,3.544757,1],[2,5086423,1.028133,1],[2,17958188,5.386189,1],[2,4048378,5.232737,1],[2,7992951,3.299233,1],[2,4048378,5.263427,1],[2,4048378,5.723785,1],[2,17958188,4.680307,1],[2,4048378,5.938619,1],[2,17958188,4.526854,1],[2,3840769,3.974425,1],[2,4048378,6.030691,1],[2,5086423,0.659847,1],[2,7992951,2.930946,1],[2,5086423,0.537084,1],[2,17958188,4.219949,1],[2,17958188,4.158568,1],[2,17958188,3.14578,1],[2,16920143,1.887468,1],[2,16920143,1.826087,1],[2,16920143,1.764706,1],[2,17958188,3.11509,1],[2,17958188,3.084399,1],[2,16920143,1.549872,1],[2,7992951,1.826087,1],[2,16920143,1.488491,1],[2,3840769,5.324808,1],[2,16920143,1.273657,1],[2,18788625,4.005115,1],[2,17958188,3.053708,1],[2,17958188,3.023018,1],[2,17958188,2.961637,1],[2,7992951,1.734015,1],[2,17958188,2.930946,1],[2,17958188,2.808184,1],[2,7992951,1.641944,1],[2,18788625,4.158568,1],[2,17958188,2.746803,1],[2,17958188,2.685422,1],[2,17958188,2.624041,1],[2,17958188,2.470588,1],[2,17958188,2.409207,1],[2,17958188,2.378517,1],[2,18788625,4.404092,1],[2,18788625,4.28133,1],[2,18788625,4.31202,1],[2,17958188,2.132992,1],[2,18788625,4.373402,1],[2,17958188,2.071611,1],[2,7992951,2.409207,1],[2,3840769,4.710997,1],[2,16920143,3.176471,1],[2,16920143,3.11509,1],[2,7785342,4.189258,1],[2,7992951,2.255754,1],[2,7992951,2.225064,1],[2,17958188,3.69821,1],[2,16920143,2.930946,1],[2,16920143,2.838875,1],[2,17958188,3.544757,1],[2,18788625,4.526854,1],[2,17958188,3.483376,1],[2,7785342,4.557545,1],[2,17958188,3.452685,1],[2,7992951,2.071611,1],[2,16920143,2.01023,1],[2,16920143,2.040921,1],[2,16920143,2.071611,1],[2,17958188,3.207161,1],[2,7785342,5.140665,1],[2,16920143,2.163683,1],[2,16920143,2.225064,1],[2,16920143,2.255754,1],[2,16920143,2.286445,1],[2,16920143,2.317136,1],[2,17958188,3.268542,1],[2,7992951,1.948849,1],[2,18788625,3.851662,1],[2,18788625,4.496164,1],[2,7785342,4.649616,1],[2,7992951,1.97954,1],[2,7992951,2.01023,1],[2,13390788,2.59335,1],[2,18996234,2.900256,1],[2,7785342,1.672634,1],[2,18996234,2.869565,1],[2,3840769,2.255754,1],[2,13390788,2.501279,1],[2,13390788,2.470588,1],[2,18373407,1.795396,1],[2,18373407,1.672634,1],[2,18373407,1.580563,1],[2,3840769,2.286445,1],[2,18788625,5.202046,1],[2,13390788,2.225064,1],[2,17750579,2.961637,1],[2,4048378,3.636829,1],[2,17750579,2.992327,1],[2,18788625,5.109974,1],[2,18373407,1.335038,1],[2,7785342,1.795396,1],[2,17750579,3.084399,1],[2,18996234,2.59335,1],[2,13390788,2.132992,1],[2,18996234,2.531969,1],[2,13390788,2.102302,1],[2,4048378,3.667519,1],[2,18373407,1.181586,1],[2,13390788,2.071611,1],[2,18373407,0.997442,1],[2,13390788,1.97954,1],[2,13390788,1.918159,1],[2,18996234,2.347826,1],[2,18788625,5.017903,1],[2,17750579,2.040921,1],[2,18788625,2.992327,1],[2,17750579,2.102302,1],[2,13390788,2.808184,1],[2,18996234,3.483376,1],[2,13390788,2.777494,1],[2,18373407,2.409207,1],[2,18373407,2.347826,1],[2,17750579,2.225064,1],[2,18373407,2.317136,1],[2,18996234,3.360614,1],[2,17750579,2.286445,1],[2,18996234,3.299233,1],[2,4048378,3.237852,1],[2,18996234,3.237852,1],[2,18373407,2.194373,1],[2,18373407,1.918159,1],[2,18788625,3.14578,1],[2,4048378,3.299233,1],[2,7785342,1.641944,1],[2,17750579,2.501279,1],[2,13390788,2.654731,1],[2,18996234,3.053708,1],[2,17750579,2.439898,1],[2,18788625,5.44757,1],[2,3840769,2.194373,1],[2,18373407,2.040921,1],[2,3840769,2.163683,1],[2,17750579,2.378517,1],[2,18788625,5.693095,1],[2,18373407,2.132992,1],[2,18996234,3.176471,1],[2,5086423,1.641944,1],[2,18788625,4.86445,1],[2,4048378,4.373402,1],[2,13390788,1.242967,1],[2,17958188,6.214834,1],[2,5086423,1.396419,1],[2,4048378,4.496164,1],[2,3840769,2.900256,1],[2,4048378,4.649616,1],[2,4255987,2.59335,1],[2,4048378,4.710997,1],[2,17750579,4.465473,1],[2,4048378,4.741688,1],[2,4255987,2.317136,1],[2,18996234,1.918159,1],[2,4255987,2.286445,1],[2,3840769,3.023018,1],[2,4255987,2.225064,1],[2,3840769,3.053708,1],[2,4255987,2.102302,1],[2,4048378,4.895141,1],[2,4255987,2.071611,1],[2,4255987,2.040921,1],[2,4255987,1.948849,1],[2,4255987,1.887468,1],[2,4255987,1.856777,1],[2,8200560,4.557545,1],[2,4255987,1.826087,1],[2,4255987,1.795396,1],[2,4255987,1.734015,1],[2,4255987,1.672634,1],[2,3840769,3.207161,1],[2,4048378,4.956522,1],[2,18996234,2.317136,1],[2,13390788,1.826087,1],[2,13390788,1.764706,1],[2,4048378,3.7289,1],[2,13390788,1.703325,1],[2,18996234,2.255754,1],[2,17958188,6.982097,1],[2,7785342,1.856777,1],[2,13390788,1.641944,1],[2,5086423,1.549872,1],[2,18996234,2.225064,1],[2,4048378,3.851662,1],[2,3840769,2.439898,1],[2,17958188,6.767263,1],[2,3840769,2.470588,1],[2,13390788,1.580563,1],[2,13390788,1.273657,1],[2,18788625,3.329923,1],[2,13390788,1.335038,1],[2,4048378,4.250639,1],[2,18788625,4.895141,1],[2,17958188,6.521739,1],[2,3840769,2.777494,1],[2,4255987,3.053708,1],[2,4048378,4.097187,1],[2,18788625,3.299233,1],[2,13390788,1.488491,1],[2,13390788,1.519182,1],[2,18996234,2.071611,1],[2,4048378,3.943734,1],[2,3840769,2.624041,1],[2,18996234,2.132992,1],[2,3840769,2.59335,1],[2,7162514,3.514066,1],[2,17127752,2.286445,1],[2,13806006,2.869565,1],[2,17127752,2.225064,1],[2,3633160,3.237852,1],[2,17335361,2.685422,1],[2,18581016,4.465473,1],[2,19203843,2.132992,1],[2,17335361,2.746803,1],[2,17335361,2.808184,1],[2,3633160,3.268542,1],[2,17127752,2.071611,1],[2,12767961,1.457801,1],[2,7162514,3.606138,1],[2,17335361,3.11509,1],[2,3633160,3.360614,1],[2,7162514,3.636829,1],[2,3633160,3.452685,1],[2,3633160,3.636829,1],[2,3633160,3.667519,1],[2,3633160,3.759591,1],[2,18581016,3.851662,1],[2,3633160,3.943734,1],[2,3633160,3.974425,1],[2,17335361,3.514066,1],[2,17335361,3.575448,1],[2,18581016,3.667519,1],[2,18581016,3.606138,1],[2,17335361,3.606138,1],[2,3633160,4.097187,1],[2,18581016,3.452685,1],[2,3633160,4.189258,1],[2,3633160,2.531969,1],[2,18165798,2.040921,1],[2,3633160,2.746803,1],[2,3633160,2.777494,1],[2,3633160,2.838875,1],[2,18581016,4.956522,1],[2,17335361,1.42711,1],[2,18581016,4.925831,1],[2,19203843,2.59335,1],[2,17335361,1.580563,1],[2,18581016,4.83376,1],[2,19203843,2.470588,1],[2,17335361,1.672634,1],[2,18165798,1.97954,1],[2,17335361,1.826087,1],[2,17335361,1.856777,1],[2,17127752,2.317136,1],[2,7162514,3.483376,1],[2,17335361,2.409207,1],[2,17335361,2.378517,1],[2,17127752,2.378517,1],[2,17127752,2.409207,1],[2,7162514,3.421995,1],[2,3633160,3.023018,1],[2,17335361,2.163683,1],[2,19203843,2.286445,1],[2,17335361,2.102302,1],[2,3633160,2.992327,1],[2,17335361,2.01023,1],[2,18165798,1.856777,1],[2,19203843,2.347826,1],[2,17335361,1.918159,1],[2,17335361,1.887468,1],[2,7577733,1.641944,1],[2,18581016,2.163683,1],[2,17127752,1.948849,1],[2,7162514,2.132992,1],[2,17127752,1.918159,1],[2,7577733,1.826087,1],[2,7577733,1.856777,1],[2,7577733,1.887468,1],[2,12767961,1.304348,1],[2,18581016,2.102302,1],[2,7577733,1.97954,1],[2,17127752,1.856777,1],[2,13183179,2.439898,1],[2,3425550,2.439898,1],[2,12975570,0.352941,1],[2,18581016,1.856777,1],[2,7577733,2.624041,1],[2,7162514,2.102302,1],[2,3633160,5.109974,1],[2,3425550,2.347826,1],[2,18165798,3.820972,1],[2,17127752,1.611253,1],[2,19203843,1.273657,1],[2,18581016,1.580563,1],[2,18581016,1.611253,1],[2,7577733,2.409207,1],[2,8200560,1.764706,1],[2,17127752,1.641944,1],[2,17127752,1.672634,1],[2,7577733,2.255754,1],[2,17127752,1.734015,1],[2,12767961,1.273657,1],[2,18581016,1.795396,1],[2,7162514,4.28133,1],[2,7577733,0.813299,1],[2,18581016,3.207161,1],[2,18581016,3.176471,1],[2,18581016,3.14578,1],[2,18581016,3.084399,1],[2,7162514,4.404092,1],[2,19203843,2.040921,1],[2,19203843,2.01023,1],[2,19203843,1.97954,1],[2,18581016,2.961637,1],[2,8408169,2.409207,1],[2,3217941,3.667519,1],[2,18581016,2.900256,1],[2,19203843,1.826087,1],[2,7577733,1.120205,1],[2,18165798,1.580563,1],[2,3425550,2.501279,1],[2,3425550,2.531969,1],[2,7577733,1.519182,1],[2,8408169,2.255754,1],[2,18165798,1.611253,1],[2,12767961,1.335038,1],[2,19203843,1.488491,1],[2,18165798,1.641944,1],[2,7577733,1.304348,1],[2,18581016,2.470588,1],[2,18165798,3.7289,1],[2,8408169,2.286445,1],[2,18581016,2.685422,1],[2,17335361,4.127877,1],[2,18581016,2.716113,1],[2,18581016,2.777494,1],[2,18165798,3.11509,1],[2,3633160,0.966752,1],[2,4671205,2.869565,1],[2,17127752,3.053708,1],[2,18165798,2.409207,1],[2,17127752,2.961637,1],[2,3633160,1.058824,1],[2,18165798,3.14578,1],[2,17127752,2.869565,1],[2,18165798,3.207161,1],[2,4671205,2.531969,1],[2,4671205,2.470588,1],[2,4671205,2.409207,1],[2,4671205,2.378517,1],[2,4671205,2.317136,1],[2,12767961,1.672634,1],[2,3633160,1.549872,1],[2,17127752,2.624041,1],[2,18165798,2.225064,1],[2,4671205,1.826087,1],[2,4671205,1.887468,1],[2,17127752,2.654731,1],[2,13183179,3.11509,1],[2,3425550,2.992327,1],[2,17127752,2.685422,1],[2,3633160,1.273657,1],[2,4671205,2.040921,1],[2,4671205,2.102302,1],[2,18165798,3.329923,1],[2,14013615,1.734015,1],[2,18165798,3.268542,1],[2,4671205,2.225064,1],[2,4671205,2.286445,1],[2,18165798,2.900256,1],[2,18165798,2.869565,1],[2,3217941,2.317136,1],[2,8408169,2.900256,1],[2,12767961,1.887468,1],[2,3217941,2.378517,1],[2,18165798,2.930946,1],[2,14013615,1.611253,1],[2,13806006,0.199488,1],[2,12767961,1.856777,1],[2,13806006,0.506394,1],[2,13806006,0.537084,1],[2,8408169,2.869565,1],[2,13806006,0.598465,1],[2,13806006,0.659847,1],[2,13806006,0.813299,1],[2,18165798,2.501279,1],[2,4671205,2.992327,1],[2,4671205,3.14578,1],[2,18165798,2.531969,1],[2,4671205,3.268542,1],[2,4671205,3.329923,1],[2,13183179,2.930946,1],[2,17127752,3.575448,1],[2,13183179,3.023018,1],[2,4671205,3.882353,1],[2,12767961,1.764706,1],[2,4671205,3.943734,1],[2,13806006,1.519182,1],[2,18165798,2.961637,1],[2,18165798,2.654731,1],[2,18165798,2.685422,1],[2,13806006,1.058824,1],[2,19203843,3.636829,1],[2,19203843,3.606138,1],[2,3633160,2.317136,1],[2,18165798,2.102302,1],[2,7162514,2.808184,1],[2,7162514,2.777494,1],[2,3217941,2.992327,1],[2,3633160,2.347826,1],[2,3217941,3.023018,1],[2,19203843,3.452685,1],[2,7162514,2.654731,1],[2,7162514,2.624041,1],[2,7162514,2.59335,1],[2,19203843,3.360614,1],[2,12767961,1.580563,1],[2,3633160,2.378517,1],[2,8408169,2.59335,1],[2,19203843,2.838875,1],[2,3217941,3.360614,1],[2,7162514,2.255754,1],[2,7162514,2.286445,1],[2,8408169,2.624041,1],[2,8408169,2.654731,1],[2,7162514,2.317136,1],[2,17335361,1.028133,1],[2,19203843,3.053708,1],[2,19203843,3.084399,1],[2,3425550,2.777494,1],[2,17335361,0.936061,1],[2,3633160,2.470588,1],[2,13183179,2.685422,1],[2,19203843,3.268542,1],[2,3217941,3.11509,1],[2,18165798,3.421995,1],[2,4671205,1.764706,1],[2,19203843,4.127877,1],[2,4671205,1.734015,1],[2,3217941,2.654731,1],[2,3633160,1.672634,1],[2,4671205,1.703325,1],[2,3217941,2.716113,1],[2,12767961,1.611253,1],[2,3217941,2.746803,1],[2,8408169,2.838875,1],[2,7162514,3.053708,1],[2,4671205,1.549872,1],[2,4671205,1.488491,1],[2,19203843,3.913043,1],[2,18165798,3.452685,1],[2,18165798,2.163683,1],[2,19203843,3.667519,1],[2,19203843,3.69821,1],[2,3633160,2.255754,1],[2,19203843,3.7289,1],[2,3633160,2.194373,1],[2,3633160,2.102302,1],[2,3425550,2.900256,1],[2,3217941,2.900256,1],[2,3633160,1.97954,1],[2,3425550,2.930946,1],[2,4671205,1.365729,1],[2,19203843,3.820972,1],[2,7162514,3.084399,1],[2,3217941,2.838875,1],[2,3217941,2.808184,1],[2,17127752,2.501279,1],[2,14013615,2.317136,1],[2,7577733,5.41688,1],[2,7577733,5.508951,1],[2,4463596,3.667519,1],[2,4463596,3.636829,1],[2,4463596,3.452685,1],[2,7370124,3.360614,1],[2,13183179,1.764706,1],[2,4463596,3.023018,1],[2,7370124,3.023018,1],[2,7370124,2.961637,1],[2,7370124,2.900256,1],[2,12975570,1.672634,1],[2,13183179,1.641944,1],[2,3425550,3.606138,1],[2,14013615,0.84399,1],[2,12975570,1.734015,1],[2,13183179,1.580563,1],[2,13183179,3.974425,1],[2,12975570,1.795396,1],[2,13183179,1.549872,1],[2,12975570,1.856777,1],[2,12975570,2.102302,1],[2,12975570,2.163683,1],[2,12975570,2.194373,1],[2,18788625,0.721228,1],[2,14013615,0.659847,1],[2,12975570,2.378517,1],[2,12975570,2.409207,1],[2,18788625,0.813299,1],[2,12975570,2.439898,1],[2,12975570,1.181586,1],[2,13598397,1.212276,1],[2,13598397,1.089514,1],[2,13183179,1.918159,1],[2,3217941,4.83376,1],[2,13598397,1.058824,1],[2,12975570,1.335038,1],[2,13598397,0.997442,1],[2,8408169,1.396419,1],[2,13598397,0.966752,1],[2,12975570,1.365729,1],[2,3217941,5.017903,1],[2,12975570,1.396419,1],[2,13598397,0.84399,1],[2,8408169,1.242967,1],[2,12975570,1.42711,1],[2,13598397,0.751918,1],[2,13598397,0.721228,1],[2,13598397,0.690537,1],[2,4463596,4.925831,1],[2,18165798,4.618926,1],[2,3425550,3.514066,1],[2,13183179,1.856777,1],[2,13183179,1.826087,1],[2,13598397,0.352941,1],[2,12975570,1.549872,1],[2,13598397,0.168798,1],[2,18165798,4.710997,1],[2,13598397,0.107417,1],[2,4463596,4.373402,1],[2,18165798,4.741688,1],[2,4463596,4.342711,1],[2,17542970,2.194373,1],[2,16504925,1.549872,1],[2,16712534,1.672634,1],[2,17542970,2.255754,1],[2,4463596,2.286445,1],[2,12767961,2.317136,1],[2,17542970,2.347826,1],[2,17542970,2.409207,1],[2,16504925,1.703325,1],[2,17542970,2.439898,1],[2,17542970,2.470588,1],[2,5294032,2.163683,1],[2,13183179,1.304348,1],[2,17542970,2.531969,1],[2,5294032,2.102302,1],[2,16504925,1.887468,1],[2,4463596,2.163683,1],[2,17542970,2.59335,1],[2,14013615,0.475703,1],[2,7370124,2.56266,1],[2,7162514,1.242967,1],[2,18788625,1.335038,1],[2,4463596,2.040921,1],[2,4463596,2.01023,1],[2,16504925,1.97954,1],[2,4463596,1.948849,1],[2,13183179,1.212276,1],[2,4463596,1.918159,1],[2,16504925,2.071611,1],[2,13183179,1.181586,1],[2,5294032,2.01023,1],[2,3425550,1.887468,1],[2,17542970,1.304348,1],[2,12975570,2.470588,1],[2,13183179,4.097187,1],[2,12975570,2.654731,1],[2,12975570,2.838875,1],[2,17542970,1.488491,1],[2,7162514,4.496164,1],[2,16712534,1.242967,1],[2,17542970,1.519182,1],[2,14013615,2.378517,1],[2,16712534,1.273657,1],[2,17542970,1.580563,1],[2,16712534,1.335038,1],[2,17542970,1.672634,1],[2,7370124,2.716113,1],[2,16712534,1.365729,1],[2,17542970,1.764706,1],[2,4463596,2.56266,1],[2,16712534,1.396419,1],[2,18788625,1.089514,1],[2,18788625,1.120205,1],[2,16712534,1.42711,1],[2,16712534,1.488491,1],[2,4463596,2.531969,1],[2,4463596,2.501279,1],[2,4463596,2.470588,1],[2,18788625,1.181586,1],[2,13183179,1.396419,1],[2,7370124,2.654731,1],[2,17542970,2.132992,1],[2,16504925,1.488491,1],[2,17542970,2.163683,1],[2,8200560,2.470588,1],[2,13598397,3.14578,1],[2,8200560,2.531969,1],[2,18165798,4.097187,1],[2,8200560,2.59335,1],[2,7162514,1.948849,1],[2,13598397,3.053708,1],[2,8200560,2.654731,1],[2,13598397,3.023018,1],[2,3425550,2.132992,1],[2,13183179,2.225064,1],[2,18165798,4.158568,1],[2,7162514,1.887468,1],[2,13598397,2.930946,1],[2,8200560,2.746803,1],[2,13598397,2.838875,1],[2,18165798,4.189258,1],[2,7577733,4.127877,1],[2,13598397,2.685422,1],[2,7162514,1.856777,1],[2,13183179,2.163683,1],[2,12767961,2.01023,1],[2,13598397,2.409207,1],[2,12767961,2.040921,1],[2,8200560,3.023018,1],[2,13183179,2.102302,1],[2,13598397,2.286445,1],[2,13598397,2.194373,1],[2,8200560,3.084399,1],[2,7162514,1.611253,1],[2,14013615,2.255754,1],[2,7577733,4.496164,1],[2,7577733,2.654731,1],[2,8200560,1.948849,1],[2,17127752,1.457801,1],[2,7577733,2.716113,1],[2,3425550,2.317136,1],[2,7577733,2.838875,1],[2,14013615,2.071611,1],[2,7577733,2.930946,1],[2,8200560,2.071611,1],[2,8200560,2.102302,1],[2,19203843,1.058824,1],[2,13183179,2.317136,1],[2,7577733,3.14578,1],[2,12767961,1.242967,1],[2,8200560,2.194373,1],[2,3425550,2.255754,1],[2,7162514,2.040921,1],[2,8200560,2.286445,1],[2,14013615,2.163683,1],[2,13598397,3.913043,1],[2,18165798,1.089514,1],[2,13598397,3.790281,1],[2,18165798,0.87468,1],[2,13598397,3.69821,1],[2,7577733,3.575448,1],[2,13598397,3.575448,1],[2,13598397,3.544757,1],[2,18165798,4.005115,1],[2,18165798,4.035806,1],[2,7577733,3.69821,1],[2,13598397,3.360614,1],[2,13598397,3.299233,1],[2,13598397,1.918159,1],[2,13598397,1.273657,1],[2,3217941,3.974425,1],[2,3217941,4.526854,1],[2,3217941,4.005115,1],[2,13598397,1.887468,1],[2,12975570,1.089514,1],[2,13598397,1.856777,1],[2,13598397,1.304348,1],[2,13598397,1.365729,1],[2,3425550,3.483376,1],[2,13598397,1.396419,1],[2,13598397,1.734015,1],[2,12975570,1.058824,1],[2,12975570,0.87468,1],[2,13598397,1.703325,1],[2,13183179,1.97954,1],[2,14013615,1.273657,1],[2,3425550,1.97954,1],[2,18165798,4.465473,1],[2,14013615,1.058824,1],[2,13183179,3.636829,1],[2,12975570,1.150895,1],[2,8408169,1.641944,1],[2,13598397,2.01023,1],[2,3217941,4.618926,1],[2,13598397,2.071611,1],[2,21279934,1.580563,2],[2,6747296,2.470588,2],[2,21279934,1.856777,2],[2,21279934,1.519182,2],[2,21279934,0.506394,2],[2,9238606,2.900256,2],[2,21279934,3.207161,2],[2,21279934,2.992327,2],[2,21279934,5.263427,2],[2,14013615,2.409207,2],[2,21279934,0.567775,2],[2,21279934,3.299233,2],[2,21279934,3.514066,2],[2,9238606,3.514066,2],[2,14013615,2.531969,2],[2,21279934,4.097187,2],[2,14636443,1.120205,2],[2,13183179,0.230179,2],[2,6747296,4.158568,2],[2,21279934,3.11509,2],[2,7992951,1.089514,2],[2,21279934,5.41688,2],[2,13183179,1.058824,2],[2,21279934,5.324808,2],[2,21279934,3.14578,2],[2,21279934,1.918159,2],[2,14636443,0.751918,2],[2,21279934,1.887468,2],[2,21279934,1.795396,2],[2,21279934,1.826087,2],[2,9238606,3.69821,2],[2,9238606,2.869565,2],[2,14013615,2.102302,2],[2,18165798,3.023018,2],[2,13183179,1.887468,2],[2,13183179,1.948849,2],[2,18165798,3.053708,2],[2,14636443,1.150895,2],[2,6747296,3.023018,2],[2,14013615,2.225064,2],[2,6747296,3.14578,2],[2,13183179,1.519182,2],[2,9238606,4.189258,2],[2,6747296,3.851662,2],[2,6747296,3.820972,2],[2,13183179,2.040921,2],[2,14636443,1.028133,2],[2,21279934,2.531969,2],[2,21279934,1.42711,2],[2,6747296,3.7289,2],[2,13183179,1.611253,2],[2,21279934,1.365729,2],[2,21279934,0.782609,2],[2,14636443,1.580563,2],[2,21279934,5.017903,2],[2,6747296,2.654731,2],[2,21279934,1.212276,2],[2,14013615,2.347826,2],[2,13183179,1.734015,2],[2,21279934,0.84399,2],[2,21279934,5.754476,2],[2,6747296,3.268542,2],[2,21279934,2.654731,2],[2,13183179,2.255754,2],[2,14013615,1.703325,2],[2,21279934,1.488491,2],[2,9238606,3.452685,2],[2,21279934,4.158568,2],[2,21279934,2.930946,2],[2,9238606,3.360614,2],[2,21279934,4.649616,2],[2,14636443,0.905371,2],[2,21279934,0.690537,2],[2,21279934,2.01023,2],[2,14636443,1.856777,2],[2,21279934,2.102302,2],[2,6747296,2.56266,2],[2,14636443,1.764706,2],[2,14013615,2.01023,2],[2,13183179,1.488491,2],[2,14013615,1.887468,2],[2,18165798,4.404092,2],[2,21279934,5.785166,2],[2,21279934,2.163683,2],[2,7992951,0.721228,2],[2,6747296,2.961637,2],[2,14013615,1.826087,2],[2,7992951,0.905371,2],[2,21279934,5.048593,2],[2,2179896,1.42711,2],[2,2179896,1.396419,2],[2,2179896,1.304348,2],[2,2179896,1.181586,2],[2,2179896,0.936061,2],[2,12975570,1.273657,2],[2,9030997,0.629156,2],[2,9030997,1.028133,2],[2,9030997,1.058824,2],[2,9030997,1.150895,2],[2,9030997,1.672634,2],[2,9030997,1.826087,2],[2,9030997,1.948849,2],[2,9030997,2.040921,2],[2,12975570,1.611253,2],[2,12975570,1.641944,2],[2,9030997,2.255754,2],[2,9030997,2.439898,2],[2,9030997,2.470588,2],[2,9030997,2.59335,2],[2,20657107,1.856777,2],[2,20657107,2.01023,2],[2,20657107,2.040921,2],[2,20657107,2.102302,2],[2,2179896,2.56266,2],[2,20657107,2.225064,2],[2,20657107,2.286445,2],[2,2179896,2.470588,2],[2,2179896,2.409207,2],[2,2179896,2.347826,2],[2,2179896,2.317136,2],[2,12975570,0.659847,2],[2,2179896,2.194373,2],[2,2179896,2.102302,2],[2,2179896,2.01023,2],[2,2179896,1.97954,2],[2,20657107,3.14578,2],[2,2179896,1.826087,2],[2,2179896,1.764706,2],[2,2179896,1.549872,2],[2,11729915,1.918159,2],[2,11729915,1.826087,2],[2,11729915,1.703325,2],[2,16712534,2.685422,2],[2,11729915,1.457801,2],[2,16712534,2.716113,2],[2,20864716,0.751918,2],[2,20864716,0.87468,2],[2,20864716,0.997442,2],[2,20864716,1.028133,2],[2,11729915,0.936061,2],[2,14013615,3.575448,2],[2,20864716,1.488491,2],[2,20864716,1.519182,2],[2,20864716,1.703325,2],[2,20864716,1.826087,2],[2,20864716,1.856777,2],[2,20864716,1.887468,2],[2,20864716,1.97954,2],[2,20864716,2.132992,2],[2,9030997,2.624041,2],[2,9030997,2.685422,2],[2,9030997,2.716113,2],[2,9030997,2.777494,2],[2,12975570,1.826087,2],[2,9030997,2.961637,2],[2,9030997,3.084399,2],[2,16712534,0.475703,2],[2,9030997,3.391304,2],[2,16712534,0.751918,2],[2,16712534,1.150895,2],[2,11729915,3.176471,2],[2,16712534,1.611253,2],[2,11729915,2.56266,2],[2,16712534,1.703325,2],[2,16712534,1.795396,2],[2,16712534,1.948849,2],[2,16712534,2.040921,2],[2,16712534,2.163683,2],[2,11729915,2.132992,2],[2,11729915,1.97954,2],[2,20449498,3.207161,2],[2,3633160,1.212276,2],[2,7162514,2.930946,2],[2,16089706,1.335038,2],[2,16089706,1.304348,2],[2,3633160,1.304348,2],[2,3633160,1.335038,2],[2,3633160,1.396419,2],[2,16089706,1.273657,2],[2,11937524,2.961637,2],[2,11937524,2.838875,2],[2,7162514,2.961637,2],[2,11937524,2.716113,2],[2,3633160,1.795396,2],[2,11937524,2.470588,2],[2,3633160,2.01023,2],[2,11937524,2.071611,2],[2,11937524,1.672634,2],[2,11937524,1.549872,2],[2,11937524,1.120205,2],[2,20449498,1.242967,2],[2,20449498,1.273657,2],[2,20449498,1.488491,2],[2,20449498,1.549872,2],[2,20449498,1.856777,2],[2,20449498,1.887468,2],[2,16089706,1.856777,2],[2,20449498,2.163683,2],[2,20449498,2.194373,2],[2,20449498,2.225064,2],[2,3633160,0.659847,2],[2,20449498,2.409207,2],[2,20449498,2.439898,2],[2,3633160,0.782609,2],[2,3633160,0.813299,2],[2,20449498,2.654731,2],[2,16089706,1.549872,2],[2,3633160,0.936061,2],[2,20449498,2.869565,2],[2,3633160,1.089514,2],[2,11937524,3.391304,2],[2,18581016,2.132992,2],[2,18581016,2.071611,2],[2,18581016,2.040921,2],[2,12975570,0.29156,2],[2,18581016,1.672634,2],[2,2179896,4.005115,2],[2,18581016,1.396419,2],[2,18581016,1.089514,2],[2,18581016,1.028133,2],[2,18581016,0.87468,2],[2,2179896,3.023018,2],[2,20657107,0.537084,2],[2,20657107,0.813299,2],[2,20657107,0.966752,2],[2,20657107,1.181586,2],[2,20657107,1.396419,2],[2,20657107,1.488491,2],[2,20657107,1.519182,2],[2,20657107,1.580563,2],[2,2179896,2.746803,2],[2,16089706,0.782609,2],[2,16089706,0.598465,2],[2,3633160,2.439898,2],[2,16089706,0.475703,2],[2,3633160,2.501279,2],[2,3633160,2.56266,2],[2,3633160,2.654731,2],[2,3633160,2.869565,2],[2,3633160,2.930946,2],[2,3633160,2.961637,2],[2,3633160,3.299233,2],[2,3633160,3.483376,2],[2,3633160,4.035806,2],[2,18581016,2.59335,2],[2,18581016,2.501279,2],[2,2179896,4.895141,2],[2,2179896,4.86445,2],[2,2179896,4.83376,2],[2,2179896,4.772379,2],[2,18581016,2.225064,2],[2,18581016,2.194373,2],[2,21072325,2.654731,2],[2,15882097,1.856777,2],[2,5086423,1.273657,2],[2,5086423,1.242967,2],[2,3840769,3.14578,2],[2,5086423,1.212276,2],[2,15882097,1.764706,2],[2,21072325,3.053708,2],[2,15882097,1.703325,2],[2,21072325,3.391304,2],[2,5086423,1.120205,2],[2,3840769,3.483376,2],[2,5086423,0.997442,2],[2,21072325,4.219949,2],[2,5086423,0.936061,2],[2,21072325,4.31202,2],[2,21072325,4.618926,2],[2,5086423,0.87468,2],[2,7992951,3.207161,2],[2,5086423,0.84399,2],[2,21072325,0.813299,2],[2,21072325,0.905371,2],[2,15882097,2.163683,2],[2,3840769,2.654731,2],[2,5086423,1.457801,2],[2,15882097,2.102302,2],[2,21072325,1.611253,2],[2,3840769,2.746803,2],[2,21072325,1.887468,2],[2,21072325,1.918159,2],[2,21072325,1.948849,2],[2,21072325,1.97954,2],[2,21072325,2.040921,2],[2,21072325,2.071611,2],[2,15882097,2.071611,2],[2,15882097,2.040921,2],[2,21072325,2.409207,2],[2,15882097,2.01023,2],[2,5086423,1.365729,2],[2,15882097,1.948849,2],[2,1764677,3.11509,2],[2,1764677,2.930946,2],[2,11522306,1.335038,2],[2,11522306,1.304348,2],[2,1764677,2.838875,2],[2,11522306,1.212276,2],[2,1764677,2.56266,2],[2,11522306,1.120205,2],[2,7992951,1.703325,2],[2,1764677,2.255754,2],[2,7992951,1.580563,2],[2,1764677,1.97954,2],[2,1764677,1.918159,2],[2,7992951,1.488491,2],[2,7992951,1.396419,2],[2,1764677,1.519182,2],[2,1764677,0.997442,2],[2,1764677,0.905371,2],[2,1764677,0.87468,2],[2,7992951,1.242967,2],[2,5086423,0.813299,2],[2,21072325,6.184143,2],[2,9238606,1.028133,2],[2,9238606,1.365729,2],[2,9238606,1.488491,2],[2,9238606,1.734015,2],[2,9238606,1.795396,2],[2,7992951,2.685422,2],[2,7992951,2.624041,2],[2,9238606,1.918159,2],[2,11522306,2.59335,2],[2,7992951,2.56266,2],[2,9238606,2.163683,2],[2,9238606,2.286445,2],[2,11522306,1.97954,2],[2,7992951,2.163683,2],[2,9238606,2.347826,2],[2,11522306,1.856777,2],[2,11522306,1.734015,2],[2,9238606,2.439898,2],[2,7992951,1.887468,2],[2,3840769,0.84399,2],[2,5709251,1.304348,2],[2,3840769,0.87468,2],[2,3840769,0.997442,2],[2,1972287,2.685422,2],[2,3840769,1.089514,2],[2,1972287,2.56266,2],[2,3840769,1.181586,2],[2,5709251,1.519182,2],[2,1972287,2.347826,2],[2,5709251,1.611253,2],[2,5709251,1.641944,2],[2,1972287,2.071611,2],[2,1972287,1.856777,2],[2,3840769,1.457801,2],[2,3840769,1.488491,2],[2,3840769,1.549872,2],[2,3840769,1.580563,2],[2,5709251,1.795396,2],[2,3840769,1.611253,2],[2,20864716,2.194373,2],[2,20864716,2.286445,2],[2,20864716,2.317136,2],[2,20864716,2.347826,2],[2,5086423,2.01023,2],[2,5086423,1.918159,2],[2,20864716,2.501279,2],[2,20864716,2.59335,2],[2,20864716,2.624041,2],[2,20864716,2.685422,2],[2,5086423,1.795396,2],[2,20864716,3.421995,2],[2,20864716,3.575448,2],[2,3840769,0.383632,2],[2,18373407,4.526854,2],[2,3840769,0.598465,2],[2,5086423,1.764706,2],[2,5709251,1.120205,2],[2,20864716,5.232737,2],[2,3840769,0.690537,2],[2,1972287,3.11509,2],[2,5709251,2.501279,2],[2,3840769,2.040921,2],[2,3840769,2.071611,2],[2,3840769,2.132992,2],[2,18373407,2.01023,2],[2,18373407,1.948849,2],[2,5709251,3.237852,2],[2,18373407,1.856777,2],[2,18373407,1.42711,2],[2,3840769,2.317136,2],[2,18373407,1.365729,2],[2,18373407,1.242967,2],[2,18373407,1.150895,2],[2,18373407,0.966752,2],[2,15882097,2.654731,2],[2,15882097,2.378517,2],[2,21072325,0.322251,2],[2,21072325,0.352941,2],[2,21072325,0.659847,2],[2,3840769,2.378517,2],[2,1972287,1.488491,2],[2,3840769,1.703325,2],[2,1972287,1.365729,2],[2,1972287,1.335038,2],[2,18373407,3.084399,2],[2,1972287,1.150895,2],[2,1972287,1.058824,2],[2,1972287,1.028133,2],[2,1972287,0.997442,2],[2,1972287,0.87468,2],[2,1972287,0.813299,2],[2,5709251,1.887468,2],[2,1972287,0.721228,2],[2,1972287,0.322251,2],[2,1972287,0.26087,2],[2,18373407,2.900256,2],[2,5709251,2.040921,2],[2,3840769,1.856777,2],[2,5709251,2.163683,2],[2,5086423,1.672634,2],[2,18373407,2.685422,2],[2,15259270,0.87468,2],[2,519023,3.69821,2],[2,519023,3.329923,2],[2,519023,2.961637,2],[2,7370124,2.624041,2],[2,4463596,2.317136,2],[2,519023,2.194373,2],[2,4463596,2.409207,2],[2,519023,1.97954,2],[2,519023,1.918159,2],[2,22940807,0.199488,2],[2,22940807,0.721228,2],[2,22940807,0.751918,2],[2,22940807,0.936061,2],[2,17542970,1.611253,2],[2,22940807,1.242967,2],[2,17542970,1.549872,2],[2,519023,1.764706,2],[2,519023,1.734015,2],[2,22940807,1.488491,2],[2,22940807,1.549872,2],[2,17542970,1.457801,2],[2,17542970,1.365729,2],[2,17542970,1.335038,2],[2,6539687,2.102302,2],[2,6539687,2.040921,2],[2,4463596,0.813299,2],[2,6539687,1.764706,2],[2,6539687,1.519182,2],[2,6539687,1.457801,2],[2,6539687,1.396419,2],[2,6539687,1.365729,2],[2,6539687,1.335038,2],[2,6539687,1.304348,2],[2,6539687,1.242967,2],[2,6539687,0.905371,2],[2,4463596,1.058824,2],[2,6539687,0.567775,2],[2,15259270,2.317136,2],[2,4463596,1.304348,2],[2,4463596,1.42711,2],[2,4463596,1.580563,2],[2,15259270,1.734015,2],[2,7370124,2.470588,2],[2,15259270,1.549872,2],[2,4463596,1.856777,2],[2,15259270,1.304348,2],[2,4463596,1.887468,2],[2,15259270,1.242967,2],[2,22940807,5.048593,2],[2,4463596,2.808184,2],[2,4463596,3.176471,2],[2,7577733,5.263427,2],[2,22940807,5.693095,2],[2,13598397,0.138107,2],[2,13598397,0.322251,2],[2,13598397,0.414322,2],[2,13598397,0.445013,2],[2,13598397,0.475703,2],[2,13598397,0.506394,2],[2,13598397,0.782609,2],[2,13598397,0.905371,2],[2,22940807,6.859335,2],[2,10069042,0.84399,2],[2,10069042,1.181586,2],[2,10069042,1.212276,2],[2,10069042,1.488491,2],[2,10069042,1.549872,2],[2,13598397,1.242967,2],[2,10484260,3.084399,2],[2,10069042,1.734015,2],[2,10069042,1.826087,2],[2,10069042,1.856777,2],[2,22940807,1.887468,2],[2,22940807,2.040921,2],[2,22940807,2.071611,2],[2,22940807,2.102302,2],[2,22940807,2.132992,2],[2,519023,1.519182,2],[2,22940807,2.225064,2],[2,17542970,0.997442,2],[2,22940807,2.501279,2],[2,22940807,2.56266,2],[2,519023,1.365729,2],[2,519023,1.335038,2],[2,22940807,2.869565,2],[2,22940807,2.961637,2],[2,519023,1.150895,2],[2,519023,0.997442,2],[2,519023,0.936061,2],[2,519023,0.813299,2],[2,519023,0.659847,2],[2,519023,0.445013,2],[2,519023,0.414322,2],[2,519023,0.26087,2],[2,22940807,4.557545,2],[2,7370124,2.777494,2],[2,7370124,2.838875,2],[2,7785342,0.506394,2],[2,7785342,0.445013,2],[2,14844052,2.930946,2],[2,14844052,3.053708,2],[2,726632,5.324808,2],[2,6124469,4.434783,2],[2,726632,4.86445,2],[2,726632,4.649616,2],[2,726632,4.465473,2],[2,6124469,4.772379,2],[2,726632,4.31202,2],[2,726632,4.219949,2],[2,726632,4.158568,2],[2,726632,3.14578,2],[2,726632,3.023018,2],[2,726632,2.869565,2],[2,726632,2.746803,2],[2,726632,2.685422,2],[2,726632,2.59335,2],[2,7370124,1.488491,2],[2,4878814,3.207161,2],[2,7370124,1.580563,2],[2,726632,1.948849,2],[2,726632,1.918159,2],[2,22525589,1.089514,2],[2,22525589,1.181586,2],[2,22525589,1.242967,2],[2,17750579,0.997442,2],[2,22525589,1.641944,2],[2,14844052,2.347826,2],[2,17750579,0.782609,2],[2,22525589,1.734015,2],[2,14844052,2.409207,2],[2,17750579,0.629156,2],[2,22525589,3.421995,2],[2,13390788,3.14578,2],[2,7785342,1.273657,2],[2,9861433,1.150895,2],[2,6124469,3.575448,2],[2,7785342,1.212276,2],[2,13390788,3.421995,2],[2,7785342,1.181586,2],[2,9861433,1.457801,2],[2,7785342,1.089514,2],[2,7785342,1.058824,2],[2,9861433,1.764706,2],[2,6124469,3.69821,2],[2,7785342,0.936061,2],[2,7785342,0.87468,2],[2,22733198,1.826087,2],[2,22733198,1.918159,2],[2,22733198,2.040921,2],[2,4878814,1.150895,2],[2,22733198,2.225064,2],[2,22733198,2.255754,2],[2,10691869,1.918159,2],[2,22733198,2.317136,2],[2,4878814,1.120205,2],[2,10691869,1.887468,2],[2,4878814,1.089514,2],[2,10691869,1.764706,2],[2,22733198,2.685422,2],[2,10691869,1.672634,2],[2,22733198,2.838875,2],[2,4878814,0.659847,2],[2,10691869,1.335038,2],[2,10691869,1.212276,2],[2,10691869,1.120205,2],[2,10691869,1.058824,2],[2,10691869,0.905371,2],[2,6124469,7.258312,2],[2,4463596,0.537084,2],[2,6539687,2.347826,2],[2,6539687,2.132992,2],[2,726632,1.856777,2],[2,726632,1.764706,2],[2,7370124,1.948849,2],[2,4878814,2.654731,2],[2,726632,1.335038,2],[2,726632,1.242967,2],[2,726632,1.089514,2],[2,4878814,2.501279,2],[2,726632,0.87468,2],[2,726632,0.598465,2],[2,726632,0.352941,2],[2,10691869,2.56266,2],[2,4878814,1.948849,2],[2,7370124,2.378517,2],[2,4878814,1.795396,2],[2,4878814,1.611253,2],[2,4878814,1.457801,2],[2,22733198,1.028133,2],[2,22733198,1.181586,2],[2,22733198,1.212276,2],[2,22733198,1.304348,2],[2,22733198,1.365729,2],[2,22733198,1.396419,2],[2,4878814,1.304348,2],[2,22733198,1.703325,2],[2,23356025,0.87468,2],[2,17335361,1.242967,2],[2,23356025,1.089514,2],[2,17335361,1.212276,2],[2,23356025,1.150895,2],[2,17335361,1.150895,2],[2,23356025,1.672634,2],[2,23356025,1.826087,2],[2,23356025,1.97954,2],[2,23356025,2.163683,2],[2,23356025,2.225064,2],[2,23356025,2.255754,2],[2,23356025,2.439898,2],[2,23356025,3.023018,2],[2,23356025,3.329923,2],[2,4671205,0.475703,2],[2,15051661,0.782609,2],[2,15051661,0.87468,2],[2,4671205,0.936061,2],[2,4671205,0.966752,2],[2,15051661,1.212276,2],[2,10276651,3.759591,2],[2,15051661,1.304348,2],[2,4671205,1.120205,2],[2,311414,0.322251,2],[2,6332078,2.102302,2],[2,7577733,0.506394,2],[2,6332078,2.470588,2],[2,6332078,2.501279,2],[2,6332078,2.56266,2],[2,6332078,2.654731,2],[2,6332078,2.777494,2],[2,6332078,2.869565,2],[2,6332078,3.207161,2],[2,6332078,3.299233,2],[2,6332078,3.360614,2],[2,17335361,2.501279,2],[2,17127752,2.347826,2],[2,17335361,2.255754,2],[2,17335361,2.225064,2],[2,17335361,2.040921,2],[2,17335361,1.97954,2],[2,17335361,1.703325,2],[2,17335361,1.611253,2],[2,17335361,1.549872,2],[2,17335361,1.488491,2],[2,17335361,1.365729,2],[2,23356025,0.414322,2],[2,23356025,0.567775,2],[2,4671205,2.347826,2],[2,4671205,2.56266,2],[2,15051661,1.918159,2],[2,4671205,2.685422,2],[2,4671205,2.777494,2],[2,103805,2.194373,2],[2,103805,2.163683,2],[2,15051661,2.01023,2],[2,103805,2.102302,2],[2,103805,2.01023,2],[2,103805,1.97954,2],[2,15051661,2.378517,2],[2,103805,1.826087,2],[2,103805,1.764706,2],[2,103805,1.580563,2],[2,103805,1.519182,2],[2,103805,1.488491,2],[2,13806006,0.445013,2],[2,13806006,0.138107,2],[2,13806006,0.046036,2],[2,13806006,0.015345,2],[2,103805,0.782609,2],[2,103805,0.751918,2],[2,103805,0.629156,2],[2,10276651,3.452685,2],[2,4671205,1.212276,2],[2,4671205,1.304348,2],[2,10276651,3.14578,2],[2,15051661,1.519182,2],[2,10276651,3.023018,2],[2,10276651,2.992327,2],[2,10276651,2.961637,2],[2,10276651,2.869565,2],[2,4671205,1.580563,2],[2,10276651,2.624041,2],[2,10276651,2.56266,2],[2,23356025,6.613811,2],[2,10276651,2.439898,2],[2,10276651,2.317136,2],[2,4671205,1.856777,2],[2,10276651,2.132992,2],[2,10276651,1.887468,2],[2,4671205,1.948849,2],[2,10276651,1.764706,2],[2,10276651,1.457801,2],[2,4671205,2.132992,2],[2,10276651,0.936061,2],[2,10276651,0.87468,2],[2,15051661,1.672634,2],[2,23148416,0.84399,2],[2,23148416,0.966752,2],[2,23148416,1.028133,2],[2,23148416,1.304348,2],[2,23148416,1.396419,2],[2,23148416,1.457801,2],[2,23148416,1.488491,2],[2,23148416,1.611253,2],[2,23148416,1.672634,2],[2,23148416,1.948849,2],[2,6332078,0.506394,2],[2,23148416,2.501279,2],[2,23148416,2.961637,2],[2,6332078,0.721228,2],[2,23148416,3.360614,2],[2,6332078,0.782609,2],[2,23148416,3.452685,2],[2,23148416,3.575448,2],[2,6332078,0.84399,2],[2,17127752,1.089514,2],[2,17127752,1.150895,2],[2,17127752,1.181586,2],[2,23148416,3.913043,2],[2,17127752,1.273657,2],[2,13598397,1.519182,2],[2,10069042,1.97954,2],[2,10069042,2.01023,2],[2,13598397,1.549872,2],[2,10484260,2.439898,2],[2,13598397,1.764706,2],[2,10484260,2.347826,2],[2,13598397,1.97954,2],[2,10484260,2.132992,2],[2,13598397,2.163683,2],[2,10484260,2.040921,2],[2,10484260,2.01023,2],[2,13598397,2.317136,2],[2,10484260,1.887468,2],[2,13598397,2.378517,2],[2,7577733,4.342711,2],[2,10484260,1.641944,2],[2,13598397,2.59335,2],[2,10484260,1.42711,2],[2,10484260,1.273657,2],[2,10484260,1.242967,2],[2,13598397,2.777494,2],[2,10069042,2.777494,2],[2,10069042,2.900256,2],[2,23148416,0.567775,2],[2,7577733,1.42711,2],[2,7577733,1.396419,2],[2,6332078,1.795396,2],[2,6332078,1.826087,2],[2,7577733,1.181586,2],[2,7577733,1.150895,2],[2,6332078,1.887468,2],[2,311414,2.347826,2],[2,6332078,1.948849,2],[2,7577733,1.089514,2],[2,311414,2.225064,2],[2,311414,1.97954,2],[2,311414,1.948849,2],[2,23148416,7.289003,2],[2,311414,1.887468,2],[2,311414,1.795396,2],[2,311414,1.764706,2],[2,311414,1.611253,2],[2,311414,1.580563,2],[2,311414,1.457801,2],[2,311414,1.396419,2],[2,311414,1.335038,2],[2,311414,0.84399,2],[2,311414,0.721228,2],[2,311414,0.598465,2],[2,17127752,1.335038,2],[2,17127752,1.365729,2],[2,23148416,4.526854,2],[2,6332078,1.242967,2],[2,17127752,1.519182,2],[2,311414,3.790281,2],[2,17127752,1.549872,2],[2,6332078,1.304348,2],[2,311414,3.636829,2],[2,6332078,1.365729,2],[2,7577733,2.163683,2],[2,23148416,5.386189,2],[2,17127752,1.764706,2],[2,23148416,5.478261,2],[2,7577733,2.071611,2],[2,6332078,1.488491,2],[2,17127752,1.826087,2],[2,7577733,1.948849,2],[2,7577733,1.918159,2],[2,7577733,1.734015,2],[2,7577733,1.672634,2],[2,7577733,1.611253,2],[2,23148416,6.061381,2],[2,7577733,1.549872,2],[2,7577733,1.457801,2],[2,4048378,1.948849,2],[2,15674488,1.242967,2],[2,15674488,1.212276,2],[2,5916860,2.286445,2],[2,14013615,0.26087,2],[2,1349459,3.268542,2],[2,5916860,2.347826,2],[2,5916860,2.470588,2],[2,5916860,2.501279,2],[2,4048378,2.286445,2],[2,5916860,2.746803,2],[2,5916860,2.808184,2],[2,5916860,2.838875,2],[2,14013615,0.076726,2],[2,5916860,3.299233,2],[2,4048378,2.930946,2],[2,4048378,3.023018,2],[2,1349459,1.948849,2],[2,4048378,3.11509,2],[2,1349459,1.795396,2],[2,1349459,1.672634,2],[2,4048378,3.268542,2],[2,1349459,1.611253,2],[2,4048378,3.360614,2],[2,9446215,2.132992,2],[2,5916860,1.549872,2],[2,4048378,0.813299,2],[2,5916860,1.641944,2],[2,4048378,0.936061,2],[2,9446215,2.685422,2],[2,15674488,2.56266,2],[2,15674488,2.501279,2],[2,4048378,1.396419,2],[2,15674488,2.378517,2],[2,5916860,2.01023,2],[2,4048378,1.519182,2],[2,4048378,1.580563,2],[2,4048378,1.611253,2],[2,15674488,2.102302,2],[2,15674488,2.040921,2],[2,15674488,1.97954,2],[2,15674488,1.948849,2],[2,15674488,1.887468,2],[2,4048378,1.826087,2],[2,15674488,1.734015,2],[2,15674488,1.549872,2],[2,15674488,1.519182,2],[2,15674488,1.488491,2],[2,4048378,1.918159,2],[2,4048378,5.386189,2],[2,21902762,2.961637,2],[2,17958188,3.759591,2],[2,17958188,3.7289,2],[2,17958188,3.514066,2],[2,17958188,3.421995,2],[2,17958188,3.391304,2],[2,17958188,3.237852,2],[2,17958188,2.225064,2],[2,17958188,2.102302,2],[2,17958188,1.672634,2],[2,17958188,1.549872,2],[2,11107088,2.255754,2],[2,17958188,1.335038,2],[2,17958188,1.242967,2],[2,17958188,1.212276,2],[2,11107088,1.948849,2],[2,11107088,1.887468,2],[2,11107088,1.856777,2],[2,11107088,1.826087,2],[2,11107088,1.795396,2],[2,11107088,1.519182,2],[2,11107088,1.42711,2],[2,11107088,1.365729,2],[2,1349459,1.396419,2],[2,1349459,1.273657,2],[2,1349459,1.181586,2],[2,4048378,3.69821,2],[2,1349459,1.120205,2],[2,1349459,1.058824,2],[2,1349459,0.567775,2],[2,21902762,0.383632,2],[2,21902762,0.659847,2],[2,21902762,0.997442,2],[2,21902762,1.212276,2],[2,21902762,1.242967,2],[2,4048378,4.158568,2],[2,21902762,1.549872,2],[2,21902762,1.641944,2],[2,5916860,3.7289,2],[2,4048378,4.557545,2],[2,21902762,1.948849,2],[2,21902762,1.97954,2],[2,21902762,2.194373,2],[2,21902762,2.225064,2],[2,21902762,2.286445,2],[2,21902762,2.378517,2],[2,4048378,5.079284,2],[2,21902762,2.439898,2],[2,21487543,2.501279,2],[2,21487543,2.746803,2],[2,18165798,1.703325,2],[2,21487543,2.992327,2],[2,6747296,1.672634,2],[2,6747296,1.457801,2],[2,21487543,3.544757,2],[2,18165798,1.396419,2],[2,6747296,1.335038,2],[2,6747296,1.212276,2],[2,21487543,4.097187,2],[2,21487543,4.158568,2],[2,18165798,0.629156,2],[2,1557068,2.746803,2],[2,1557068,2.624041,2],[2,1557068,2.439898,2],[2,1557068,2.286445,2],[2,1557068,2.132992,2],[2,1557068,2.102302,2],[2,1557068,2.040921,2],[2,1557068,1.856777,2],[2,1557068,1.549872,2],[2,1557068,1.457801,2],[2,1557068,1.42711,2],[2,18165798,2.838875,2],[2,18165798,2.808184,2],[2,6747296,2.378517,2],[2,6747296,2.255754,2],[2,6747296,2.194373,2],[2,6747296,2.132992,2],[2,6747296,2.102302,2],[2,18165798,2.470588,2],[2,18165798,2.378517,2],[2,21487543,0.29156,2],[2,21487543,0.445013,2],[2,21487543,0.690537,2],[2,21487543,0.936061,2],[2,21487543,0.997442,2],[2,21487543,1.120205,2],[2,21487543,1.181586,2],[2,21487543,1.488491,2],[2,6747296,1.887468,2],[2,21487543,1.826087,2],[2,21487543,1.918159,2],[2,21487543,2.102302,2],[2,21487543,2.194373,2],[2,21487543,2.225064,2],[2,21487543,2.286445,2],[2,21487543,2.409207,2],[2,21695153,1.795396,2],[2,21695153,1.826087,2],[2,21695153,2.071611,2],[2,21695153,2.225064,2],[2,21695153,2.255754,2],[2,13183179,4.005115,2],[2,21695153,2.409207,2],[2,14013615,0.690537,2],[2,14013615,0.629156,2],[2,21695153,2.838875,2],[2,14013615,0.598465,2],[2,21695153,2.900256,2],[2,21695153,2.930946,2],[2,21695153,3.421995,2],[2,9446215,0.997442,2],[2,9446215,1.089514,2],[2,9446215,1.304348,2],[2,9446215,1.519182,2],[2,21695153,4.465473,2],[2,9446215,1.856777,2],[2,5916860,1.457801,2],[2,15674488,3.14578,2],[2,5916860,1.488491,2],[2,9446215,2.01023,2],[2,9446215,2.040921,2],[2,1557068,1.304348,2],[2,1557068,0.966752,2],[2,1557068,0.721228,2],[2,5916860,0.87468,2],[2,15674488,3.636829,2],[2,5916860,1.181586,2],[2,5916860,1.212276,2],[2,11314697,2.378517,2],[2,11314697,2.01023,2],[2,11314697,1.764706,2],[2,11314697,1.734015,2],[2,14013615,0.997442,2],[2,14013615,0.966752,2],[2,11314697,1.488491,2],[2,11314697,1.365729,2],[2,11314697,1.335038,2],[2,11314697,1.242967,2],[2,11314697,1.181586,2],[2,11314697,0.936061,2],[2,11314697,0.905371,2],[2,11314697,0.87468,2],[2,21695153,0.87468,2],[2,21695153,1.273657,2],[2,21695153,1.488491,2],[2,21695153,1.641944,2],[2,10899479,1.365729,2],[2,10899479,1.335038,2],[2,13390788,2.194373,2],[2,10899479,0.936061,2],[2,10899479,0.84399,2],[2,13390788,2.317136,2],[2,13390788,2.347826,2],[2,13390788,2.409207,2],[2,934241,3.974425,2],[2,7785342,1.703325,2],[2,13390788,2.531969,2],[2,934241,3.7289,2],[2,15466879,1.273657,2],[2,15466879,1.212276,2],[2,15466879,1.120205,2],[2,15466879,0.997442,2],[2,13390788,2.685422,2],[2,934241,3.023018,2],[2,934241,2.808184,2],[2,934241,2.746803,2],[2,7785342,1.611253,2],[2,934241,2.470588,2],[2,17750579,2.317136,2],[2,934241,2.409207,2],[2,10899479,1.97954,2],[2,22317980,0.629156,2],[2,22317980,0.659847,2],[2,13390788,1.365729,2],[2,13390788,1.42711,2],[2,10899479,1.918159,2],[2,13390788,1.457801,2],[2,22317980,1.519182,2],[2,13390788,1.549872,2],[2,10899479,1.826087,2],[2,22317980,1.795396,2],[2,22317980,1.826087,2],[2,22317980,1.856777,2],[2,22317980,1.887468,2],[2,22317980,1.918159,2],[2,13390788,1.611253,2],[2,22317980,1.97954,2],[2,22317980,2.071611,2],[2,22317980,2.102302,2],[2,22317980,2.347826,2],[2,13390788,1.734015,2],[2,13390788,1.856777,2],[2,10899479,1.519182,2],[2,13390788,2.040921,2],[2,10899479,1.42711,2],[2,17750579,1.672634,2],[2,6124469,2.102302,2],[2,17750579,1.611253,2],[2,6124469,2.255754,2],[2,17750579,1.519182,2],[2,14844052,2.01023,2],[2,6124469,2.439898,2],[2,6124469,2.501279,2],[2,6124469,2.531969,2],[2,14844052,2.040921,2],[2,6124469,2.624041,2],[2,6124469,2.716113,2],[2,14844052,2.132992,2],[2,6124469,2.808184,2],[2,6124469,2.900256,2],[2,17750579,1.335038,2],[2,6124469,3.023018,2],[2,7785342,1.457801,2],[2,7785342,1.42711,2],[2,17750579,1.120205,2],[2,22525589,0.751918,2],[2,22525589,0.84399,2],[2,22525589,0.905371,2],[2,6124469,3.176471,2],[2,7785342,1.365729,2],[2,934241,2.378517,2],[2,13390788,2.746803,2],[2,934241,2.225064,2],[2,934241,2.163683,2],[2,934241,1.887468,2],[2,17750579,1.948849,2],[2,934241,1.641944,2],[2,17750579,1.887468,2],[2,934241,1.089514,2],[2,934241,1.058824,2],[2,934241,0.721228,2],[2,934241,0.29156,2],[2,6124469,1.058824,2],[2,17750579,1.795396,2],[2,6124469,1.242967,2],[2,6124469,1.273657,2],[2,6124469,1.457801,2],[2,6124469,1.580563,2],[2,6124469,1.611253,2],[2,14844052,1.948849,2],[2,6124469,1.734015,2],[2,6124469,1.764706,2],[2,6124469,1.795396,2],[2,17750579,1.734015,2],[2,6124469,2.01023,2],[2,1141850,3.14578,2],[2,22110371,1.948849,2],[2,22110371,1.97954,2],[2,22110371,2.01023,2],[2,22110371,2.132992,2],[2,22110371,2.286445,2],[2,22110371,2.347826,2],[2,7785342,3.882353,2],[2,1141850,2.869565,2],[2,1141850,2.838875,2],[2,16920143,3.421995,2],[2,22110371,2.716113,2],[2,22110371,2.808184,2],[2,22110371,3.053708,2],[2,9653824,1.611253,2],[2,7785342,2.777494,2],[2,1141850,1.97954,2],[2,1141850,1.948849,2],[2,1141850,1.887468,2],[2,22110371,4.066496,2],[2,7785342,1.97954,2],[2,7785342,1.918159,2],[2,1141850,1.734015,2],[2,1141850,1.488491,2],[2,11107088,1.335038,2],[2,11107088,0.966752,2],[2,17958188,0.997442,2],[2,16920143,0.966752,2],[2,16920143,1.120205,2],[2,16920143,1.181586,2],[2,16920143,1.212276,2],[2,16920143,1.365729,2],[2,16920143,1.519182,2],[2,16920143,1.580563,2],[2,16920143,1.672634,2],[2,16920143,1.948849,2],[2,16920143,2.132992,2],[2,1141850,3.882353,2],[2,16920143,2.347826,2],[2,1141850,3.667519,2],[2,16920143,2.378517,2],[2,1141850,3.483376,2],[2,22110371,0.905371,2],[2,22110371,1.335038,2],[2,16920143,2.654731,2],[2,22110371,1.519182,2],[2,22110371,1.549872,2],[2,16920143,2.746803,2],[2,22110371,1.672634,2],[2,4255987,1.549872,2],[2,4255987,1.580563,2],[2,13390788,0.598465,2],[2,9653824,4.189258,2],[2,4255987,1.918159,2],[2,14844052,1.150895,2],[2,14844052,1.212276,2],[2,4255987,2.132992,2],[2,14844052,1.396419,2],[2,14844052,1.457801,2],[2,15466879,2.439898,2],[2,4255987,2.56266,2],[2,15466879,2.040921,2],[2,10899479,2.777494,2],[2,10899479,2.746803,2],[2,15466879,1.948849,2],[2,13390788,0.997442,2],[2,13390788,1.058824,2],[2,7785342,1.887468,2],[2,15466879,1.826087,2],[2,15466879,1.795396,2],[2,10899479,2.317136,2],[2,15466879,1.672634,2],[2,15466879,1.641944,2],[2,10899479,2.102302,2],[2,1141850,1.457801,2],[2,1141850,1.396419,2],[2,1141850,1.365729,2],[2,1141850,1.335038,2],[2,1141850,1.181586,2],[2,1141850,1.150895,2],[2,1141850,1.120205,2],[2,1141850,1.028133,2],[2,1141850,0.813299,2],[2,9653824,2.071611,2],[2,9653824,2.194373,2],[2,9653824,2.255754,2],[2,9653824,2.286445,2],[2,9653824,2.317136,2],[2,9653824,2.808184,2],[2,9653824,2.900256,2],[2,4255987,0.690537,2],[2,4255987,0.813299,2],[2,4255987,1.058824,2],[2,13390788,0.537084,2],[2,4255987,1.181586,2],[2,4255987,1.212276,2],[2,4255987,1.365729,2],[2,4255987,1.42711,2],[2,4255987,1.457801,2],[2,19411452,1.181586,2],[2,20241889,5.232737,2],[2,6954905,1.058824,2],[2,19411452,1.242967,2],[2,14428833,1.734015,2],[2,18788625,0.567775,2],[2,19203843,1.089514,2],[2,14428833,1.672634,2],[2,19411452,1.304348,2],[2,12767961,1.641944,2],[2,8823387,2.716113,2],[2,19619061,2.439898,2],[2,8823387,2.685422,2],[2,18996234,5.140665,2],[2,6954905,0.84399,2],[2,19411452,1.335038,2],[2,20241889,4.649616,2],[2,18788625,0.782609,2],[2,3425550,3.084399,2],[2,20241889,4.496164,2],[2,6954905,0.782609,2],[2,19619061,2.194373,2],[2,19411452,1.549872,2],[2,19619061,2.102302,2],[2,8408169,2.225064,2],[2,19203843,1.335038,2],[2,19619061,3.360614,2],[2,3425550,2.194373,2],[2,19411452,0.445013,2],[2,14221224,0.751918,2],[2,14428833,1.887468,2],[2,3425550,2.378517,2],[2,6954905,1.918159,2],[2,19411452,0.721228,2],[2,12767961,1.365729,2],[2,12767961,1.396419,2],[2,12767961,1.42711,2],[2,19203843,1.242967,2],[2,3425550,2.685422,2],[2,19619061,3.176471,2],[2,6954905,1.488491,2],[2,6954905,1.457801,2],[2,19411452,1.058824,2],[2,19203843,1.181586,2],[2,20241889,5.386189,2],[2,6954905,1.304348,2],[2,20241889,5.324808,2],[2,19411452,1.150895,2],[2,20034280,0.751918,2],[2,18788625,1.42711,2],[2,19203843,0.936061,2],[2,18788625,1.457801,2],[2,20241889,3.483376,2],[2,19619061,1.457801,2],[2,20241889,3.360614,2],[2,20241889,3.329923,2],[2,20241889,3.299233,2],[2,18788625,1.611253,2],[2,19203843,0.905371,2],[2,7162514,1.212276,2],[2,8823387,1.641944,2],[2,19619061,1.058824,2],[2,19619061,0.997442,2],[2,18788625,1.795396,2],[2,18788625,1.887468,2],[2,20241889,2.838875,2],[2,12767961,1.97954,2],[2,20034280,0.997442,2],[2,12145133,3.176471,2],[2,20241889,2.777494,2],[2,19411452,2.132992,2],[2,19411452,2.255754,2],[2,19619061,2.040921,2],[2,19619061,2.01023,2],[2,12145133,3.391304,2],[2,19619061,1.948849,2],[2,18788625,0.905371,2],[2,19619061,1.795396,2],[2,19619061,1.764706,2],[2,19619061,1.734015,2],[2,18788625,1.028133,2],[2,19619061,1.703325,2],[2,20241889,4.219949,2],[2,8823387,2.255754,2],[2,20034280,0.322251,2],[2,20034280,0.352941,2],[2,18788625,1.150895,2],[2,20034280,0.414322,2],[2,20034280,0.445013,2],[2,12767961,1.918159,2],[2,8823387,2.01023,2],[2,20241889,3.913043,2],[2,7162514,1.273657,2],[2,19411452,1.826087,2],[2,19411452,1.856777,2],[2,18788625,1.365729,2],[2,8200560,2.439898,2],[2,2387505,5.017903,2],[2,12560351,1.42711,2],[2,12560351,1.365729,2],[2,12560351,1.273657,2],[2,12767961,0.84399,2],[2,19203843,2.163683,2],[2,18996234,2.56266,2],[2,12560351,1.150895,2],[2,12560351,1.120205,2],[2,12560351,1.089514,2],[2,12560351,1.028133,2],[2,12560351,0.997442,2],[2,7162514,1.795396,2],[2,12352742,2.439898,2],[2,7162514,1.764706,2],[2,18996234,2.624041,2],[2,8823387,4.066496,2],[2,18996234,2.654731,2],[2,7162514,1.703325,2],[2,12352742,2.56266,2],[2,18996234,2.685422,2],[2,12352742,2.654731,2],[2,7162514,1.580563,2],[2,14221224,2.317136,2],[2,12352742,1.42711,2],[2,12352742,1.519182,2],[2,12352742,1.549872,2],[2,12352742,1.641944,2],[2,12352742,1.703325,2],[2,12560351,2.071611,2],[2,14221224,2.439898,2],[2,12352742,1.826087,2],[2,12352742,1.887468,2],[2,8200560,2.163683,2],[2,19203843,2.56266,2],[2,8200560,2.225064,2],[2,19203843,2.439898,2],[2,19203843,2.409207,2],[2,14221224,2.624041,2],[2,12767961,0.87468,2],[2,12560351,1.703325,2],[2,8200560,2.347826,2],[2,12560351,1.611253,2],[2,18996234,2.439898,2],[2,8200560,2.378517,2],[2,19203843,2.317136,2],[2,12560351,1.519182,2],[2,12352742,3.667519,2],[2,14428833,2.01023,2],[2,5501642,1.365729,2],[2,5501642,1.42711,2],[2,18996234,3.514066,2],[2,8615778,1.335038,2],[2,8615778,1.304348,2],[2,5501642,1.519182,2],[2,3425550,2.102302,2],[2,5501642,1.672634,2],[2,5501642,1.703325,2],[2,8615778,0.905371,2],[2,8615778,0.782609,2],[2,19203843,1.856777,2],[2,8408169,2.378517,2],[2,18996234,4.189258,2],[2,19203843,1.734015,2],[2,8408169,2.347826,2],[2,3217941,3.790281,2],[2,18996234,4.404092,2],[2,19203843,1.580563,2],[2,5294032,4.741688,2],[2,19203843,1.549872,2],[2,5501642,1.795396,2],[2,12560351,0.659847,2],[2,12767961,1.150895,2],[2,8615778,1.887468,2],[2,12352742,2.746803,2],[2,14428833,2.194373,2],[2,7162514,1.488491,2],[2,18996234,2.992327,2],[2,18996234,3.023018,2],[2,7162514,1.457801,2],[2,7162514,1.42711,2],[2,12352742,3.084399,2],[2,8615778,1.734015,2],[2,12352742,3.176471,2],[2,12352742,3.207161,2],[2,8615778,1.672634,2],[2,12352742,3.299233,2],[2,7162514,1.335038,2],[2,5501642,1.304348,2],[2,16297316,3.268542,2],[2,19203843,2.102302,2],[2,18996234,3.207161,2],[2,8615778,1.549872,2],[2,20241889,5.938619,2],[2,14428833,2.040921,2],[2,8615778,1.42711,2],[2,18788625,2.838875,2],[2,7162514,0.905371,2],[2,14428833,1.335038,2],[2,2595114,1.764706,2],[2,8408169,0.659847,2],[2,8408169,0.629156,2],[2,18788625,2.900256,2],[2,18788625,2.930946,2],[2,2595114,1.703325,2],[2,14428833,0.997442,2],[2,2595114,1.549872,2],[2,18788625,3.023018,2],[2,2595114,1.488491,2],[2,14428833,0.905371,2],[2,18788625,3.053708,2],[2,18788625,3.084399,2],[2,14428833,0.782609,2],[2,2595114,1.42711,2],[2,3010332,1.120205,2],[2,14428833,0.629156,2],[2,14428833,0.598465,2],[2,18788625,3.207161,2],[2,14428833,0.537084,2],[2,3010332,1.396419,2],[2,14428833,0.352941,2],[2,5294032,1.703325,2],[2,18788625,4.618926,2],[2,20241889,0.046036,2],[2,18788625,4.465473,2],[2,8823387,0.782609,2],[2,16504925,2.59335,2],[2,19411452,4.404092,2],[2,8823387,0.629156,2],[2,3010332,0.506394,2],[2,12145133,1.826087,2],[2,8823387,0.414322,2],[2,2595114,2.838875,2],[2,8823387,0.26087,2],[2,8408169,1.304348,2],[2,12145133,1.42711,2],[2,2595114,2.409207,2],[2,12145133,1.396419,2],[2,2595114,2.286445,2],[2,18788625,3.820972,2],[2,3010332,0.782609,2],[2,12145133,1.273657,2],[2,16089706,5.601023,2],[2,2595114,1.856777,2],[2,16504925,1.672634,2],[2,16504925,1.641944,2],[2,3010332,2.900256,2],[2,16504925,1.611253,2],[2,19411452,6.460358,2],[2,7162514,0.782609,2],[2,16504925,1.580563,2],[2,3010332,3.023018,2],[2,16504925,0.936061,2],[2,16504925,0.966752,2],[2,18788625,3.421995,2],[2,3010332,3.237852,2],[2,16504925,1.028133,2],[2,16504925,1.304348,2],[2,2595114,0.26087,2],[2,18788625,3.268542,2],[2,3010332,3.391304,2],[2,16504925,1.242967,2],[2,16504925,1.181586,2],[2,14428833,0.445013,2],[2,12145133,0.751918,2],[2,18788625,3.360614,2],[2,16504925,1.212276,2],[2,12145133,0.905371,2],[2,3010332,1.42711,2],[2,3010332,1.488491,2],[2,3010332,1.580563,2],[2,3010332,1.611253,2],[2,3010332,1.641944,2],[2,3010332,1.734015,2],[2,16504925,2.378517,2],[2,18788625,3.544757,2],[2,3010332,4.404092,2],[2,3010332,1.795396,2],[2,16504925,2.194373,2],[2,12145133,0.26087,2],[2,16504925,2.163683,2],[2,3010332,2.071611,2],[2,3010332,2.194373,2],[2,5294032,2.071611,2],[2,16504925,1.918159,2],[2,3010332,2.409207,2],[2,3010332,2.439898,2],[2,3010332,2.470588,2],[2,16504925,0.598465,2],[2,14221224,1.120205,2],[2,3010332,4.035806,2],[2,12145133,0.322251,2],[2,8823387,1.365729,2],[2,20241889,2.040921,2],[2,20241889,1.918159,2],[2,20241889,1.764706,2],[2,18788625,2.347826,2],[2,20241889,1.703325,2],[2,20241889,1.672634,2],[2,20241889,1.611253,2],[2,20034280,3.053708,2],[2,8823387,1.089514,2],[2,18788625,2.378517,2],[2,20241889,1.42711,2],[2,20241889,1.396419,2],[2,20034280,3.207161,2],[2,18788625,2.439898,2],[2,20034280,3.268542,2],[2,20241889,1.212276,2],[2,20034280,3.299233,2],[2,19203843,0.567775,2],[2,20241889,1.150895,2],[2,19411452,2.56266,2],[2,8823387,0.936061,2],[2,19411452,2.59335,2],[2,19411452,2.624041,2],[2,20034280,1.457801,2],[2,12145133,3.11509,2],[2,20034280,1.641944,2],[2,20034280,1.856777,2],[2,14221224,0.506394,2],[2,12767961,2.102302,2],[2,20034280,2.01023,2],[2,19411452,2.378517,2],[2,20034280,2.040921,2],[2,14221224,0.445013,2],[2,20241889,2.685422,2],[2,12767961,2.225064,2],[2,20034280,2.255754,2],[2,20034280,2.286445,2],[2,20034280,2.317136,2],[2,12145133,2.961637,2],[2,20034280,2.409207,2],[2,7162514,1.120205,2],[2,12767961,2.286445,2],[2,20034280,2.531969,2],[2,20241889,2.439898,2],[2,20034280,2.624041,2],[2,7162514,1.058824,2],[2,20034280,2.777494,2],[2,3217941,4.496164,2],[2,8408169,1.703325,2],[2,20241889,0.905371,2],[2,5294032,1.212276,2],[2,18788625,5.508951,2],[2,18788625,5.294118,2],[2,20241889,0.84399,2],[2,20241889,0.782609,2],[2,19411452,4.189258,2],[2,5294032,1.242967,2],[2,18996234,6.675192,2],[2,20241889,0.690537,2],[2,20241889,0.629156,2],[2,20241889,0.598465,2],[2,12145133,2.347826,2],[2,20241889,0.567775,2],[2,18788625,4.925831,2],[2,12145133,2.286445,2],[2,18788625,2.654731,2],[2,7162514,0.966752,2],[2,8408169,1.580563,2],[2,20241889,0.383632,2],[2,20034280,4.895141,2],[2,20034280,4.987212,2],[2,19411452,2.685422,2],[2,19411452,2.716113,2],[2,12145133,2.838875,2],[2,20034280,3.421995,2],[2,18788625,6.920716,2],[2,12145133,2.777494,2],[2,20241889,1.058824,2],[2,18788625,2.470588,2],[2,19411452,2.961637,2],[2,19411452,3.053708,2],[2,8408169,2.132992,2],[2,18996234,5.938619,2],[2,8408169,2.071611,2],[2,8408169,2.040921,2],[2,19411452,3.636829,2],[2,5294032,0.84399,2],[2,8408169,1.918159,2],[2,12145133,2.59335,2],[2,8408169,1.826087,2],[2,5294032,1.028133,2],[2,12145133,2.56266,2],[2,8408169,1.764706,2],[2,19411452,3.943734,2],[2,5294032,1.150895,2],[2,18788625,2.531969,2],[2,3425550,1.273657,2],[2,5294032,2.286445,2],[2,3217941,1.795396,2],[2,19826670,2.501279,2],[2,16089706,2.470588,2],[2,19826670,1.488491,2],[2,8200560,1.549872,2],[2,2802723,1.734015,2],[2,16089706,2.071611,2],[2,2802723,3.913043,2],[2,18996234,1.826087,2],[2,3217941,1.703325,2],[2,6954905,2.102302,2],[2,3217941,2.531969,2],[2,18996234,1.703325,2],[2,2802723,1.672634,2],[2,3425550,1.918159,2],[2,6954905,2.838875,2],[2,14221224,1.887468,2],[2,16089706,2.317136,2],[2,3217941,1.304348,2],[2,19826670,2.286445,2],[2,3425550,1.672634,2],[2,3217941,1.335038,2],[2,16297316,2.01023,2],[2,19826670,0.690537,2],[2,16297316,2.163683,2],[2,18996234,0.84399,2],[2,19826670,4.066496,2],[2,2802723,1.42711,2],[2,2387505,2.56266,2],[2,2802723,2.716113,2],[2,16089706,3.237852,2],[2,19826670,2.409207,2],[2,2387505,2.59335,2],[2,2387505,1.97954,2],[2,16297316,2.132992,2],[2,19826670,0.936061,2],[2,2387505,1.273657,2],[2,2802723,1.242967,2],[2,18996234,1.242967,2],[2,14221224,1.335038,2],[2,19203843,3.207161,2],[2,3217941,3.053708,2],[2,2802723,0.936061,2],[2,2802723,2.930946,2],[2,3217941,2.869565,2],[2,18996234,1.089514,2],[2,14221224,1.488491,2],[2,3425550,1.335038,2],[2,16089706,2.531969,2],[2,19826670,2.961637,2],[2,5294032,2.654731,2],[2,14221224,1.795396,2],[2,8408169,2.992327,2],[2,5294032,2.777494,2],[2,3217941,0.537084,2],[2,7162514,2.56266,2],[2,8408169,2.961637,2],[2,14221224,1.212276,2],[2,3425550,1.826087,2],[2,14221224,2.163683,2],[2,18996234,1.580563,2],[2,14221224,1.242967,2],[2,2387505,1.028133,2],[2,3217941,0.936061,2],[2,19203843,3.14578,2],[2,19826670,3.11509,2],[2,8200560,1.242967,2],[2,14221224,1.519182,2],[2,14221224,2.040921,2],[2,18996234,1.488491,2],[2,8408169,3.391304,2],[2,16297316,2.102302,2],[2,3217941,1.42711,2],[2,14221224,1.304348,2],[2,8408169,3.483376,2],[2,19826670,2.838875,2],[2,2802723,2.439898,2],[2,2387505,1.457801,2],[2,18996234,1.42711,2],[2,3217941,2.255754,2],[2,19826670,1.242967,2],[2,2802723,1.488491,2],[2,2387505,2.225064,2],[2,16297316,2.808184,2],[2,3425550,1.181586,2],[2,18996234,1.181586,2],[2,3217941,0.84399,2],[2,18996234,1.212276,2],[2,2802723,0.813299,2],[2,16297316,1.335038,2],[2,3217941,2.961637,2],[2,6954905,2.501279,2],[2,12352742,1.181586,2],[2,8200560,2.01023,2],[2,18996234,0.598465,2],[2,16297316,2.347826,2],[2,16297316,1.703325,2],[2,16297316,1.549872,2],[2,16297316,1.519182,2],[2,19826670,1.826087,2],[2,16297316,1.488491,2],[2,19826670,1.795396,2],[2,2802723,2.347826,2],[2,2387505,2.040921,2],[2,12352742,1.335038,2],[2,2387505,1.519182,2],[2,19826670,1.887468,2],[2,3217941,1.028133,2],[2,6954905,2.624041,2],[2,16297316,1.734015,2],[2,19203843,3.391304,2],[2,18996234,1.120205,2],[2,12352742,1.212276,2],[2,2802723,2.286445,2],[2,14221224,1.734015,2],[2,18996234,1.948849,2],[2,8615778,2.501279,2],[2,19826670,2.132992,2],[2,16297316,1.089514,2],[2,16297316,2.470588,2],[2,16297316,2.746803,2],[2,3217941,1.212276,2],[2,2387505,1.826087,2],[2,2802723,0.905371,2],[2,3217941,1.948849,2],[2,19826670,3.176471,2],[2,19826670,2.194373,2],[2,14428833,3.053708,2],[2,8200560,1.826087,2],[2,8200560,1.795396,2],[2,16297316,0.905371,2],[2,2802723,2.56266,2],[2,12767961,1.089514,2],[2,19826670,4.250639,2],[2,3217941,3.329923,2],[2,8200560,1.887468,2],[2,7162514,2.869565,2],[2,19826670,3.268542,2],[2,16297316,1.304348,2],[2,19826670,2.01023,2],[2,2387505,1.396419,2],[2,2387505,3.237852,2],[2,16089706,2.777494,2],[2,2387505,0.506394,2],[2,16297316,1.273657,2],[2,16297316,1.212276,2],[2,16297316,1.181586,2],[2,8408169,2.808184,2],[2,3217941,2.409207,2],[2,12767961,1.058824,2],[2,18996234,1.335038,2],[2,21279934,2.286445,3],[2,22733198,0.84399,3],[2,21279934,2.317136,3],[2,7992951,0.997442,3],[2,21279934,2.194373,3],[2,7992951,0.936061,3],[2,21902762,1.519182,3],[2,21279934,1.335038,3],[2,2802723,0.659847,3],[2,16504925,2.685422,3],[2,4878814,1.396419,3],[2,21279934,1.058824,3],[2,22733198,1.519182,3],[2,21279934,0.966752,3],[2,22733198,1.641944,3],[2,16920143,1.641944,3],[2,22733198,1.672634,3],[2,2802723,0.721228,3],[2,19826670,1.028133,3],[2,18788625,4.434783,3],[2,4878814,1.273657,3],[2,22733198,1.97954,3],[2,4878814,1.242967,3],[2,21279934,0.29156,3],[2,21279934,2.132992,3],[2,21279934,2.040921,3],[2,2802723,0.445013,3],[2,21902762,1.028133,3],[2,21902762,1.120205,3],[2,21902762,1.150895,3],[2,21279934,1.97954,3],[2,21902762,1.181586,3],[2,19826670,0.87468,3],[2,21902762,1.273657,3],[2,12145133,2.225064,3],[2,5294032,1.42711,3],[2,21902762,1.365729,3],[2,21902762,1.42711,3],[2,22733198,1.089514,3],[2,22733198,1.120205,3],[2,5294032,1.457801,3],[2,16920143,1.734015,3],[2,4878814,1.42711,3],[2,726632,2.040921,3],[2,726632,1.97954,3],[2,4878814,2.869565,3],[2,726632,1.641944,3],[2,726632,1.611253,3],[2,726632,1.580563,3],[2,4878814,2.59335,3],[2,726632,1.457801,3],[2,9653824,1.365729,3],[2,726632,1.396419,3],[2,726632,1.273657,3],[2,726632,1.028133,3],[2,726632,0.997442,3],[2,1349459,0.87468,3],[2,726632,0.905371,3],[2,726632,0.751918,3],[2,726632,0.690537,3],[2,1349459,0.782609,3],[2,726632,0.659847,3],[2,21279934,4.005115,3],[2,726632,2.378517,3],[2,7370124,1.611253,3],[2,21279934,5.386189,3],[2,7370124,1.641944,3],[2,7370124,1.703325,3],[2,16297316,1.764706,3],[2,1349459,1.703325,3],[2,22110371,3.176471,3],[2,1349459,1.42711,3],[2,14013615,2.439898,3],[2,1349459,1.365729,3],[2,7785342,2.930946,3],[2,5916860,3.606138,3],[2,14221224,0.107417,3],[2,9653824,1.549872,3],[2,9653824,1.519182,3],[2,726632,2.194373,3],[2,16297316,2.225064,3],[2,7370124,1.764706,3],[2,20034280,3.575448,3],[2,1349459,0.936061,3],[2,22110371,1.273657,3],[2,22110371,0.997442,3],[2,22110371,0.84399,3],[2,22110371,0.567775,3],[2,16920143,2.439898,3],[2,12145133,2.470588,3],[2,9653824,0.782609,3],[2,1141850,3.759591,3],[2,9653824,0.567775,3],[2,7370124,2.409207,3],[2,14013615,2.869565,3],[2,19826670,0.721228,3],[2,21902762,0.84399,3],[2,4878814,1.672634,3],[2,5294032,1.304348,3],[2,21279934,2.624041,3],[2,19826670,0.813299,3],[2,10691869,2.071611,3],[2,22733198,0.168798,3],[2,22733198,0.199488,3],[2,726632,0.567775,3],[2,726632,0.475703,3],[2,1349459,0.690537,3],[2,2802723,1.826087,3],[2,726632,0.076726,3],[2,2802723,1.764706,3],[2,5294032,0.905371,3],[2,5294032,0.936061,3],[2,21279934,3.483376,3],[2,21279934,3.452685,3],[2,5294032,0.997442,3],[2,11522306,0.629156,3],[2,4878814,2.163683,3],[2,4878814,2.040921,3],[2,22110371,1.734015,3],[2,22110371,1.611253,3],[2,22110371,1.42711,3],[2,22110371,1.304348,3],[2,5294032,1.058824,3],[2,20034280,4.097187,3],[2,4878814,1.918159,3],[2,17958188,1.028133,3],[2,3010332,2.132992,3],[2,14221224,1.089514,3],[2,16504925,2.01023,3],[2,15259270,1.120205,3],[2,15259270,1.058824,3],[2,3010332,2.347826,3],[2,15259270,0.905371,3],[2,4463596,2.071611,3],[2,11107088,1.734015,3],[2,4463596,2.102302,3],[2,16920143,0.598465,3],[2,519023,3.207161,3],[2,3010332,2.531969,3],[2,519023,3.084399,3],[2,19826670,2.225064,3],[2,17958188,2.900256,3],[2,4463596,2.194373,3],[2,16504925,1.764706,3],[2,7162514,0.721228,3],[2,17958188,2.838875,3],[2,19826670,2.163683,3],[2,15882097,0.936061,3],[2,4463596,1.150895,3],[2,4463596,1.181586,3],[2,2595114,1.304348,3],[2,11107088,1.120205,3],[2,4463596,1.273657,3],[2,19826670,2.777494,3],[2,3010332,1.457801,3],[2,11107088,1.181586,3],[2,4463596,1.457801,3],[2,2595114,1.242967,3],[2,3010332,1.519182,3],[2,2802723,1.304348,3],[2,19826670,2.716113,3],[2,15259270,1.764706,3],[2,19826670,2.685422,3],[2,11107088,1.273657,3],[2,4463596,1.672634,3],[2,11107088,1.457801,3],[2,5086423,0.721228,3],[2,4463596,1.764706,3],[2,15259270,1.457801,3],[2,4463596,1.795396,3],[2,16920143,0.537084,3],[2,14221224,1.058824,3],[2,17958188,2.286445,3],[2,16504925,1.365729,3],[2,7162514,0.813299,3],[2,519023,1.948849,3],[2,15882097,1.887468,3],[2,5086423,1.335038,3],[2,22940807,0.414322,3],[2,22940807,0.475703,3],[2,21072325,2.501279,3],[2,17958188,1.396419,3],[2,22940807,0.629156,3],[2,21072325,2.286445,3],[2,17958188,2.194373,3],[2,19826670,1.918159,3],[2,22940807,0.782609,3],[2,21072325,2.163683,3],[2,17958188,2.040921,3],[2,12145133,1.120205,3],[2,3840769,2.838875,3],[2,3010332,3.483376,3],[2,17542970,1.734015,3],[2,12145133,0.936061,3],[2,17958188,1.703325,3],[2,11107088,2.56266,3],[2,15882097,0.997442,3],[2,7162514,0.751918,3],[2,2595114,0.997442,3],[2,17958188,1.181586,3],[2,18996234,0.107417,3],[2,15882097,1.089514,3],[2,519023,2.654731,3],[2,16920143,0.690537,3],[2,17958188,2.59335,3],[2,2595114,0.87468,3],[2,15882097,1.242967,3],[2,19826670,2.040921,3],[2,16504925,1.519182,3],[2,4463596,2.378517,3],[2,15882097,1.519182,3],[2,519023,2.317136,3],[2,17542970,2.040921,3],[2,17542970,2.01023,3],[2,15882097,1.611253,3],[2,19826670,1.97954,3],[2,2595114,0.629156,3],[2,17958188,2.347826,3],[2,15882097,1.734015,3],[2,21072325,3.11509,3],[2,3010332,0.629156,3],[2,10691869,0.966752,3],[2,7992951,1.611253,3],[2,12145133,1.580563,3],[2,12145133,1.549872,3],[2,10691869,0.936061,3],[2,18788625,4.127877,3],[2,18788625,4.097187,3],[2,4048378,4.803069,3],[2,10691869,0.782609,3],[2,7992951,1.795396,3],[2,12145133,1.488491,3],[2,11522306,1.242967,3],[2,6539687,2.746803,3],[2,11522306,1.273657,3],[2,6539687,2.685422,3],[2,18788625,3.913043,3],[2,21902762,2.040921,3],[2,4048378,4.86445,3],[2,11522306,1.365729,3],[2,11522306,1.457801,3],[2,11522306,1.488491,3],[2,18788625,3.882353,3],[2,4878814,1.181586,3],[2,19826670,1.058824,3],[2,3010332,0.29156,3],[2,22733198,2.347826,3],[2,21902762,1.764706,3],[2,4878814,1.058824,3],[2,19826670,1.120205,3],[2,10691869,1.703325,3],[2,4048378,4.618926,3],[2,3010332,0.475703,3],[2,1764677,0.84399,3],[2,10691869,1.519182,3],[2,7992951,1.273657,3],[2,1764677,1.120205,3],[2,1764677,1.212276,3],[2,10691869,1.42711,3],[2,1764677,1.304348,3],[2,4878814,0.567775,3],[2,4878814,0.537084,3],[2,4878814,0.506394,3],[2,1764677,1.703325,3],[2,7992951,1.42711,3],[2,10691869,1.181586,3],[2,2802723,0.84399,3],[2,6539687,1.641944,3],[2,16920143,0.936061,3],[2,12145133,1.181586,3],[2,17958188,0.322251,3],[2,4463596,0.966752,3],[2,3010332,1.028133,3],[2,9238606,1.580563,3],[2,17958188,0.905371,3],[2,9238606,1.519182,3],[2,21902762,3.11509,3],[2,6539687,1.42711,3],[2,21902762,3.14578,3],[2,9238606,1.42711,3],[2,3010332,1.181586,3],[2,3010332,1.212276,3],[2,21902762,3.391304,3],[2,3010332,1.242967,3],[2,6539687,1.212276,3],[2,11107088,0.87468,3],[2,6539687,1.120205,3],[2,11107088,1.089514,3],[2,6539687,1.058824,3],[2,2595114,1.365729,3],[2,3010332,1.365729,3],[2,12145133,1.365729,3],[2,16920143,1.42711,3],[2,9238606,2.409207,3],[2,11522306,1.672634,3],[2,11522306,1.703325,3],[2,7162514,0.598465,3],[2,7162514,0.629156,3],[2,6539687,2.194373,3],[2,14428833,0.414322,3],[2,16920143,1.396419,3],[2,3010332,0.87468,3],[2,2802723,1.028133,3],[2,6539687,2.01023,3],[2,2595114,1.887468,3],[2,19826670,1.212276,3],[2,2595114,1.795396,3],[2,6539687,1.948849,3],[2,21902762,2.501279,3],[2,6539687,1.887468,3],[2,9238606,2.040921,3],[2,6539687,1.826087,3],[2,16920143,0.997442,3],[2,2595114,1.641944,3],[2,6539687,1.672634,3],[2,12767961,1.181586,3],[2,1557068,1.519182,3],[2,9446215,1.580563,3],[2,1557068,1.611253,3],[2,9446215,1.611253,3],[2,1557068,1.672634,3],[2,934241,1.826087,3],[2,9446215,1.703325,3],[2,934241,1.734015,3],[2,934241,1.396419,3],[2,4048378,0.506394,3],[2,5501642,1.580563,3],[2,5916860,0.475703,3],[2,9446215,1.764706,3],[2,5916860,1.42711,3],[2,4255987,0.966752,3],[2,934241,0.567775,3],[2,12767961,1.212276,3],[2,12767961,1.120205,3],[2,18165798,0.598465,3],[2,6124469,0.721228,3],[2,6124469,0.813299,3],[2,6124469,0.997442,3],[2,15466879,1.181586,3],[2,21695153,3.176471,3],[2,18996234,1.795396,3],[2,15466879,1.028133,3],[2,18996234,1.672634,3],[2,8615778,1.703325,3],[2,18996234,1.641944,3],[2,15466879,0.905371,3],[2,15466879,0.87468,3],[2,1557068,0.751918,3],[2,18996234,3.14578,3],[2,18996234,1.519182,3],[2,9446215,1.150895,3],[2,4048378,0.230179,3],[2,9446215,1.396419,3],[2,934241,2.102302,3],[2,1557068,1.181586,3],[2,934241,2.040921,3],[2,934241,2.01023,3],[2,1557068,1.273657,3],[2,18996234,1.457801,3],[2,9446215,1.488491,3],[2,1557068,1.335038,3],[2,4048378,0.84399,3],[2,21487543,4.189258,3],[2,3425550,2.225064,3],[2,18165798,1.120205,3],[2,5501642,1.948849,3],[2,18165798,1.150895,3],[2,17750579,1.365729,3],[2,18165798,1.304348,3],[2,4048378,0.87468,3],[2,3425550,1.42711,3],[2,18165798,1.335038,3],[2,6747296,1.365729,3],[2,18165798,1.365729,3],[2,18165798,1.42711,3],[2,18165798,1.457801,3],[2,17750579,1.273657,3],[2,5501642,2.225064,3],[2,6747296,1.488491,3],[2,6747296,1.519182,3],[2,6954905,1.795396,3],[2,6747296,1.641944,3],[2,4048378,0.997442,3],[2,18165798,1.672634,3],[2,6124469,1.150895,3],[2,6124469,1.181586,3],[2,8615778,0.84399,3],[2,6124469,1.304348,3],[2,14844052,1.887468,3],[2,6124469,1.488491,3],[2,6124469,1.519182,3],[2,14844052,1.918159,3],[2,3425550,1.611253,3],[2,17750579,1.641944,3],[2,6124469,2.163683,3],[2,19619061,3.7289,3],[2,6124469,2.286445,3],[2,6124469,2.347826,3],[2,4255987,0.905371,3],[2,3425550,1.549872,3],[2,6747296,0.87468,3],[2,17750579,1.488491,3],[2,18165798,0.905371,3],[2,8615778,0.26087,3],[2,6124469,2.654731,3],[2,6124469,2.685422,3],[2,4048378,0.782609,3],[2,17750579,1.396419,3],[2,13390788,1.795396,3],[2,12767961,0.905371,3],[2,10899479,1.580563,3],[2,22317980,0.537084,3],[2,22317980,0.506394,3],[2,11314697,0.751918,3],[2,21695153,1.181586,3],[2,15466879,1.549872,3],[2,13390788,1.887468,3],[2,10899479,1.488491,3],[2,18996234,2.378517,3],[2,13390788,2.01023,3],[2,21695153,1.335038,3],[2,11314697,1.058824,3],[2,11314697,1.089514,3],[2,12352742,2.163683,3],[2,10899479,2.01023,3],[2,11314697,1.273657,3],[2,21695153,1.396419,3],[2,21695153,1.42711,3],[2,10899479,2.071611,3],[2,14013615,0.87468,3],[2,21695153,1.549872,3],[2,22317980,1.181586,3],[2,21695153,0.475703,3],[2,10899479,1.887468,3],[2,18996234,2.040921,3],[2,18996234,2.102302,3],[2,10899479,1.856777,3],[2,22317980,1.611253,3],[2,22317980,1.641944,3],[2,22317980,1.120205,3],[2,12352742,1.488491,3],[2,13390788,1.396419,3],[2,22317980,0.84399,3],[2,22317980,0.813299,3],[2,22317980,0.782609,3],[2,22317980,0.751918,3],[2,12352742,1.734015,3],[2,5501642,0.659847,3],[2,22317980,2.163683,3],[2,21695153,0.997442,3],[2,21695153,1.028133,3],[2,10899479,1.734015,3],[2,12352742,1.918159,3],[2,12352742,1.948849,3],[2,12352742,1.97954,3],[2,14013615,1.181586,3],[2,12352742,2.470588,3],[2,21695153,2.470588,3],[2,12352742,2.531969,3],[2,21695153,2.501279,3],[2,4255987,2.347826,3],[2,14844052,1.488491,3],[2,14013615,1.335038,3],[2,5916860,1.058824,3],[2,7785342,1.764706,3],[2,4255987,2.194373,3],[2,21695153,2.685422,3],[2,9446215,0.751918,3],[2,14844052,1.058824,3],[2,4255987,1.764706,3],[2,14013615,0.445013,3],[2,12352742,2.777494,3],[2,15466879,1.457801,3],[2,8615778,1.856777,3],[2,15466879,1.335038,3],[2,12352742,2.930946,3],[2,15466879,1.304348,3],[2,18996234,2.961637,3],[2,5501642,0.84399,3],[2,21695153,1.672634,3],[2,13390788,1.181586,3],[2,12352742,2.225064,3],[2,11314697,1.42711,3],[2,11314697,1.457801,3],[2,18996234,2.470588,3],[2,14013615,0.936061,3],[2,21695153,1.97954,3],[2,10899479,1.304348,3],[2,13390788,0.966752,3],[2,13390788,0.905371,3],[2,14013615,0.721228,3],[2,12352742,2.409207,3],[2,22317980,3.207161,3],[2,10899479,1.120205,3],[2,4255987,2.501279,3],[2,14844052,1.826087,3],[2,14844052,1.764706,3],[2,14844052,1.703325,3],[2,21695153,2.347826,3],[2,13390788,0.782609,3],[2,10899479,1.028133,3],[2,14844052,1.519182,3],[2,726632,4.83376,3],[2,2802723,2.869565,3],[2,19619061,0.936061,3],[2,7370124,0.567775,3],[2,19619061,0.87468,3],[2,9653824,1.918159,3],[2,7370124,0.813299,3],[2,6747296,2.746803,3],[2,1141850,1.641944,3],[2,13390788,0.168798,3],[2,20034280,1.089514,3],[2,20034280,1.181586,3],[2,7370124,1.028133,3],[2,7370124,1.058824,3],[2,18996234,0.997442,3],[2,20034280,1.335038,3],[2,6747296,3.176471,3],[2,20034280,1.42711,3],[2,9653824,1.887468,3],[2,20034280,1.488491,3],[2,6747296,3.329923,3],[2,9653824,1.826087,3],[2,20034280,1.703325,3],[2,7785342,0.84399,3],[2,14636443,1.089514,3],[2,15674488,1.150895,3],[2,20034280,0.659847,3],[2,20034280,0.690537,3],[2,15674488,1.120205,3],[2,14636443,0.997442,3],[2,14636443,0.966752,3],[2,7785342,0.813299,3],[2,15674488,1.089514,3],[2,20034280,0.721228,3],[2,15674488,1.058824,3],[2,14636443,0.84399,3],[2,15674488,1.028133,3],[2,1141850,1.273657,3],[2,15674488,0.936061,3],[2,9861433,2.071611,3],[2,18996234,1.058824,3],[2,7785342,0.690537,3],[2,7785342,0.629156,3],[2,1141850,1.42711,3],[2,19619061,1.304348,3],[2,20034280,0.813299,3],[2,726632,3.11509,3],[2,14221224,0.352941,3],[2,726632,3.084399,3],[2,1141850,2.286445,3],[2,726632,3.053708,3],[2,21279934,6.306905,3],[2,16297316,2.409207,3],[2,726632,2.961637,3],[2,9238606,3.237852,3],[2,13183179,0.506394,3],[2,13183179,0.475703,3],[2,13183179,0.383632,3],[2,7370124,1.42711,3],[2,726632,2.716113,3],[2,18996234,0.782609,3],[2,18996234,0.751918,3],[2,7370124,1.457801,3],[2,5916860,3.268542,3],[2,6954905,3.023018,3],[2,726632,2.624041,3],[2,19619061,0.598465,3],[2,13183179,0.168798,3],[2,726632,2.439898,3],[2,726632,3.452685,3],[2,20034280,1.826087,3],[2,1141850,2.040921,3],[2,20034280,1.887468,3],[2,4048378,2.071611,3],[2,20034280,1.948849,3],[2,5916860,2.378517,3],[2,13183179,1.703325,3],[2,7370124,1.181586,3],[2,7785342,2.163683,3],[2,12767961,2.194373,3],[2,5916860,2.654731,3],[2,1141850,2.194373,3],[2,18996234,0.813299,3],[2,5916860,2.777494,3],[2,20034280,2.501279,3],[2,13183179,1.242967,3],[2,4048378,2.439898,3],[2,20034280,2.56266,3],[2,13183179,1.089514,3],[2,4048378,2.56266,3],[2,726632,3.329923,3],[2,726632,3.268542,3],[2,13183179,0.87468,3],[2,22525589,1.488491,3],[2,21487543,1.580563,3],[2,6954905,1.089514,3],[2,4048378,1.335038,3],[2,22525589,1.580563,3],[2,19619061,2.624041,3],[2,17750579,0.751918,3],[2,21487543,1.335038,3],[2,22525589,1.918159,3],[2,5916860,1.918159,3],[2,14844052,2.470588,3],[2,17750579,0.537084,3],[2,14844052,2.56266,3],[2,21487543,1.058824,3],[2,21487543,0.966752,3],[2,6954905,0.905371,3],[2,21487543,0.905371,3],[2,6747296,1.918159,3],[2,18996234,1.365729,3],[2,21487543,0.813299,3],[2,5916860,1.97954,3],[2,4048378,1.457801,3],[2,21487543,0.598465,3],[2,3425550,1.304348,3],[2,6747296,1.764706,3],[2,18165798,1.764706,3],[2,7785342,1.396419,3],[2,3425550,1.242967,3],[2,21487543,2.347826,3],[2,12767961,1.519182,3],[2,4048378,1.120205,3],[2,21487543,2.255754,3],[2,4048378,1.150895,3],[2,6954905,1.365729,3],[2,18996234,1.396419,3],[2,21487543,2.01023,3],[2,22525589,1.335038,3],[2,4048378,1.212276,3],[2,4255987,0.629156,3],[2,5916860,1.826087,3],[2,21487543,1.887468,3],[2,6954905,1.181586,3],[2,6954905,1.120205,3],[2,4048378,1.304348,3],[2,22525589,1.365729,3],[2,17750579,0.87468,3],[2,21487543,1.672634,3],[2,9861433,1.519182,3],[2,14636443,2.163683,3],[2,9653824,2.040921,3],[2,9653824,1.97954,3],[2,9861433,1.641944,3],[2,20034280,0.168798,3],[2,13390788,0.506394,3],[2,1141850,0.751918,3],[2,15674488,1.826087,3],[2,1141850,0.84399,3],[2,14013615,1.764706,3],[2,5916860,2.194373,3],[2,15674488,1.611253,3],[2,14013615,1.795396,3],[2,14636443,1.703325,3],[2,14636443,1.672634,3],[2,4048378,1.97954,3],[2,15674488,1.396419,3],[2,14013615,1.856777,3],[2,14636443,1.396419,3],[2,20034280,0.537084,3],[2,19619061,1.488491,3],[2,20034280,0.598465,3],[2,4048378,1.488491,3],[2,9653824,2.409207,3],[2,9861433,0.84399,3],[2,15674488,2.317136,3],[2,9861433,0.87468,3],[2,21487543,0.230179,3],[2,9653824,2.378517,3],[2,9861433,0.997442,3],[2,16297316,3.790281,3],[2,21487543,0.046036,3],[2,9861433,1.120205,3],[2,9653824,2.347826,3],[2,14013615,1.519182,3],[2,6954905,0.751918,3],[2,9653824,2.225064,3],[2,9653824,2.163683,3],[2,9861433,1.212276,3],[2,18996234,1.273657,3],[2,18165798,2.624041,3],[2,5916860,2.102302,3],[2,6747296,2.317136,3],[2,18165798,2.777494,3],[2,9861433,1.42711,3],[2,4048378,1.734015,3],[2,10069042,2.470588,3],[2,20864716,2.746803,3],[2,20241889,1.181586,3],[2,20864716,2.531969,3],[2,20864716,2.439898,3],[2,23148416,0.230179,3],[2,8408169,2.777494,3],[2,20864716,2.255754,3],[2,8823387,1.028133,3],[2,23148416,0.29156,3],[2,20864716,2.102302,3],[2,17335361,0.84399,3],[2,18581016,2.56266,3],[2,23356025,1.948849,3],[2,17335361,0.905371,3],[2,8200560,1.273657,3],[2,20864716,1.672634,3],[2,23148416,0.598465,3],[2,23356025,1.549872,3],[2,20864716,1.549872,3],[2,4671205,0.659847,3],[2,15051661,0.905371,3],[2,2387505,2.838875,3],[2,10484260,1.856777,3],[2,15051661,0.751918,3],[2,10276651,4.680307,3],[2,10484260,1.672634,3],[2,19411452,2.869565,3],[2,10484260,1.611253,3],[2,10484260,1.396419,3],[2,8200560,0.659847,3],[2,10069042,2.439898,3],[2,10484260,1.212276,3],[2,8200560,0.782609,3],[2,10484260,1.089514,3],[2,23356025,2.900256,3],[2,23356025,2.808184,3],[2,20864716,3.14578,3],[2,8200560,0.997442,3],[2,23356025,2.317136,3],[2,8823387,1.488491,3],[2,20864716,0.721228,3],[2,18581016,1.764706,3],[2,2179896,4.219949,3],[2,23148416,1.058824,3],[2,23148416,1.120205,3],[2,23356025,1.365729,3],[2,20864716,0.445013,3],[2,23148416,1.242967,3],[2,23148416,1.273657,3],[2,18581016,1.641944,3],[2,18581016,1.519182,3],[2,23148416,1.335038,3],[2,19203843,0.690537,3],[2,18581016,1.42711,3],[2,19411452,2.225064,3],[2,23148416,1.580563,3],[2,19203843,0.751918,3],[2,23148416,1.826087,3],[2,8200560,1.856777,3],[2,18788625,2.225064,3],[2,23148416,0.751918,3],[2,20241889,2.255754,3],[2,8200560,1.42711,3],[2,20864716,1.335038,3],[2,8200560,1.580563,3],[2,20864716,1.242967,3],[2,20864716,1.181586,3],[2,18581016,2.01023,3],[2,23148416,0.905371,3],[2,18788625,2.01023,3],[2,12975570,0.322251,3],[2,18581016,1.887468,3],[2,18788625,1.97954,3],[2,20864716,0.966752,3],[2,23356025,1.457801,3],[2,19411452,2.409207,3],[2,20864716,0.905371,3],[2,8823387,1.457801,3],[2,8200560,1.703325,3],[2,20864716,0.813299,3],[2,3840769,1.335038,3],[2,10276651,3.329923,3],[2,3840769,1.273657,3],[2,3840769,1.242967,3],[2,16089706,0.966752,3],[2,20241889,0.26087,3],[2,16089706,0.905371,3],[2,20241889,0.322251,3],[2,1972287,2.531969,3],[2,20241889,0.352941,3],[2,8408169,1.519182,3],[2,20241889,0.506394,3],[2,3840769,0.905371,3],[2,5709251,1.335038,3],[2,7162514,2.439898,3],[2,5709251,1.273657,3],[2,5086423,1.734015,3],[2,10069042,1.304348,3],[2,5709251,1.242967,3],[2,14221224,1.549872,3],[2,3840769,1.641944,3],[2,18373407,3.268542,3],[2,1972287,1.611253,3],[2,10276651,2.409207,3],[2,3217941,2.624041,3],[2,8823387,0.751918,3],[2,10069042,0.905371,3],[2,1972287,1.764706,3],[2,8823387,0.813299,3],[2,10276651,2.531969,3],[2,3217941,2.685422,3],[2,10069042,0.966752,3],[2,5709251,1.703325,3],[2,4671205,1.396419,3],[2,3840769,1.42711,3],[2,20241889,0.076726,3],[2,5294032,2.685422,3],[2,3840769,1.365729,3],[2,20241889,0.107417,3],[2,4671205,1.273657,3],[2,4671205,1.242967,3],[2,4671205,0.905371,3],[2,3217941,4.465473,3],[2,5709251,0.598465,3],[2,10069042,1.795396,3],[2,4671205,0.87468,3],[2,3633160,2.716113,3],[2,10069042,1.887468,3],[2,10069042,1.918159,3],[2,8408169,1.856777,3],[2,8408169,1.887468,3],[2,10069042,2.040921,3],[2,8408169,1.948849,3],[2,15051661,1.028133,3],[2,13598397,1.611253,3],[2,8408169,1.97954,3],[2,15051661,0.997442,3],[2,8408169,2.102302,3],[2,16089706,2.286445,3],[2,4671205,0.782609,3],[2,4671205,0.690537,3],[2,10069042,1.335038,3],[2,10069042,1.365729,3],[2,15051661,1.365729,3],[2,5709251,1.150895,3],[2,7162514,0.997442,3],[2,3217941,2.930946,3],[2,20241889,0.751918,3],[2,10069042,1.42711,3],[2,4671205,1.058824,3],[2,15051661,1.242967,3],[2,5709251,1.028133,3],[2,5709251,0.997442,3],[2,10069042,1.519182,3],[2,4671205,0.997442,3],[2,3840769,0.567775,3],[2,14221224,1.672634,3],[2,7162514,2.347826,3],[2,3840769,0.537084,3],[2,15051661,1.181586,3],[2,13598397,1.335038,3],[2,15051661,1.150895,3],[2,19411452,1.028133,3],[2,6332078,2.685422,3],[2,19411452,0.997442,3],[2,7577733,2.531969,3],[2,2179896,2.163683,3],[2,19203843,1.212276,3],[2,6332078,2.439898,3],[2,6332078,2.317136,3],[2,12975570,0.782609,3],[2,12975570,0.84399,3],[2,2179896,1.948849,3],[2,6332078,2.194373,3],[2,2179896,1.795396,3],[2,6332078,2.132992,3],[2,12975570,0.905371,3],[2,19411452,0.782609,3],[2,6332078,2.040921,3],[2,2179896,1.611253,3],[2,9030997,1.304348,3],[2,6332078,1.396419,3],[2,9030997,2.900256,3],[2,20657107,1.887468,3],[2,17127752,1.304348,3],[2,6332078,1.150895,3],[2,20241889,5.079284,3],[2,18788625,0.537084,3],[2,9030997,2.56266,3],[2,14428833,1.764706,3],[2,17127752,1.396419,3],[2,12560351,0.905371,3],[2,9030997,2.378517,3],[2,6332078,3.176471,3],[2,9030997,2.317136,3],[2,9030997,2.286445,3],[2,6332078,3.053708,3],[2,9030997,2.194373,3],[2,8200560,2.930946,3],[2,12560351,0.813299,3],[2,19203843,1.150895,3],[2,9030997,1.856777,3],[2,19203843,1.457801,3],[2,311414,0.997442,3],[2,12975570,1.212276,3],[2,7577733,1.365729,3],[2,17127752,2.01023,3],[2,7577733,1.242967,3],[2,7577733,1.212276,3],[2,2179896,0.905371,3],[2,311414,1.120205,3],[2,311414,1.150895,3],[2,12975570,1.457801,3],[2,18788625,0.168798,3],[2,311414,1.242967,3],[2,7577733,1.058824,3],[2,311414,1.273657,3],[2,7577733,0.966752,3],[2,6332078,2.01023,3],[2,7577733,0.84399,3],[2,19203843,2.071611,3],[2,2179896,0.383632,3],[2,7577733,2.317136,3],[2,12975570,0.997442,3],[2,19411452,0.690537,3],[2,19411452,0.629156,3],[2,17127752,1.795396,3],[2,19411452,0.475703,3],[2,2179896,1.457801,3],[2,7577733,0.598465,3],[2,2179896,1.242967,3],[2,2179896,1.212276,3],[2,8823387,3.483376,3],[2,6332078,1.580563,3],[2,6332078,1.672634,3],[2,2179896,1.150895,3],[2,2179896,1.120205,3],[2,6332078,1.703325,3],[2,12975570,1.120205,3],[2,311414,0.87468,3],[2,19203843,1.42711,3],[2,2179896,1.028133,3],[2,6332078,1.734015,3],[2,18788625,1.488491,3],[2,18581016,0.782609,3],[2,8823387,1.887468,3],[2,20241889,3.667519,3],[2,16712534,2.102302,3],[2,8408169,2.56266,3],[2,23148416,2.777494,3],[2,18581016,0.690537,3],[2,16712534,1.826087,3],[2,16712534,1.764706,3],[2,16712534,1.734015,3],[2,311414,4.987212,3],[2,8200560,2.132992,3],[2,17335361,1.304348,3],[2,2179896,2.869565,3],[2,23356025,0.84399,3],[2,11729915,2.808184,3],[2,13598397,3.820972,3],[2,23356025,0.782609,3],[2,8823387,2.132992,3],[2,23356025,1.304348,3],[2,23148416,1.918159,3],[2,18581016,1.335038,3],[2,19411452,2.071611,3],[2,11729915,1.150895,3],[2,11729915,1.181586,3],[2,20241889,2.808184,3],[2,19203843,2.930946,3],[2,18581016,1.273657,3],[2,12975570,0.475703,3],[2,7162514,1.181586,3],[2,23356025,1.212276,3],[2,18581016,1.150895,3],[2,11729915,1.488491,3],[2,11729915,1.519182,3],[2,18581016,1.058824,3],[2,18788625,1.703325,3],[2,18581016,0.966752,3],[2,3217941,3.421995,3],[2,7162514,2.071611,3],[2,11729915,1.734015,3],[2,19203843,0.997442,3],[2,8823387,2.501279,3],[2,17127752,1.212276,3],[2,20657107,1.242967,3],[2,23148416,3.851662,3],[2,12560351,1.580563,3],[2,19411452,1.365729,3],[2,20657107,1.335038,3],[2,17127752,1.242967,3],[2,14428833,1.611253,3],[2,20657107,1.365729,3],[2,18788625,0.659847,3],[2,6332078,0.966752,3],[2,7577733,2.961637,3],[2,19203843,2.255754,3],[2,20657107,1.672634,3],[2,8408169,2.470588,3],[2,8408169,2.439898,3],[2,6332078,1.028133,3],[2,20241889,4.895141,3],[2,6332078,0.690537,3],[2,23356025,0.690537,3],[2,11729915,3.14578,3],[2,17335361,1.335038,3],[2,19411452,1.734015,3],[2,19203843,2.654731,3],[2,19411452,1.703325,3],[2,17127752,0.966752,3],[2,20657107,0.445013,3],[2,20657107,0.475703,3],[2,19411452,1.672634,3],[2,19411452,1.611253,3],[2,14428833,1.549872,3],[2,17127752,1.028133,3],[2,3217941,3.514066,3],[2,19203843,2.501279,3],[2,23148416,3.544757,3],[2,20657107,0.751918,3],[2,19411452,1.580563,3],[2,17335361,1.641944,3],[2,20657107,0.87468,3],[2,14428833,0.721228,3],[2,3633160,1.42711,3],[2,14428833,0.690537,3],[2,5086423,1.611253,3],[2,7162514,0.84399,3],[2,3217941,0.567775,3],[2,18373407,1.764706,3],[2,3633160,1.365729,3],[2,18373407,1.734015,3],[2,3217941,0.598465,3],[2,20449498,3.391304,3],[2,18373407,1.703325,3],[2,18373407,1.641944,3],[2,22940807,4.496164,3],[2,2387505,0.84399,3],[2,2387505,0.751918,3],[2,3217941,0.87468,3],[2,3633160,0.87468,3],[2,15051661,1.826087,3],[2,20449498,2.685422,3],[2,22940807,3.207161,3],[2,16089706,1.488491,3],[2,2387505,0.629156,3],[2,16089706,1.457801,3],[2,3633160,1.028133,3],[2,15051661,1.734015,3],[2,519023,0.84399,3],[2,519023,0.721228,3],[2,3217941,0.721228,3],[2,18373407,1.273657,3],[2,10276651,0.445013,3],[2,16089706,1.365729,3],[2,18373407,1.457801,3],[2,11937524,2.286445,3],[2,3633160,2.040921,3],[2,13598397,0.383632,3],[2,8408169,0.905371,3],[2,13598397,0.29156,3],[2,13598397,0.26087,3],[2,13598397,0.230179,3],[2,11937524,2.378517,3],[2,3633160,1.948849,3],[2,10276651,1.304348,3],[2,13598397,0.046036,3],[2,13598397,0.015345,3],[2,3840769,1.826087,3],[2,16089706,1.181586,3],[2,14428833,1.396419,3],[2,5709251,2.071611,3],[2,519023,0.199488,3],[2,14428833,0.84399,3],[2,519023,0.168798,3],[2,16089706,1.212276,3],[2,14428833,0.966752,3],[2,18373407,2.378517,3],[2,10276651,0.966752,3],[2,4463596,3.237852,3],[2,14428833,1.120205,3],[2,18373407,2.531969,3],[2,2387505,1.120205,3],[2,3840769,1.97954,3],[2,14428833,1.273657,3],[2,18373407,2.746803,3],[2,10276651,1.212276,3],[2,5709251,2.194373,3],[2,2387505,1.212276,3],[2,20449498,1.335038,3],[2,12145133,0.414322,3],[2,3217941,1.764706,3],[2,21072325,0.751918,3],[2,15051661,2.255754,3],[2,20449498,1.150895,3],[2,20449498,1.120205,3],[2,3217941,2.501279,3],[2,103805,1.242967,3],[2,3217941,1.918159,3],[2,103805,1.150895,3],[2,20449498,0.782609,3],[2,519023,1.795396,3],[2,103805,1.089514,3],[2,3217941,2.01023,3],[2,20449498,0.598465,3],[2,21072325,1.764706,3],[2,21072325,1.703325,3],[2,12145133,0.87468,3],[2,21072325,1.641944,3],[2,12145133,0.84399,3],[2,21072325,1.549872,3],[2,103805,0.138107,3],[2,12145133,0.690537,3],[2,12145133,0.659847,3],[2,21072325,1.365729,3],[2,5086423,1.519182,3],[2,17542970,1.641944,3],[2,103805,0.29156,3],[2,3217941,2.132992,3],[2,3217941,2.071611,3],[2,21072325,1.150895,3],[2,3217941,2.040921,3],[2,3217941,1.488491,3],[2,3217941,1.457801,3],[2,3217941,1.396419,3],[2,3217941,1.365729,3],[2,17542970,1.120205,3],[2,3217941,1.150895,3],[2,18373407,0.322251,3],[2,22940807,2.317136,3],[2,17542970,1.058824,3],[2,17542970,1.028133,3],[2,3217941,1.120205,3],[2,22940807,2.531969,3],[2,18373407,0.567775,3],[2,2387505,0.475703,3],[2,519023,1.273657,3],[2,18373407,0.659847,3],[2,519023,1.242967,3],[2,15051661,2.286445,3],[2,20449498,1.396419,3],[2,103805,1.611253,3],[2,3217941,1.641944,3],[2,21072325,0.537084,3],[2,103805,1.703325,3],[2,20449498,1.580563,3],[2,3217941,1.611253,3],[2,21072325,0.414322,3],[2,12145133,0.383632,3],[2,17542970,1.42711,3],[2,20449498,1.672634,3],[2,17542970,1.396419,3],[2,22940807,1.672634,3],[2,20449498,1.734015,3],[2,17542970,1.212276,3],[2,16504925,0.721228,3],[2,1972287,1.396419,3],[2,1972287,0.475703,3],[2,11937524,1.396419,3],[2,3840769,1.734015,3],[2,1972287,1.273657,3],[2,11937524,1.273657,3],[2,8823387,0.383632,3],[2,8408169,1.212276,3],[2,10276651,2.286445,3],[2,11937524,2.194373,3],[2,8408169,1.335038,3],[2,11937524,1.703325,3],[2,8408169,1.273657,3],[2,3217941,0.352941,3],[2,3633160,2.286445,3],[2,11937524,1.795396,3],[2,8823387,0.537084,3],[2,13598397,0.936061,3],[2,1972287,0.690537,3],[2,1972287,0.659847,3],[2,1972287,1.089514,3],[2,10276651,1.549872,3],[2,10276651,1.795396,3],[2,15051661,1.580563,3],[2,4671205,1.97954,3],[2,1972287,0.383632,3],[2,16089706,1.120205,3],[2,13598397,0.598465,3],[2,10276651,1.396419,3],[2,1972287,1.181586,3],[2,7162514,2.746803,3],[2,8408169,1.365729,3],[2,10276651,2.01023,3],[2,11937524,1.918159,3],[2,10276651,2.378517,3],[2,10276651,1.672634,3],[2,8408169,1.058824,3],[2,10276651,1.42711,3],[2,5501642,0.997442,4],[2,12560351,1.181586,4],[2,5501642,1.028133,4],[2,6954905,0.015345,4],[2,15674488,1.273657,4],[2,5916860,2.900256,4],[2,3217941,1.549872,4],[2,17958188,4.066496,4],[2,10899479,1.150895,4],[2,20657107,1.97954,4],[2,11107088,1.242967,4],[2,13390788,2.255754,4],[2,5501642,1.058824,4],[2,16089706,1.028133,4],[2,11937524,1.335038,4],[2,14013615,1.089514,4],[2,5501642,1.089514,4],[2,5501642,1.212276,4],[2,10276651,2.163683,4],[2,7162514,1.672634,4],[2,15674488,0.997442,4],[2,5916860,1.273657,4],[2,5501642,1.150895,4],[2,103805,1.641944,4],[2,15051661,1.488491,4],[2,7785342,2.409207,4],[2,14013615,1.304348,4],[2,14013615,1.212276,4],[2,10899479,0.782609,4],[2,4671205,1.181586,4],[2,12560351,0.87468,4],[2,11107088,1.028133,4],[2,3425550,1.948849,4],[2,16297316,0.782609,4],[2,12975570,0.598465,4],[2,12560351,0.936061,4],[2,6332078,2.838875,4],[2,19826670,1.365729,4],[2,5916860,1.089514,4],[2,14013615,0.29156,4],[2,11314697,1.028133,4],[2,11314697,0.997442,4],[2,20657107,1.120205,4],[2,3217941,1.273657,4],[2,16920143,1.028133,4],[2,20657107,1.089514,4],[2,8200560,2.317136,4],[2,12352742,2.102302,4],[2,5916860,3.820972,4],[2,20657107,0.936061,4],[2,4048378,2.531969,4],[2,16920143,1.089514,4],[2,11937524,1.519182,4],[2,12352742,2.071611,4],[2,10899479,1.641944,4],[2,11314697,0.629156,4],[2,1141850,0.936061,4],[2,20657107,0.721228,4],[2,15674488,1.580563,4],[2,20657107,0.659847,4],[2,16089706,0.87468,4],[2,16089706,0.84399,4],[2,11937524,1.580563,4],[2,3217941,1.089514,4],[2,10899479,1.672634,4],[2,15466879,1.580563,4],[2,20657107,0.598465,4],[2,11107088,0.84399,4],[2,7162514,1.918159,4],[2,15674488,1.335038,4],[2,20449498,1.703325,4],[2,12560351,1.304348,4],[2,2802723,6.429668,4],[2,11107088,0.751918,4],[2,21902762,3.176471,4],[2,11937524,1.42711,4],[2,20449498,1.795396,4],[2,14013615,0.905371,4],[2,8200560,2.56266,4],[2,11107088,0.445013,4],[2,16297316,0.721228,4],[2,15051661,1.42711,4],[2,7162514,2.01023,4],[2,11937524,1.457801,4],[2,17958188,0.751918,4],[2,15051661,1.396419,4],[2,17958188,0.445013,4],[2,2802723,1.212276,4],[2,11314697,1.212276,4],[2,20657107,1.304348,4],[2,11314697,1.150895,4],[2,11314697,1.120205,4],[2,1141850,1.089514,4],[2,3633160,0.445013,4],[2,21902762,2.777494,4],[2,17958188,1.887468,4],[2,16297316,0.936061,4],[2,18996234,0.87468,4],[2,311414,1.089514,4],[2,17958188,1.519182,4],[2,7785342,2.01023,4],[2,5501642,1.457801,4],[2,9653824,1.795396,4],[2,311414,1.058824,4],[2,1557068,1.488491,4],[2,17958188,2.01023,4],[2,16297316,0.997442,4],[2,17958188,1.42711,4],[2,1557068,1.396419,4],[2,1557068,1.365729,4],[2,18996234,0.905371,4],[2,17958188,2.163683,4],[2,10276651,2.501279,4],[2,9653824,1.734015,4],[2,17958188,2.317136,4],[2,103805,0.905371,4],[2,16297316,1.028133,4],[2,103805,0.936061,4],[2,16920143,0.782609,4],[2,1557068,1.150895,4],[2,1557068,1.120205,4],[2,103805,0.997442,4],[2,6124469,0.445013,4],[2,6124469,0.199488,4],[2,11937524,1.028133,4],[2,6332078,1.97954,4],[2,2179896,0.506394,4],[2,934241,0.659847,4],[2,8615778,0.936061,4],[2,103805,0.015345,4],[2,17958188,1.795396,4],[2,5916860,0.383632,4],[2,934241,0.751918,4],[2,934241,0.966752,4],[2,934241,0.997442,4],[2,6954905,2.071611,4],[2,11937524,1.089514,4],[2,934241,1.242967,4],[2,14013615,0.230179,4],[2,1557068,2.01023,4],[2,934241,1.365729,4],[2,11937524,0.936061,4],[2,17958188,1.856777,4],[2,934241,1.457801,4],[2,7785342,2.102302,4],[2,7577733,0.629156,4],[2,311414,1.181586,4],[2,1557068,1.734015,4],[2,2179896,0.782609,4],[2,15466879,0.936061,4],[2,12975570,0.936061,4],[2,20449498,1.028133,4],[2,20449498,1.058824,4],[2,1557068,0.29156,4],[2,4048378,2.347826,4],[2,1557068,0.230179,4],[2,15466879,1.058824,4],[2,2179896,1.887468,4],[2,16297316,0.84399,4],[2,11107088,1.580563,4],[2,14221224,1.396419,4],[2,6332078,2.255754,4],[2,6954905,0.138107,4],[2,15674488,0.84399,4],[2,2179896,2.040921,4],[2,2802723,1.365729,4],[2,11107088,1.488491,4],[2,11107088,1.396419,4],[2,7785342,1.734015,4],[2,5916860,0.966752,4],[2,10899479,0.537084,4],[2,5916860,0.997442,4],[2,11107088,1.304348,4],[2,4671205,1.335038,4],[2,10899479,0.598465,4],[2,6332078,2.716113,4],[2,19826670,1.672634,4],[2,10276651,2.255754,4],[2,1557068,1.028133,4],[2,1557068,0.997442,4],[2,13390788,0.107417,4],[2,20449498,0.690537,4],[2,7577733,0.567775,4],[2,311414,0.690537,4],[2,1557068,0.84399,4],[2,20449498,0.721228,4],[2,12767961,0.629156,4],[2,10276651,2.654731,4],[2,13390788,0.199488,4],[2,12975570,1.028133,4],[2,10276651,2.777494,4],[2,17958188,2.869565,4],[2,15051661,1.549872,4],[2,13390788,0.322251,4],[2,311414,0.475703,4],[2,3217941,2.439898,4],[2,15466879,0.813299,4],[2,15466879,0.84399,4],[2,11937524,1.212276,4],[2,103805,1.273657,4],[2,2179896,1.641944,4],[2,2179896,1.672634,4],[2,3217941,1.826087,4],[2,14013615,0.414322,4],[2,18996234,1.856777,4],[2,22110371,1.242967,4],[2,8200560,1.396419,4],[2,16297316,3.053708,4],[2,1349459,1.519182,4],[2,1349459,1.457801,4],[2,23356025,1.488491,4],[2,23356025,1.519182,4],[2,4255987,0.506394,4],[2,23356025,1.580563,4],[2,10276651,1.058824,4],[2,8408169,2.685422,4],[2,9446215,1.058824,4],[2,10276651,1.120205,4],[2,17335361,0.997442,4],[2,4255987,1.150895,4],[2,9653824,1.580563,4],[2,9446215,1.181586,4],[2,4255987,1.120205,4],[2,9446215,1.242967,4],[2,9446215,1.273657,4],[2,3425550,1.795396,4],[2,9446215,1.335038,4],[2,11937524,2.163683,4],[2,11937524,2.746803,4],[2,14221224,1.641944,4],[2,19826670,0.506394,4],[2,19826670,0.445013,4],[2,4671205,2.163683,4],[2,11937524,2.040921,4],[2,2387505,1.058824,4],[2,23356025,1.396419,4],[2,3425550,0.905371,4],[2,9653824,1.058824,4],[2,22110371,0.29156,4],[2,13390788,0.751918,4],[2,14844052,1.365729,4],[2,3425550,0.84399,4],[2,22110371,0.782609,4],[2,22110371,0.813299,4],[2,3633160,1.519182,4],[2,8200560,1.641944,4],[2,16297316,1.887468,4],[2,14844052,0.997442,4],[2,3425550,0.782609,4],[2,14013615,0.537084,4],[2,1349459,1.549872,4],[2,8200560,1.611253,4],[2,4255987,1.703325,4],[2,8200560,1.519182,4],[2,22110371,1.028133,4],[2,8200560,1.457801,4],[2,18996234,0.475703,4],[2,14221224,1.856777,4],[2,3633160,1.918159,4],[2,4255987,0.936061,4],[2,4671205,0.352941,4],[2,4671205,0.383632,4],[2,4048378,0.629156,4],[2,1349459,0.813299,4],[2,4048378,0.659847,4],[2,4255987,0.87468,4],[2,4048378,0.690537,4],[2,8200560,0.690537,4],[2,4255987,0.782609,4],[2,2387505,1.365729,4],[2,4671205,0.445013,4],[2,1349459,0.966752,4],[2,5916860,1.580563,4],[2,18996234,0.659847,4],[2,9653824,1.457801,4],[2,8200560,0.506394,4],[2,3425550,1.396419,4],[2,1349459,0.997442,4],[2,3425550,1.365729,4],[2,2802723,2.132992,4],[2,4671205,0.629156,4],[2,5916860,1.734015,4],[2,9653824,1.42711,4],[2,9446215,1.42711,4],[2,4255987,1.028133,4],[2,22110371,1.764706,4],[2,4671205,0.84399,4],[2,3425550,1.764706,4],[2,4048378,0.352941,4],[2,3633160,1.734015,4],[2,8200560,1.120205,4],[2,15051661,1.120205,4],[2,22110371,2.255754,4],[2,4048378,0.383632,4],[2,9653824,1.304348,4],[2,4048378,0.414322,4],[2,4048378,0.445013,4],[2,5916860,1.396419,4],[2,1349459,0.537084,4],[2,8200560,1.089514,4],[2,3217941,2.59335,4],[2,3425550,1.734015,4],[2,23356025,2.286445,4],[2,16089706,2.194373,4],[2,8200560,1.058824,4],[2,17335361,0.721228,4],[2,10276651,1.242967,4],[2,22110371,2.409207,4],[2,9446215,1.887468,4],[2,2387505,1.304348,4],[2,4671205,1.150895,4],[2,16089706,0.690537,4],[2,23356025,0.997442,4],[2,22317980,0.997442,4],[2,12352742,1.304348,4],[2,22317980,0.936061,4],[2,22317980,0.87468,4],[2,17335361,1.273657,4],[2,16297316,1.396419,4],[2,16089706,0.659847,4],[2,3633160,0.997442,4],[2,16089706,0.629156,4],[2,18581016,0.751918,4],[2,4048378,2.838875,4],[2,2802723,0.629156,4],[2,12352742,1.273657,4],[2,12352742,1.242967,4],[2,18581016,0.813299,4],[2,3217941,0.659847,4],[2,18581016,0.84399,4],[2,19826670,0.966752,4],[2,22317980,0.567775,4],[2,18581016,0.905371,4],[2,3633160,1.120205,4],[2,22317980,0.322251,4],[2,21695153,1.212276,4],[2,20657107,0.506394,4],[2,16920143,1.242967,4],[2,16920143,1.335038,4],[2,3217941,0.997442,4],[2,12352742,1.795396,4],[2,19826670,1.150895,4],[2,4671205,0.230179,4],[2,3633160,0.721228,4],[2,16089706,1.058824,4],[2,16920143,1.457801,4],[2,19203843,2.685422,4],[2,15674488,1.672634,4],[2,4048378,1.856777,4],[2,1141850,0.905371,4],[2,21902762,2.071611,4],[2,22317980,1.488491,4],[2,16089706,0.813299,4],[2,16089706,1.611253,4],[2,22317980,1.457801,4],[2,12352742,1.365729,4],[2,3425550,0.659847,4],[2,21695153,0.322251,4],[2,2802723,0.87468,4],[2,22317980,1.304348,4],[2,22317980,1.212276,4],[2,15674488,1.795396,4],[2,22317980,1.089514,4],[2,18996234,1.304348,4],[2,13390788,1.089514,4],[2,13390788,1.028133,4],[2,16089706,1.089514,4],[2,3425550,0.997442,4],[2,2387505,0.966752,4],[2,19826670,0.782609,4],[2,16920143,2.102302,4],[2,3217941,0.383632,4],[2,12352742,0.84399,4],[2,12352742,0.813299,4],[2,16297316,1.641944,4],[2,18581016,1.457801,4],[2,10276651,0.905371,4],[2,19826670,0.629156,4],[2,18581016,1.488491,4],[2,7785342,2.808184,4],[2,18581016,1.549872,4],[2,15051661,1.273657,4],[2,21902762,0.598465,4],[2,8200560,1.734015,4],[2,19826670,0.598465,4],[2,13390788,0.84399,4],[2,23356025,1.335038,4],[2,14844052,1.549872,4],[2,19826670,0.567775,4],[2,21902762,0.506394,4],[2,4048378,2.900256,4],[2,21695153,1.242967,4],[2,18581016,0.997442,4],[2,21695153,1.304348,4],[2,10276651,0.690537,4],[2,16089706,0.537084,4],[2,2802723,0.537084,4],[2,23356025,1.181586,4],[2,10276651,0.813299,4],[2,10899479,2.040921,4],[2,4671205,1.089514,4],[2,4048378,4.127877,4],[2,12352742,1.150895,4],[2,16920143,1.97954,4],[2,12767961,1.028133,4],[2,12352742,1.089514,4],[2,4048378,2.961637,4],[2,2387505,0.87468,4],[2,16297316,0.322251,4],[2,21695153,1.703325,4],[2,2802723,0.475703,4],[2,2387505,0.905371,4],[2,12352742,0.905371,4],[2,21695153,1.764706,4],[2,19826670,0.84399,4],[2,13390788,1.120205,4],[2,21695153,1.856777,4],[2,726632,1.150895,4],[2,726632,1.181586,4],[2,10484260,1.335038,4],[2,12145133,0.046036,4],[2,519023,0.506394,4],[2,10484260,1.181586,4],[2,10484260,1.150895,4],[2,10484260,1.120205,4],[2,12145133,0.107417,4],[2,519023,0.690537,4],[2,10484260,0.997442,4],[2,18788625,3.237852,4],[2,726632,2.102302,4],[2,10484260,0.905371,4],[2,18373407,1.058824,4],[2,10484260,0.84399,4],[2,19203843,0.537084,4],[2,23148416,0.199488,4],[2,13183179,0.015345,4],[2,8823387,0.966752,4],[2,20241889,1.335038,4],[2,8823387,0.997442,4],[2,7370124,1.519182,4],[2,726632,2.501279,4],[2,23148416,0.322251,4],[2,17542970,0.751918,4],[2,18373407,0.905371,4],[2,13183179,0.322251,4],[2,18373407,0.87468,4],[2,23148416,0.475703,4],[2,13183179,0.414322,4],[2,5294032,1.273657,4],[2,8408169,1.611253,4],[2,6539687,0.598465,4],[2,5709251,0.84399,4],[2,10069042,1.611253,4],[2,9238606,0.87468,4],[2,12145133,2.531969,4],[2,8408169,1.734015,4],[2,18996234,6.214834,4],[2,7162514,1.028133,4],[2,13598397,1.42711,4],[2,13598397,1.457801,4],[2,5294032,0.966752,4],[2,18373407,1.611253,4],[2,14428833,0.475703,4],[2,5294032,0.87468,4],[2,4463596,1.212276,4],[2,19203843,0.046036,4],[2,2595114,1.273657,4],[2,726632,0.506394,4],[2,726632,0.537084,4],[2,19411452,3.268542,4],[2,18373407,1.519182,4],[2,726632,0.629156,4],[2,21279934,3.974425,4],[2,519023,0.322251,4],[2,4463596,1.365729,4],[2,12145133,2.654731,4],[2,726632,0.721228,4],[2,12145133,2.685422,4],[2,726632,0.813299,4],[2,726632,1.058824,4],[2,18373407,0.475703,4],[2,13183179,1.335038,4],[2,13183179,1.365729,4],[2,13183179,1.457801,4],[2,14221224,0.414322,4],[2,20864716,0.84399,4],[2,20864716,0.690537,4],[2,20034280,2.071611,4],[2,20864716,0.629156,4],[2,20864716,0.506394,4],[2,3010332,2.501279,4],[2,23148416,1.181586,4],[2,23148416,1.212276,4],[2,726632,3.483376,4],[2,20864716,0.322251,4],[2,19411452,2.347826,4],[2,7370124,1.089514,4],[2,20034280,1.519182,4],[2,8408169,2.163683,4],[2,6747296,3.084399,4],[2,20034280,1.273657,4],[2,23148416,1.856777,4],[2,20034280,1.212276,4],[2,726632,3.667519,4],[2,15882097,0.537084,4],[2,6747296,2.900256,4],[2,17542970,1.150895,4],[2,7370124,0.936061,4],[2,7370124,0.84399,4],[2,23148416,2.040921,4],[2,3010332,2.624041,4],[2,12767961,1.948849,4],[2,7370124,1.396419,4],[2,18373407,0.813299,4],[2,8823387,1.273657,4],[2,13183179,0.537084,4],[2,18373407,0.782609,4],[2,13183179,0.567775,4],[2,19619061,0.690537,4],[2,726632,2.930946,4],[2,9238606,3.207161,4],[2,8823387,1.304348,4],[2,13183179,0.690537,4],[2,7370124,1.335038,4],[2,20034280,2.838875,4],[2,5086423,0.782609,4],[2,13183179,0.782609,4],[2,13183179,0.84399,4],[2,23148416,0.782609,4],[2,726632,3.176471,4],[2,519023,1.212276,4],[2,2595114,1.181586,4],[2,22940807,2.716113,4],[2,20241889,2.347826,4],[2,13183179,0.997442,4],[2,13183179,1.028133,4],[2,15259270,1.089514,4],[2,15259270,1.028133,4],[2,13183179,1.120205,4],[2,13183179,1.150895,4],[2,16504925,0.414322,4],[2,17542970,0.966752,4],[2,23148416,0.87468,4],[2,13183179,1.273657,4],[2,7992951,1.335038,4],[2,1972287,1.120205,4],[2,10691869,1.242967,4],[2,10691869,1.273657,4],[2,2595114,2.040921,4],[2,1764677,1.549872,4],[2,12145133,1.672634,4],[2,4463596,0.721228,4],[2,7992951,1.304348,4],[2,2595114,1.948849,4],[2,3010332,0.813299,4],[2,4878814,0.629156,4],[2,3010332,0.905371,4],[2,1764677,1.242967,4],[2,8823387,0.475703,4],[2,1764677,1.181586,4],[2,5709251,2.102302,4],[2,7162514,0.936061,4],[2,1764677,1.058824,4],[2,1764677,1.028133,4],[2,12145133,1.703325,4],[2,1764677,0.966752,4],[2,12145133,1.795396,4],[2,8823387,0.598465,4],[2,10691869,1.549872,4],[2,1764677,0.782609,4],[2,7162514,0.690537,4],[2,3840769,1.887468,4],[2,4878814,0.84399,4],[2,8408169,0.690537,4],[2,1764677,0.659847,4],[2,11522306,1.611253,4],[2,3010332,0.751918,4],[2,13598397,0.199488,4],[2,13598397,0.537084,4],[2,8408169,0.84399,4],[2,4463596,0.475703,4],[2,13598397,0.629156,4],[2,12145133,1.457801,4],[2,8408169,1.150895,4],[2,13598397,0.813299,4],[2,1972287,0.629156,4],[2,10691869,0.475703,4],[2,10691869,0.629156,4],[2,7992951,1.764706,4],[2,11522306,1.089514,4],[2,10691869,0.87468,4],[2,11522306,1.028133,4],[2,8823387,0.199488,4],[2,1972287,0.84399,4],[2,8408169,1.42711,4],[2,10069042,0.475703,4],[2,11522306,0.936061,4],[2,1972287,0.015345,4],[2,7992951,1.549872,4],[2,10691869,1.089514,4],[2,8823387,0.29156,4],[2,10069042,0.537084,4],[2,14428833,0.383632,4],[2,7992951,2.132992,4],[2,18788625,4.250639,4],[2,7992951,1.365729,4],[2,1764677,1.764706,4],[2,4878814,1.365729,4],[2,7992951,1.181586,4],[2,22733198,1.42711,4],[2,5294032,1.734015,4],[2,519023,0.230179,4],[2,10069042,1.089514,4],[2,10069042,1.120205,4],[2,20241889,0.230179,4],[2,18788625,3.575448,4],[2,5294032,1.641944,4],[2,9238606,1.273657,4],[2,21279934,1.549872,4],[2,22733198,1.150895,4],[2,3840769,1.120205,4],[2,7992951,1.058824,4],[2,7992951,1.028133,4],[2,22733198,0.997442,4],[2,12145133,2.255754,4],[2,3840769,0.966752,4],[2,3840769,0.936061,4],[2,5294032,1.396419,4],[2,3840769,0.813299,4],[2,5709251,3.391304,4],[2,22733198,0.721228,4],[2,3840769,0.659847,4],[2,6539687,0.936061,4],[2,3010332,1.304348,4],[2,7992951,0.84399,4],[2,10069042,1.396419,4],[2,6539687,0.87468,4],[2,6539687,0.690537,4],[2,10069042,1.457801,4],[2,1764677,0.629156,4],[2,4878814,0.966752,4],[2,3010332,0.966752,4],[2,4878814,1.028133,4],[2,21279934,0.168798,4],[2,22733198,2.132992,4],[2,2595114,1.611253,4],[2,9238606,1.764706,4],[2,18788625,3.606138,4],[2,6539687,1.580563,4],[2,1972287,1.918159,4],[2,3010332,0.997442,4],[2,20241889,0.015345,4],[2,519023,0.138107,4],[2,22733198,1.887468,4],[2,7992951,1.212276,4],[2,22733198,1.795396,4],[2,6539687,1.488491,4],[2,18373407,2.255754,4],[2,9238606,1.611253,4],[2,21279934,0.721228,4],[2,9238606,1.549872,4],[2,14428833,0.813299,4],[2,21279934,0.751918,4],[2,14221224,0.905371,4],[2,5709251,3.11509,4],[2,21279934,0.905371,4],[2,21279934,0.936061,4],[2,21279934,0.997442,4],[2,10069042,1.058824,4],[2,6747296,6.030691,4],[2,13598397,1.028133,4],[2,17127752,1.42711,4],[2,21487543,1.611253,4],[2,9030997,2.347826,4],[2,18165798,2.194373,4],[2,6124469,1.549872,4],[2,17542970,1.97954,4],[2,9030997,2.225064,4],[2,21487543,1.856777,4],[2,9030997,2.163683,4],[2,18788625,0.383632,4],[2,16504925,1.42711,4],[2,6954905,1.273657,4],[2,21072325,0.721228,4],[2,519023,1.856777,4],[2,6332078,1.181586,4],[2,16504925,1.396419,4],[2,6332078,1.918159,4],[2,21487543,2.132992,4],[2,22525589,1.120205,4],[2,6332078,1.212276,4],[2,8615778,0.659847,4],[2,6747296,1.856777,4],[2,519023,2.132992,4],[2,21072325,0.782609,4],[2,14013615,1.488491,4],[2,6954905,1.519182,4],[2,5086423,1.181586,4],[2,6124469,1.826087,4],[2,2595114,0.813299,4],[2,6332078,0.936061,4],[2,21487543,0.537084,4],[2,9861433,0.721228,4],[2,15882097,1.457801,4],[2,6332078,0.997442,4],[2,21487543,0.721228,4],[2,7577733,1.028133,4],[2,21487543,0.782609,4],[2,21487543,0.84399,4],[2,21072325,0.567775,4],[2,16504925,0.997442,4],[2,22940807,1.365729,4],[2,15882097,1.580563,4],[2,6124469,1.396419,4],[2,16504925,1.120205,4],[2,19203843,1.948849,4],[2,9030997,2.808184,4],[2,9030997,2.746803,4],[2,21487543,1.212276,4],[2,18165798,2.255754,4],[2,17750579,0.659847,4],[2,12145133,0.445013,4],[2,21487543,1.304348,4],[2,9030997,2.531969,4],[2,22525589,1.611253,4],[2,8408169,2.194373,4],[2,17750579,0.84399,4],[2,22940807,1.120205,4],[2,8615778,0.475703,4],[2,21487543,3.299233,4],[2,6747296,1.549872,4],[2,7577733,2.378517,4],[2,6747296,0.751918,4],[2,19411452,0.751918,4],[2,6332078,1.42711,4],[2,9030997,1.089514,4],[2,19411452,0.537084,4],[2,6747296,0.813299,4],[2,17127752,2.040921,4],[2,16504925,1.058824,4],[2,18165798,1.273657,4],[2,6747296,1.304348,4],[2,18165798,1.242967,4],[2,22940807,0.230179,4],[2,16504925,1.273657,4],[2,17750579,1.304348,4],[2,22940807,0.138107,4],[2,21487543,3.882353,4],[2,14844052,2.225064,4],[2,5501642,1.97954,4],[2,14221224,0.721228,4],[2,19411452,0.26087,4],[2,14844052,2.163683,4],[2,6747296,0.997442,4],[2,19203843,1.304348,4],[2,18788625,0.26087,4],[2,311414,2.869565,4],[2,22525589,0.690537,4],[2,22940807,0.322251,4],[2,2595114,0.598465,4],[2,22525589,0.567775,4],[2,19203843,1.764706,4],[2,22940807,1.335038,4],[2,19411452,0.936061,4],[2,519023,2.071611,4],[2,17127752,1.580563,4],[2,12145133,0.506394,4],[2,9030997,1.549872,4],[2,21072325,3.084399,4],[2,6747296,0.629156,4],[2,12145133,0.537084,4],[2,9030997,1.519182,4],[2,18165798,1.734015,4],[2,6747296,1.734015,4],[2,23148416,4.925831,4],[2,9030997,1.457801,4],[2,19411452,0.84399,4],[2,6954905,1.734015,4],[2,2595114,0.475703,4],[2,12145133,0.567775,4],[2,6954905,1.887468,4],[2,2595114,0.414322,4],[2,16504925,1.335038,4],[2,18165798,1.549872,4],[2,18165798,1.519182,4],[2,18165798,1.488491,4],[2,19203843,0.966752,4],[2,14636443,1.212276,4],[2,14636443,1.242967,4],[2,519023,1.641944,4],[2,20034280,0.567775,4],[2,12145133,0.721228,4],[2,6332078,0.659847,4],[2,6124469,0.87468,4],[2,22940807,0.813299,4],[2,14636443,1.42711,4],[2,22940807,1.826087,4],[2,17542970,1.273657,4],[2,14636443,1.457801,4],[2,11729915,2.654731,4],[2,6124469,0.905371,4],[2,16712534,1.641944,4],[2,19619061,1.672634,4],[2,7162514,1.304348,4],[2,16712534,1.580563,4],[2,16504925,0.751918,4],[2,20034280,0.383632,4],[2,16712534,1.519182,4],[2,16712534,1.457801,4],[2,16712534,1.304348,4],[2,21072325,0.138107,4],[2,18788625,0.997442,4],[2,21072325,0.168798,4],[2,18165798,0.721228,4],[2,21072325,1.826087,4],[2,19411452,2.01023,4],[2,519023,1.549872,4],[2,11729915,1.396419,4],[2,519023,1.580563,4],[2,3840769,2.808184,4],[2,2595114,1.089514,4],[2,19619061,1.089514,4],[2,7785342,0.199488,4],[2,7785342,0.230179,4],[2,15882097,0.751918,4],[2,19619061,1.242967,4],[2,17127752,0.690537,4],[2,19619061,1.396419,4],[2,19619061,1.42711,4],[2,7785342,0.537084,4],[2,5501642,1.764706,4],[2,7785342,0.598465,4],[2,14636443,0.629156,4],[2,20241889,3.207161,4],[2,14636443,0.721228,4],[2,2179896,0.322251,4],[2,22940807,0.966752,4],[2,15882097,0.813299,4],[2,3010332,3.452685,4],[2,6332078,0.567775,4],[2,23148416,2.838875,4],[2,3010332,2.808184,4],[2,22940807,0.690537,4],[2,6954905,0.537084,4],[2,14013615,1.580563,4],[2,22940807,0.659847,4],[2,9861433,1.273657,4],[2,16712534,0.87468,4],[2,14221224,0.598465,4],[2,6954905,0.659847,4],[2,2179896,0.199488,4],[2,14221224,0.629156,4],[2,18788625,0.87468,4],[2,19203843,1.028133,4],[2,21072325,1.242967,4],[2,15882097,1.273657,4],[2,21072325,0.475703,4],[2,22940807,0.537084,4],[2,19411452,1.396419,4],[2,22940807,0.506394,4],[2,16712534,0.659847,4],[2,21487543,0.076726,4],[2,7785342,1.242967,4],[2,9861433,1.058824,4],[2,311414,4.434783,4],[2,21487543,0.26087,4],[2,15882097,1.396419,4],[2,21487543,0.322251,4],[2,9861433,0.936061,4],[2,7785342,0.997442,4],[2,15882097,1.058824,4],[2,20034280,0.138107,4],[2,15882097,1.120205,4],[2,8615778,0.87468,4],[2,20034280,0.076726,4],[2,5086423,0.966752,4],[2,20034280,0.015345,4],[2,16712534,1.120205,4],[2,7785342,1.120205,4],[2,7785342,1.150895,4],[2,19411452,1.641944,4],[2,16712534,1.028133,4],[2,21072325,2.317136,4],[2,519023,2.56266,4],[2,9861433,1.365729,4],[2,311414,2.01023,4],[2,19619061,1.97954,4],[2,103805,0.046036,5],[2,13598397,0.076726,5],[2,22940807,1.181586,5],[2,103805,0.87468,5],[2,103805,0.26087,5],[2,16504925,1.150895,5],[2,18996234,0.506394,5],[2,16297316,2.040921,5],[2,10276651,1.273657,5],[2,17958188,1.488491,5],[2,103805,0.322251,5],[2,4463596,0.690537,5],[2,4463596,0.567775,5],[2,17958188,1.304348,5],[2,11107088,2.01023,5],[2,4463596,0.629156,5],[2,17958188,1.273657,5],[2,10276651,1.365729,5],[2,103805,0.506394,5],[2,4463596,0.598465,5],[2,3010332,0.84399,5],[2,103805,0.107417,5],[2,103805,0.475703,5],[2,519023,0.629156,5],[2,16504925,1.457801,5],[2,17542970,0.690537,5],[2,16920143,1.703325,5],[2,14221224,0.966752,5],[2,16920143,1.611253,5],[2,11107088,1.058824,5],[2,16504925,0.905371,5],[2,17542970,0.721228,5],[2,3217941,0.751918,5],[2,3217941,0.782609,5],[2,3217941,0.813299,5],[2,17542970,0.87468,5],[2,16504925,0.84399,5],[2,16504925,0.322251,5],[2,11107088,0.782609,5],[2,3217941,1.242967,5],[2,16504925,0.629156,5],[2,17958188,0.230179,5],[2,3217941,1.181586,5],[2,16920143,1.150895,5],[2,17542970,1.181586,5],[2,16504925,1.734015,5],[2,16504925,0.537084,5],[2,17958188,0.659847,5],[2,519023,2.746803,5],[2,19826670,1.181586,5],[2,16920143,1.304348,5],[2,15259270,0.966752,5],[2,15051661,1.856777,5],[2,3217941,0.905371,5],[2,11107088,0.598465,5],[2,11107088,0.659847,5],[2,3010332,0.936061,5],[2,16504925,1.089514,5],[2,22940807,0.015345,5],[2,19826670,1.519182,5],[2,4463596,0.84399,5],[2,6539687,1.734015,5],[2,22110371,1.150895,5],[2,22110371,1.089514,5],[2,8408169,0.26087,5],[2,22110371,0.966752,5],[2,22110371,0.87468,5],[2,22110371,0.721228,5],[2,22110371,0.383632,5],[2,3010332,3.299233,5],[2,19826670,0.537084,5],[2,17958188,1.150895,5],[2,519023,0.598465,5],[2,519023,0.352941,5],[2,519023,2.378517,5],[2,19826670,1.42711,5],[2,10276651,0.84399,5],[2,4463596,1.242967,5],[2,3217941,1.734015,5],[2,6539687,0.29156,5],[2,4463596,1.120205,5],[2,6539687,0.629156,5],[2,3010332,1.335038,5],[2,9653824,0.414322,5],[2,4463596,1.028133,5],[2,11107088,1.549872,5],[2,17958188,1.058824,5],[2,6539687,1.150895,5],[2,17958188,1.089514,5],[2,23356025,0.659847,5],[2,23356025,0.598465,5],[2,12352742,1.457801,5],[2,22317980,1.764706,5],[2,23356025,0.445013,5],[2,23356025,0.322251,5],[2,23356025,0.107417,5],[2,12352742,1.764706,5],[2,22317980,2.286445,5],[2,17127752,1.058824,5],[2,19619061,2.071611,5],[2,19411452,1.457801,5],[2,4671205,0.199488,5],[2,8408169,2.501279,5],[2,9861433,0.966752,5],[2,9861433,0.905371,5],[2,9861433,0.659847,5],[2,9861433,0.567775,5],[2,6332078,1.058824,5],[2,6332078,1.089514,5],[2,17750579,0.352941,5],[2,12560351,1.212276,5],[2,17750579,0.475703,5],[2,10899479,1.181586,5],[2,10899479,1.089514,5],[2,10899479,0.997442,5],[2,17750579,0.966752,5],[2,14844052,1.304348,5],[2,13390788,0.721228,5],[2,23148416,0.936061,5],[2,23148416,1.150895,5],[2,14844052,1.641944,5],[2,7370124,1.150895,5],[2,17127752,0.414322,5],[2,7370124,0.997442,5],[2,19203843,0.813299,5],[2,12352742,1.028133,5],[2,7370124,0.782609,5],[2,7370124,0.659847,5],[2,19619061,0.905371,5],[2,19619061,0.966752,5],[2,19203843,0.87468,5],[2,19619061,1.028133,5],[2,19619061,1.212276,5],[2,7785342,0.751918,5],[2,17127752,0.721228,5],[2,6332078,0.537084,5],[2,7785342,0.782609,5],[2,17127752,0.813299,5],[2,19619061,1.641944,5],[2,7785342,0.966752,5],[2,23356025,0.936061,5],[2,23356025,0.905371,5],[2,12352742,1.396419,5],[2,22317980,1.580563,5],[2,311414,2.716113,5],[2,23148416,6.644501,5],[2,14844052,1.97954,5],[2,8615778,1.120205,5],[2,934241,1.549872,5],[2,934241,1.42711,5],[2,6124469,1.42711,5],[2,934241,1.304348,5],[2,7577733,0.997442,5],[2,8615778,0.813299,5],[2,311414,1.365729,5],[2,7577733,0.659847,5],[2,934241,1.028133,5],[2,7577733,0.936061,5],[2,311414,1.519182,5],[2,934241,0.84399,5],[2,934241,0.813299,5],[2,6124469,1.028133,5],[2,934241,0.690537,5],[2,934241,0.629156,5],[2,934241,0.598465,5],[2,7577733,0.690537,5],[2,934241,0.537084,5],[2,934241,0.322251,5],[2,7577733,0.782609,5],[2,6124469,0.690537,5],[2,6124469,0.26087,5],[2,6124469,0.475703,5],[2,17750579,1.028133,5],[2,22525589,1.150895,5],[2,22525589,0.997442,5],[2,17127752,1.488491,5],[2,22525589,0.936061,5],[2,22525589,0.721228,5],[2,12560351,0.690537,5],[2,22525589,0.659847,5],[2,22525589,0.445013,5],[2,6332078,2.286445,5],[2,12767961,0.721228,5],[2,22525589,0.168798,5],[2,17750579,1.181586,5],[2,15466879,1.242967,5],[2,7577733,0.475703,5],[2,15466879,1.150895,5],[2,6332078,1.335038,5],[2,19411452,0.813299,5],[2,7577733,0.537084,5],[2,15466879,0.966752,5],[2,19411452,0.383632,5],[2,19411452,0.076726,5],[2,19411452,0.046036,5],[2,14221224,0.690537,5],[2,311414,0.966752,5],[2,17750579,1.42711,5],[2,19203843,1.519182,5],[2,8615778,0.29156,5],[2,4878814,0.997442,5],[2,10069042,0.87468,5],[2,3010332,0.26087,5],[2,18996234,0.936061,5],[2,18996234,0.966752,5],[2,4878814,1.212276,5],[2,6124469,6.153453,5],[2,22110371,4.342711,5],[2,10069042,0.997442,5],[2,4671205,1.641944,5],[2,13390788,0.230179,5],[2,13390788,0.29156,5],[2,18996234,1.028133,5],[2,22733198,1.856777,5],[2,22733198,1.764706,5],[2,14221224,1.42711,5],[2,22733198,1.734015,5],[2,13390788,0.352941,5],[2,10276651,3.11509,5],[2,22733198,1.549872,5],[2,13390788,0.383632,5],[2,13390788,0.414322,5],[2,22733198,1.335038,5],[2,22733198,1.273657,5],[2,1141850,0.966752,5],[2,8408169,1.488491,5],[2,22733198,0.905371,5],[2,18996234,0.537084,5],[2,8408169,0.997442,5],[2,8408169,1.028133,5],[2,3010332,0.721228,5],[2,10691869,0.721228,5],[2,10276651,1.641944,5],[2,18996234,0.721228,5],[2,3010332,0.690537,5],[2,3010332,0.659847,5],[2,4878814,0.475703,5],[2,10069042,0.567775,5],[2,10276651,1.856777,5],[2,3010332,0.598465,5],[2,10276651,2.040921,5],[2,10069042,0.721228,5],[2,10276651,2.102302,5],[2,7785342,2.439898,5],[2,3010332,0.567775,5],[2,3010332,0.537084,5],[2,10691869,1.457801,5],[2,10069042,0.751918,5],[2,10276651,2.194373,5],[2,10069042,0.813299,5],[2,4878814,0.751918,5],[2,4878814,0.813299,5],[2,3217941,0.107417,5],[2,3010332,0.445013,5],[2,3010332,0.414322,5],[2,17335361,0.445013,5],[2,10484260,0.966752,5],[2,10484260,0.936061,5],[2,7370124,1.734015,5],[2,4255987,0.997442,5],[2,10484260,0.567775,5],[2,19619061,0.567775,5],[2,23356025,2.102302,5],[2,17335361,0.813299,5],[2,23148416,0.352941,5],[2,19619061,0.629156,5],[2,23148416,0.383632,5],[2,23148416,0.445013,5],[2,726632,2.838875,5],[2,19203843,0.598465,5],[2,23356025,1.856777,5],[2,4255987,1.273657,5],[2,23148416,0.721228,5],[2,7370124,1.273657,5],[2,13390788,0.629156,5],[2,726632,3.299233,5],[2,13390788,0.659847,5],[2,14844052,0.905371,5],[2,7370124,1.212276,5],[2,14844052,0.936061,5],[2,14844052,1.089514,5],[2,12352742,0.383632,5],[2,14844052,1.242967,5],[2,22733198,0.87468,5],[2,22733198,0.690537,5],[2,22733198,0.537084,5],[2,15051661,1.335038,5],[2,4878814,1.488491,5],[2,14221224,0.813299,5],[2,4878814,1.734015,5],[2,4671205,1.028133,5],[2,16504925,0.26087,5],[2,4255987,0.26087,5],[2,5294032,1.089514,5],[2,4255987,0.322251,5],[2,15051661,1.058824,5],[2,4255987,0.537084,5],[2,726632,0.168798,5],[2,726632,0.445013,5],[2,4671205,0.813299,5],[2,4671205,0.721228,5],[2,5294032,0.813299,5],[2,19203843,0.138107,5],[2,19203843,0.383632,5],[2,726632,1.304348,5],[2,19203843,0.475703,5],[2,726632,1.488491,5],[2,726632,1.703325,5],[2,19619061,0.29156,5],[2,19619061,0.322251,5],[2,10484260,1.058824,5],[2,11729915,1.242967,5],[2,11729915,1.120205,5],[2,11729915,1.058824,5],[2,11314697,0.966752,5],[2,5501642,0.905371,5],[2,20864716,0.537084,5],[2,5501642,0.936061,5],[2,5501642,0.966752,5],[2,20864716,0.567775,5],[2,20864716,0.598465,5],[2,20241889,2.624041,5],[2,20864716,1.120205,5],[2,14013615,1.150895,5],[2,14013615,1.242967,5],[2,5916860,1.304348,5],[2,5501642,1.181586,5],[2,5501642,1.242967,5],[2,5501642,0.567775,5],[2,18788625,0.751918,5],[2,21695153,1.611253,5],[2,16712534,0.690537,5],[2,16712534,0.813299,5],[2,16712534,0.966752,5],[2,16712534,1.058824,5],[2,16712534,1.212276,5],[2,18788625,0.966752,5],[2,21695153,0.966752,5],[2,18788625,1.058824,5],[2,21695153,0.690537,5],[2,21695153,0.383632,5],[2,21695153,0.138107,5],[2,6954905,0.322251,5],[2,8823387,1.826087,5],[2,18788625,1.519182,5],[2,11729915,1.672634,5],[2,1557068,0.690537,5],[2,20864716,4.005115,5],[2,3840769,0.352941,5],[2,8823387,0.87468,5],[2,3840769,0.445013,5],[2,5709251,0.629156,5],[2,3425550,2.040921,5],[2,1557068,1.089514,5],[2,1557068,1.212276,5],[2,1557068,1.242967,5],[2,5709251,0.936061,5],[2,5916860,0.537084,5],[2,5709251,0.966752,5],[2,3840769,0.721228,5],[2,20241889,0.659847,5],[2,3840769,0.751918,5],[2,20241889,0.445013,5],[2,20241889,2.286445,5],[2,18788625,2.194373,5],[2,20864716,1.457801,5],[2,5501642,1.273657,5],[2,8823387,1.150895,5],[2,8823387,1.120205,5],[2,20241889,1.365729,5],[2,5916860,0.936061,5],[2,5086423,1.887468,5],[2,11729915,0.751918,5],[2,20864716,2.808184,5],[2,5916860,0.84399,5],[2,5916860,0.813299,5],[2,11729915,0.690537,5],[2,5916860,0.721228,5],[2,5916860,0.690537,5],[2,11729915,0.567775,5],[2,3840769,0.199488,5],[2,18581016,0.629156,5],[2,20657107,0.629156,5],[2,20657107,0.905371,5],[2,16297316,0.537084,5],[2,20657107,0.997442,5],[2,16297316,0.445013,5],[2,20657107,1.273657,5],[2,2179896,2.808184,5],[2,2179896,2.777494,5],[2,6954905,0.046036,5],[2,6954905,0.107417,5],[2,12975570,0.537084,5],[2,2179896,2.286445,5],[2,3425550,1.120205,5],[2,12975570,0.966752,5],[2,3425550,1.150895,5],[2,3425550,1.212276,5],[2,1349459,0.751918,5],[2,18581016,2.317136,5],[2,8200560,1.304348,5],[2,8200560,1.365729,5],[2,8200560,1.672634,5],[2,18581016,1.365729,5],[2,18581016,1.304348,5],[2,4048378,2.716113,5],[2,4048378,2.685422,5],[2,16297316,1.365729,5],[2,14013615,0.046036,5],[2,14013615,0.107417,5],[2,16297316,1.242967,5],[2,3425550,1.058824,5],[2,16297316,1.058824,5],[2,14013615,0.168798,5],[2,16297316,0.966752,5],[2,18581016,1.181586,5],[2,9030997,1.212276,5],[2,9030997,1.273657,5],[2,9030997,1.365729,5],[2,9030997,1.580563,5],[2,6954905,0.199488,5],[2,18788625,0.352941,5],[2,9446215,0.629156,5],[2,9446215,0.567775,5],[2,9446215,0.537084,5],[2,14013615,0.813299,5],[2,18788625,0.475703,5],[2,18788625,0.629156,5],[2,9030997,2.838875,5],[2,16712534,0.445013,5],[2,18788625,0.690537,5],[2,21695153,1.918159,5],[2,5501642,0.506394,5],[2,2179896,1.365729,5],[2,4048378,0.598465,5],[2,4048378,0.322251,5],[2,2179896,1.089514,5],[2,9446215,0.966752,5],[2,2179896,0.721228,5],[2,21695153,3.237852,5],[2,2179896,0.659847,5],[2,2179896,0.567775,5],[2,2179896,0.445013,5],[2,2179896,0.414322,5],[2,2179896,0.26087,5],[2,14013615,0.506394,5],[2,2179896,0.230179,5],[2,2179896,0.168798,5],[2,9030997,0.966752,5],[2,9030997,1.120205,5],[2,18788625,0.322251,5],[2,20034280,0.84399,5],[2,9238606,1.120205,5],[2,20034280,0.936061,5],[2,9238606,1.212276,5],[2,9238606,1.242967,5],[2,20034280,1.242967,5],[2,20034280,1.549872,5],[2,20034280,1.734015,5],[2,13183179,0.966752,5],[2,9238606,1.396419,5],[2,13183179,0.905371,5],[2,13183179,0.751918,5],[2,20034280,2.900256,5],[2,2595114,1.457801,5],[2,13183179,0.445013,5],[2,14221224,0.29156,5],[2,9238606,1.672634,5],[2,5086423,1.089514,5],[2,15882097,1.304348,5],[2,20034280,0.475703,5],[2,14636443,1.273657,5],[2,15882097,1.181586,5],[2,14636443,1.181586,5],[2,14636443,0.936061,5],[2,14636443,0.782609,5],[2,14636443,0.690537,5],[2,14636443,0.659847,5],[2,14636443,0.598465,5],[2,15882097,1.028133,5],[2,15882097,0.87468,5],[2,5086423,0.751918,5],[2,14636443,0.26087,5],[2,9238606,0.936061,5],[2,2595114,1.335038,5],[2,5086423,0.567775,5],[2,1764677,0.936061,5],[2,21279934,3.667519,5],[2,1764677,0.567775,5],[2,7992951,0.690537,5],[2,21279934,2.685422,5],[2,21279934,0.598465,5],[2,21279934,0.659847,5],[2,21279934,1.028133,5],[2,21279934,1.150895,5],[2,21279934,1.181586,5],[2,7992951,0.966752,5],[2,21279934,1.304348,5],[2,7992951,1.150895,5],[2,14428833,0.322251,5],[2,7992951,1.120205,5],[2,21279934,1.611253,5],[2,21279934,1.457801,5],[2,9238606,1.703325,5],[2,14221224,0.199488,5],[2,9238606,1.856777,5],[2,13183179,0.046036,5],[2,2595114,1.672634,5],[2,12145133,1.242967,5],[2,12145133,1.335038,5],[2,11522306,1.396419,5],[2,7162514,0.506394,5],[2,12145133,2.746803,5],[2,11522306,1.150895,5],[2,11522306,0.966752,5],[2,7162514,0.352941,5],[2,1764677,1.672634,5],[2,11522306,0.813299,5],[2,1764677,1.488491,5],[2,11522306,0.445013,5],[2,1764677,1.150895,5],[2,6954905,0.445013,5],[2,6747296,0.383632,5],[2,18373407,1.304348,5],[2,18373407,1.120205,5],[2,18165798,0.84399,5],[2,6747296,0.721228,5],[2,6747296,0.84399,5],[2,12145133,0.230179,5],[2,6747296,0.966752,5],[2,18165798,0.997442,5],[2,6747296,1.058824,5],[2,5501642,2.01023,5],[2,21487543,2.838875,5],[2,18165798,1.795396,5],[2,18165798,1.826087,5],[2,18165798,1.887468,5],[2,18165798,1.918159,5],[2,18165798,0.29156,5],[2,20241889,0.414322,5],[2,20241889,0.138107,5],[2,3840769,1.304348,5],[2,3840769,1.519182,5],[2,1557068,2.194373,5],[2,8823387,0.721228,5],[2,8823387,0.445013,5],[2,1972287,0.936061,5],[2,8823387,0.230179,5],[2,1972287,0.29156,5],[2,1972287,0.230179,5],[2,1972287,0.076726,5],[2,3840769,1.795396,5],[2,6954905,0.383632,5],[2,6954905,0.414322,5],[2,18165798,0.690537,5],[2,18373407,2.286445,5],[2,21072325,1.795396,5],[2,12145133,0.966752,5],[2,12145133,1.089514,5],[2,2595114,0.046036,5],[2,21072325,2.255754,5],[2,21072325,2.347826,5],[2,21072325,2.378517,5],[2,2595114,0.076726,5],[2,2595114,0.107417,5],[2,21487543,0.751918,5],[2,2595114,0.168798,5],[2,21487543,0.629156,5],[2,21487543,0.567775,5],[2,2595114,0.29156,5],[2,21487543,0.383632,5],[2,15882097,1.672634,5],[2,21487543,0.015345,5],[2,15882097,1.641944,5],[2,6954905,1.549872,5],[2,18373407,0.506394,5],[2,12767961,1.549872,5],[2,18165798,2.071611,5],[2,21487543,1.549872,5],[2,21487543,1.365729,5],[2,21072325,0.445013,5],[2,18165798,2.286445,5],[2,6954905,0.997442,5],[2,12145133,0.475703,5],[2,18165798,2.317136,5],[2,21072325,0.966752,5],[2,12145133,0.598465,5],[2,21072325,1.028133,5],[2,21072325,1.058824,5],[2,21072325,1.273657,5],[2,21072325,1.335038,5],[2,6954905,0.936061,5],[2,2387505,1.150895,5],[2,2802723,0.966752,5],[2,3633160,1.703325,5],[2,16089706,1.150895,5],[2,2802723,0.751918,5],[2,3633160,2.071611,5],[2,21902762,1.488491,5],[2,11937524,2.132992,5],[2,21902762,0.813299,5],[2,21902762,0.751918,5],[2,21902762,0.721228,5],[2,11937524,1.826087,5],[2,11937524,1.365729,5],[2,21902762,0.537084,5],[2,21902762,0.475703,5],[2,11937524,0.966752,5],[2,11937524,0.629156,5],[2,11937524,0.567775,5],[2,21902762,0.26087,5],[2,16089706,1.97954,5],[2,16089706,0.936061,5],[2,16089706,0.751918,5],[2,16089706,0.721228,5],[2,8200560,0.230179,5],[2,8200560,0.936061,5],[2,17958188,1.734015,5],[2,17958188,1.826087,5],[2,17958188,1.918159,5],[2,17958188,1.948849,5],[2,19826670,2.317136,5],[2,16920143,0.414322,5],[2,20449498,0.475703,5],[2,20449498,0.751918,5],[2,20449498,0.84399,5],[2,20449498,0.905371,5],[2,20449498,0.966752,5],[2,20449498,1.181586,5],[2,20449498,1.304348,5],[2,20449498,1.42711,5],[2,20449498,1.457801,5],[2,3633160,0.475703,5],[2,2387505,0.414322,5],[2,2387505,0.445013,5],[2,3633160,0.84399,5],[2,2387505,0.659847,5],[2,2387505,0.690537,5],[2,17958188,4.618926,5],[2,3633160,1.181586,5],[2,2802723,1.120205,5],[2,21902762,2.531969,5],[2,3633160,1.488491,5],[2,1349459,0.598465,5],[2,18581016,2.531969,5],[2,8200560,1.028133,5],[2,10484260,0.475703,6],[2,7785342,0.352941,6],[2,15882097,0.629156,6],[2,1349459,1.028133,6],[2,14636443,0.567775,6],[2,5916860,0.659847,6],[2,5916860,0.629156,6],[2,10484260,0.690537,6],[2,10484260,0.721228,6],[2,10484260,0.813299,6],[2,2595114,0.966752,6],[2,10276651,1.703325,6],[2,103805,1.335038,6],[2,7785342,0.721228,6],[2,20034280,0.782609,6],[2,11937524,2.102302,6],[2,1557068,0.383632,6],[2,23148416,0.26087,6],[2,10899479,0.352941,6],[2,10899479,0.322251,6],[2,7785342,0.076726,6],[2,11937524,1.488491,6],[2,7785342,0.107417,6],[2,15259270,0.782609,6],[2,23148416,0.046036,6],[2,20449498,5.202046,6],[2,15259270,0.721228,6],[2,14636443,0.383632,6],[2,8823387,0.905371,6],[2,12767961,0.782609,6],[2,3840769,0.015345,6],[2,3217941,0.26087,6],[2,7785342,0.29156,6],[2,15882097,0.567775,6],[2,7785342,0.322251,6],[2,3840769,0.046036,6],[2,21902762,0.782609,6],[2,18996234,3.329923,6],[2,15882097,1.335038,6],[2,2595114,0.84399,6],[2,3840769,0.506394,6],[2,15882097,1.488491,6],[2,21902762,0.87468,6],[2,2595114,0.782609,6],[2,18996234,0.383632,6],[2,5709251,0.813299,6],[2,14428833,0.076726,6],[2,10276651,1.519182,6],[2,10276651,1.488491,6],[2,21902762,1.304348,6],[2,5709251,1.089514,6],[2,6954905,0.506394,6],[2,11937524,2.225064,6],[2,6954905,0.567775,6],[2,1557068,0.475703,6],[2,15882097,1.150895,6],[2,1349459,0.475703,6],[2,17335361,1.058824,6],[2,19619061,1.549872,6],[2,19203843,0.322251,6],[2,19203843,0.230179,6],[2,14636443,1.365729,6],[2,1557068,0.782609,6],[2,19203843,0.168798,6],[2,3840769,0.29156,6],[2,3425550,0.813299,6],[2,15882097,1.212276,6],[2,3840769,0.322251,6],[2,19826670,0.659847,6],[2,20034280,0.199488,6],[2,20449498,1.519182,6],[2,9653824,1.212276,6],[2,19826670,0.751918,6],[2,8823387,1.580563,6],[2,20449498,0.659847,6],[2,20034280,0.966752,6],[2,11729915,1.335038,6],[2,1349459,0.84399,6],[2,23148416,2.194373,6],[2,6332078,0.352941,6],[2,19203843,0.84399,6],[2,22317980,2.255754,6],[2,9653824,0.813299,6],[2,9238606,1.150895,6],[2,11729915,0.966752,6],[2,19619061,0.84399,6],[2,19203843,0.782609,6],[2,11314697,0.567775,6],[2,5086423,0.506394,6],[2,11314697,0.813299,6],[2,7370124,0.598465,6],[2,6332078,0.598465,6],[2,22317980,1.242967,6],[2,20034280,1.764706,6],[2,21695153,0.29156,6],[2,21695153,0.26087,6],[2,21695153,0.230179,6],[2,9238606,1.335038,6],[2,20449498,0.506394,6],[2,20034280,1.150895,6],[2,6539687,1.273657,6],[2,7370124,0.966752,6],[2,20034280,1.058824,6],[2,12767961,0.966752,6],[2,19411452,1.887468,6],[2,3217941,0.076726,6],[2,9653824,0.87468,6],[2,12767961,0.936061,6],[2,6539687,1.181586,6],[2,6124469,5.079284,6],[2,19203843,0.629156,6],[2,9653824,0.629156,6],[2,1349459,0.905371,6],[2,9653824,0.598465,6],[2,11937524,1.181586,6],[2,14636443,0.29156,6],[2,15259270,1.365729,6],[2,11937524,1.242967,6],[2,23148416,0.690537,6],[2,8823387,1.335038,6],[2,8823387,1.242967,6],[2,15259270,1.181586,6],[2,8823387,1.212276,6],[2,5294032,0.659847,6],[2,23148416,0.414322,6],[2,2802723,0.383632,6],[2,12767961,0.813299,6],[2,2595114,1.150895,6],[2,2595114,1.120205,6],[2,5501642,0.721228,6],[2,6539687,0.84399,6],[2,20864716,0.383632,6],[2,5501642,0.813299,6],[2,10899479,1.396419,6],[2,19826670,0.475703,6],[2,21902762,0.414322,6],[2,10899479,1.273657,6],[2,21902762,0.445013,6],[2,7370124,0.414322,6],[2,11107088,0.936061,6],[2,20864716,0.659847,6],[2,20864716,1.058824,6],[2,21902762,0.567775,6],[2,7162514,1.089514,6],[2,10899479,1.058824,6],[2,9653824,0.690537,6],[2,10899479,0.966752,6],[2,11937524,1.150895,6],[2,4048378,5.508951,6],[2,19826670,1.304348,6],[2,519023,0.905371,6],[2,12975570,0.168798,6],[2,6747296,0.598465,6],[2,519023,0.966752,6],[2,6954905,1.028133,6],[2,6747296,0.782609,6],[2,8615778,0.445013,6],[2,2387505,0.936061,6],[2,2387505,0.813299,6],[2,6747296,0.936061,6],[2,21072325,0.506394,6],[2,17750579,0.721228,6],[2,17958188,0.506394,6],[2,2387505,0.782609,6],[2,17542970,0.84399,6],[2,18373407,0.84399,6],[2,14428833,0.506394,6],[2,17750579,0.383632,6],[2,18373407,1.488491,6],[2,17958188,0.813299,6],[2,21072325,1.181586,6],[2,16920143,1.058824,6],[2,21072325,1.120205,6],[2,17958188,0.782609,6],[2,8408169,0.107417,6],[2,17958188,4.342711,6],[2,8615778,0.690537,6],[2,17958188,0.721228,6],[2,6747296,0.506394,6],[2,21072325,0.87468,6],[2,3633160,0.905371,6],[2,6124469,1.887468,6],[2,12145133,0.138107,6],[2,6124469,1.948849,6],[2,17750579,0.567775,6],[2,21487543,2.716113,6],[2,22525589,0.383632,6],[2,519023,1.304348,6],[2,21072325,0.076726,6],[2,16504925,0.690537,6],[2,12767961,1.488491,6],[2,18165798,2.132992,6],[2,10276651,0.506394,6],[2,16504925,0.659847,6],[2,16504925,0.567775,6],[2,10276651,0.414322,6],[2,22525589,0.782609,6],[2,519023,1.396419,6],[2,18373407,0.445013,6],[2,22525589,0.87468,6],[2,12145133,0.29156,6],[2,17542970,1.089514,6],[2,2387505,0.721228,6],[2,14221224,0.782609,6],[2,21487543,1.396419,6],[2,18165798,1.028133,6],[2,17542970,0.905371,6],[2,6747296,1.028133,6],[2,18165798,1.058824,6],[2,10276651,0.751918,6],[2,6747296,1.120205,6],[2,16504925,0.87468,6],[2,19619061,3.329923,6],[2,18165798,1.181586,6],[2,18165798,1.212276,6],[2,6747296,1.242967,6],[2,10276651,0.721228,6],[2,6747296,1.42711,6],[2,519023,1.181586,6],[2,18373407,0.721228,6],[2,18373407,0.629156,6],[2,17542970,0.936061,6],[2,21072325,0.26087,6],[2,10069042,0.782609,6],[2,934241,0.782609,6],[2,8823387,0.506394,6],[2,16297316,1.672634,6],[2,21487543,0.138107,6],[2,18165798,0.567775,6],[2,2595114,0.567775,6],[2,10069042,0.690537,6],[2,10069042,0.659847,6],[2,10069042,0.629156,6],[2,10069042,0.598465,6],[2,8823387,0.352941,6],[2,934241,0.414322,6],[2,2595114,0.383632,6],[2,5916860,0.199488,6],[2,21487543,0.352941,6],[2,3633160,0.414322,6],[2,21487543,0.414322,6],[2,3425550,1.028133,6],[2,19826670,0.997442,6],[2,8408169,1.549872,6],[2,2802723,0.690537,6],[2,5916860,0.506394,6],[2,2595114,0.721228,6],[2,20241889,0.199488,6],[2,2595114,0.690537,6],[2,10069042,1.028133,6],[2,6954905,0.690537,6],[2,21072325,3.329923,6],[2,6954905,0.721228,6],[2,8823387,0.84399,6],[2,10069042,0.936061,6],[2,3217941,1.580563,6],[2,3633160,1.887468,6],[2,934241,0.936061,6],[2,8823387,0.690537,6],[2,8823387,0.567775,6],[2,3217941,1.058824,6],[2,8408169,0.782609,6],[2,6124469,0.506394,6],[2,9653824,1.488491,6],[2,9861433,0.445013,6],[2,21072325,2.225064,6],[2,19826670,1.335038,6],[2,14428833,1.089514,6],[2,6124469,0.84399,6],[2,8408169,0.475703,6],[2,8408169,0.414322,6],[2,6124469,0.966752,6],[2,14428833,1.058824,6],[2,17958188,0.936061,6],[2,6124469,1.120205,6],[2,18165798,0.782609,6],[2,3633160,1.457801,6],[2,2802723,0.076726,6],[2,16089706,1.580563,6],[2,3425550,0.598465,6],[2,1972287,0.567775,6],[2,22940807,0.107417,6],[2,1972287,0.537084,6],[2,8408169,1.181586,6],[2,21072325,2.716113,6],[2,2387505,0.26087,6],[2,8408169,1.089514,6],[2,1972287,0.352941,6],[2,9861433,0.690537,6],[2,10276651,1.181586,6],[2,8823387,0.076726,6],[2,2595114,0.230179,6],[2,3425550,0.87468,6],[2,22940807,0.26087,6],[2,22940807,0.29156,6],[2,2802723,1.058824,6],[2,6124469,0.352941,6],[2,22940807,0.383632,6],[2,19411452,0.352941,6],[2,726632,0.84399,6],[2,19411452,0.199488,6],[2,8200560,0.84399,6],[2,19411452,0.138107,6],[2,21279934,0.629156,6],[2,9030997,0.721228,6],[2,14844052,0.322251,6],[2,19411452,0.015345,6],[2,5294032,0.782609,6],[2,7577733,1.580563,6],[2,9030997,0.352941,6],[2,19826670,1.611253,6],[2,21279934,0.475703,6],[2,103805,0.537084,6],[2,2179896,0.046036,6],[2,11522306,0.87468,6],[2,20657107,1.948849,6],[2,1141850,0.29156,6],[2,7577733,0.905371,6],[2,7577733,0.87468,6],[2,21279934,0.445013,6],[2,13390788,0.690537,6],[2,11522306,0.751918,6],[2,2179896,0.29156,6],[2,4878814,0.598465,6],[2,16089706,0.076726,6],[2,7577733,0.751918,6],[2,16089706,0.015345,6],[2,2179896,0.537084,6],[2,4671205,0.414322,6],[2,16297316,0.567775,6],[2,9030997,1.641944,6],[2,18996234,0.076726,6],[2,1141850,0.87468,6],[2,7162514,0.475703,6],[2,22733198,0.352941,6],[2,12352742,0.414322,6],[2,4463596,0.168798,6],[2,14844052,1.120205,6],[2,4878814,0.29156,6],[2,16297316,0.475703,6],[2,20657107,1.028133,6],[2,7162514,0.29156,6],[2,12560351,1.672634,6],[2,10691869,0.598465,6],[2,14013615,0.567775,6],[2,9446215,0.813299,6],[2,21279934,2.501279,6],[2,18996234,0.29156,6],[2,1141850,0.567775,6],[2,10691869,0.659847,6],[2,10691869,0.813299,6],[2,11522306,1.058824,6],[2,19411452,0.567775,6],[2,7992951,1.672634,6],[2,11522306,0.997442,6],[2,1141850,0.537084,6],[2,14844052,0.629156,6],[2,11522306,0.905371,6],[2,10691869,1.150895,6],[2,5294032,0.721228,6],[2,14013615,0.352941,6],[2,7577733,0.322251,6],[2,8200560,0.598465,6],[2,311414,0.659847,6],[2,1764677,0.751918,6],[2,21279934,0.138107,6],[2,21279934,0.107417,6],[2,311414,0.567775,6],[2,4048378,1.181586,6],[2,4255987,0.659847,6],[2,4048378,1.242967,6],[2,311414,0.537084,6],[2,4878814,0.905371,6],[2,17958188,2.255754,6],[2,8200560,0.567775,6],[2,5294032,1.181586,6],[2,4255987,0.475703,6],[2,3010332,0.352941,6],[2,7577733,0.383632,6],[2,4255987,0.445013,6],[2,7992951,0.659847,6],[2,7577733,0.414322,6],[2,4255987,0.352941,6],[2,1764677,0.445013,6],[2,12560351,0.567775,6],[2,3010332,0.383632,6],[2,10691869,1.795396,6],[2,12975570,0.751918,6],[2,7162514,1.365729,6],[2,2179896,1.918159,6],[2,12975570,0.813299,6],[2,15051661,1.089514,6],[2,2179896,0.598465,6],[2,12975570,0.506394,6],[2,9446215,0.84399,6],[2,11522306,0.721228,6],[2,22110371,1.488491,6],[2,16920143,0.721228,6],[2,726632,0.322251,6],[2,2179896,0.690537,6],[2,12975570,0.567775,6],[2,20449498,0.26087,6],[2,2179896,0.813299,6],[2,18996234,1.764706,6],[2,21279934,0.26087,6],[2,12975570,0.629156,6],[2,1764677,1.273657,6],[2,4671205,0.598465,6],[2,9446215,1.028133,6],[2,2179896,0.997442,6],[2,4255987,1.242967,6],[2,311414,0.905371,6],[2,7162514,1.641944,6],[2,16297316,0.352941,6],[2,9446215,1.212276,6],[2,7577733,0.26087,6],[2,7162514,0.322251,6],[2,3010332,0.168798,6],[2,4048378,0.475703,6],[2,4048378,0.537084,6],[2,4878814,0.721228,6],[2,15051661,0.813299,6],[2,11522306,0.506394,6],[2,23356025,0.629156,6],[2,16712534,0.997442,6],[2,17958188,1.611253,6],[2,13183179,0.629156,6],[2,16712534,0.936061,6],[2,13390788,0.138107,6],[2,23356025,0.506394,6],[2,23356025,0.29156,6],[2,16712534,0.84399,6],[2,22317980,0.076726,6],[2,14013615,0.199488,6],[2,13183179,0.598465,6],[2,23356025,0.26087,6],[2,5501642,0.629156,6],[2,22733198,0.813299,6],[2,13183179,0.352941,6],[2,5501642,0.598465,6],[2,19619061,0.659847,6],[2,20449498,0.383632,6],[2,6332078,0.905371,6],[2,13390788,1.304348,6],[2,11937524,0.506394,6],[2,12352742,1.058824,6],[2,21279934,1.242967,6],[2,20657107,0.352941,6],[2,11937524,0.414322,6],[2,11937524,0.322251,6],[2,103805,0.721228,6],[2,15674488,0.690537,6],[2,12352742,0.936061,6],[2,5501642,0.537084,6],[2,22733198,1.058824,6],[2,7370124,1.242967,6],[2,18581016,0.598465,6],[2,18581016,0.567775,6],[2,18788625,1.242967,6],[2,14221224,0.383632,6],[2,17127752,0.84399,6],[2,1764677,0.322251,6],[2,18581016,0.506394,6],[2,14428833,0.26087,6],[2,9653824,1.335038,6],[2,22317980,0.905371,6],[2,21695153,0.721228,6],[2,9238606,1.457801,6],[2,23356025,0.813299,6],[2,17958188,1.641944,6],[2,16712534,1.549872,6],[2,19619061,0.751918,6],[2,11937524,0.84399,6],[2,21695153,0.905371,6],[2,13183179,0.813299,6],[2,19826670,1.396419,6],[2,17127752,0.87468,6],[2,21695153,1.058824,6],[2,17127752,0.905371,6],[2,9653824,1.089514,6],[2,13183179,0.721228,6],[2,17127752,0.936061,6],[2,18788625,0.936061,6],[2,16712534,1.089514,6],[2,11937524,0.690537,6],[2,21279934,1.948849,6],[2,1349459,0.659847,6],[2,12352742,0.598465,6],[2,18581016,1.212276,6],[2,20657107,0.414322,6],[2,15674488,0.905371,6],[2,18788625,0.598465,6],[2,18788625,0.506394,6],[2,9446215,0.598465,6],[2,19619061,0.475703,6],[2,6124469,0.015345,6],[2,4463596,0.87468,6],[2,15674488,0.966752,6],[2,13390788,0.445013,6],[2,20657107,0.567775,6],[2,9653824,1.120205,6],[2,22110371,0.506394,6],[2,14844052,1.795396,6],[2,20657107,0.690537,6],[2,14844052,1.734015,6],[2,19619061,0.445013,6],[2,103805,0.690537,6],[2,9030997,1.887468,6],[2,6954905,0.230179,6],[2,20657107,0.782609,6],[2,16920143,0.84399,6],[2,11937524,0.29156,6],[2,1349459,0.721228,6],[2,2802723,2.59335,6],[2,13390788,1.150895,6],[2,12352742,0.506394,6],[2,4463596,0.936061,6],[2,6124469,5.355499,6],[2,16920143,0.905371,6],[2,13390788,0.475703,6],[2,22733198,0.659847,6],[2,9030997,1.703325,6],[2,6539687,2.501279,6],[2,4463596,0.905371,6],[2,12352742,0.567775,6],[2,9446215,0.506394,6],[2,9446215,0.659847,6],[2,18996234,1.887468,6],[2,23356025,1.764706,7],[2,7992951,0.87468,7],[2,3010332,0.015345,7],[2,9861433,0.322251,7],[2,22733198,0.475703,7],[2,18373407,0.352941,7],[2,9861433,0.414322,7],[2,21487543,1.273657,7],[2,21279934,0.87468,7],[2,10276651,0.383632,7],[2,12145133,0.997442,7],[2,22733198,0.29156,7],[2,22733198,0.383632,7],[2,17958188,0.966752,7],[2,2802723,0.138107,7],[2,6954905,0.966752,7],[2,17958188,0.629156,7],[2,1349459,0.629156,7],[2,21279934,0.414322,7],[2,22733198,0.751918,7],[2,16504925,0.813299,7],[2,17750579,0.813299,7],[2,12145133,2.378517,7],[2,3010332,0.076726,7],[2,21487543,1.457801,7],[2,2387505,0.567775,7],[2,21072325,0.199488,7],[2,21487543,1.42711,7],[2,17750579,0.936061,7],[2,16504925,0.782609,7],[2,12145133,0.352941,7],[2,21279934,0.383632,7],[2,18996234,0.199488,7],[2,21279934,2.716113,7],[2,6954905,1.242967,7],[2,18373407,0.076726,7],[2,1764677,0.352941,7],[2,17958188,0.84399,7],[2,12145133,0.813299,7],[2,103805,0.168798,7],[2,22733198,0.966752,7],[2,8200560,1.335038,7],[2,22733198,0.598465,7],[2,16920143,0.475703,7],[2,5086423,0.629156,7],[2,9238606,0.721228,7],[2,5086423,0.690537,7],[2,5086423,0.445013,7],[2,21279934,5.539642,7],[2,13183179,0.138107,7],[2,19619061,0.537084,7],[2,16920143,0.230179,7],[2,19619061,0.506394,7],[2,16920143,0.506394,7],[2,18996234,0.015345,7],[2,15259270,0.84399,7],[2,18996234,0.046036,7],[2,6539687,1.795396,7],[2,14221224,0.015345,7],[2,4463596,0.751918,7],[2,14636443,0.414322,7],[2,7162514,0.659847,7],[2,103805,0.659847,7],[2,7162514,0.567775,7],[2,6539687,2.378517,7],[2,15882097,0.782609,7],[2,15882097,0.905371,7],[2,4463596,0.445013,7],[2,4463596,0.383632,7],[2,103805,0.598465,7],[2,18996234,0.567775,7],[2,14221224,0.475703,7],[2,14428833,0.230179,7],[2,11107088,1.212276,7],[2,20034280,1.672634,7],[2,16920143,0.352941,7],[2,16920143,0.322251,7],[2,20034280,1.304348,7],[2,9238606,1.304348,7],[2,16504925,0.107417,7],[2,20449498,0.567775,7],[2,4463596,0.997442,7],[2,3010332,1.058824,7],[2,14221224,0.322251,7],[2,20449498,0.445013,7],[2,6539687,1.028133,7],[2,3425550,0.26087,7],[2,3425550,0.168798,7],[2,9238606,1.089514,7],[2,14636443,0.107417,7],[2,11107088,0.997442,7],[2,7370124,0.506394,7],[2,19826670,1.457801,7],[2,7370124,0.475703,7],[2,6539687,0.751918,7],[2,6539687,0.721228,7],[2,7370124,0.352941,7],[2,11107088,0.905371,7],[2,5086423,0.475703,7],[2,9861433,1.089514,7],[2,1764677,1.335038,7],[2,16089706,1.887468,7],[2,726632,0.26087,7],[2,726632,0.230179,7],[2,19826670,1.703325,7],[2,4878814,0.690537,7],[2,2595114,0.506394,7],[2,16920143,0.751918,7],[2,103805,0.383632,7],[2,6954905,0.813299,7],[2,21487543,0.475703,7],[2,9861433,0.813299,7],[2,17335361,1.089514,7],[2,21487543,0.506394,7],[2,4878814,0.782609,7],[2,14428833,0.29156,7],[2,3633160,0.567775,7],[2,21072325,2.685422,7],[2,4878814,0.936061,7],[2,1764677,0.475703,7],[2,22940807,0.352941,7],[2,103805,0.352941,7],[2,3633160,0.629156,7],[2,22940807,0.445013,7],[2,3633160,0.751918,7],[2,2387505,0.383632,7],[2,2802723,0.168798,7],[2,20449498,0.997442,7],[2,7785342,0.659847,7],[2,4463596,0.046036,7],[2,14636443,0.813299,7],[2,14636443,0.87468,7],[2,4878814,0.322251,7],[2,1349459,0.506394,7],[2,4878814,0.352941,7],[2,11522306,1.181586,7],[2,5294032,0.537084,7],[2,11107088,0.537084,7],[2,20034280,0.26087,7],[2,4878814,0.414322,7],[2,20034280,0.107417,7],[2,1764677,1.948849,7],[2,3010332,3.14578,7],[2,519023,2.347826,7],[2,14428833,0.138107,7],[2,3633160,0.352941,7],[2,103805,0.445013,7],[2,14428833,0.046036,7],[2,2595114,0.751918,7],[2,11522306,0.782609,7],[2,9861433,1.335038,7],[2,7992951,0.567775,7],[2,6954905,0.629156,7],[2,5294032,0.414322,7],[2,726632,0.383632,7],[2,3633160,0.383632,7],[2,21695153,1.365729,7],[2,6332078,0.87468,7],[2,22317980,0.199488,7],[2,11937524,0.659847,7],[2,21695153,1.150895,7],[2,11937524,0.813299,7],[2,21695153,0.936061,7],[2,21695153,0.84399,7],[2,21695153,0.782609,7],[2,21695153,0.751918,7],[2,11937524,0.905371,7],[2,19411452,1.764706,7],[2,21695153,0.598465,7],[2,21695153,0.506394,7],[2,12767961,0.997442,7],[2,21695153,0.445013,7],[2,22317980,1.273657,7],[2,21695153,0.352941,7],[2,6954905,0.29156,7],[2,9030997,2.01023,7],[2,18788625,0.414322,7],[2,18788625,0.445013,7],[2,22110371,0.475703,7],[2,22110371,0.445013,7],[2,12352742,0.751918,7],[2,19826670,0.076726,7],[2,22110371,0.352941,7],[2,16712534,0.506394,7],[2,16297316,0.87468,7],[2,16712534,0.567775,7],[2,9446215,0.414322,7],[2,5501642,0.475703,7],[2,12352742,0.966752,7],[2,12352742,0.997442,7],[2,16712534,0.629156,7],[2,12352742,1.120205,7],[2,21695153,1.519182,7],[2,19826670,0.046036,7],[2,20864716,0.414322,7],[2,11314697,1.519182,7],[2,9653824,0.751918,7],[2,8200560,0.966752,7],[2,9653824,0.721228,7],[2,16297316,1.120205,7],[2,19203843,0.659847,7],[2,5916860,1.335038,7],[2,23148416,0.813299,7],[2,5916860,1.242967,7],[2,10899479,0.813299,7],[2,3217941,0.168798,7],[2,9653824,0.506394,7],[2,11729915,0.84399,7],[2,2802723,0.414322,7],[2,8823387,1.058824,7],[2,6332078,0.26087,7],[2,10276651,1.97954,7],[2,5916860,0.905371,7],[2,21695153,0.168798,7],[2,9653824,0.966752,7],[2,21695153,0.107417,7],[2,9653824,0.936061,7],[2,17127752,0.751918,7],[2,9653824,0.905371,7],[2,9446215,0.29156,7],[2,9446215,0.26087,7],[2,5709251,0.230179,7],[2,12352742,1.672634,7],[2,6332078,0.414322,7],[2,17127752,0.659847,7],[2,17335361,0.629156,7],[2,11314697,0.598465,7],[2,23148416,1.549872,7],[2,11314697,0.690537,7],[2,11314697,0.782609,7],[2,5501642,0.690537,7],[2,5501642,0.751918,7],[2,11937524,1.058824,7],[2,8200560,0.87468,7],[2,8200560,0.813299,7],[2,15051661,0.29156,7],[2,1141850,0.352941,7],[2,7577733,0.230179,7],[2,12560351,0.782609,7],[2,7577733,0.29156,7],[2,2179896,2.225064,7],[2,12975570,0.721228,7],[2,2179896,2.132992,7],[2,4048378,1.42711,7],[2,4671205,0.506394,7],[2,2179896,1.703325,7],[2,311414,0.383632,7],[2,2179896,1.580563,7],[2,4671205,0.537084,7],[2,311414,0.506394,7],[2,4255987,0.751918,7],[2,4048378,0.751918,7],[2,7785342,2.040921,7],[2,18581016,0.721228,7],[2,17335361,0.598465,7],[2,18581016,0.537084,7],[2,13390788,0.046036,7],[2,13390788,0.076726,7],[2,23356025,0.721228,7],[2,20657107,0.138107,7],[2,23356025,0.352941,7],[2,23356025,0.230179,7],[2,15674488,0.782609,7],[2,15674488,0.813299,7],[2,15674488,1.304348,7],[2,16297316,0.659847,7],[2,16297316,0.629156,7],[2,17335361,1.734015,7],[2,14013615,0.322251,7],[2,19203843,2.746803,7],[2,1141850,0.721228,7],[2,14844052,0.690537,7],[2,19411452,0.659847,7],[2,14844052,0.87468,7],[2,16089706,0.414322,7],[2,14844052,1.028133,7],[2,16089706,0.567775,7],[2,22110371,0.690537,7],[2,9030997,1.42711,7],[2,9030997,1.488491,7],[2,22110371,0.659847,7],[2,22110371,0.629156,7],[2,14844052,1.335038,7],[2,9446215,0.721228,7],[2,9030997,1.734015,7],[2,8200560,1.97954,7],[2,22110371,0.537084,7],[2,13390788,0.813299,7],[2,12352742,0.629156,7],[2,13390788,0.87468,7],[2,4048378,0.721228,7],[2,4671205,0.567775,7],[2,22110371,1.212276,7],[2,4048378,0.26087,7],[2,4048378,0.199488,7],[2,311414,0.936061,7],[2,14428833,1.97954,7],[2,4048378,0.046036,7],[2,9446215,0.905371,7],[2,15051661,0.966752,7],[2,2179896,0.352941,7],[2,22110371,0.936061,7],[2,19826670,0.383632,7],[2,2179896,0.138107,7],[2,18788625,0.199488,7],[2,9030997,0.690537,7],[2,9030997,0.782609,7],[2,19411452,0.322251,7],[2,9030997,0.905371,7],[2,9030997,0.936061,7],[2,10069042,0.046036,7],[2,1972287,0.598465,7],[2,934241,0.015345,7],[2,1972287,0.506394,7],[2,8823387,0.107417,7],[2,8408169,0.966752,7],[2,1972287,0.168798,7],[2,1972287,0.138107,7],[2,8408169,0.87468,7],[2,8408169,0.751918,7],[2,6124469,0.567775,7],[2,10276651,1.028133,7],[2,10276651,0.997442,7],[2,6124469,0.659847,7],[2,8408169,0.567775,7],[2,18165798,0.659847,7],[2,18165798,0.751918,7],[2,18165798,0.230179,7],[2,934241,1.611253,7],[2,1349459,0.383632,7],[2,17335361,1.181586,7],[2,3217941,0.475703,7],[2,18165798,0.414322,7],[2,1972287,1.887468,7],[2,934241,1.181586,7],[2,934241,1.150895,7],[2,18996234,0.322251,7],[2,3425550,0.966752,7],[2,5916860,0.445013,7],[2,934241,0.87468,7],[2,18165798,0.537084,7],[2,5916860,0.322251,7],[2,934241,0.506394,7],[2,3425550,0.936061,7],[2,10069042,0.322251,7],[2,6747296,0.690537,7],[2,519023,1.058824,7],[2,17542970,0.813299,7],[2,6747296,1.150895,7],[2,18373407,0.751918,7],[2,12975570,0.445013,7],[2,22525589,0.230179,7],[2,22525589,0.29156,7],[2,22525589,0.322251,7],[2,22525589,0.352941,7],[2,22525589,0.506394,7],[2,22525589,0.537084,7],[2,22525589,0.598465,7],[2,3633160,1.150895,7],[2,18165798,1.948849,7],[2,17958188,0.383632,7],[2,21487543,2.378517,7],[2,519023,1.42711,7],[2,519023,0.046036,7],[2,519023,0.076726,7],[2,519023,0.107417,7],[2,7162514,0.87468,7],[2,519023,0.29156,7],[2,6124469,1.365729,7],[2,18165798,0.813299,7],[2,8615778,0.751918,7],[2,6747296,0.352941,7],[2,6747296,0.414322,7],[2,12145133,0.015345,7],[2,519023,0.537084,7],[2,5709251,3.820972,7],[2,17542970,0.567775,7],[2,8615778,0.598465,7],[2,18373407,1.212276,7],[2,8615778,0.537084,7],[2,18373407,1.089514,7],[2,15466879,0.598465,7],[2,15466879,1.365729,7],[2,12767961,0.598465,7],[2,19203843,0.414322,7],[2,1557068,0.629156,7],[2,19203843,0.107417,7],[2,19203843,0.445013,7],[2,10484260,0.598465,7],[2,1557068,0.506394,7],[2,10276651,1.611253,7],[2,3840769,0.26087,7],[2,15466879,0.537084,7],[2,16297316,2.071611,7],[2,3840769,0.230179,7],[2,10484260,0.659847,7],[2,1557068,1.058824,7],[2,1557068,0.168798,7],[2,5709251,0.905371,7],[2,3217941,0.322251,7],[2,11937524,1.734015,7],[2,11729915,0.414322,7],[2,10484260,1.028133,7],[2,5916860,0.567775,7],[2,21902762,0.936061,7],[2,3840769,0.168798,7],[2,12767961,0.475703,7],[2,1557068,0.322251,7],[2,15466879,1.396419,7],[2,5709251,0.751918,7],[2,1557068,0.567775,7],[2,7577733,0.445013,8],[2,15882097,0.84399,8],[2,21072325,0.598465,8],[2,2387505,0.997442,8],[2,12975570,0.690537,8],[2,7577733,0.352941,8],[2,3010332,0.230179,8],[2,18373407,0.936061,8],[2,519023,1.089514,8],[2,14221224,0.997442,8],[2,21072325,0.629156,8],[2,3633160,0.29156,8],[2,11937524,1.887468,8],[2,9238606,0.84399,8],[2,17542970,0.537084,8],[2,1764677,0.721228,8],[2,16089706,1.242967,8],[2,2387505,0.537084,8],[2,8200560,0.475703,8],[2,311414,0.751918,8],[2,4463596,1.089514,8],[2,6539687,0.475703,8],[2,9238606,0.966752,8],[2,10484260,0.87468,8],[2,6954905,0.168798,8],[2,20449498,0.813299,8],[2,18373407,0.690537,8],[2,21279934,1.089514,8],[2,17335361,0.659847,8],[2,20657107,0.84399,8],[2,8823387,1.181586,8],[2,17335361,0.690537,8],[2,20657107,0.383632,8],[2,17335361,1.457801,8],[2,17335361,1.396419,8],[2,23356025,0.046036,8],[2,10276651,0.659847,8],[2,18373407,0.598465,8],[2,20449498,0.138107,8],[2,11729915,0.659847,8],[2,3217941,0.230179,8],[2,11937524,1.611253,8],[2,23148416,0.138107,8],[2,15259270,0.690537,8],[2,103805,0.076726,8],[2,15259270,0.659847,8],[2,15051661,0.721228,8],[2,21279934,0.352941,8],[2,7577733,0.168798,8],[2,6954905,0.076726,8],[2,15051661,0.537084,8],[2,10276651,0.782609,8],[2,18581016,0.322251,8],[2,21072325,0.383632,8],[2,15882097,0.659847,8],[2,18581016,0.445013,8],[2,23148416,0.659847,8],[2,3010332,0.046036,8],[2,20657107,1.058824,8],[2,21279934,0.813299,8],[2,16504925,0.352941,8],[2,15882097,0.076726,8],[2,16504925,0.383632,8],[2,3217941,2.56266,8],[2,17335361,0.537084,8],[2,17335361,0.567775,8],[2,1972287,0.905371,8],[2,6954905,0.26087,8],[2,10069042,0.383632,8],[2,8823387,0.168798,8],[2,19203843,0.199488,8],[2,2595114,1.734015,8],[2,9030997,1.918159,8],[2,8408169,1.120205,8],[2,1972287,0.445013,8],[2,5086423,0.168798,8],[2,1972287,0.414322,8],[2,19203843,0.26087,8],[2,9030997,1.795396,8],[2,7162514,0.537084,8],[2,1972287,0.199488,8],[2,17127752,0.629156,8],[2,11937524,0.997442,8],[2,4463596,0.352941,8],[2,5709251,1.058824,8],[2,5709251,1.181586,8],[2,5709251,0.87468,8],[2,3633160,0.138107,8],[2,11937524,0.751918,8],[2,6332078,0.629156,8],[2,17127752,0.997442,8],[2,16712534,0.905371,8],[2,5709251,0.782609,8],[2,103805,0.84399,8],[2,3217941,0.046036,8],[2,9238606,1.641944,8],[2,5709251,0.721228,8],[2,5709251,0.659847,8],[2,2595114,0.905371,8],[2,8823387,0.322251,8],[2,5709251,0.168798,8],[2,11937524,0.230179,8],[2,10069042,0.414322,8],[2,7162514,0.383632,8],[2,19411452,0.506394,8],[2,8408169,0.598465,8],[2,9030997,0.84399,8],[2,20864716,0.352941,8],[2,17335361,0.782609,8],[2,2179896,0.015345,8],[2,9238606,1.058824,8],[2,11522306,0.84399,8],[2,20449498,0.29156,8],[2,16089706,0.199488,8],[2,10691869,1.304348,8],[2,20449498,1.089514,8],[2,16089706,0.168798,8],[2,12560351,0.383632,8],[2,18581016,0.936061,8],[2,19203843,0.506394,8],[2,15051661,0.936061,8],[2,1972287,0.046036,8],[2,8408169,0.813299,8],[2,4463596,0.322251,8],[2,17127752,0.537084,8],[2,4463596,0.199488,8],[2,9030997,1.396419,8],[2,21072325,2.531969,8],[2,2595114,0.138107,8],[2,9030997,1.242967,8],[2,3633160,0.690537,8],[2,9030997,1.181586,8],[2,16089706,0.383632,8],[2,10691869,0.690537,8],[2,16089706,0.352941,8],[2,16089706,0.230179,8],[2,20864716,0.168798,8],[2,103805,0.567775,8],[2,8200560,1.150895,8],[2,4878814,0.445013,8],[2,7992951,0.199488,8],[2,6747296,0.475703,8],[2,19619061,0.26087,8],[2,9653824,0.475703,8],[2,8615778,0.383632,8],[2,21902762,0.629156,8],[2,18165798,0.936061,8],[2,18165798,0.966752,8],[2,4048378,0.015345,8],[2,22525589,0.107417,8],[2,19826670,0.414322,8],[2,22525589,0.414322,8],[2,4048378,0.107417,8],[2,9653824,0.997442,8],[2,22525589,0.813299,8],[2,9653824,1.028133,8],[2,4048378,0.567775,8],[2,14221224,0.076726,8],[2,3425550,1.488491,8],[2,17750579,1.058824,8],[2,14221224,0.168798,8],[2,13183179,0.26087,8],[2,6954905,1.335038,8],[2,12352742,0.690537,8],[2,6124469,0.230179,8],[2,12352742,0.659847,8],[2,6124469,0.322251,8],[2,5501642,0.383632,8],[2,6124469,0.414322,8],[2,5916860,0.076726,8],[2,17958188,0.414322,8],[2,6124469,0.629156,8],[2,6124469,0.751918,8],[2,3425550,0.383632,8],[2,12352742,0.445013,8],[2,14844052,0.966752,8],[2,726632,1.42711,8],[2,14844052,0.84399,8],[2,14844052,0.813299,8],[2,14844052,0.751918,8],[2,14844052,0.659847,8],[2,21902762,1.580563,8],[2,6124469,1.089514,8],[2,6747296,0.168798,8],[2,19826670,0.905371,8],[2,7992951,0.26087,8],[2,14844052,0.230179,8],[2,21487543,0.107417,8],[2,5294032,0.445013,8],[2,15674488,0.598465,8],[2,20034280,0.230179,8],[2,19826670,0.26087,8],[2,7785342,0.567775,8],[2,14636443,0.506394,8],[2,5294032,0.598465,8],[2,13390788,0.26087,8],[2,19826670,0.168798,8],[2,9653824,1.150895,8],[2,13390788,0.015345,8],[2,19826670,0.015345,8],[2,18996234,0.352941,8],[2,9653824,1.273657,8],[2,1349459,0.445013,8],[2,2802723,2.225064,8],[2,18996234,0.690537,8],[2,18996234,0.414322,8],[2,2802723,0.29156,8],[2,1349459,1.212276,8],[2,7785342,0.26087,8],[2,18996234,0.629156,8],[2,5294032,0.629156,8],[2,14221224,0.26087,8],[2,13183179,0.29156,8],[2,7370124,1.365729,8],[2,13183179,0.936061,8],[2,7370124,1.120205,8],[2,4255987,0.598465,8],[2,7370124,0.905371,8],[2,4255987,0.383632,8],[2,21487543,1.948849,8],[2,22110371,0.107417,8],[2,21487543,1.641944,8],[2,16297316,0.230179,8],[2,17750579,0.690537,8],[2,1141850,0.076726,8],[2,22110371,0.26087,8],[2,22110371,0.751918,8],[2,21902762,0.107417,8],[2,1141850,0.445013,8],[2,7370124,0.29156,8],[2,1141850,0.506394,8],[2,19826670,0.352941,8],[2,21487543,0.659847,8],[2,5294032,0.29156,8],[2,16297316,0.813299,8],[2,1764677,0.138107,8],[2,11314697,1.580563,8],[2,5501642,0.782609,8],[2,5294032,1.120205,8],[2,11522306,0.690537,8],[2,11107088,0.813299,8],[2,12767961,0.445013,8],[2,21695153,0.015345,8],[2,21695153,0.076726,8],[2,3425550,0.322251,8],[2,11107088,0.629156,8],[2,726632,0.138107,8],[2,934241,1.120205,8],[2,726632,0.414322,8],[2,21695153,0.659847,8],[2,21695153,0.813299,8],[2,22317980,0.721228,8],[2,11522306,0.29156,8],[2,5916860,0.751918,8],[2,16920143,0.87468,8],[2,17958188,1.580563,8],[2,12767961,0.690537,8],[2,12767961,0.659847,8],[2,10899479,0.230179,8],[2,10899479,0.506394,8],[2,22733198,0.322251,8],[2,5916860,1.028133,8],[2,22733198,0.230179,8],[2,1557068,0.414322,8],[2,1557068,0.445013,8],[2,14013615,1.42711,8],[2,16920143,0.659847,8],[2,19826670,1.580563,8],[2,9446215,0.107417,8],[2,17958188,1.120205,8],[2,15466879,0.690537,8],[2,726632,0.966752,8],[2,934241,0.107417,8],[2,12352742,0.782609,8],[2,5501642,0.445013,8],[2,22317980,0.445013,8],[2,934241,0.445013,8],[2,7992951,0.506394,8],[2,17958188,0.87468,8],[2,21695153,1.089514,8],[2,12352742,0.721228,8],[2,22317980,0.138107,8],[2,6124469,0.076726,8],[2,3425550,1.089514,9],[2,22940807,0.076726,9],[2,16297316,0.751918,9],[2,9861433,0.782609,9],[2,10899479,0.905371,9],[2,17750579,0.414322,9],[2,1141850,1.242967,9],[2,21487543,0.168798,9],[2,19203843,0.352941,9],[2,15674488,0.659847,9],[2,16504925,0.138107,9],[2,10899479,0.690537,9],[2,5294032,0.475703,9],[2,6124469,0.537084,9],[2,10899479,0.659847,9],[2,15466879,0.782609,9],[2,1141850,0.414322,9],[2,9446215,0.690537,9],[2,22940807,0.567775,9],[2,12560351,1.058824,9],[2,9861433,0.506394,9],[2,19203843,0.29156,9],[2,18581016,0.475703,9],[2,1557068,0.659847,9],[2,2595114,0.199488,9],[2,6124469,0.598465,9],[2,1141850,0.659847,9],[2,15466879,0.751918,9],[2,1141850,0.168798,9],[2,3840769,2.531969,9],[2,1141850,0.690537,9],[2,8823387,0.015345,9],[2,15674488,0.322251,9],[2,11729915,0.445013,9],[2,15882097,0.414322,9],[2,14013615,0.015345,9],[2,3840769,0.107417,9],[2,2802723,0.015345,9],[2,2802723,0.107417,9],[2,1557068,0.046036,9],[2,15259270,0.445013,9],[2,3840769,0.076726,9],[2,10484260,0.782609,9],[2,6332078,0.046036,9],[2,6124469,0.29156,9],[2,8408169,0.936061,9],[2,7785342,0.168798,9],[2,13390788,0.936061,9],[2,15259270,0.813299,9],[2,20034280,0.29156,9],[2,20034280,0.629156,9],[2,10899479,0.629156,9],[2,22317980,0.046036,9],[2,14636443,0.537084,9],[2,15882097,0.966752,9],[2,7785342,0.475703,9],[2,21695153,2.317136,9],[2,15882097,0.690537,9],[2,6124469,0.107417,9],[2,20657107,0.29156,9],[2,23356025,0.383632,9],[2,9446215,0.475703,9],[2,15882097,0.506394,9],[2,15882097,0.475703,9],[2,23356025,0.751918,9],[2,23148416,0.107417,9],[2,18373407,1.028133,9],[2,12767961,0.199488,9],[2,17542970,0.782609,9],[2,18788625,0.138107,9],[2,21695153,0.629156,9],[2,21695153,0.567775,9],[2,6747296,0.076726,9],[2,22525589,0.076726,9],[2,8408169,0.29156,9],[2,311414,1.028133,9],[2,22525589,0.199488,9],[2,18165798,0.352941,9],[2,14844052,0.782609,9],[2,5709251,0.076726,9],[2,4048378,0.138107,9],[2,22317980,0.383632,9],[2,22317980,0.352941,9],[2,5709251,0.199488,9],[2,9030997,0.813299,9],[2,19411452,0.230179,9],[2,6747296,0.26087,9],[2,5916860,0.352941,9],[2,14844052,0.383632,9],[2,9030997,0.751918,9],[2,8615778,0.721228,9],[2,9030997,0.659847,9],[2,18165798,0.475703,9],[2,9030997,0.567775,9],[2,6747296,0.138107,9],[2,12145133,0.076726,9],[2,9030997,0.414322,9],[2,21695153,1.120205,9],[2,12145133,0.168798,9],[2,12352742,0.352941,9],[2,8615778,0.506394,9],[2,12352742,0.322251,9],[2,12560351,0.537084,9],[2,9030997,1.335038,9],[2,311414,0.26087,9],[2,6124469,0.782609,9],[2,19203843,0.015345,9],[2,5501642,0.87468,9],[2,21487543,1.734015,9],[2,7162514,1.519182,9],[2,19203843,0.076726,9],[2,16297316,0.199488,9],[2,10069042,0.199488,9],[2,16297316,0.26087,9],[2,17750579,0.506394,9],[2,22317980,0.107417,9],[2,15466879,0.721228,9],[2,9861433,0.107417,9],[2,21072325,1.089514,9],[2,6332078,2.930946,9],[2,16504925,0.475703,9],[2,11314697,0.107417,9],[2,6124469,0.936061,9],[2,18788625,0.046036,9],[2,6332078,0.322251,9],[2,311414,0.629156,9],[2,519023,1.457801,9],[2,12767961,0.537084,9],[2,11314697,0.475703,9],[2,1557068,0.936061,9],[2,10069042,0.29156,9],[2,23148416,1.734015,9],[2,11314697,0.537084,9],[2,18373407,0.230179,9],[2,4255987,0.721228,9],[2,20864716,0.076726,9],[2,1557068,0.87468,9],[2,11314697,0.84399,9],[2,18373407,0.138107,9],[2,16089706,0.26087,9],[2,11522306,0.567775,9],[2,3217941,0.015345,9],[2,19619061,0.138107,9],[2,10276651,0.199488,9],[2,1764677,0.598465,9],[2,7992951,0.046036,9],[2,5086423,0.26087,9],[2,5086423,0.230179,9],[2,17958188,0.29156,9],[2,8200560,0.26087,9],[2,10276651,0.567775,9],[2,8200560,0.322251,9],[2,19619061,0.414322,9],[2,2802723,0.352941,9],[2,19619061,0.383632,9],[2,3217941,0.138107,9],[2,17958188,0.199488,9],[2,1764677,0.506394,9],[2,7992951,0.629156,9],[2,16920143,0.29156,9],[2,20449498,0.537084,9],[2,3425550,0.414322,9],[2,22110371,1.365729,9],[2,22110371,1.396419,9],[2,11107088,1.150895,9],[2,2387505,0.352941,9],[2,17958188,0.598465,9],[2,10691869,0.997442,9],[2,19619061,0.813299,9],[2,11937524,0.537084,9],[2,11937524,0.721228,9],[2,3633160,0.506394,9],[2,22110371,0.015345,9],[2,19619061,0.782609,9],[2,19619061,0.721228,9],[2,11937524,0.383632,9],[2,2387505,0.168798,9],[2,13183179,0.199488,9],[2,11107088,0.352941,9],[2,13183179,0.107417,9],[2,7162514,0.445013,9],[2,7992951,0.537084,9],[2,16089706,0.445013,9],[2,13183179,0.076726,9],[2,726632,0.29156,9],[2,11107088,0.567775,9],[2,17958188,0.537084,9],[2,14221224,0.046036,9],[2,16089706,0.322251,9],[2,16089706,0.29156,9],[2,6539687,1.918159,9],[2,4048378,4.83376,9],[2,3425550,0.690537,9],[2,4671205,0.29156,9],[2,2802723,0.782609,9],[2,19826670,0.138107,9],[2,8200560,0.905371,9],[2,3425550,0.721228,9],[2,22733198,0.26087,9],[2,4463596,0.076726,9],[2,1349459,0.414322,9],[2,103805,0.230179,9],[2,22733198,0.567775,9],[2,8200560,1.212276,9],[2,2802723,0.567775,9],[2,22733198,0.629156,9],[2,12975570,0.138107,9],[2,7162514,0.230179,9],[2,3633160,0.076726,9],[2,3217941,0.414322,9],[2,18996234,0.445013,9],[2,20449498,0.168798,9],[2,1764677,0.29156,9],[2,4463596,0.29156,9],[2,20449498,0.107417,9],[2,1764677,0.168798,9],[2,3010332,0.199488,9],[2,20449498,0.414322,9],[2,9238606,0.567775,9],[2,19826670,0.29156,9],[2,4463596,0.506394,9],[2,19826670,0.230179,9],[2,3217941,0.29156,9],[2,3425550,0.475703,9],[2,3010332,0.107417,9],[2,3633160,0.168798,9],[2,21279934,0.076726,9],[2,15051661,0.690537,9],[2,17958188,0.076726,10],[2,10691869,0.751918,10],[2,6747296,0.015345,10],[2,12352742,0.475703,10],[2,3217941,0.629156,10],[2,16712534,0.383632,10],[2,19411452,0.107417,10],[2,3425550,0.629156,10],[2,12352742,0.87468,10],[2,4878814,0.383632,10],[2,8408169,0.506394,10],[2,19826670,1.273657,10],[2,3633160,0.230179,10],[2,6124469,0.138107,10],[2,934241,0.046036,10],[2,16712534,0.721228,10],[2,519023,0.383632,10],[2,16712534,0.782609,10],[2,5501642,0.29156,10],[2,8408169,0.721228,10],[2,9030997,0.997442,10],[2,8408169,0.230179,10],[2,19411452,0.598465,10],[2,18788625,0.29156,10],[2,10276651,0.26087,10],[2,10276651,0.598465,10],[2,7992951,0.322251,10],[2,14844052,0.537084,10],[2,9030997,1.764706,10],[2,10276651,0.138107,10],[2,10691869,0.537084,10],[2,10691869,0.567775,10],[2,17958188,0.475703,10],[2,6747296,0.199488,10],[2,14844052,0.475703,10],[2,16712534,0.26087,10],[2,4463596,0.107417,10],[2,8408169,0.199488,10],[2,4463596,0.138107,10],[2,19619061,0.076726,10],[2,2802723,0.598465,10],[2,10899479,0.721228,10],[2,10899479,0.751918,10],[2,10899479,0.87468,10],[2,16920143,0.629156,10],[2,3010332,0.138107,10],[2,21279934,0.322251,10],[2,7992951,0.751918,10],[2,20864716,0.475703,10],[2,21279934,0.015345,10],[2,15466879,0.567775,10],[2,20864716,0.230179,10],[2,11314697,0.721228,10],[2,11314697,0.659847,10],[2,3425550,0.199488,10],[2,20449498,0.629156,10],[2,17127752,0.475703,10],[2,5709251,0.537084,10],[2,6332078,0.29156,10],[2,12767961,0.567775,10],[2,16920143,0.26087,10],[2,10484260,0.506394,10],[2,11729915,0.629156,10],[2,18996234,0.230179,10],[2,22733198,0.782609,10],[2,1557068,0.015345,10],[2,6332078,0.107417,10],[2,11729915,0.721228,10],[2,11729915,0.506394,10],[2,22733198,0.506394,10],[2,3840769,0.138107,10],[2,22733198,0.414322,10],[2,10899479,0.414322,10],[2,10899479,0.475703,10],[2,1557068,0.352941,10],[2,17958188,1.365729,10],[2,16920143,0.813299,10],[2,22733198,0.107417,10],[2,22733198,0.076726,10],[2,23148416,0.629156,10],[2,18996234,0.138107,10],[2,11107088,0.475703,10],[2,2387505,0.138107,10],[2,11107088,0.414322,10],[2,18165798,0.506394,10],[2,5916860,0.414322,10],[2,22317980,0.598465,10],[2,5916860,0.230179,10],[2,7992951,0.475703,10],[2,2387505,0.230179,10],[2,22317980,0.475703,10],[2,10069042,0.506394,10],[2,934241,0.352941,10],[2,10069042,0.445013,10],[2,934241,0.26087,10],[2,3633160,0.537084,10],[2,3633160,0.598465,10],[2,1972287,0.782609,10],[2,2387505,0.29156,10],[2,2387505,0.322251,10],[2,17958188,0.690537,10],[2,17127752,0.567775,10],[2,15466879,0.506394,10],[2,11522306,0.659847,10],[2,11314697,0.352941,10],[2,11314697,0.29156,10],[2,4878814,0.87468,10],[2,12767961,0.414322,10],[2,18165798,0.168798,10],[2,6332078,0.445013,10],[2,15466879,0.383632,10],[2,1764677,0.690537,10],[2,11107088,0.721228,10],[2,21695153,0.046036,10],[2,12767961,0.29156,10],[2,21695153,0.199488,10],[2,5709251,0.107417,10],[2,11107088,0.690537,10],[2,726632,0.046036,10],[2,21695153,0.414322,10],[2,21695153,0.537084,10],[2,18165798,0.383632,10],[2,9861433,0.352941,10],[2,9861433,0.383632,10],[2,18581016,0.138107,10],[2,1141850,0.26087,10],[2,18581016,0.230179,10],[2,1141850,0.383632,10],[2,22940807,0.598465,10],[2,21902762,0.046036,10],[2,17750579,0.168798,10],[2,1141850,0.475703,10],[2,6539687,0.352941,10],[2,1141850,0.629156,10],[2,9861433,0.598465,10],[2,16089706,0.107417,10],[2,6539687,0.26087,10],[2,7370124,0.230179,10],[2,8200560,0.414322,10],[2,2595114,0.322251,10],[2,9238606,1.181586,10],[2,22110371,0.076726,10],[2,4255987,0.29156,10],[2,21487543,1.764706,10],[2,12560351,0.598465,10],[2,21072325,0.230179,10],[2,7370124,0.690537,10],[2,6539687,0.997442,10],[2,11937524,0.445013,10],[2,5294032,0.230179,10],[2,22110371,0.199488,10],[2,17750579,0.598465,10],[2,6539687,0.813299,10],[2,11937524,0.199488,10],[2,7577733,0.076726,10],[2,12560351,0.84399,10],[2,11937524,0.076726,10],[2,5086423,0.598465,10],[2,6539687,0.537084,10],[2,7785342,0.383632,10],[2,15882097,0.598465,10],[2,15051661,0.230179,10],[2,17335361,0.383632,10],[2,9653824,1.181586,10],[2,15259270,0.230179,10],[2,18581016,0.659847,10],[2,12975570,0.046036,10],[2,12975570,0.383632,10],[2,12975570,0.26087,10],[2,12975570,0.230179,10],[2,4671205,0.26087,10],[2,15259270,0.598465,10],[2,15259270,0.629156,10],[2,2802723,0.199488,10],[2,15259270,0.936061,10],[2,7785342,0.138107,10],[2,2802723,0.230179,10],[2,9238606,0.751918,10],[2,6539687,0.107417,10],[2,15674488,0.87468,10],[2,5294032,0.322251,10],[2,1349459,0.168798,10],[2,15674488,0.721228,10],[2,14221224,0.567775,10],[2,14221224,0.537084,10],[2,19826670,0.322251,10],[2,14428833,0.168798,10],[2,14428833,0.199488,10],[2,1349459,0.230179,10],[2,20657107,0.322251,10],[2,15051661,0.659847,10],[2,15051661,0.629156,10],[2,15051661,0.567775,10],[2,23356025,0.138107,10],[2,15882097,0.721228,10],[2,15051661,0.475703,10],[2,18788625,0.076726,10],[2,3633160,0.046036,10],[2,9030997,0.199488,10],[2,4048378,0.29156,10],[2,16712534,0.168798,10],[2,22525589,0.475703,10],[2,21902762,0.322251,10],[2,9653824,0.84399,10],[2,4048378,0.076726,10],[2,22525589,0.015345,10],[2,9446215,0.936061,10],[2,9446215,0.87468,10],[2,12560351,0.26087,10],[2,9653824,0.659847,10],[2,18788625,0.230179,10],[2,9653824,0.537084,10],[2,7577733,0.721228,10],[2,519023,1.028133,10],[2,9653824,0.352941,10],[2,17542970,0.506394,10],[2,6747296,0.659847,10],[2,2179896,0.076726,10],[2,17542970,0.598465,10],[2,6747296,0.567775,10],[2,17542970,0.629156,10],[2,519023,0.87468,10],[2,14844052,0.046036,10],[2,17542970,0.659847,10],[2,9030997,0.537084,10],[2,9030997,0.506394,10],[2,18373407,0.168798,10],[2,311414,0.29156,10],[2,4463596,0.414322,10],[2,6747296,0.445013,10],[2,11937524,0.782609,10],[2,19619061,0.199488,10],[2,8615778,0.015345,10],[2,7370124,0.87468,10],[2,14221224,0.138107,10],[2,726632,1.549872,10],[2,8408169,0.138107,10],[2,21072325,0.015345,10],[2,21902762,0.29156,10],[2,12767961,0.751918,11],[2,5916860,1.150895,11],[2,4671205,0.322251,11],[2,3425550,0.751918,11],[2,3425550,0.138107,11],[2,20449498,0.322251,11],[2,8200560,0.751918,11],[2,14844052,0.107417,11],[2,23356025,0.076726,11],[2,10484260,0.26087,11],[2,23356025,0.199488,11],[2,10484260,0.352941,11],[2,17127752,0.383632,11],[2,2179896,0.107417,11],[2,16920143,0.567775,11],[2,10484260,0.445013,11],[2,12975570,0.199488,11],[2,17335361,0.87468,11],[2,23148416,0.015345,11],[2,17335361,0.751918,11],[2,14844052,0.506394,11],[2,10899479,0.383632,11],[2,12975570,0.414322,11],[2,10899479,0.168798,11],[2,1349459,0.352941,11],[2,18996234,0.168798,11],[2,16712534,0.138107,11],[2,6332078,0.199488,11],[2,20657107,0.230179,11],[2,17335361,1.120205,11],[2,12975570,0.107417,11],[2,10899479,0.567775,11],[2,20657107,0.26087,11],[2,9030997,0.475703,11],[2,19411452,0.168798,11],[2,23148416,0.537084,11],[2,9030997,0.87468,11],[2,3633160,0.107417,11],[2,103805,0.414322,11],[2,15674488,0.506394,11],[2,18788625,0.107417,11],[2,11937524,0.87468,11],[2,16712534,0.230179,11],[2,20449498,0.046036,11],[2,12560351,0.475703,11],[2,10276651,0.107417,11],[2,1141850,0.199488,11],[2,14221224,1.181586,11],[2,11107088,0.383632,11],[2,11937524,0.107417,11],[2,11937524,0.138107,11],[2,1141850,0.107417,11],[2,1141850,0.015345,11],[2,12560351,0.721228,11],[2,16712534,0.352941,11],[2,16297316,0.29156,11],[2,12560351,0.506394,11],[2,17958188,0.567775,11],[2,3633160,0.26087,11],[2,22110371,0.168798,11],[2,11937524,0.598465,11],[2,16297316,0.015345,11],[2,22317980,0.26087,11],[2,22317980,0.230179,11],[2,22317980,0.168798,11],[2,9446215,0.352941,11],[2,4255987,0.414322,11],[2,18788625,0.84399,11],[2,22317980,0.015345,11],[2,15674488,0.567775,11],[2,16920143,0.445013,11],[2,23356025,0.015345,11],[2,20864716,0.29156,11],[2,3425550,0.567775,11],[2,15674488,0.629156,11],[2,20864716,0.107417,11],[2,8200560,0.537084,11],[2,3425550,0.537084,11],[2,9653824,0.29156,11],[2,1349459,0.199488,11],[2,9653824,0.322251,11],[2,17127752,0.506394,11],[2,12352742,0.26087,11],[2,11314697,0.506394,11],[2,15051661,0.84399,11],[2,11314697,0.445013,11],[2,12352742,0.230179,11],[2,8200560,0.383632,11],[2,1349459,0.107417,11],[2,8200560,0.29156,11],[2,16297316,0.598465,11],[2,4671205,0.168798,11],[2,11314697,0.199488,11],[2,8200560,0.168798,11],[2,6332078,0.475703,11],[2,10276651,0.352941,11],[2,18581016,0.352941,11],[2,10276651,0.168798,11],[2,15466879,0.475703,11],[2,6747296,0.107417,11],[2,7370124,0.26087,11],[2,17750579,0.445013,11],[2,9238606,0.905371,11],[2,5709251,0.506394,11],[2,9238606,0.813299,11],[2,3840769,0.414322,11],[2,10691869,0.352941,11],[2,6747296,0.29156,11],[2,9238606,0.782609,11],[2,7370124,0.199488,11],[2,9238606,0.629156,11],[2,10691869,0.445013,11],[2,10691869,0.506394,11],[2,9861433,0.629156,11],[2,7992951,0.352941,11],[2,19619061,0.015345,11],[2,15466879,0.629156,11],[2,14221224,0.936061,11],[2,15466879,0.659847,11],[2,9238606,0.383632,11],[2,17542970,0.475703,11],[2,21072325,0.046036,11],[2,8615778,0.629156,11],[2,17750579,0.322251,11],[2,11729915,0.230179,11],[2,11522306,0.383632,11],[2,8823387,0.138107,11],[2,4463596,0.659847,11],[2,934241,0.076726,11],[2,5086423,0.352941,11],[2,10069042,0.230179,11],[2,5086423,0.107417,11],[2,5916860,0.168798,11],[2,934241,0.475703,11],[2,7992951,0.138107,11],[2,5916860,0.29156,11],[2,7370124,0.629156,11],[2,6539687,0.782609,11],[2,12767961,0.230179,11],[2,934241,1.335038,11],[2,1972287,0.107417,11],[2,20241889,0.29156,11],[2,7370124,0.445013,11],[2,5501642,1.488491,11],[2,12767961,0.322251,11],[2,4463596,0.26087,11],[2,9238606,0.997442,11],[2,6539687,0.506394,11],[2,12767961,0.352941,11],[2,22940807,5.44757,11],[2,12767961,0.383632,11],[2,18165798,0.199488,11],[2,6539687,0.383632,11],[2,8408169,0.322251,11],[2,17750579,0.29156,11],[2,1764677,0.046036,11],[2,15882097,0.168798,11],[2,7785342,0.046036,11],[2,1557068,0.107417,11],[2,15882097,0.29156,11],[2,2595114,0.352941,11],[2,11729915,0.537084,11],[2,15882097,0.352941,11],[2,1557068,0.076726,11],[2,15259270,0.414322,11],[2,11729915,0.598465,11],[2,21487543,0.199488,11],[2,8615778,0.199488,11],[2,15882097,0.445013,11],[2,16504925,0.445013,11],[2,14636443,0.445013,11],[2,18165798,0.076726,11],[2,22733198,0.046036,11],[2,18373407,0.29156,11],[2,18373407,0.26087,11],[2,9861433,0.26087,11],[2,10484260,0.629156,11],[2,7785342,0.414322,11],[2,7785342,1.028133,11],[2,6124469,0.168798,11],[2,7162514,0.199488,11],[2,5294032,0.506394,11],[2,22940807,0.046036,11],[2,7992951,0.598465,11],[2,14636443,0.322251,11],[2,1557068,0.26087,11],[2,11522306,0.414322,11],[2,8615778,0.567775,11],[2,16712534,0.29156,12],[2,14636443,0.138107,12],[2,14428833,0.107417,12],[2,9238606,0.322251,12],[2,11937524,0.352941,12],[2,1141850,0.782609,12],[2,15051661,0.383632,12],[2,4255987,0.84399,12],[2,5501642,0.414322,12],[2,22940807,0.168798,12],[2,16504925,0.076726,12],[2,18373407,0.414322,12],[2,6539687,0.659847,12],[2,5916860,0.046036,12],[2,8823387,0.046036,12],[2,20034280,0.046036,12],[2,19826670,0.107417,12],[2,16712534,0.598465,12],[2,17335361,0.29156,12],[2,5086423,0.383632,12],[2,7992951,0.015345,12],[2,17335361,0.475703,12],[2,17750579,0.199488,12],[2,14221224,0.230179,12],[2,726632,3.790281,12],[2,17335361,0.506394,12],[2,7370124,0.751918,12],[2,9653824,1.242967,12],[2,4255987,0.567775,12],[2,14636443,0.475703,12],[2,18373407,0.199488,12],[2,11937524,0.475703,12],[2,4255987,0.107417,12],[2,19411452,0.414322,12],[2,6954905,0.475703,12],[2,8615778,0.414322,12],[2,4255987,0.168798,12],[2,8200560,0.721228,12],[2,8200560,0.629156,12],[2,14844052,0.414322,12],[2,12352742,0.199488,12],[2,15882097,0.199488,12],[2,2179896,0.475703,12],[2,12560351,0.168798,12],[2,6539687,0.076726,12],[2,14844052,0.26087,12],[2,12560351,0.199488,12],[2,9030997,0.598465,12],[2,4255987,0.230179,12],[2,16504925,0.506394,12],[2,22110371,0.598465,12],[2,15051661,0.445013,12],[2,16297316,0.138107,12],[2,8615778,0.138107,12],[2,311414,0.138107,12],[2,15051661,0.506394,12],[2,15051661,0.598465,12],[2,8408169,0.537084,12],[2,6747296,0.046036,12],[2,15259270,0.352941,12],[2,21902762,0.015345,12],[2,8408169,0.383632,12],[2,17750579,0.076726,12],[2,519023,0.015345,12],[2,9030997,0.383632,12],[2,15259270,0.475703,12],[2,20449498,0.015345,12],[2,11107088,0.506394,12],[2,11522306,0.322251,12],[2,9861433,0.138107,12],[2,11107088,0.29156,12],[2,9446215,0.168798,12],[2,11522306,0.138107,12],[2,7992951,0.414322,12],[2,19619061,0.046036,12],[2,10276651,0.076726,12],[2,16504925,0.199488,12],[2,20864716,0.138107,12],[2,5709251,0.352941,12],[2,7577733,0.199488,12],[2,5709251,0.445013,12],[2,17958188,0.352941,12],[2,5709251,0.29156,12],[2,11314697,0.383632,12],[2,10276651,0.629156,12],[2,12560351,0.751918,12],[2,726632,1.365729,12],[2,7162514,0.138107,12],[2,103805,0.199488,12],[2,20449498,0.199488,12],[2,7992951,0.813299,12],[2,18996234,0.26087,12],[2,17127752,0.230179,12],[2,17127752,0.26087,12],[2,20449498,0.352941,12],[2,10484260,0.751918,12],[2,9861433,0.199488,12],[2,21279934,0.199488,12],[2,17127752,0.322251,12],[2,6332078,0.230179,12],[2,21279934,0.046036,12],[2,11729915,0.475703,12],[2,1764677,0.414322,12],[2,23148416,0.168798,12],[2,1764677,0.537084,12],[2,1557068,0.199488,12],[2,11522306,0.537084,12],[2,17127752,0.168798,12],[2,4671205,0.015345,12],[2,18165798,0.445013,12],[2,18165798,0.322251,12],[2,5709251,0.138107,12],[2,3217941,0.199488,12],[2,12767961,0.26087,12],[2,4463596,0.230179,12],[2,7992951,0.29156,12],[2,934241,0.199488,12],[2,11314697,0.046036,12],[2,9861433,0.475703,12],[2,10069042,0.168798,12],[2,19619061,0.352941,12],[2,934241,0.138107,12],[2,21902762,0.352941,12],[2,4671205,0.046036,12],[2,14636443,0.352941,13],[2,22110371,0.046036,13],[2,5294032,0.046036,13],[2,934241,0.905371,13],[2,16920143,0.383632,13],[2,5294032,0.076726,13],[2,1141850,0.138107,13],[2,12352742,0.138107,13],[2,10484260,0.322251,13],[2,12352742,0.168798,13],[2,12767961,0.168798,13],[2,10899479,0.26087,13],[2,5294032,0.26087,13],[2,934241,1.212276,13],[2,9861433,0.168798,13],[2,11522306,0.598465,13],[2,11522306,0.475703,13],[2,6124469,0.046036,13],[2,1349459,0.322251,13],[2,22110371,0.230179,13],[2,726632,0.199488,13],[2,4671205,0.076726,13],[2,8408169,0.046036,13],[2,16297316,0.506394,13],[2,18373407,0.383632,13],[2,8615778,0.076726,13],[2,18165798,0.046036,13],[2,1764677,0.26087,13],[2,9861433,0.230179,13],[2,20657107,0.076726,13],[2,14428833,0.015345,13],[2,15674488,0.537084,13],[2,10069042,0.26087,13],[2,6332078,0.015345,13],[2,22525589,0.138107,13],[2,5086423,0.29156,13],[2,5294032,0.383632,13],[2,15259270,0.199488,13],[2,22733198,0.138107,13],[2,15674488,0.26087,13],[2,15674488,0.230179,13],[2,17127752,0.29156,13],[2,934241,0.168798,13],[2,5086423,0.199488,13],[2,7162514,0.26087,13],[2,8615778,0.230179,13],[2,20449498,0.230179,13],[2,934241,0.230179,13],[2,9653824,0.445013,13],[2,15259270,0.537084,13],[2,15259270,0.567775,13],[2,17127752,0.445013,13],[2,5709251,0.383632,13],[2,5709251,0.414322,13],[2,22110371,1.120205,13],[2,9861433,0.537084,13],[2,12352742,0.537084,13],[2,18581016,0.414322,13],[2,6747296,0.230179,13],[2,16504925,0.230179,13],[2,8200560,0.138107,13],[2,5709251,0.567775,13],[2,10276651,0.537084,13],[2,14844052,0.567775,13],[2,1349459,0.046036,13],[2,16297316,0.107417,13],[2,14844052,0.721228,13],[2,6539687,0.445013,13],[2,16089706,0.138107,13],[2,12767961,0.506394,13],[2,8408169,0.352941,13],[2,11314697,0.26087,13],[2,8408169,0.445013,13],[2,6539687,0.414322,13],[2,3425550,0.506394,13],[2,6332078,2.378517,13],[2,3633160,0.199488,13],[2,5501642,0.138107,13],[2,14844052,1.181586,13],[2,7577733,0.107417,13],[2,6747296,0.537084,13],[2,11522306,0.352941,13],[2,12560351,0.629156,13],[2,14636443,0.199488,13],[2,14844052,0.168798,13],[2,1349459,0.26087,13],[2,11729915,0.199488,13],[2,2387505,0.199488,13],[2,11107088,0.322251,13],[2,19826670,0.199488,13],[2,15051661,0.322251,13],[2,9238606,0.352941,13],[2,7992951,0.445013,13],[2,4255987,0.046036,13],[2,9030997,0.168798,13],[2,10691869,0.414322,13],[2,17127752,0.782609,13],[2,17542970,0.352941,13],[2,10276651,0.046036,13],[2,17542970,0.414322,13],[2,7370124,0.383632,13],[2,9861433,0.076726,13],[2,9238606,0.475703,13],[2,19619061,0.168798,13],[2,5086423,0.015345,13],[2,18581016,0.29156,14],[2,18581016,0.26087,14],[2,1141850,0.322251,14],[2,5294032,0.352941,14],[2,18581016,0.383632,14],[2,4671205,0.107417,14],[2,18581016,0.199488,14],[2,1141850,0.230179,14],[2,2595114,0.015345,14],[2,18581016,0.076726,14],[2,5086423,0.414322,14],[2,5086423,0.138107,14],[2,7992951,0.168798,14],[2,9653824,0.138107,14],[2,9653824,0.107417,14],[2,4878814,0.046036,14],[2,4878814,0.199488,14],[2,16504925,0.015345,14],[2,17958188,0.168798,14],[2,17958188,0.26087,14],[2,10691869,0.230179,14],[2,3425550,0.352941,14],[2,10276651,0.29156,14],[2,10276651,0.230179,14],[2,11107088,0.076726,14],[2,11522306,0.26087,14],[2,16920143,0.107417,14],[2,2387505,0.107417,14],[2,16920143,0.199488,14],[2,1764677,0.383632,14],[2,1764677,0.107417,14],[2,16504925,0.046036,14],[2,3425550,0.076726,14],[2,1764677,0.230179,14],[2,22733198,0.445013,14],[2,20449498,0.076726,14],[2,23356025,0.168798,14],[2,15674488,0.383632,14],[2,15674488,0.352941,14],[2,20657107,0.015345,14],[2,15259270,0.26087,14],[2,15259270,0.29156,14],[2,15882097,0.383632,14],[2,15882097,0.322251,14],[2,7785342,0.015345,14],[2,12975570,0.015345,14],[2,9238606,0.230179,14],[2,15051661,0.199488,14],[2,15051661,0.26087,14],[2,9238606,0.506394,14],[2,9238606,0.537084,14],[2,9238606,0.690537,14],[2,8200560,0.352941,14],[2,6539687,0.199488,14],[2,6539687,0.230179,14],[2,6539687,0.322251,14],[2,8200560,0.076726,14],[2,16089706,0.046036,14],[2,21902762,0.076726,14],[2,21902762,0.138107,14],[2,11937524,0.015345,14],[2,22110371,0.322251,14],[2,11937524,0.26087,14],[2,21072325,0.107417,14],[2,5709251,0.26087,14],[2,5709251,0.690537,14],[2,17127752,0.598465,14],[2,15466879,0.445013,14],[2,6332078,0.383632,14],[2,311414,0.352941,14],[2,16504925,0.29156,14],[2,311414,0.414322,14],[2,311414,0.445013,14],[2,22317980,0.414322,14],[2,18788625,0.015345,14],[2,15466879,0.352941,14],[2,16712534,0.537084,14],[2,5916860,0.107417,14],[2,6124469,0.383632,14],[2,5501642,0.230179,14],[2,14844052,0.598465,14],[2,14844052,0.29156,14],[2,16712534,0.076726,14],[2,8615778,0.168798,14],[2,9030997,0.322251,14],[2,9030997,0.26087,14],[2,12767961,0.076726,14],[2,12560351,0.414322,14],[2,12560351,0.29156,14],[2,12560351,0.352941,14],[2,10484260,0.537084,14],[2,10484260,0.230179,14],[2,10899479,0.046036,14],[2,23148416,0.076726,14],[2,1557068,0.138107,14],[2,16297316,0.414322,14],[2,16297316,0.383632,14],[2,11729915,0.26087,14],[2,5294032,0.199488,14],[2,9446215,0.076726,14],[2,5294032,0.107417,14],[2,20864716,0.26087,14],[2,11729915,0.107417,14],[2,11729915,0.076726,15],[2,14636443,0.230179,15],[2,8200560,0.199488,15],[2,14844052,0.445013,15],[2,6539687,0.168798,15],[2,18165798,0.138107,15],[2,1764677,0.076726,15],[2,17542970,0.29156,15],[2,9030997,0.445013,15],[2,6332078,0.168798,15],[2,3425550,0.107417,15],[2,6332078,0.076726,15],[2,9030997,0.107417,15],[2,9030997,0.015345,15],[2,15051661,0.107417,15],[2,15051661,0.076726,15],[2,10691869,0.383632,15],[2,12767961,0.046036,15],[2,12352742,0.29156,15],[2,12975570,0.076726,15],[2,8200560,1.181586,15],[2,12767961,0.015345,15],[2,5709251,0.322251,15],[2,15882097,0.230179,15],[2,15882097,0.26087,15],[2,7162514,0.107417,15],[2,11314697,0.322251,15],[2,11107088,0.230179,15],[2,10691869,0.168798,15],[2,17958188,0.046036,15],[2,11314697,0.230179,15],[2,3425550,0.445013,15],[2,15466879,0.414322,15],[2,5294032,0.690537,15],[2,11522306,0.199488,15],[2,11314697,0.168798,15],[2,11107088,0.107417,15],[2,20241889,0.168798,15],[2,2387505,0.015345,15],[2,11314697,0.414322,15],[2,5709251,0.046036,15],[2,1557068,0.598465,15],[2,10691869,0.26087,15],[2,22317980,0.29156,15],[2,10069042,0.138107,15],[2,10069042,0.107417,15],[2,2387505,0.076726,15],[2,3425550,0.29156,15],[2,16712534,0.414322,15],[2,5916860,0.138107,15],[2,10899479,0.29156,15],[2,21902762,0.230179,15],[2,21902762,0.199488,15],[2,7370124,0.322251,15],[2,4255987,0.138107,15],[2,15259270,0.168798,15],[2,311414,0.230179,15],[2,16712534,0.107417,15],[2,7577733,0.015345,15],[2,16297316,0.076726,15],[2,16297316,0.046036,15],[2,21072325,0.29156,15],[2,15259270,0.322251,15],[2,8615778,0.107417,15],[2,15259270,0.383632,15],[2,311414,0.813299,15],[2,17750579,0.230179,15],[2,4255987,0.199488,15],[2,15674488,0.445013,15],[2,15674488,0.475703,15],[2,18581016,0.168798,15],[2,22525589,0.046036,15],[2,9446215,0.445013,16],[2,15674488,0.29156,16],[2,15466879,0.26087,16],[2,9030997,0.29156,16],[2,9238606,0.445013,16],[2,9238606,0.414322,16],[2,18373407,0.107417,16],[2,4878814,0.26087,16],[2,1557068,0.537084,16],[2,4878814,0.107417,16],[2,15051661,0.138107,16],[2,17335361,0.138107,16],[2,3633160,0.322251,16],[2,16712534,0.322251,16],[2,311414,0.168798,16],[2,17958188,0.138107,16],[2,2595114,0.537084,16],[2,14636443,0.168798,16],[2,5709251,0.475703,16],[2,5501642,0.26087,16],[2,10276651,0.322251,16],[2,20864716,0.015345,16],[2,17958188,0.015345,16],[2,19619061,0.107417,16],[2,7162514,0.414322,16],[2,7992951,0.383632,16],[2,14636443,0.015345,16],[2,19411452,0.29156,16],[2,8408169,0.168798,16],[2,6539687,0.138107,16],[2,16920143,2.624041,16],[2,9238606,0.659847,16],[2,15882097,0.107417,16],[2,5086423,0.076726,16],[2,8408169,0.015345,16],[2,12560351,0.230179,16],[2,5709251,0.015345,16],[2,9446215,0.322251,16],[2,1764677,0.015345,16],[2,4255987,0.015345,16],[2,5916860,0.26087,16],[2,10899479,0.445013,16],[2,17335361,0.352941,16],[2,17335361,0.322251,16],[2,9653824,0.383632,16],[2,7370124,0.076726,16],[2,12560351,0.322251,16],[2,934241,0.383632,16],[2,19619061,0.230179,16],[2,11314697,0.076726,16],[2,18165798,0.26087,16],[2,10899479,0.107417,16],[2,4463596,0.015345,16],[2,21279934,0.230179,16],[2,10484260,0.414322,16],[2,16920143,0.168798,16],[2,11729915,0.322251,16],[2,17335361,0.230179,16],[2,1349459,0.076726,17],[2,11729915,0.015345,17],[2,17542970,0.046036,17],[2,4671205,0.138107,17],[2,18373407,0.046036,17],[2,1349459,0.015345,17],[2,5086423,0.046036,17],[2,9653824,0.168798,17],[2,2802723,0.046036,17],[2,8200560,0.046036,17],[2,7162514,0.168798,17],[2,11937524,0.168798,17],[2,20657107,0.199488,17],[2,16712534,0.199488,17],[2,5501642,0.352941,17],[2,3425550,0.046036,17],[2,9861433,0.751918,17],[2,10276651,0.475703,17],[2,5294032,0.567775,17],[2,10691869,0.322251,17],[2,6954905,0.352941,17],[2,17750579,0.015345,17],[2,10484260,0.383632,17],[2,519023,2.624041,17],[2,5916860,0.015345,17],[2,20657107,0.107417,17],[2,22110371,0.138107,17],[2,5501642,0.168798,17],[2,10484260,0.076726,17],[2,9446215,0.138107,17],[2,1349459,0.29156,17],[2,11729915,0.168798,17],[2,9030997,0.230179,17],[2,15882097,0.046036,17],[2,8615778,0.322251,17],[2,5086423,0.322251,17],[2,9446215,0.383632,17],[2,17958188,0.107417,17],[2,15674488,0.138107,17],[2,17542970,0.445013,17],[2,4878814,0.138107,17],[2,4878814,0.076726,17],[2,16920143,0.138107,17],[2,7992951,0.107417,17],[2,17127752,0.352941,17],[2,726632,0.015345,17],[2,11729915,0.138107,17],[2,20657107,0.046036,17],[2,311414,0.046036,17],[2,311414,0.107417,17],[2,18373407,0.537084,17],[2,6332078,0.138107,17],[2,14844052,0.352941,17],[2,1349459,0.138107,17],[2,8200560,0.445013,17],[2,6539687,0.046036,17],[2,11107088,0.168798,17],[2,11107088,0.199488,17],[2,17542970,0.26087,17],[2,10899479,0.138107,17],[2,7370124,0.138107,17],[2,9238606,0.168798,17],[2,11729915,0.383632,17],[2,9238606,0.598465,17],[2,9653824,0.015345,18],[2,5294032,0.015345,18],[2,9653824,0.230179,18],[2,10276651,1.089514,18],[2,9653824,0.26087,18],[2,20034280,1.120205,18],[2,15882097,0.015345,18],[2,8615778,0.046036,18],[2,4878814,0.168798,18],[2,7992951,0.076726,18],[2,9238606,0.107417,18],[2,16712534,0.046036,18],[2,7577733,0.046036,18],[2,9861433,0.015345,18],[2,1764677,0.199488,18],[2,12560351,0.015345,18],[2,17335361,0.26087,18],[2,18165798,0.015345,18],[2,15674488,0.107417,18],[2,9861433,0.29156,18],[2,17335361,0.107417,18],[2,8408169,0.076726,18],[2,17335361,0.076726,18],[2,17127752,0.046036,18],[2,22733198,0.015345,18],[2,15051661,0.352941,18],[2,15466879,0.138107,18],[2,7370124,0.537084,18],[2,23356025,0.475703,18],[2,8200560,0.015345,18],[2,11522306,0.107417,18],[2,16920143,0.046036,18],[2,17542970,0.230179,18],[2,9446215,0.199488,18],[2,12352742,0.076726,18],[2,2802723,0.26087,18],[2,10484260,0.29156,18],[2,15674488,0.168798,18],[2,17127752,0.015345,18],[2,7162514,0.046036,19],[2,11314697,0.015345,19],[2,18581016,0.046036,19],[2,10484260,0.199488,19],[2,1141850,0.046036,19],[2,3425550,0.230179,19],[2,4255987,0.076726,19],[2,2387505,0.046036,19],[2,11729915,0.29156,19],[2,5294032,0.168798,19],[2,11522306,0.230179,19],[2,9446215,0.015345,19],[2,5294032,0.138107,19],[2,11107088,0.26087,19],[2,11522306,0.168798,19],[2,20864716,0.046036,19],[2,22110371,0.414322,19],[2,15674488,0.414322,19],[2,5501642,0.107417,19],[2,4048378,0.168798,19],[2,6747296,0.322251,19],[2,15466879,0.107417,19],[2,17542970,0.322251,19],[2,14844052,0.199488,19],[2,14636443,0.046036,19],[2,12767961,0.107417,19],[2,15051661,0.414322,19],[2,9030997,0.138107,19],[2,16504925,0.168798,19],[2,15051661,0.168798,19],[2,15259270,0.107417,19],[2,15259270,0.506394,19],[2,12560351,0.138107,19],[2,12560351,0.107417,19],[2,16712534,0.015345,19],[2,3633160,0.015345,19],[2,12560351,0.445013,19],[2,15259270,0.076726,19],[2,10069042,0.015345,19],[2,15466879,0.29156,19],[2,9238606,0.29156,19],[2,15051661,0.015345,19],[2,8615778,0.352941,20],[2,5501642,0.076726,20],[2,18165798,0.107417,20],[2,10276651,0.015345,20],[2,17542970,0.076726,20],[2,10899479,0.076726,20],[2,17542970,0.107417,20],[2,726632,0.107417,20],[2,11107088,0.138107,20],[2,17127752,0.199488,20],[2,17542970,0.383632,20],[2,17127752,0.107417,20],[2,15674488,0.046036,20],[2,17750579,0.26087,20],[2,17335361,0.414322,20],[2,9238606,0.26087,20],[2,9653824,0.046036,20],[2,7992951,0.230179,20],[2,9653824,0.076726,20],[2,311414,0.076726,20],[2,5501642,0.322251,20],[2,15466879,0.199488,20],[2,15259270,0.138107,20],[2,12767961,0.138107,21],[2,7370124,0.168798,21],[2,14636443,0.076726,21],[2,311414,0.199488,21],[2,9030997,0.076726,21],[2,9030997,0.046036,21],[2,10691869,0.015345,21],[2,15674488,0.076726,21],[2,11729915,0.352941,21],[2,7577733,0.138107,21],[2,12560351,0.046036,21],[2,9653824,0.199488,21],[2,11522306,0.015345,21],[2,15882097,0.138107,21],[2,11937524,2.01023,21],[2,18581016,0.107417,21],[2,16920143,0.076726,21],[2,10691869,0.199488,21],[2,11522306,0.076726,21],[2,5501642,0.199488,21],[2,17542970,0.168798,21],[2,10691869,0.29156,21],[2,5501642,0.046036,21],[2,17127752,0.138107,22],[2,15051661,0.046036,22],[2,15466879,0.322251,22],[2,4878814,0.230179,22],[2,9446215,0.046036,22],[2,10069042,0.076726,22],[2,9238606,0.199488,22],[2,9861433,0.046036,22],[2,311414,0.015345,22],[2,10484260,0.107417,22],[2,10484260,0.168798,22],[2,20657107,0.168798,22],[2,12352742,0.107417,22],[2,10899479,0.199488,23],[2,17750579,0.046036,23],[2,14844052,0.076726,23],[2,21902762,0.168798,23],[2,12352742,0.046036,23],[2,17335361,0.199488,23],[2,11522306,0.046036,23],[2,17750579,0.107417,23],[2,18373407,0.015345,23],[2,11937524,0.046036,23],[2,11107088,0.046036,23],[2,9446215,0.230179,23],[2,16297316,0.168798,23],[2,15674488,0.199488,23],[2,8200560,0.107417,23],[2,10691869,0.076726,23],[2,9238606,0.015345,24],[2,7162514,0.015345,24],[2,7370124,0.046036,24],[2,10691869,0.138107,24],[2,20864716,0.199488,24],[2,17542970,0.015345,24],[2,7370124,0.107417,25],[2,10691869,0.107417,25],[2,15466879,0.168798,25],[2,15674488,0.015345,25],[2,7162514,0.076726,25],[2,12560351,0.076726,25],[2,15466879,0.076726,25],[2,10899479,0.015345,25],[2,4878814,0.015345,26],[2,17750579,0.138107,26],[2,10691869,0.046036,26],[2,3425550,0.015345,26],[2,14844052,0.138107,26],[2,15466879,0.230179,26],[2,11729915,0.046036,26],[2,18581016,0.015345,26],[2,15466879,0.015345,26],[2,12352742,0.015345,27],[2,10484260,0.015345,27],[2,7370124,0.015345,27],[2,6539687,0.015345,27],[2,17542970,0.138107,27],[2,15466879,0.046036,27],[2,17542970,0.199488,27],[2,16920143,0.015345,28],[2,17127752,0.076726,28],[2,15259270,0.015345,28],[2,11314697,0.138107,28],[2,14844052,0.015345,29],[2,10484260,0.046036,30],[2,5501642,0.015345,30],[2,11107088,0.015345,30],[2,10484260,0.138107,31],[2,17335361,0.168798,32],[2,15259270,0.046036,32],[2,9238606,0.138107,33],[2,17335361,0.015345,33],[2,9238606,0.046036,34],[2,17335361,0.046036,37],[2,9238606,0.076726,41],[3,17423490,1.549872,1],[3,18057071,3.452685,1],[3,14889164,2.132992,1],[3,6441411,6.092072,1],[3,17423490,2.808184,1],[3,6441411,4.035806,1],[3,2639923,2.286445,1],[3,15311552,1.365729,1],[3,14889164,3.299233,1],[3,15311552,1.335038,1],[3,15100358,1.028133,1],[3,2639923,3.299233,1],[3,6441411,2.470588,1],[3,15100358,1.703325,1],[3,2639923,3.268542,1],[3,18057071,2.808184,1],[3,14889164,2.163683,1],[3,2639923,2.439898,1],[3,2428729,1.611253,1],[3,17423490,1.488491,1],[3,15100358,2.624041,1],[3,6441411,3.851662,1],[3,15311552,2.225064,1],[3,2428729,1.580563,1],[3,9820513,4.035806,1],[3,17423490,2.286445,1],[3,15311552,2.194373,1],[3,15311552,1.672634,1],[3,6441411,3.913043,1],[3,18057071,1.549872,1],[3,17423490,2.194373,1],[3,18057071,1.641944,1],[3,18057071,2.531969,1],[3,2428729,1.120205,1],[3,18057071,2.56266,1],[3,316791,6.736573,1],[3,316791,5.969309,1],[3,17423490,2.132992,1],[3,17423490,3.14578,1],[3,15311552,1.42711,1],[3,2639923,2.01023,1],[3,15311552,1.396419,1],[3,2639923,2.225064,1],[3,2639923,0.997442,1],[3,18057071,3.268542,1],[3,18057071,1.764706,1],[3,18057071,3.053708,1],[3,15100358,1.120205,1],[3,17423490,2.961637,1],[3,2639923,2.838875,1],[3,2639923,2.869565,1],[3,14889164,2.286445,1],[3,2639923,2.900256,1],[3,17423490,1.764706,1],[3,9820513,3.69821,1],[3,2639923,3.176471,1],[3,18057071,2.961637,1],[3,17423490,1.826087,1],[3,17423490,2.992327,1],[3,15311552,0.383632,1],[3,2639923,2.961637,1],[3,14889164,2.624041,1],[3,14889164,2.59335,1],[3,6441411,4.158568,1],[3,17423490,2.654731,1],[3,2639923,3.053708,1],[3,6441411,2.347826,1],[3,18057071,1.918159,1],[3,14889164,2.439898,1],[3,14889164,2.378517,1],[3,17423490,1.948849,1],[3,15311552,1.273657,1],[3,2639923,1.242967,1],[3,2639923,2.470588,1],[3,15311552,2.102302,1],[3,6441411,4.097187,1],[3,14889164,3.207161,1],[3,2639923,2.56266,1],[3,15311552,0.997442,1],[3,18057071,2.071611,1],[3,2639923,2.624041,1],[3,14889164,4.680307,1],[3,2639923,2.654731,1],[3,17423490,1.703325,1],[3,6441411,4.127877,1],[3,6441411,4.28133,1],[3,2639923,2.685422,1],[3,15100358,1.058824,1],[3,2639923,2.746803,1],[3,6441411,2.409207,1],[3,17423490,2.746803,1],[3,2639923,2.808184,1],[3,18057071,3.329923,1],[3,316791,6.982097,1],[3,15311552,0.813299,1],[3,6441411,2.286445,1],[3,15100358,3.790281,1],[3,17423490,1.734015,1],[3,15100358,4.189258,1],[3,15100358,4.83376,1],[3,17423490,2.869565,1],[3,15100358,4.86445,1],[3,6441411,4.987212,1],[3,18057071,2.286445,1],[3,9820513,2.01023,1],[3,17423490,2.838875,1],[3,9820513,1.887468,1],[3,6441411,4.526854,1],[3,9820513,3.452685,1],[3,9820513,1.856777,1],[3,18057071,4.31202,1],[3,2639923,1.734015,1],[3,2428729,3.69821,1],[3,9820513,2.746803,1],[3,2639923,1.826087,1],[3,15100358,1.273657,1],[3,15100358,5.140665,1],[3,2428729,3.575448,1],[3,9820513,2.992327,1],[3,15100358,4.097187,1],[3,9820513,3.023018,1],[3,2428729,3.483376,1],[3,15100358,5.44757,1],[3,2428729,3.391304,1],[3,9820513,2.531969,1],[3,17423490,3.11509,1],[3,2428729,4.496164,1],[3,2428729,3.360614,1],[3,15100358,4.404092,1],[3,316791,5.754476,1],[3,15100358,2.071611,1],[3,15100358,4.434783,1],[3,15100358,4.496164,1],[3,18057071,2.378517,1],[3,17423490,2.501279,1],[3,15100358,3.636829,1],[3,9820513,2.409207,1],[3,15100358,3.667519,1],[3,17423490,2.531969,1],[3,15100358,3.575448,1],[3,17423490,2.470588,1],[3,9820513,2.225064,1],[3,15100358,1.42711,1],[3,9820513,2.838875,1],[3,18057071,2.347826,1],[3,18057071,2.317136,1],[3,2428729,4.127877,1],[3,6441411,4.895141,1],[3,9820513,3.514066,1],[3,9820513,3.575448,1],[3,17423490,2.900256,1],[3,9820513,2.777494,1],[3,17423490,2.59335,1],[3,6441411,4.618926,1],[3,15100358,4.741688,1],[3,15311552,2.071611,1],[3,18057071,2.470588,1],[3,15100358,2.409207,1],[3,6441411,4.588235,1],[3,18057071,2.194373,1],[3,17423490,2.378517,1],[3,15100358,1.734015,1],[3,2428729,2.378517,1],[3,6441411,5.44757,1],[3,6441411,3.544757,1],[3,15311552,2.01023,1],[3,6441411,3.606138,1],[3,17423490,1.97954,1],[3,9820513,4.496164,1],[3,9820513,5.202046,1],[3,2428729,2.317136,1],[3,2428729,2.255754,1],[3,2428729,2.194373,1],[3,2428729,2.163683,1],[3,6441411,5.601023,1],[3,15311552,1.97954,1],[3,2428729,2.132992,1],[3,15100358,6.890026,1],[3,2428729,2.071611,1],[3,18057071,2.102302,1],[3,9820513,3.268542,1],[3,2428729,2.01023,1],[3,6441411,7.411765,1],[3,2428729,1.97954,1],[3,9820513,4.250639,1],[3,9820513,4.219949,1],[3,15100358,7.043478,1],[3,15311552,1.856777,1],[3,15311552,1.826087,1],[3,15100358,2.685422,1],[3,15100358,1.826087,1],[3,2639923,1.948849,1],[3,15100358,1.181586,1],[3,6441411,2.624041,1],[3,2428729,3.299233,1],[3,6441411,2.685422,1],[3,15100358,2.531969,1],[3,15100358,3.176471,1],[3,6441411,4.373402,1],[3,2639923,1.97954,1],[3,15100358,5.785166,1],[3,2428729,3.084399,1],[3,6441411,2.838875,1],[3,6441411,4.342711,1],[3,6441411,2.900256,1],[3,15100358,3.11509,1],[3,6441411,3.053708,1],[3,2428729,3.053708,1],[3,15100358,6,1],[3,15100358,3.084399,1],[3,15100358,6.153453,1],[3,2428729,2.746803,1],[3,15100358,2.961637,1],[3,17423490,3.023018,1],[3,15100358,3.974425,1],[3,15100358,2.869565,1],[3,2428729,2.59335,1],[3,6441411,5.355499,1],[3,15311552,2.040921,1],[3,15100358,2.808184,1],[3,2428729,2.501279,1],[3,8975737,3.943734,1],[3,1372760,5.969309,1],[3,16578715,4.83376,1],[3,1372760,6.061381,1],[3,1372760,6.368286,1],[3,16578715,4.404092,1],[3,1372760,6.460358,1],[3,1372760,6.58312,1],[3,16578715,4.158568,1],[3,16578715,4.097187,1],[3,8975737,4.557545,1],[3,16578715,3.974425,1],[3,16578715,3.820972,1],[3,16578715,3.69821,1],[3,16578715,3.667519,1],[3,16578715,3.636829,1],[3,16578715,3.452685,1],[3,16578715,5.969309,1],[3,8975737,3.391304,1],[3,16578715,5.785166,1],[3,1372760,5.386189,1],[3,1372760,5.508951,1],[3,1372760,5.570332,1],[3,1372760,5.631714,1],[3,16578715,5.41688,1],[3,16578715,5.294118,1],[3,16578715,5.232737,1],[3,8975737,3.820972,1],[3,16578715,5.171355,1],[3,16578715,5.109974,1],[3,8975737,3.882353,1],[3,16578715,5.048593,1],[3,16578715,5.017903,1],[3,1372760,5.877238,1],[3,16578715,1.856777,1],[3,16578715,1.734015,1],[3,16578715,1.242967,1],[3,16578715,0.690537,1],[3,16578715,0.659847,1],[3,950372,2.317136,1],[3,16578715,0.506394,1],[3,16578715,0.445013,1],[3,7497381,2.808184,1],[3,16578715,0.199488,1],[3,17845878,3.974425,1],[3,17845878,4.005115,1],[3,16578715,0.076726,1],[3,527985,2.930946,1],[3,1372760,7.657289,1],[3,1372760,8.485934,1],[3,7074993,7.196931,1],[3,16578715,3.421995,1],[3,16578715,3.360614,1],[3,16578715,3.329923,1],[3,16578715,3.299233,1],[3,16578715,3.207161,1],[3,16578715,3.176471,1],[3,16578715,3.084399,1],[3,16578715,3.053708,1],[3,16578715,2.992327,1],[3,16578715,2.900256,1],[3,1372760,7.196931,1],[3,16578715,2.808184,1],[3,16578715,2.716113,1],[3,1372760,7.258312,1],[3,16578715,2.255754,1],[3,16578715,2.194373,1],[3,16578715,2.071611,1],[3,16578715,1.887468,1],[3,8975737,1.641944,1],[3,1372760,2.470588,1],[3,8975737,1.703325,1],[3,8975737,1.734015,1],[3,1372760,2.808184,1],[3,1372760,2.930946,1],[3,8975737,1.948849,1],[3,1372760,3.023018,1],[3,1372760,3.053708,1],[3,1372760,3.084399,1],[3,8975737,2.01023,1],[3,16578715,8.240409,1],[3,8975737,2.040921,1],[3,8975737,2.071611,1],[3,8975737,2.132992,1],[3,1372760,3.329923,1],[3,950372,2.654731,1],[3,17212296,6.122762,1],[3,950372,3.299233,1],[3,950372,3.268542,1],[3,7497381,2.317136,1],[3,17845878,3.575448,1],[3,527985,3.176471,1],[3,17212296,6.337596,1],[3,1372760,0.84399,1],[3,7497381,2.439898,1],[3,950372,3.023018,1],[3,1372760,1.028133,1],[3,950372,2.961637,1],[3,950372,2.930946,1],[3,1372760,1.580563,1],[3,7497381,2.56266,1],[3,8975737,1.549872,1],[3,7497381,2.59335,1],[3,1372760,4.31202,1],[3,16578715,6.890026,1],[3,1372760,4.373402,1],[3,1372760,4.465473,1],[3,8975737,2.869565,1],[3,1372760,4.557545,1],[3,8975737,2.900256,1],[3,16578715,6.58312,1],[3,8975737,2.930946,1],[3,1372760,4.710997,1],[3,1372760,4.772379,1],[3,1372760,4.803069,1],[3,8975737,3.053708,1],[3,1372760,4.895141,1],[3,16578715,6.245524,1],[3,1372760,5.017903,1],[3,8975737,3.237852,1],[3,16578715,7.841432,1],[3,1372760,3.575448,1],[3,1372760,3.606138,1],[3,8975737,2.347826,1],[3,1372760,3.667519,1],[3,1372760,3.69821,1],[3,16578715,7.595908,1],[3,16578715,7.565217,1],[3,1372760,3.7289,1],[3,8975737,2.56266,1],[3,1372760,3.974425,1],[3,8975737,2.59335,1],[3,8975737,2.624041,1],[3,1372760,4.097187,1],[3,1372760,4.158568,1],[3,1372760,4.189258,1],[3,16578715,7.012788,1],[3,1372760,4.28133,1],[3,16367521,1.365729,1],[3,16367521,1.335038,1],[3,950372,1.795396,1],[3,16367521,1.212276,1],[3,16367521,1.181586,1],[3,950372,1.734015,1],[3,16367521,0.966752,1],[3,16367521,0.782609,1],[3,8342156,2.716113,1],[3,950372,1.611253,1],[3,527985,2.132992,1],[3,527985,2.102302,1],[3,950372,1.519182,1],[3,527985,1.918159,1],[3,17845878,5.263427,1],[3,1583954,4.373402,1],[3,7074993,2.961637,1],[3,7074993,3.299233,1],[3,16367521,2.838875,1],[3,16367521,2.808184,1],[3,16367521,2.777494,1],[3,7074993,3.237852,1],[3,16367521,2.59335,1],[3,16367521,2.56266,1],[3,16367521,2.531969,1],[3,16367521,2.501279,1],[3,16367521,2.286445,1],[3,950372,1.887468,1],[3,16367521,1.918159,1],[3,16367521,1.826087,1],[3,16367521,1.672634,1],[3,16367521,1.611253,1],[3,950372,1.826087,1],[3,16367521,1.488491,1],[3,527985,1.580563,1],[3,17845878,5.539642,1],[3,950372,1.304348,1],[3,1583954,5.631714,1],[3,1583954,5.693095,1],[3,17845878,5.754476,1],[3,1583954,5.938619,1],[3,17845878,5.877238,1],[3,17845878,5.938619,1],[3,527985,5.386189,1],[3,9186931,1.488491,1],[3,9186931,1.519182,1],[3,7074993,2.255754,1],[3,9186931,1.672634,1],[3,9186931,1.764706,1],[3,7074993,2.194373,1],[3,9186931,1.826087,1],[3,7074993,2.930946,1],[3,1583954,4.618926,1],[3,1583954,4.710997,1],[3,7074993,2.685422,1],[3,7074993,2.59335,1],[3,1583954,4.86445,1],[3,7074993,2.501279,1],[3,1583954,4.987212,1],[3,1583954,5.048593,1],[3,7074993,2.409207,1],[3,7074993,2.378517,1],[3,7074993,2.347826,1],[3,1583954,5.202046,1],[3,7074993,2.317136,1],[3,527985,1.703325,1],[3,527985,1.672634,1],[3,1583954,5.386189,1],[3,1583954,5.44757,1],[3,17845878,4.741688,1],[3,527985,2.255754,1],[3,950372,2.040921,1],[3,1583954,1.304348,1],[3,950372,2.01023,1],[3,1583954,1.611253,1],[3,16367521,5.969309,1],[3,1583954,1.641944,1],[3,1583954,1.856777,1],[3,1583954,1.948849,1],[3,1583954,2.01023,1],[3,1583954,2.040921,1],[3,1583954,2.194373,1],[3,1583954,2.286445,1],[3,1583954,2.317136,1],[3,16367521,5.232737,1],[3,1583954,2.347826,1],[3,7074993,6.214834,1],[3,7074993,5.754476,1],[3,7074993,5.386189,1],[3,7074993,5.263427,1],[3,7074993,4.803069,1],[3,7074993,4.772379,1],[3,527985,2.900256,1],[3,527985,2.869565,1],[3,527985,2.808184,1],[3,8342156,2.838875,1],[3,527985,2.624041,1],[3,950372,2.225064,1],[3,527985,2.56266,1],[3,527985,2.470588,1],[3,17845878,4.557545,1],[3,950372,2.194373,1],[3,7497381,2.838875,1],[3,1583954,0.997442,1],[3,1583954,3.514066,1],[3,16367521,3.69821,1],[3,16367521,3.667519,1],[3,1583954,3.636829,1],[3,7074993,3.606138,1],[3,16367521,3.544757,1],[3,16367521,3.514066,1],[3,16367521,3.421995,1],[3,16367521,3.391304,1],[3,1583954,3.851662,1],[3,16367521,3.237852,1],[3,7074993,3.421995,1],[3,16367521,3.11509,1],[3,16367521,3.084399,1],[3,16367521,3.053708,1],[3,16367521,2.992327,1],[3,16367521,2.930946,1],[3,7074993,4.342711,1],[3,1583954,2.531969,1],[3,1583954,2.59335,1],[3,1583954,2.685422,1],[3,7074993,4.250639,1],[3,16367521,4.680307,1],[3,1583954,2.900256,1],[3,16367521,4.496164,1],[3,16367521,4.465473,1],[3,1583954,3.023018,1],[3,1583954,3.084399,1],[3,16367521,4.219949,1],[3,1583954,3.237852,1],[3,16367521,4.127877,1],[3,1583954,3.299233,1],[3,7074993,3.790281,1],[3,1583954,3.483376,1],[3,16367521,3.851662,1],[3,17001102,3.790281,1],[3,1161566,1.918159,1],[3,17001102,3.667519,1],[3,17001102,3.636829,1],[3,950372,4.250639,1],[3,17001102,3.575448,1],[3,1161566,2.01023,1],[3,17001102,3.483376,1],[3,17001102,3.421995,1],[3,1161566,2.102302,1],[3,17001102,3.329923,1],[3,17001102,3.268542,1],[3,17001102,3.237852,1],[3,17001102,3.176471,1],[3,17001102,3.14578,1],[3,17001102,3.11509,1],[3,1161566,2.225064,1],[3,17001102,4.895141,1],[3,1161566,1.028133,1],[3,950372,4.434783,1],[3,17212296,4.557545,1],[3,17845878,1.457801,1],[3,950372,4.373402,1],[3,17212296,4.649616,1],[3,7497381,1.396419,1],[3,17845878,1.519182,1],[3,17001102,4.373402,1],[3,7497381,1.457801,1],[3,17001102,4.28133,1],[3,17001102,4.250639,1],[3,17001102,4.219949,1],[3,1161566,1.703325,1],[3,17001102,3.943734,1],[3,1161566,1.826087,1],[3,17212296,4.83376,1],[3,17212296,4.86445,1],[3,17001102,1.703325,1],[3,1161566,2.59335,1],[3,1161566,2.624041,1],[3,17001102,1.519182,1],[3,17001102,1.488491,1],[3,7497381,1.519182,1],[3,17001102,1.335038,1],[3,17212296,4.956522,1],[3,950372,4.158568,1],[3,17845878,1.549872,1],[3,17845878,1.580563,1],[3,7497381,1.611253,1],[3,17212296,5.109974,1],[3,17212296,5.171355,1],[3,17845878,1.641944,1],[3,17001102,2.961637,1],[3,17001102,2.838875,1],[3,17001102,2.685422,1],[3,1161566,2.439898,1],[3,17001102,2.531969,1],[3,17001102,2.501279,1],[3,17001102,2.439898,1],[3,17001102,2.409207,1],[3,1161566,2.470588,1],[3,17001102,2.317136,1],[3,17001102,2.286445,1],[3,17001102,2.225064,1],[3,17001102,2.194373,1],[3,17001102,2.163683,1],[3,17001102,2.132992,1],[3,17001102,2.040921,1],[3,17001102,1.97954,1],[3,17001102,1.918159,1],[3,17212296,2.163683,1],[3,950372,5.846547,1],[3,950372,5.938619,1],[3,17212296,1.641944,1],[3,17212296,1.304348,1],[3,17212296,1.273657,1],[3,17212296,1.058824,1],[3,17212296,0.87468,1],[3,17212296,0.659847,1],[3,17212296,3.667519,1],[3,527985,4.465473,1],[3,17212296,3.69821,1],[3,950372,5.017903,1],[3,8342156,3.667519,1],[3,527985,4.31202,1],[3,527985,4.158568,1],[3,950372,6.092072,1],[3,17212296,3.544757,1],[3,527985,4.956522,1],[3,527985,4.925831,1],[3,527985,4.895141,1],[3,17212296,3.421995,1],[3,527985,4.803069,1],[3,527985,4.741688,1],[3,8342156,3.882353,1],[3,8342156,3.851662,1],[3,17212296,2.869565,1],[3,17212296,2.838875,1],[3,17212296,2.716113,1],[3,17212296,2.685422,1],[3,17212296,2.56266,1],[3,17212296,2.501279,1],[3,17212296,2.409207,1],[3,17212296,2.255754,1],[3,17212296,2.225064,1],[3,8764543,2.347826,1],[3,8764543,2.439898,1],[3,8764543,2.716113,1],[3,8764543,3.851662,1],[3,8764543,3.943734,1],[3,527985,4.035806,1],[3,17001102,5.631714,1],[3,17845878,0.997442,1],[3,17212296,4.404092,1],[3,17845878,1.150895,1],[3,17845878,1.181586,1],[3,7497381,1.273657,1],[3,17001102,5.232737,1],[3,7497381,1.335038,1],[3,527985,3.943734,1],[3,17001102,5.017903,1],[3,17001102,4.987212,1],[3,17212296,3.974425,1],[3,17212296,4.005115,1],[3,7497381,0.966752,1],[3,17845878,0.383632,1],[3,17845878,0.537084,1],[3,17212296,4.219949,1],[3,17845878,0.598465,1],[3,8764543,1.396419,1],[3,8764543,1.457801,1],[3,8764543,1.641944,1],[3,8764543,1.795396,1],[3,8764543,1.856777,1],[3,8764543,1.97954,1],[3,8764543,2.071611,1],[3,17001102,8.424552,1],[3,8764543,2.132992,1],[3,8764543,2.163683,1],[3,8764543,2.317136,1],[3,16789909,3.084399,1],[3,16789909,3.053708,1],[3,16789909,2.961637,1],[3,17845878,2.685422,1],[3,17845878,2.716113,1],[3,16789909,2.716113,1],[3,17845878,2.746803,1],[3,16789909,2.654731,1],[3,16789909,2.531969,1],[3,16789909,2.501279,1],[3,16789909,2.439898,1],[3,17845878,2.808184,1],[3,16789909,2.378517,1],[3,17845878,2.838875,1],[3,16789909,2.225064,1],[3,17845878,2.869565,1],[3,16789909,2.040921,1],[3,527985,3.7289,1],[3,16789909,4.250639,1],[3,16789909,4.219949,1],[3,16789909,4.097187,1],[3,16789909,4.066496,1],[3,8342156,3.207161,1],[3,16789909,3.974425,1],[3,16789909,3.882353,1],[3,17845878,2.409207,1],[3,17845878,2.470588,1],[3,16789909,3.636829,1],[3,16789909,3.575448,1],[3,16789909,3.360614,1],[3,16789909,3.329923,1],[3,16789909,3.268542,1],[3,16789909,3.207161,1],[3,527985,3.636829,1],[3,16789909,0.506394,1],[3,527985,3.544757,1],[3,17845878,3.053708,1],[3,16789909,0.29156,1],[3,17845878,3.084399,1],[3,17845878,3.11509,1],[3,17845878,3.14578,1],[3,17845878,3.176471,1],[3,527985,3.514066,1],[3,17845878,3.237852,1],[3,17845878,3.268542,1],[3,527985,3.452685,1],[3,8975737,1.150895,1],[3,950372,3.360614,1],[3,8975737,1.365729,1],[3,8975737,1.396419,1],[3,8975737,1.42711,1],[3,16789909,1.97954,1],[3,17845878,2.900256,1],[3,950372,3.544757,1],[3,16789909,1.856777,1],[3,17845878,2.930946,1],[3,16789909,1.734015,1],[3,16789909,1.672634,1],[3,16789909,1.488491,1],[3,16789909,1.457801,1],[3,7497381,2.163683,1],[3,16789909,1.273657,1],[3,16789909,1.181586,1],[3,16789909,0.936061,1],[3,16789909,0.782609,1],[3,17212296,5.938619,1],[3,7497381,2.225064,1],[3,16789909,0.659847,1],[3,17212296,6,1],[3,1161566,3.483376,1],[3,1161566,3.544757,1],[3,1161566,3.606138,1],[3,1161566,3.636829,1],[3,1161566,3.851662,1],[3,1161566,4.158568,1],[3,1161566,4.342711,1],[3,1161566,4.465473,1],[3,1161566,4.956522,1],[3,1161566,5.202046,1],[3,7286187,3.820972,1],[3,7286187,3.790281,1],[3,7286187,3.667519,1],[3,7286187,3.421995,1],[3,7286187,3.329923,1],[3,7286187,3.268542,1],[3,7286187,3.207161,1],[3,1161566,2.685422,1],[3,7497381,1.734015,1],[3,7497381,1.764706,1],[3,17845878,1.672634,1],[3,17001102,0.383632,1],[3,7497381,1.826087,1],[3,17212296,5.386189,1],[3,7497381,1.887468,1],[3,17845878,1.856777,1],[3,17845878,1.887468,1],[3,17212296,5.478261,1],[3,17845878,1.918159,1],[3,1161566,2.838875,1],[3,1161566,2.930946,1],[3,1161566,3.053708,1],[3,1161566,3.084399,1],[3,1161566,3.11509,1],[3,1161566,3.360614,1],[3,7286187,1.703325,1],[3,7286187,1.672634,1],[3,7286187,1.580563,1],[3,7497381,1.918159,1],[3,7286187,1.42711,1],[3,527985,3.851662,1],[3,7497381,1.97954,1],[3,17212296,5.601023,1],[3,17212296,5.631714,1],[3,17845878,1.97954,1],[3,17845878,2.040921,1],[3,16789909,4.680307,1],[3,16789909,4.557545,1],[3,16789909,4.526854,1],[3,17845878,2.163683,1],[3,16789909,4.434783,1],[3,17845878,2.225064,1],[3,16789909,7.012788,1],[3,7286187,2.869565,1],[3,7286187,2.808184,1],[3,7286187,2.777494,1],[3,7286187,2.531969,1],[3,7286187,2.501279,1],[3,7286187,2.470588,1],[3,7286187,2.439898,1],[3,7286187,2.409207,1],[3,7286187,2.378517,1],[3,7286187,2.317136,1],[3,7286187,2.225064,1],[3,7286187,2.194373,1],[3,7286187,2.102302,1],[3,7286187,2.01023,1],[3,16789909,5.846547,1],[3,7286187,1.918159,1],[3,7286187,1.764706,1],[3,6863799,2.531969,1],[3,15733939,2.071611,1],[3,6863799,2.470588,1],[3,15733939,1.97954,1],[3,6863799,2.439898,1],[3,15733939,1.918159,1],[3,15733939,1.887468,1],[3,15733939,1.795396,1],[3,15733939,1.764706,1],[3,15733939,1.457801,1],[3,15733939,1.242967,1],[3,15733939,0.506394,1],[3,15733939,0.29156,1],[3,6863799,2.347826,1],[3,2006341,3.053708,1],[3,6863799,2.071611,1],[3,6863799,2.040921,1],[3,15733939,3.053708,1],[3,2006341,2.378517,1],[3,15733939,2.992327,1],[3,15733939,2.900256,1],[3,15733939,2.869565,1],[3,15733939,2.838875,1],[3,15733939,2.808184,1],[3,2006341,2.439898,1],[3,15733939,2.746803,1],[3,15733939,2.716113,1],[3,15733939,2.654731,1],[3,15733939,2.624041,1],[3,15733939,2.531969,1],[3,2006341,2.501279,1],[3,15733939,2.470588,1],[3,2006341,2.624041,1],[3,2006341,2.685422,1],[3,6652605,7.565217,1],[3,15522746,4.680307,1],[3,15522746,4.618926,1],[3,15522746,4.373402,1],[3,15522746,4.035806,1],[3,15522746,3.913043,1],[3,15522746,3.69821,1],[3,15522746,3.606138,1],[3,15522746,3.575448,1],[3,9609319,1.212276,1],[3,15522746,3.268542,1],[3,9609319,1.304348,1],[3,15522746,3.176471,1],[3,15522746,3.14578,1],[3,9609319,1.42711,1],[3,15522746,2.992327,1],[3,15522746,2.961637,1],[3,6863799,1.97954,1],[3,6863799,1.948849,1],[3,6863799,1.703325,1],[3,6652605,9.038363,1],[3,15522746,6.368286,1],[3,6652605,8.639386,1],[3,15522746,6.214834,1],[3,15522746,6.184143,1],[3,15522746,5.938619,1],[3,15522746,5.815857,1],[3,15522746,5.693095,1],[3,15522746,5.539642,1],[3,15522746,5.508951,1],[3,6652605,8.086957,1],[3,15522746,5.171355,1],[3,15522746,5.079284,1],[3,6652605,7.749361,1],[3,15522746,4.925831,1],[3,6863799,3.667519,1],[3,6863799,3.606138,1],[3,6863799,3.575448,1],[3,6863799,3.514066,1],[3,6863799,3.452685,1],[3,9398125,4.097187,1],[3,6863799,3.421995,1],[3,6863799,3.360614,1],[3,6863799,3.299233,1],[3,6863799,3.176471,1],[3,9398125,4.434783,1],[3,9398125,4.465473,1],[3,6863799,3.11509,1],[3,6863799,3.084399,1],[3,15733939,5.907928,1],[3,15733939,5.539642,1],[3,15733939,5.294118,1],[3,6863799,4.31202,1],[3,15733939,8.117647,1],[3,9398125,2.900256,1],[3,9398125,2.930946,1],[3,6863799,4.127877,1],[3,9398125,3.023018,1],[3,9398125,3.053708,1],[3,9398125,3.207161,1],[3,9398125,3.299233,1],[3,9398125,3.329923,1],[3,9398125,3.360614,1],[3,9398125,3.391304,1],[3,9398125,3.421995,1],[3,15733939,7.319693,1],[3,9398125,3.483376,1],[3,9398125,3.544757,1],[3,6863799,3.820972,1],[3,9398125,3.820972,1],[3,2006341,2.01023,1],[3,15733939,3.667519,1],[3,2006341,2.071611,1],[3,9398125,4.772379,1],[3,15733939,3.544757,1],[3,15733939,3.483376,1],[3,2006341,2.194373,1],[3,2006341,2.225064,1],[3,6863799,2.777494,1],[3,2006341,2.286445,1],[3,15733939,3.299233,1],[3,15733939,3.268542,1],[3,15733939,3.237852,1],[3,15733939,3.207161,1],[3,15733939,3.176471,1],[3,6863799,2.746803,1],[3,15733939,3.11509,1],[3,15733939,5.140665,1],[3,15733939,5.048593,1],[3,15733939,5.017903,1],[3,15733939,4.895141,1],[3,15733939,4.680307,1],[3,6863799,3.023018,1],[3,6863799,2.992327,1],[3,2006341,1.519182,1],[3,2006341,1.611253,1],[3,15733939,4.342711,1],[3,15733939,4.31202,1],[3,2006341,1.703325,1],[3,15733939,4.005115,1],[3,15733939,3.913043,1],[3,15733939,3.851662,1],[3,2006341,1.97954,1],[3,15733939,3.790281,1],[3,15733939,3.759591,1],[3,6652605,4.097187,1],[3,6652605,4.066496,1],[3,6652605,4.005115,1],[3,6652605,3.820972,1],[3,6652605,3.759591,1],[3,6652605,3.544757,1],[3,6652605,3.514066,1],[3,6652605,3.452685,1],[3,6652605,3.391304,1],[3,6652605,3.329923,1],[3,6652605,3.237852,1],[3,6652605,3.176471,1],[3,6652605,3.11509,1],[3,6652605,3.084399,1],[3,6652605,3.023018,1],[3,6652605,2.746803,1],[3,6652605,2.685422,1],[3,6652605,5.44757,1],[3,2217535,4.097187,1],[3,6652605,5.386189,1],[3,6652605,5.294118,1],[3,6652605,5.263427,1],[3,9609319,4.588235,1],[3,6652605,5.140665,1],[3,6652605,4.987212,1],[3,6652605,4.925831,1],[3,6652605,4.741688,1],[3,6652605,4.710997,1],[3,6652605,4.618926,1],[3,6652605,4.588235,1],[3,6652605,4.434783,1],[3,6652605,4.404092,1],[3,6652605,4.31202,1],[3,6652605,4.219949,1],[3,15311552,3.514066,1],[3,15311552,3.360614,1],[3,15311552,3.11509,1],[3,15311552,2.992327,1],[3,15311552,2.930946,1],[3,15311552,2.869565,1],[3,15311552,2.838875,1],[3,17423490,1.335038,1],[3,15311552,2.746803,1],[3,15311552,2.654731,1],[3,15311552,2.59335,1],[3,15311552,2.56266,1],[3,17423490,1.365729,1],[3,15311552,2.378517,1],[3,15311552,2.347826,1],[3,15311552,2.317136,1],[3,15311552,2.255754,1],[3,6652605,2.654731,1],[3,17423490,0.966752,1],[3,6652605,2.501279,1],[3,15311552,4.895141,1],[3,9609319,7.381074,1],[3,6652605,2.409207,1],[3,6652605,2.378517,1],[3,6652605,2.194373,1],[3,6652605,2.163683,1],[3,15311552,4.496164,1],[3,6652605,2.040921,1],[3,17423490,1.028133,1],[3,6652605,1.887468,1],[3,17423490,1.120205,1],[3,15311552,3.820972,1],[3,6652605,1.396419,1],[3,15311552,3.606138,1],[3,18057071,1.181586,1],[3,15522746,1.764706,1],[3,15522746,1.734015,1],[3,15522746,1.641944,1],[3,15522746,1.396419,1],[3,15522746,1.365729,1],[3,15522746,1.335038,1],[3,15522746,1.242967,1],[3,15522746,1.058824,1],[3,15522746,0.966752,1],[3,15522746,0.813299,1],[3,15522746,0.721228,1],[3,15522746,0.659847,1],[3,9609319,2.317136,1],[3,9609319,2.59335,1],[3,18057071,0.690537,1],[3,18057071,0.84399,1],[3,17423490,0.629156,1],[3,15522746,2.930946,1],[3,15522746,2.900256,1],[3,9609319,1.549872,1],[3,15522746,2.716113,1],[3,9609319,1.641944,1],[3,15522746,2.624041,1],[3,15522746,2.56266,1],[3,15522746,2.531969,1],[3,9609319,1.734015,1],[3,9609319,1.795396,1],[3,15522746,2.409207,1],[3,15522746,2.347826,1],[3,15522746,2.317136,1],[3,9609319,1.97954,1],[3,15522746,2.071611,1],[3,9609319,2.01023,1],[3,9609319,2.040921,1],[3,15522746,1.856777,1],[3,2217535,2.531969,1],[3,6652605,6.491049,1],[3,2217535,2.59335,1],[3,2217535,2.654731,1],[3,2217535,2.746803,1],[3,2217535,2.777494,1],[3,2217535,2.869565,1],[3,9609319,3.391304,1],[3,2217535,3.023018,1],[3,9609319,3.483376,1],[3,6652605,6.092072,1],[3,6652605,6.061381,1],[3,2217535,3.391304,1],[3,9609319,3.851662,1],[3,6652605,5.662404,1],[3,9609319,4.250639,1],[3,2217535,4.005115,1],[3,2217535,1.335038,1],[3,9609319,2.685422,1],[3,9609319,2.716113,1],[3,2217535,1.611253,1],[3,2217535,1.672634,1],[3,2217535,1.795396,1],[3,2217535,1.856777,1],[3,2217535,1.887468,1],[3,9609319,2.777494,1],[3,2217535,1.948849,1],[3,9609319,2.869565,1],[3,2217535,2.163683,1],[3,9609319,2.930946,1],[3,2217535,2.317136,1],[3,9609319,3.053708,1],[3,6652605,6.55243,1],[3,2217535,2.439898,1],[3,2217535,2.470588,1],[3,16156327,1.150895,1],[3,16156327,0.936061,1],[3,8342156,2.225064,1],[3,16156327,0.445013,1],[3,8342156,2.102302,1],[3,8342156,1.918159,1],[3,8342156,1.887468,1],[3,8342156,1.826087,1],[3,8342156,1.795396,1],[3,15945133,11.462916,1],[3,8342156,1.764706,1],[3,8342156,1.703325,1],[3,8342156,1.549872,1],[3,7497381,3.207161,1],[3,15945133,10.695652,1],[3,8342156,1.457801,1],[3,15945133,10.634271,1],[3,16156327,2.470588,1],[3,16156327,2.409207,1],[3,16156327,2.378517,1],[3,16156327,2.317136,1],[3,16156327,2.286445,1],[3,16156327,2.255754,1],[3,16156327,2.132992,1],[3,16156327,2.102302,1],[3,16156327,2.071611,1],[3,16156327,2.040921,1],[3,16156327,1.887468,1],[3,16156327,1.795396,1],[3,7708574,3.7289,1],[3,16156327,1.703325,1],[3,7497381,2.930946,1],[3,16156327,1.549872,1],[3,16156327,1.335038,1],[3,1795147,1.887468,1],[3,15945133,9.222506,1],[3,1795147,2.01023,1],[3,1795147,2.071611,1],[3,1795147,2.194373,1],[3,15945133,8.85422,1],[3,1795147,2.317136,1],[3,1795147,2.56266,1],[3,15945133,8.547315,1],[3,15945133,8.516624,1],[3,1795147,2.716113,1],[3,1795147,2.777494,1],[3,6863799,9.314578,1],[3,15945133,8.209719,1],[3,1795147,2.869565,1],[3,6863799,9.253197,1],[3,1795147,2.930946,1],[3,15945133,10.480818,1],[3,1795147,1.089514,1],[3,15945133,10.296675,1],[3,15945133,10.235294,1],[3,15945133,10.204604,1],[3,1795147,1.242967,1],[3,1795147,1.273657,1],[3,1795147,1.304348,1],[3,1795147,1.396419,1],[3,1795147,1.488491,1],[3,15945133,9.805627,1],[3,1795147,1.580563,1],[3,1795147,1.611253,1],[3,15945133,9.682864,1],[3,1795147,1.672634,1],[3,15945133,9.498721,1],[3,15945133,9.468031,1],[3,1795147,1.795396,1],[3,16156327,8.117647,1],[3,16156327,7.964194,1],[3,7074993,1.672634,1],[3,9186931,3.14578,1],[3,1583954,8.731458,1],[3,9186931,3.391304,1],[3,16156327,7.13555,1],[3,16156327,7.104859,1],[3,8342156,2.685422,1],[3,16156327,6.797954,1],[3,16156327,6.736573,1],[3,8342156,2.624041,1],[3,16156327,6.306905,1],[3,1583954,9.867008,1],[3,8342156,2.286445,1],[3,16156327,5.969309,1],[3,16156327,5.693095,1],[3,9186931,1.887468,1],[3,9186931,1.97954,1],[3,9186931,2.102302,1],[3,9186931,2.132992,1],[3,9186931,2.194373,1],[3,1583954,7.595908,1],[3,7074993,2.071611,1],[3,9186931,2.286445,1],[3,9186931,2.317136,1],[3,9186931,2.347826,1],[3,9186931,2.378517,1],[3,9186931,2.409207,1],[3,7074993,2.040921,1],[3,7074993,1.97954,1],[3,9186931,2.654731,1],[3,9186931,2.716113,1],[3,7074993,1.887468,1],[3,7074993,1.856777,1],[3,16156327,3.759591,1],[3,16156327,3.69821,1],[3,16156327,3.667519,1],[3,16156327,3.544757,1],[3,527985,5.815857,1],[3,16156327,3.360614,1],[3,16156327,3.299233,1],[3,16156327,3.268542,1],[3,16156327,3.207161,1],[3,16156327,3.176471,1],[3,16156327,3.023018,1],[3,16156327,2.930946,1],[3,16156327,2.900256,1],[3,16156327,2.808184,1],[3,16156327,2.716113,1],[3,16156327,2.654731,1],[3,16156327,2.501279,1],[3,16156327,5.44757,1],[3,16156327,5.386189,1],[3,16156327,5.263427,1],[3,16156327,5.109974,1],[3,16156327,5.048593,1],[3,16156327,5.017903,1],[3,16156327,4.987212,1],[3,16156327,4.895141,1],[3,16156327,4.86445,1],[3,16156327,4.803069,1],[3,16156327,4.772379,1],[3,16156327,4.710997,1],[3,16156327,4.680307,1],[3,16156327,4.496164,1],[3,16156327,4.097187,1],[3,16156327,3.943734,1],[3,16156327,3.913043,1],[3,16156327,3.820972,1],[3,15945133,1.918159,1],[3,15945133,1.887468,1],[3,15945133,1.734015,1],[3,6863799,5.938619,1],[3,6863799,5.907928,1],[3,15945133,1.641944,1],[3,7497381,3.452685,1],[3,15945133,1.549872,1],[3,15945133,1.242967,1],[3,15945133,1.212276,1],[3,6863799,5.846547,1],[3,15945133,0.936061,1],[3,15945133,0.84399,1],[3,15945133,0.475703,1],[3,15945133,0.107417,1],[3,6863799,5.785166,1],[3,6863799,5.754476,1],[3,15945133,2.838875,1],[3,6863799,6.214834,1],[3,15945133,2.685422,1],[3,15945133,2.654731,1],[3,15945133,2.624041,1],[3,15945133,2.59335,1],[3,15945133,2.501279,1],[3,15945133,2.439898,1],[3,6863799,6,1],[3,15945133,2.347826,1],[3,15945133,2.317136,1],[3,15945133,2.286445,1],[3,15945133,2.225064,1],[3,15945133,2.194373,1],[3,15945133,2.132992,1],[3,15945133,2.102302,1],[3,15945133,2.071611,1],[3,15733939,8.976982,1],[3,9398125,1.948849,1],[3,9398125,1.97954,1],[3,9398125,2.040921,1],[3,9398125,2.102302,1],[3,9398125,2.132992,1],[3,9398125,2.163683,1],[3,9398125,2.255754,1],[3,9398125,2.286445,1],[3,9398125,2.378517,1],[3,9398125,2.439898,1],[3,15733939,8.393862,1],[3,9398125,2.470588,1],[3,9398125,2.501279,1],[3,9398125,2.531969,1],[3,9398125,2.56266,1],[3,6863799,4.342711,1],[3,6863799,5.631714,1],[3,6863799,5.570332,1],[3,6863799,5.017903,1],[3,6863799,4.956522,1],[3,6863799,4.925831,1],[3,6863799,4.772379,1],[3,6863799,4.741688,1],[3,6863799,4.618926,1],[3,6863799,4.588235,1],[3,6863799,4.557545,1],[3,6863799,4.526854,1],[3,7497381,3.759591,1],[3,9398125,1.488491,1],[3,6863799,4.465473,1],[3,9398125,1.764706,1],[3,9398125,1.826087,1],[3,9398125,1.856777,1],[3,9398125,1.887468,1],[3,6863799,7.964194,1],[3,15945133,6.184143,1],[3,6863799,7.933504,1],[3,6863799,7.810742,1],[3,6863799,7.71867,1],[3,15945133,5.846547,1],[3,15945133,5.754476,1],[3,6863799,7.657289,1],[3,15945133,5.693095,1],[3,15945133,5.601023,1],[3,15945133,5.570332,1],[3,15945133,5.539642,1],[3,1795147,4.649616,1],[3,15945133,5.478261,1],[3,15945133,5.41688,1],[3,15945133,5.294118,1],[3,6863799,7.319693,1],[3,15945133,7.933504,1],[3,15945133,7.71867,1],[3,1795147,3.268542,1],[3,15945133,7.565217,1],[3,15945133,7.289003,1],[3,15945133,7.258312,1],[3,6863799,8.578005,1],[3,15945133,7.16624,1],[3,15945133,7.13555,1],[3,15945133,7.104859,1],[3,15945133,6.982097,1],[3,15945133,6.920716,1],[3,6863799,8.424552,1],[3,15945133,6.705882,1],[3,15945133,6.675192,1],[3,15945133,6.55243,1],[3,15945133,6.521739,1],[3,15945133,6.491049,1],[3,15945133,3.759591,1],[3,6863799,6.460358,1],[3,6863799,6.429668,1],[3,15945133,3.606138,1],[3,15945133,3.483376,1],[3,15945133,3.452685,1],[3,15945133,3.421995,1],[3,15945133,3.391304,1],[3,15945133,3.329923,1],[3,15945133,3.176471,1],[3,6863799,6.276215,1],[3,15945133,3.11509,1],[3,15945133,3.084399,1],[3,15945133,3.053708,1],[3,15945133,2.961637,1],[3,6863799,6.245524,1],[3,15945133,2.869565,1],[3,15945133,4.925831,1],[3,15945133,4.83376,1],[3,6863799,7.104859,1],[3,6863799,7.043478,1],[3,15945133,4.618926,1],[3,15945133,4.588235,1],[3,15945133,4.557545,1],[3,15945133,4.434783,1],[3,15945133,4.373402,1],[3,15945133,4.28133,1],[3,6863799,6.767263,1],[3,15945133,4.219949,1],[3,15945133,4.127877,1],[3,15945133,4.066496,1],[3,15945133,4.035806,1],[3,15945133,3.913043,1],[3,15945133,3.882353,1],[3,15945133,3.820972,1],[3,3695892,2.439898,1],[3,3695892,2.286445,1],[3,3695892,2.225064,1],[3,3695892,2.102302,1],[3,3695892,1.97954,1],[3,8130962,1.97954,1],[3,3695892,1.672634,1],[3,8130962,2.01023,1],[3,3695892,1.549872,1],[3,3695892,1.42711,1],[3,8130962,2.040921,1],[3,3695892,1.335038,1],[3,3695892,1.304348,1],[3,5807830,0.230179,1],[3,3695892,1.242967,1],[3,3695892,1.212276,1],[3,8130962,2.071611,1],[3,3695892,1.120205,1],[3,8130962,2.102302,1],[3,3695892,0.936061,1],[3,7919768,3.913043,1],[3,18268265,3.69821,1],[3,18268265,3.636829,1],[3,739178,2.961637,1],[3,18268265,3.606138,1],[3,7919768,3.851662,1],[3,8130962,2.286445,1],[3,8130962,2.317136,1],[3,5807830,0.629156,1],[3,5807830,0.751918,1],[3,5807830,0.936061,1],[3,10876482,1.856777,1],[3,10876482,1.764706,1],[3,10876482,1.641944,1],[3,18268265,4.618926,1],[3,739178,2.56266,1],[3,10876482,1.42711,1],[3,13410807,6.982097,1],[3,18268265,4.557545,1],[3,739178,2.59335,1],[3,739178,2.624041,1],[3,10876482,0.966752,1],[3,8130962,1.611253,1],[3,739178,2.654731,1],[3,18268265,4.465473,1],[3,18268265,4.434783,1],[3,18268265,4.404092,1],[3,8130962,1.672634,1],[3,8130962,1.703325,1],[3,8130962,1.734015,1],[3,739178,2.746803,1],[3,8130962,1.795396,1],[3,18268265,4.219949,1],[3,18268265,4.158568,1],[3,3695892,3.667519,1],[3,3695892,3.636829,1],[3,18268265,4.097187,1],[3,3695892,3.329923,1],[3,3695892,3.14578,1],[3,3695892,2.808184,1],[3,3695892,2.685422,1],[3,3695892,2.531969,1],[3,3695892,2.470588,1],[3,13622001,3.023018,1],[3,13622001,3.053708,1],[3,13622001,3.084399,1],[3,13622001,3.14578,1],[3,13622001,3.207161,1],[3,13622001,3.237852,1],[3,18268265,3.053708,1],[3,13622001,3.329923,1],[3,5807830,1.580563,1],[3,739178,3.452685,1],[3,13622001,3.69821,1],[3,13622001,3.7289,1],[3,13622001,3.759591,1],[3,13622001,3.882353,1],[3,13622001,3.943734,1],[3,13622001,3.974425,1],[3,5807830,1.703325,1],[3,13622001,4.158568,1],[3,13622001,4.189258,1],[3,13622001,4.250639,1],[3,7919768,3.667519,1],[3,5807830,1.887468,1],[3,13622001,4.373402,1],[3,5807830,1.918159,1],[3,13622001,4.465473,1],[3,5807830,1.97954,1],[3,5807830,2.01023,1],[3,5807830,2.102302,1],[3,5807830,2.194373,1],[3,5807830,2.225064,1],[3,5807830,2.255754,1],[3,5807830,2.347826,1],[3,5807830,0.997442,1],[3,18268265,3.329923,1],[3,18268265,3.299233,1],[3,18479459,4.097187,1],[3,18268265,3.237852,1],[3,13622001,0.352941,1],[3,739178,3.268542,1],[3,739178,3.299233,1],[3,18268265,3.14578,1],[3,13622001,1.150895,1],[3,13622001,1.212276,1],[3,13622001,1.488491,1],[3,13622001,1.519182,1],[3,739178,3.391304,1],[3,13622001,1.856777,1],[3,13622001,2.040921,1],[3,13622001,2.071611,1],[3,13622001,2.102302,1],[3,13622001,2.132992,1],[3,13622001,2.163683,1],[3,13622001,2.194373,1],[3,13622001,2.225064,1],[3,13622001,2.347826,1],[3,13622001,2.378517,1],[3,13622001,2.409207,1],[3,13622001,2.439898,1],[3,13622001,2.531969,1],[3,13622001,2.624041,1],[3,5807830,1.365729,1],[3,5807830,1.396419,1],[3,13622001,2.900256,1],[3,739178,3.421995,1],[3,5596636,1.304348,1],[3,739178,1.365729,1],[3,5596636,1.42711,1],[3,13199614,3.882353,1],[3,5596636,1.611253,1],[3,5596636,1.641944,1],[3,13199614,4.189258,1],[3,5596636,1.887468,1],[3,5596636,1.948849,1],[3,5596636,2.040921,1],[3,5596636,2.102302,1],[3,5596636,2.255754,1],[3,13199614,4.772379,1],[3,5596636,2.409207,1],[3,5596636,2.470588,1],[3,5596636,2.501279,1],[3,13199614,4.956522,1],[3,5596636,2.531969,1],[3,5596636,2.56266,1],[3,5596636,3.053708,1],[3,13199614,5.662404,1],[3,5596636,3.207161,1],[3,5596636,3.237852,1],[3,5596636,3.421995,1],[3,3907086,2.59335,1],[3,5596636,3.483376,1],[3,5596636,3.514066,1],[3,3907086,2.439898,1],[3,3907086,2.409207,1],[3,5596636,3.606138,1],[3,3907086,2.255754,1],[3,3907086,2.225064,1],[3,13199614,1.672634,1],[3,527985,7.196931,1],[3,13199614,1.764706,1],[3,11087675,0.721228,1],[3,13199614,1.856777,1],[3,13199614,1.97954,1],[3,13199614,2.01023,1],[3,13199614,2.071611,1],[3,13199614,2.102302,1],[3,7708574,2.501279,1],[3,13199614,2.255754,1],[3,13199614,2.378517,1],[3,13199614,2.439898,1],[3,13199614,2.470588,1],[3,13199614,2.501279,1],[3,13199614,2.531969,1],[3,13199614,2.59335,1],[3,13199614,2.838875,1],[3,13199614,2.869565,1],[3,7708574,2.531969,1],[3,13199614,2.930946,1],[3,13199614,2.992327,1],[3,13199614,3.084399,1],[3,7919768,4.127877,1],[3,18268265,6.092072,1],[3,5596636,1.150895,1],[3,13199614,3.360614,1],[3,13199614,3.391304,1],[3,5596636,1.181586,1],[3,5596636,1.212276,1],[3,13199614,3.483376,1],[3,13199614,3.575448,1],[3,13410807,1.887468,1],[3,13410807,1.97954,1],[3,13410807,2.071611,1],[3,13410807,2.102302,1],[3,13410807,2.163683,1],[3,739178,2.501279,1],[3,13410807,2.439898,1],[3,13410807,2.470588,1],[3,13410807,2.777494,1],[3,13410807,2.930946,1],[3,13410807,2.961637,1],[3,13410807,3.237852,1],[3,13410807,3.606138,1],[3,13410807,3.7289,1],[3,13410807,3.913043,1],[3,13410807,4.189258,1],[3,13410807,4.28133,1],[3,13410807,4.710997,1],[3,13410807,4.83376,1],[3,10876482,3.176471,1],[3,10876482,2.930946,1],[3,13410807,5.171355,1],[3,13410807,5.232737,1],[3,10876482,2.531969,1],[3,10876482,2.470588,1],[3,10876482,2.439898,1],[3,10876482,2.194373,1],[3,10876482,2.163683,1],[3,13410807,6,1],[3,10876482,2.040921,1],[3,10876482,1.97954,1],[3,10876482,1.918159,1],[3,5596636,3.790281,1],[3,5596636,3.820972,1],[3,3907086,2.01023,1],[3,13199614,6.613811,1],[3,3907086,1.918159,1],[3,5596636,3.943734,1],[3,3907086,1.672634,1],[3,3907086,1.641944,1],[3,3907086,1.611253,1],[3,3907086,1.519182,1],[3,3907086,1.42711,1],[3,3907086,1.273657,1],[3,3907086,1.120205,1],[3,3907086,1.089514,1],[3,5596636,4.28133,1],[3,3907086,0.84399,1],[3,3907086,0.813299,1],[3,3907086,0.659847,1],[3,739178,1.826087,1],[3,18268265,5.938619,1],[3,18268265,5.631714,1],[3,739178,2.071611,1],[3,5596636,4.680307,1],[3,18268265,5.294118,1],[3,18268265,5.140665,1],[3,8130962,1.457801,1],[3,18268265,4.741688,1],[3,8130962,1.519182,1],[3,8130962,1.549872,1],[3,739178,2.470588,1],[3,13410807,1.641944,1],[3,13410807,1.703325,1],[3,14044389,2.286445,1],[3,14044389,2.347826,1],[3,6019024,3.11509,1],[3,14044389,2.470588,1],[3,14044389,2.501279,1],[3,14044389,2.56266,1],[3,14044389,2.59335,1],[3,6019024,3.237852,1],[3,6019024,3.299233,1],[3,14044389,2.808184,1],[3,14044389,2.900256,1],[3,14044389,2.930946,1],[3,14044389,2.992327,1],[3,14044389,3.084399,1],[3,14044389,3.11509,1],[3,6019024,3.483376,1],[3,14044389,3.176471,1],[3,14044389,3.207161,1],[3,6019024,3.514066,1],[3,14044389,3.391304,1],[3,6019024,3.636829,1],[3,14044389,3.514066,1],[3,14044389,3.575448,1],[3,6019024,3.69821,1],[3,14044389,3.69821,1],[3,6019024,3.759591,1],[3,6019024,3.913043,1],[3,6019024,3.943734,1],[3,14044389,3.943734,1],[3,6019024,3.974425,1],[3,14044389,4.005115,1],[3,14044389,4.035806,1],[3,739178,4.496164,1],[3,739178,4.526854,1],[3,6019024,0.936061,1],[3,739178,4.588235,1],[3,6019024,1.304348,1],[3,6019024,1.396419,1],[3,739178,4.649616,1],[3,6019024,1.641944,1],[3,6019024,1.672634,1],[3,6019024,1.734015,1],[3,6019024,1.795396,1],[3,6019024,1.887468,1],[3,6019024,1.918159,1],[3,6019024,1.97954,1],[3,6019024,2.255754,1],[3,6019024,2.56266,1],[3,6019024,2.59335,1],[3,6019024,2.808184,1],[3,18268265,1.028133,1],[3,14044389,0.107417,1],[3,739178,4.772379,1],[3,527985,6.859335,1],[3,14044389,1.150895,1],[3,14044389,1.212276,1],[3,14044389,1.304348,1],[3,14044389,1.549872,1],[3,14044389,1.826087,1],[3,6019024,2.992327,1],[3,14044389,2.01023,1],[3,14044389,2.040921,1],[3,6019024,3.023018,1],[3,14044389,2.255754,1],[3,6019024,6.061381,1],[3,14044389,6.613811,1],[3,14044389,6.675192,1],[3,10454094,3.084399,1],[3,3273504,2.132992,1],[3,6019024,6.153453,1],[3,10454094,2.992327,1],[3,10454094,2.961637,1],[3,3273504,2.01023,1],[3,6019024,6.184143,1],[3,14044389,6.951407,1],[3,14044389,7.043478,1],[3,3273504,1.887468,1],[3,14044389,7.16624,1],[3,3273504,1.795396,1],[3,3273504,1.734015,1],[3,3273504,1.703325,1],[3,10454094,2.808184,1],[3,3273504,1.641944,1],[3,10454094,2.716113,1],[3,3273504,1.488491,1],[3,6019024,6.368286,1],[3,3273504,1.396419,1],[3,14044389,7.657289,1],[3,3273504,1.273657,1],[3,10454094,2.59335,1],[3,3273504,1.212276,1],[3,3273504,1.120205,1],[3,10454094,2.531969,1],[3,3273504,1.028133,1],[3,3273504,0.905371,1],[3,10454094,2.439898,1],[3,14044389,4.097187,1],[3,6019024,4.066496,1],[3,14044389,4.189258,1],[3,14044389,4.219949,1],[3,6019024,4.097187,1],[3,6019024,4.189258,1],[3,6019024,4.250639,1],[3,6019024,4.404092,1],[3,14044389,4.680307,1],[3,14044389,4.710997,1],[3,6019024,4.526854,1],[3,14044389,4.803069,1],[3,14044389,4.83376,1],[3,6019024,4.588235,1],[3,6019024,4.618926,1],[3,6019024,4.710997,1],[3,6019024,4.741688,1],[3,6019024,4.86445,1],[3,6019024,4.895141,1],[3,6019024,4.925831,1],[3,3273504,3.575448,1],[3,6019024,5.109974,1],[3,6019024,5.355499,1],[3,14044389,5.723785,1],[3,3273504,2.746803,1],[3,6019024,5.785166,1],[3,3273504,2.624041,1],[3,6019024,5.907928,1],[3,3273504,2.501279,1],[3,10454094,3.237852,1],[3,3273504,2.317136,1],[3,3273504,2.286445,1],[3,3484698,3.7289,1],[3,3484698,3.667519,1],[3,10665288,2.132992,1],[3,10665288,2.102302,1],[3,10665288,2.040921,1],[3,10665288,2.01023,1],[3,10665288,1.948849,1],[3,10665288,1.918159,1],[3,10665288,1.703325,1],[3,18268265,2.930946,1],[3,18268265,2.900256,1],[3,18268265,2.869565,1],[3,7919768,3.606138,1],[3,18268265,2.777494,1],[3,739178,3.575448,1],[3,739178,3.606138,1],[3,13833195,0.475703,1],[3,739178,3.636829,1],[3,8130962,2.531969,1],[3,739178,3.759591,1],[3,18268265,2.59335,1],[3,13833195,1.058824,1],[3,13833195,1.120205,1],[3,13833195,1.150895,1],[3,13833195,1.365729,1],[3,13833195,1.457801,1],[3,739178,3.820972,1],[3,3484698,2.930946,1],[3,13833195,1.611253,1],[3,739178,3.882353,1],[3,13833195,1.734015,1],[3,13833195,1.826087,1],[3,5807830,2.378517,1],[3,5807830,2.56266,1],[3,5807830,2.59335,1],[3,5807830,2.777494,1],[3,5807830,2.838875,1],[3,5807830,2.900256,1],[3,739178,3.514066,1],[3,5807830,3.207161,1],[3,13622001,5.877238,1],[3,5807830,3.360614,1],[3,5807830,3.452685,1],[3,5807830,3.544757,1],[3,5807830,3.667519,1],[3,5807830,3.69821,1],[3,5807830,3.7289,1],[3,5807830,3.759591,1],[3,5807830,3.882353,1],[3,5807830,4.097187,1],[3,5807830,4.189258,1],[3,5807830,4.28133,1],[3,5807830,4.434783,1],[3,5807830,4.465473,1],[3,5807830,4.803069,1],[3,5807830,5.079284,1],[3,5807830,5.294118,1],[3,5807830,5.41688,1],[3,5807830,5.539642,1],[3,5807830,5.907928,1],[3,5807830,6.276215,1],[3,10665288,2.624041,1],[3,10665288,2.531969,1],[3,10665288,2.347826,1],[3,13833195,3.882353,1],[3,18268265,2.317136,1],[3,3484698,1.457801,1],[3,3484698,1.365729,1],[3,3484698,1.335038,1],[3,13833195,4.250639,1],[3,18268265,2.286445,1],[3,3484698,1.150895,1],[3,3484698,1.120205,1],[3,3484698,1.089514,1],[3,3484698,0.997442,1],[3,13833195,4.588235,1],[3,3484698,0.936061,1],[3,3484698,0.905371,1],[3,13833195,4.680307,1],[3,3484698,0.751918,1],[3,739178,4.158568,1],[3,8130962,2.746803,1],[3,8130962,2.777494,1],[3,18268265,2.071611,1],[3,18268265,2.040921,1],[3,7919768,3.421995,1],[3,18268265,1.641944,1],[3,18268265,1.580563,1],[3,18268265,1.519182,1],[3,18268265,1.488491,1],[3,739178,4.219949,1],[3,18268265,1.335038,1],[3,18268265,1.304348,1],[3,18268265,1.212276,1],[3,739178,4.465473,1],[3,6019024,0.629156,1],[3,3484698,2.900256,1],[3,10665288,1.519182,1],[3,10665288,1.488491,1],[3,18268265,2.501279,1],[3,3484698,2.777494,1],[3,13833195,2.286445,1],[3,13833195,2.317136,1],[3,13833195,2.347826,1],[3,13833195,2.409207,1],[3,13833195,2.439898,1],[3,13833195,2.59335,1],[3,13833195,2.654731,1],[3,13833195,2.685422,1],[3,13833195,2.746803,1],[3,13833195,2.777494,1],[3,3484698,2.59335,1],[3,739178,3.974425,1],[3,3484698,2.439898,1],[3,3484698,2.347826,1],[3,3484698,2.255754,1],[3,3484698,2.194373,1],[3,13833195,3.237852,1],[3,18268265,2.470588,1],[3,8130962,2.624041,1],[3,3484698,2.071611,1],[3,8130962,2.654731,1],[3,18268265,2.347826,1],[3,3484698,1.97954,1],[3,3484698,1.948849,1],[3,13833195,3.514066,1],[3,3484698,1.918159,1],[3,3484698,1.856777,1],[3,12143645,7.104859,1],[3,12143645,7.71867,1],[3,12143645,7.994885,1],[3,12143645,8.393862,1],[3,12143645,8.485934,1],[3,12143645,8.762148,1],[3,17634684,4.803069,1],[3,17634684,4.710997,1],[3,5174249,1.242967,1],[3,5174249,1.273657,1],[3,5174249,1.457801,1],[3,5174249,1.488491,1],[3,5174249,1.580563,1],[3,17634684,4.496164,1],[3,17634684,4.465473,1],[3,105597,1.488491,1],[3,105597,1.519182,1],[3,12354838,0.813299,1],[3,17634684,4.250639,1],[3,105597,1.672634,1],[3,17634684,4.097187,1],[3,5174249,1.703325,1],[3,5174249,1.734015,1],[3,12354838,1.549872,1],[3,12354838,1.580563,1],[3,12354838,1.641944,1],[3,5174249,1.764706,1],[3,12354838,1.795396,1],[3,12354838,1.826087,1],[3,12354838,1.856777,1],[3,12354838,1.887468,1],[3,12143645,3.483376,1],[3,12143645,3.514066,1],[3,12143645,3.575448,1],[3,12143645,3.606138,1],[3,12143645,3.636829,1],[3,12143645,3.667519,1],[3,12143645,4.189258,1],[3,12143645,4.250639,1],[3,12143645,4.31202,1],[3,12143645,4.741688,1],[3,12143645,4.772379,1],[3,12143645,4.803069,1],[3,12143645,4.83376,1],[3,12143645,5.048593,1],[3,18479459,1.948849,1],[3,12143645,5.140665,1],[3,18479459,1.887468,1],[3,18479459,1.856777,1],[3,12143645,5.324808,1],[3,12143645,5.41688,1],[3,12143645,5.44757,1],[3,17634684,5.263427,1],[3,18479459,1.703325,1],[3,12143645,5.631714,1],[3,18479459,1.519182,1],[3,12143645,5.938619,1],[3,17634684,5.140665,1],[3,18479459,1.457801,1],[3,18479459,1.181586,1],[3,18479459,4.31202,1],[3,18479459,1.058824,1],[3,12143645,6.920716,1],[3,12354838,3.667519,1],[3,5174249,2.746803,1],[3,5174249,2.777494,1],[3,4540667,4.404092,1],[3,5174249,3.299233,1],[3,5174249,3.360614,1],[3,5174249,3.636829,1],[3,5174249,3.667519,1],[3,5174249,3.882353,1],[3,4540667,3.391304,1],[3,11510063,4.28133,1],[3,5174249,4.31202,1],[3,11510063,4.189258,1],[3,5174249,4.526854,1],[3,4540667,2.808184,1],[3,4540667,2.59335,1],[3,4540667,2.56266,1],[3,11510063,3.606138,1],[3,4540667,2.163683,1],[3,4540667,2.040921,1],[3,4540667,2.01023,1],[3,4540667,1.97954,1],[3,4540667,1.948849,1],[3,4540667,1.887468,1],[3,11510063,3.053708,1],[3,11510063,2.992327,1],[3,4540667,1.611253,1],[3,4540667,1.580563,1],[3,4540667,1.519182,1],[3,4540667,1.488491,1],[3,4540667,1.396419,1],[3,4540667,1.365729,1],[3,5174249,1.795396,1],[3,12354838,2.040921,1],[3,12354838,2.102302,1],[3,5174249,1.856777,1],[3,12354838,2.225064,1],[3,12354838,2.255754,1],[3,12354838,2.317136,1],[3,5174249,1.97954,1],[3,12354838,2.439898,1],[3,5174249,2.01023,1],[3,12354838,2.531969,1],[3,12354838,2.56266,1],[3,12354838,2.59335,1],[3,12354838,2.624041,1],[3,12354838,2.654731,1],[3,12354838,2.685422,1],[3,5174249,2.071611,1],[3,12354838,2.930946,1],[3,5174249,2.194373,1],[3,5174249,2.286445,1],[3,5174249,2.317136,1],[3,12354838,3.11509,1],[3,5174249,2.347826,1],[3,12354838,3.176471,1],[3,12354838,3.207161,1],[3,12354838,3.268542,1],[3,12354838,3.299233,1],[3,5174249,2.409207,1],[3,12354838,3.421995,1],[3,12354838,3.483376,1],[3,12354838,3.514066,1],[3,5174249,2.531969,1],[3,11932451,1.734015,1],[3,11932451,1.764706,1],[3,4963055,1.734015,1],[3,11932451,1.918159,1],[3,11932451,2.225064,1],[3,11932451,2.255754,1],[3,11932451,2.347826,1],[3,11932451,2.409207,1],[3,11932451,2.439898,1],[3,11932451,2.470588,1],[3,4963055,1.887468,1],[3,11932451,2.59335,1],[3,11932451,2.654731,1],[3,11932451,2.685422,1],[3,4963055,1.948849,1],[3,11932451,2.777494,1],[3,4963055,1.97954,1],[3,11932451,2.869565,1],[3,11932451,2.900256,1],[3,11932451,2.961637,1],[3,11932451,3.023018,1],[3,11932451,3.483376,1],[3,11932451,3.606138,1],[3,4963055,2.777494,1],[3,11932451,4.066496,1],[3,11932451,4.895141,1],[3,11721257,4.557545,1],[3,11721257,3.606138,1],[3,4751861,4.83376,1],[3,4751861,4.557545,1],[3,4751861,4.465473,1],[3,11721257,2.777494,1],[3,18479459,3.759591,1],[3,18479459,3.69821,1],[3,18479459,3.575448,1],[3,18479459,3.544757,1],[3,18479459,3.452685,1],[3,18479459,3.237852,1],[3,7708574,1.181586,1],[3,7708574,1.212276,1],[3,18479459,3.084399,1],[3,4963055,0.905371,1],[3,4963055,0.966752,1],[3,4963055,1.028133,1],[3,4963055,1.120205,1],[3,4963055,1.181586,1],[3,4963055,1.212276,1],[3,4963055,1.273657,1],[3,4963055,1.365729,1],[3,4963055,1.42711,1],[3,4963055,1.488491,1],[3,4963055,1.641944,1],[3,18479459,2.746803,1],[3,18479459,2.654731,1],[3,18479459,2.56266,1],[3,7708574,1.242967,1],[3,18479459,2.531969,1],[3,18479459,2.470588,1],[3,18479459,2.439898,1],[3,11932451,1.181586,1],[3,4963055,1.703325,1],[3,11932451,1.335038,1],[3,11932451,1.457801,1],[3,11932451,1.641944,1],[3,11721257,1.058824,1],[3,4751861,1.580563,1],[3,4751861,1.519182,1],[3,4751861,1.488491,1],[3,4751861,1.457801,1],[3,18479459,2.347826,1],[3,18479459,2.317136,1],[3,18479459,2.255754,1],[3,18479459,2.163683,1],[3,18479459,2.132992,1],[3,18479459,2.102302,1],[3,12143645,1.488491,1],[3,18479459,2.01023,1],[3,12143645,1.549872,1],[3,12143645,1.918159,1],[3,12143645,2.040921,1],[3,12143645,2.225064,1],[3,12143645,2.255754,1],[3,12143645,2.286445,1],[3,12143645,2.317136,1],[3,12143645,2.347826,1],[3,12143645,2.470588,1],[3,12143645,2.531969,1],[3,12143645,2.685422,1],[3,4751861,1.396419,1],[3,12143645,2.838875,1],[3,12143645,2.900256,1],[3,12143645,2.930946,1],[3,12143645,3.023018,1],[3,4751861,1.335038,1],[3,12143645,3.207161,1],[3,12143645,3.452685,1],[3,11721257,2.409207,1],[3,11721257,2.317136,1],[3,11721257,2.225064,1],[3,4751861,3.69821,1],[3,11721257,2.132992,1],[3,11721257,2.102302,1],[3,11721257,2.040921,1],[3,4751861,3.452685,1],[3,11721257,2.01023,1],[3,11721257,1.97954,1],[3,11721257,1.948849,1],[3,4751861,3.176471,1],[3,11721257,1.734015,1],[3,4751861,3.053708,1],[3,11721257,1.703325,1],[3,11721257,1.611253,1],[3,4751861,2.838875,1],[3,4751861,2.746803,1],[3,11721257,1.457801,1],[3,4751861,2.56266,1],[3,4751861,2.501279,1],[3,4751861,2.439898,1],[3,4751861,2.409207,1],[3,11721257,1.242967,1],[3,4751861,2.194373,1],[3,4751861,2.163683,1],[3,4751861,2.040921,1],[3,4751861,2.01023,1],[3,4751861,1.97954,1],[3,4751861,1.887468,1],[3,4751861,1.764706,1],[3,4751861,1.703325,1],[3,11298869,2.01023,1],[3,11298869,1.97954,1],[3,11298869,1.948849,1],[3,11298869,1.887468,1],[3,11298869,1.856777,1],[3,11298869,1.795396,1],[3,11298869,1.764706,1],[3,11298869,1.42711,1],[3,11298869,1.396419,1],[3,11298869,1.273657,1],[3,11298869,0.966752,1],[3,105597,4.557545,1],[3,17634684,1.549872,1],[3,5385442,3.913043,1],[3,5385442,4.250639,1],[3,4118279,3.7289,1],[3,4118279,3.329923,1],[3,4118279,3.268542,1],[3,4118279,3.084399,1],[3,4118279,2.838875,1],[3,7708574,1.97954,1],[3,12988420,1.120205,1],[3,4118279,2.624041,1],[3,12988420,1.335038,1],[3,4118279,2.59335,1],[3,12988420,1.549872,1],[3,4118279,2.56266,1],[3,12988420,1.734015,1],[3,12988420,1.918159,1],[3,12988420,2.01023,1],[3,4118279,2.470588,1],[3,4118279,2.409207,1],[3,5385442,2.409207,1],[3,12777226,2.746803,1],[3,12777226,2.808184,1],[3,12777226,2.838875,1],[3,12777226,2.930946,1],[3,12777226,2.961637,1],[3,12777226,2.992327,1],[3,5385442,2.531969,1],[3,5385442,2.624041,1],[3,12777226,3.14578,1],[3,12777226,3.176471,1],[3,11298869,3.636829,1],[3,12777226,3.237852,1],[3,5385442,2.777494,1],[3,12777226,3.514066,1],[3,12777226,3.544757,1],[3,5385442,2.930946,1],[3,12777226,3.7289,1],[3,12777226,3.851662,1],[3,12777226,3.913043,1],[3,12777226,3.974425,1],[3,5385442,3.084399,1],[3,5385442,3.14578,1],[3,12777226,4.219949,1],[3,12777226,4.31202,1],[3,11298869,2.838875,1],[3,11298869,2.777494,1],[3,5385442,3.544757,1],[3,11298869,2.470588,1],[3,11298869,2.409207,1],[3,5385442,3.667519,1],[3,5385442,3.69821,1],[3,4118279,1.181586,1],[3,4118279,1.058824,1],[3,4118279,0.782609,1],[3,7919768,5.601023,1],[3,11087675,3.913043,1],[3,11087675,3.421995,1],[3,11087675,3.360614,1],[3,11087675,3.053708,1],[3,11087675,2.992327,1],[3,11087675,2.961637,1],[3,11087675,2.838875,1],[3,11087675,2.777494,1],[3,11087675,2.716113,1],[3,11087675,2.685422,1],[3,11087675,2.501279,1],[3,11087675,2.470588,1],[3,11087675,2.439898,1],[3,5596636,0.905371,1],[3,11087675,2.347826,1],[3,11087675,2.194373,1],[3,11087675,2.071611,1],[3,11087675,1.887468,1],[3,11087675,1.826087,1],[3,11087675,1.304348,1],[3,11087675,1.150895,1],[3,11087675,1.028133,1],[3,7919768,4.803069,1],[3,7708574,2.439898,1],[3,13199614,1.396419,1],[3,13199614,1.519182,1],[3,13199614,1.611253,1],[3,11087675,0.751918,1],[3,12988420,2.225064,1],[3,4118279,2.378517,1],[3,4118279,2.347826,1],[3,12988420,2.378517,1],[3,12988420,2.439898,1],[3,4118279,2.286445,1],[3,12988420,2.59335,1],[3,12988420,2.624041,1],[3,12988420,2.716113,1],[3,12988420,2.746803,1],[3,4118279,2.194373,1],[3,12988420,2.900256,1],[3,12988420,2.992327,1],[3,4118279,2.163683,1],[3,12988420,3.11509,1],[3,4118279,2.132992,1],[3,12988420,3.360614,1],[3,12988420,3.391304,1],[3,12988420,3.483376,1],[3,12988420,3.575448,1],[3,12988420,3.606138,1],[3,12988420,3.636829,1],[3,12988420,3.69821,1],[3,4118279,1.764706,1],[3,12988420,3.851662,1],[3,12988420,4.066496,1],[3,12988420,4.097187,1],[3,12988420,4.219949,1],[3,12988420,4.404092,1],[3,12988420,4.434783,1],[3,4118279,1.242967,1],[3,4118279,1.212276,1],[3,17634684,3.360614,1],[3,17634684,3.329923,1],[3,12566032,0.598465,1],[3,12566032,0.690537,1],[3,17634684,3.299233,1],[3,12566032,0.782609,1],[3,12566032,0.905371,1],[3,12566032,1.089514,1],[3,17634684,3.207161,1],[3,12566032,1.42711,1],[3,12566032,1.611253,1],[3,12566032,1.795396,1],[3,12566032,2.01023,1],[3,12566032,2.194373,1],[3,12566032,2.286445,1],[3,12566032,2.347826,1],[3,12566032,2.409207,1],[3,12566032,2.501279,1],[3,12566032,2.685422,1],[3,12566032,2.716113,1],[3,12566032,2.808184,1],[3,12566032,2.838875,1],[3,12566032,2.900256,1],[3,12566032,2.992327,1],[3,12566032,3.176471,1],[3,12566032,3.207161,1],[3,12566032,3.391304,1],[3,12566032,3.544757,1],[3,12566032,3.7289,1],[3,12566032,3.759591,1],[3,12566032,3.851662,1],[3,12566032,4.373402,1],[3,4540667,1.304348,1],[3,4540667,1.150895,1],[3,17634684,3.913043,1],[3,105597,1.734015,1],[3,105597,1.764706,1],[3,17634684,3.790281,1],[3,105597,2.102302,1],[3,11510063,2.777494,1],[3,11510063,2.716113,1],[3,11510063,2.531969,1],[3,11510063,2.347826,1],[3,11510063,2.225064,1],[3,11510063,2.163683,1],[3,11510063,1.97954,1],[3,11510063,1.948849,1],[3,17634684,3.7289,1],[3,11510063,1.703325,1],[3,11510063,1.672634,1],[3,11510063,1.580563,1],[3,17634684,3.69821,1],[3,11510063,1.42711,1],[3,105597,2.194373,1],[3,17634684,3.636829,1],[3,7708574,1.365729,1],[3,105597,2.470588,1],[3,105597,2.501279,1],[3,105597,2.531969,1],[3,105597,2.56266,1],[3,18479459,4.158568,1],[3,105597,2.808184,1],[3,105597,2.930946,1],[3,7708574,1.457801,1],[3,4329473,1.549872,1],[3,5385442,1.549872,1],[3,4329473,1.365729,1],[3,4329473,1.181586,1],[3,4329473,1.089514,1],[3,17634684,2.685422,1],[3,5385442,1.734015,1],[3,17634684,2.624041,1],[3,7708574,1.795396,1],[3,17634684,2.409207,1],[3,17634684,2.347826,1],[3,105597,3.759591,1],[3,105597,3.790281,1],[3,17634684,2.286445,1],[3,5385442,1.764706,1],[3,11298869,4.465473,1],[3,5385442,1.856777,1],[3,105597,4.097187,1],[3,17634684,2.071611,1],[3,12777226,0.87468,1],[3,12777226,1.549872,1],[3,17634684,1.856777,1],[3,12777226,1.887468,1],[3,12777226,1.948849,1],[3,12777226,2.071611,1],[3,12777226,2.132992,1],[3,5385442,2.040921,1],[3,12777226,2.255754,1],[3,12777226,2.409207,1],[3,12777226,2.531969,1],[3,5385442,2.286445,1],[3,5385442,2.317136,1],[3,12566032,4.404092,1],[3,12566032,4.557545,1],[3,12566032,4.710997,1],[3,12566032,5.232737,1],[3,12566032,5.570332,1],[3,4329473,5.140665,1],[3,105597,3.11509,1],[3,105597,3.14578,1],[3,105597,3.176471,1],[3,105597,3.237852,1],[3,105597,3.299233,1],[3,105597,3.329923,1],[3,105597,3.452685,1],[3,4329473,2.869565,1],[3,17634684,3.053708,1],[3,17634684,2.992327,1],[3,17634684,2.961637,1],[3,17634684,2.900256,1],[3,5385442,0.936061,1],[3,4329473,2.409207,1],[3,17634684,2.838875,1],[3,4329473,2.286445,1],[3,4329473,2.163683,1],[3,4329473,2.132992,1],[3,17634684,2.746803,1],[3,4329473,1.948849,1],[3,4329473,1.887468,1],[3,4329473,1.826087,1],[3,4329473,1.764706,1],[3,4329473,1.734015,1],[3,4329473,1.641944,1],[3,4329473,1.611253,1],[3,14677970,1.212276,1],[3,14677970,1.242967,1],[3,14677970,1.273657,1],[3,14255583,2.501279,1],[3,2851117,1.764706,1],[3,14255583,2.470588,1],[3,14677970,1.457801,1],[3,14255583,2.409207,1],[3,2851117,1.734015,1],[3,2851117,1.703325,1],[3,14255583,2.378517,1],[3,14677970,1.672634,1],[3,14677970,1.703325,1],[3,14255583,2.255754,1],[3,14255583,2.225064,1],[3,2851117,1.641944,1],[3,2851117,1.611253,1],[3,14255583,2.194373,1],[3,14677970,2.040921,1],[3,14677970,2.225064,1],[3,14677970,2.255754,1],[3,14677970,2.286445,1],[3,2851117,1.242967,1],[3,14677970,2.409207,1],[3,17423490,4.373402,1],[3,316791,2.777494,1],[3,2851117,0.537084,1],[3,316791,2.838875,1],[3,316791,2.900256,1],[3,316791,3.084399,1],[3,14255583,2.01023,1],[3,2851117,2.439898,1],[3,14255583,3.943734,1],[3,14255583,3.851662,1],[3,14255583,3.820972,1],[3,14255583,3.667519,1],[3,14255583,3.636829,1],[3,14255583,3.575448,1],[3,2851117,2.409207,1],[3,2851117,2.286445,1],[3,14255583,3.176471,1],[3,14255583,3.11509,1],[3,2851117,2.255754,1],[3,14255583,3.053708,1],[3,14255583,2.869565,1],[3,2851117,2.194373,1],[3,2851117,2.132992,1],[3,2851117,1.97954,1],[3,2851117,1.887468,1],[3,14255583,2.716113,1],[3,2851117,1.795396,1],[3,316791,1.826087,1],[3,316791,1.948849,1],[3,316791,2.163683,1],[3,316791,2.225064,1],[3,14677970,0.414322,1],[3,316791,2.501279,1],[3,316791,2.59335,1],[3,14255583,2.654731,1],[3,316791,2.624041,1],[3,14255583,2.624041,1],[3,14677970,0.905371,1],[3,14677970,1.120205,1],[3,316791,3.69821,1],[3,316791,3.790281,1],[3,17423490,3.851662,1],[3,17423490,3.790281,1],[3,316791,4.066496,1],[3,18057071,5.478261,1],[3,316791,4.219949,1],[3,316791,4.250639,1],[3,18057071,5.355499,1],[3,17423490,3.7289,1],[3,316791,4.404092,1],[3,17423490,3.667519,1],[3,14255583,1.120205,1],[3,6441411,0.966752,1],[3,2639923,5.171355,1],[3,8553350,1.795396,1],[3,6441411,1.242967,1],[3,18057071,5.109974,1],[3,17423490,3.575448,1],[3,14255583,0.936061,1],[3,7919768,2.286445,1],[3,6441411,1.488491,1],[3,7919768,2.347826,1],[3,8553350,1.764706,1],[3,8130962,3.943734,1],[3,17423490,3.544757,1],[3,2639923,4.618926,1],[3,6441411,1.580563,1],[3,8553350,1.703325,1],[3,2639923,4.526854,1],[3,8553350,1.672634,1],[3,10031706,4.127877,1],[3,10031706,3.606138,1],[3,10031706,3.514066,1],[3,10031706,3.176471,1],[3,10031706,3.084399,1],[3,10031706,3.053708,1],[3,10031706,2.961637,1],[3,316791,3.237852,1],[3,14255583,1.918159,1],[3,10031706,2.838875,1],[3,10031706,2.746803,1],[3,14255583,1.887468,1],[3,316791,3.299233,1],[3,10031706,2.654731,1],[3,10031706,2.409207,1],[3,10031706,2.378517,1],[3,14255583,1.672634,1],[3,10031706,2.132992,1],[3,10031706,2.071611,1],[3,316791,3.483376,1],[3,14255583,1.641944,1],[3,10031706,1.97954,1],[3,14255583,1.611253,1],[3,10031706,1.887468,1],[3,10031706,1.734015,1],[3,17423490,4.127877,1],[3,10031706,1.611253,1],[3,17423490,4.066496,1],[3,316791,3.606138,1],[3,14255583,1.42711,1],[3,17423490,4.035806,1],[3,14255583,1.396419,1],[3,10242900,3.053708,1],[3,10242900,2.992327,1],[3,10242900,2.746803,1],[3,6230218,3.237852,1],[3,10242900,2.685422,1],[3,10242900,4.066496,1],[3,6230218,2.624041,1],[3,6230218,2.59335,1],[3,3062310,1.028133,1],[3,3062310,1.058824,1],[3,3062310,1.089514,1],[3,3062310,1.150895,1],[3,10242900,2.624041,1],[3,10242900,4.31202,1],[3,3062310,1.396419,1],[3,3062310,1.488491,1],[3,6230218,2.409207,1],[3,3062310,1.549872,1],[3,3062310,1.580563,1],[3,6230218,2.378517,1],[3,6230218,2.347826,1],[3,3062310,1.764706,1],[3,6230218,2.225064,1],[3,6230218,2.163683,1],[3,6230218,2.132992,1],[3,10242900,2.470588,1],[3,3062310,2.040921,1],[3,3062310,2.071611,1],[3,6230218,2.071611,1],[3,6230218,2.040921,1],[3,3062310,2.255754,1],[3,14466777,1.488491,1],[3,14466777,1.519182,1],[3,10242900,4.035806,1],[3,14466777,1.641944,1],[3,6230218,2.746803,1],[3,10242900,3.913043,1],[3,14466777,1.918159,1],[3,10242900,3.790281,1],[3,10242900,3.759591,1],[3,14466777,1.273657,1],[3,10242900,3.7289,1],[3,6230218,2.838875,1],[3,14466777,2.071611,1],[3,14466777,2.132992,1],[3,14466777,2.163683,1],[3,6230218,2.900256,1],[3,10242900,3.514066,1],[3,14466777,0.659847,1],[3,10242900,3.483376,1],[3,739178,7.16624,1],[3,8553350,2.624041,1],[3,8553350,2.59335,1],[3,10242900,3.452685,1],[3,7919768,1.304348,1],[3,10242900,3.360614,1],[3,10242900,3.299233,1],[3,10242900,3.237852,1],[3,10242900,3.176471,1],[3,10242900,3.14578,1],[3,10242900,3.11509,1],[3,3062310,0.598465,1],[3,10242900,3.084399,1],[3,7919768,1.549872,1],[3,6230218,4.066496,1],[3,6230218,4.127877,1],[3,7919768,1.580563,1],[3,6230218,4.250639,1],[3,6230218,4.31202,1],[3,6230218,4.496164,1],[3,6230218,4.618926,1],[3,6230218,4.772379,1],[3,6230218,4.925831,1],[3,6230218,5.079284,1],[3,3062310,3.882353,1],[3,6230218,6.153453,1],[3,2851117,4.803069,1],[3,2851117,4.649616,1],[3,7919768,1.918159,1],[3,7919768,1.948849,1],[3,2851117,4.127877,1],[3,2851117,3.636829,1],[3,2851117,3.606138,1],[3,2851117,3.360614,1],[3,2851117,3.176471,1],[3,2851117,2.685422,1],[3,7919768,2.102302,1],[3,2851117,2.624041,1],[3,2851117,2.56266,1],[3,7919768,2.132992,1],[3,7919768,2.163683,1],[3,7919768,2.194373,1],[3,14255583,6.398977,1],[3,14255583,4.987212,1],[3,2851117,2.470588,1],[3,6230218,3.299233,1],[3,6230218,1.856777,1],[3,3062310,2.409207,1],[3,3062310,2.439898,1],[3,6230218,1.641944,1],[3,3062310,2.685422,1],[3,10242900,5.202046,1],[3,3062310,2.777494,1],[3,3062310,2.808184,1],[3,10242900,2.102302,1],[3,10242900,5.324808,1],[3,10242900,1.918159,1],[3,8553350,3.11509,1],[3,6230218,3.391304,1],[3,10242900,1.549872,1],[3,3062310,3.176471,1],[3,8553350,3.421995,1],[3,8553350,3.452685,1],[3,316791,1.089514,1],[3,8553350,3.575448,1],[3,6230218,1.242967,1],[3,8553350,1.97954,1],[3,6230218,1.089514,1],[3,316791,1.335038,1],[3,316791,1.488491,1],[3,316791,1.764706,1],[3,6230218,3.421995,1],[3,6230218,3.452685,1],[3,6230218,3.514066,1],[3,6230218,3.667519,1],[3,6230218,3.69821,1],[3,6230218,3.790281,1],[3,10454094,2.409207,1],[3,6019024,6.58312,1],[3,17423490,3.176471,1],[3,8553350,1.457801,1],[3,10454094,2.255754,1],[3,6019024,6.644501,1],[3,7919768,2.900256,1],[3,10454094,2.286445,1],[3,10454094,1.488491,1],[3,6441411,1.672634,1],[3,2639923,3.606138,1],[3,17423490,3.360614,1],[3,2639923,3.636829,1],[3,7919768,3.14578,1],[3,6441411,2.01023,1],[3,8553350,1.089514,1],[3,2639923,3.421995,1],[3,2639923,3.759591,1],[3,2639923,3.943734,1],[3,10454094,1.734015,1],[3,14889164,0.322251,1],[3,7919768,2.838875,1],[3,17423490,3.207161,1],[3,10454094,2.102302,1],[3,2639923,3.913043,1],[3,14889164,1.488491,1],[3,14889164,1.734015,1],[3,7919768,2.777494,1],[3,14889164,0.84399,1],[3,2639923,4.373402,1],[3,14889164,1.089514,1],[3,6441411,2.194373,1],[3,18057071,4.956522,1],[3,6019024,6.55243,1],[3,6019024,6.521739,1],[3,10454094,1.826087,1],[3,14889164,0.598465,1],[3,10454094,2.317136,1],[3,6441411,2.132992,1],[3,7919768,2.624041,1],[3,8553350,1.335038,1],[3,2639923,3.360614,1],[3,14889164,2.01023,1],[3,14889164,2.040921,1],[3,6441411,1.641944,1],[3,10454094,1.335038,1],[3,6441411,2.102302,1],[3,2639923,3.452685,1],[3,6019024,7.196931,1],[3,10454094,1.918159,1],[3,18479459,5.386189,1],[3,2639923,3.544757,1],[3,6019024,6.890026,1],[3,2639923,4.158568,1],[3,2639923,4.066496,1],[3,527985,6.491049,1],[3,18057071,4.895141,1],[3,10454094,1.457801,1],[3,6441411,1.826087,1],[3,2639923,4.035806,1],[3,14889164,0.966752,1],[3,14889164,1.856777,1],[3,10454094,1.856777,1],[3,7919768,2.961637,1],[3,7919768,2.470588,1],[3,10454094,1.97954,1],[3,6441411,1.856777,1],[3,14889164,1.887468,1],[3,14889164,0.659847,1],[3,4118279,1.826087,2],[3,1583954,2.992327,2],[3,4118279,1.795396,2],[3,9820513,2.286445,2],[3,16367521,4.342711,2],[3,1583954,1.335038,2],[3,950372,1.97954,2],[3,1583954,1.457801,2],[3,950372,1.948849,2],[3,1583954,1.549872,2],[3,950372,1.918159,2],[3,12988420,2.56266,2],[3,527985,2.194373,2],[3,1583954,1.795396,2],[3,4118279,2.225064,2],[3,1583954,1.918159,2],[3,12988420,2.777494,2],[3,1583954,2.071611,2],[3,1583954,2.102302,2],[3,12988420,2.838875,2],[3,1583954,2.378517,2],[3,10242900,1.488491,2],[3,2639923,2.531969,2],[3,12988420,3.14578,2],[3,1583954,2.716113,2],[3,4118279,2.01023,2],[3,4118279,1.97954,2],[3,4963055,1.826087,2],[3,4963055,1.795396,2],[3,12988420,3.421995,2],[3,4118279,1.918159,2],[3,16367521,2.255754,2],[3,16367521,2.225064,2],[3,16367521,2.163683,2],[3,7074993,3.053708,2],[3,16367521,2.071611,2],[3,11087675,3.237852,2],[3,11087675,3.14578,2],[3,5596636,0.629156,2],[3,16367521,1.795396,2],[3,16367521,1.764706,2],[3,950372,1.856777,2],[3,16367521,1.457801,2],[3,16367521,1.396419,2],[3,10242900,2.163683,2],[3,16367521,1.273657,2],[3,16367521,1.242967,2],[3,9820513,1.826087,2],[3,11087675,2.654731,2],[3,950372,1.703325,2],[3,11932451,1.948849,2],[3,11932451,1.826087,2],[3,16367521,0.751918,2],[3,5596636,0.84399,2],[3,9820513,1.795396,2],[3,11932451,1.795396,2],[3,9820513,1.764706,2],[3,527985,2.071611,2],[3,950372,1.488491,2],[3,527985,2.01023,2],[3,527985,1.948849,2],[3,9820513,2.255754,2],[3,10242900,1.856777,2],[3,4118279,1.641944,2],[3,4118279,1.549872,2],[3,11932451,2.132992,2],[3,4118279,1.519182,2],[3,4118279,1.488491,2],[3,12988420,4.189258,2],[3,15100358,4.588235,2],[3,4118279,1.457801,2],[3,4118279,1.42711,2],[3,4118279,1.365729,2],[3,9820513,2.163683,2],[3,9820513,2.132992,2],[3,9820513,2.102302,2],[3,10242900,1.97954,2],[3,4118279,1.120205,2],[3,4118279,1.028133,2],[3,7074993,3.452685,2],[3,10242900,2.01023,2],[3,4118279,0.659847,2],[3,4118279,0.629156,2],[3,16367521,2.961637,2],[3,4963055,1.764706,2],[3,17634684,0.782609,2],[3,4118279,0.383632,2],[3,7708574,2.132992,2],[3,5596636,0.322251,2],[3,11087675,3.483376,2],[3,11932451,1.97954,2],[3,17634684,0.598465,2],[3,15100358,2.163683,2],[3,12777226,3.268542,2],[3,5385442,2.685422,2],[3,4963055,2.317136,2],[3,5385442,2.838875,2],[3,4963055,2.040921,2],[3,6230218,4.189258,2],[3,11298869,3.360614,2],[3,2639923,2.194373,2],[3,5385442,2.900256,2],[3,15100358,2.286445,2],[3,15100358,2.317136,2],[3,11298869,3.207161,2],[3,15100358,2.347826,2],[3,11932451,2.746803,2],[3,6441411,2.163683,2],[3,6230218,4.005115,2],[3,6230218,3.913043,2],[3,2639923,2.347826,2],[3,6230218,3.820972,2],[3,6441411,2.439898,2],[3,4963055,1.918159,2],[3,12777226,4.434783,2],[3,11298869,2.654731,2],[3,15100358,2.716113,2],[3,11298869,2.347826,2],[3,11298869,2.317136,2],[3,5385442,1.97954,2],[3,17845878,3.913043,2],[3,12777226,2.040921,2],[3,950372,2.439898,2],[3,16578715,0.936061,2],[3,16578715,0.905371,2],[3,15100358,1.580563,2],[3,16578715,0.751918,2],[3,17845878,0.076726,2],[3,15100358,1.641944,2],[3,5385442,2.132992,2],[3,17212296,3.851662,2],[3,16578715,0.383632,2],[3,15100358,1.672634,2],[3,5385442,2.194373,2],[3,2639923,2.040921,2],[3,15100358,1.795396,2],[3,950372,2.255754,2],[3,2639923,2.102302,2],[3,5385442,2.439898,2],[3,17423490,2.56266,2],[3,15100358,1.887468,2],[3,15100358,1.918159,2],[3,11932451,3.421995,2],[3,15100358,2.01023,2],[3,15100358,2.040921,2],[3,4963055,2.347826,2],[3,15100358,2.132992,2],[3,105597,4.741688,2],[3,11932451,2.378517,2],[3,15100358,3.360614,2],[3,4118279,2.654731,2],[3,12988420,0.414322,2],[3,14889164,1.181586,2],[3,17634684,1.365729,2],[3,316791,1.242967,2],[3,12988420,1.150895,2],[3,12988420,1.181586,2],[3,10242900,0.567775,2],[3,10242900,0.751918,2],[3,12988420,1.580563,2],[3,12988420,1.611253,2],[3,527985,2.746803,2],[3,12988420,1.764706,2],[3,12988420,1.795396,2],[3,12988420,1.826087,2],[3,12988420,1.887468,2],[3,527985,2.531969,2],[3,15100358,3.69821,2],[3,11932451,2.286445,2],[3,527985,2.409207,2],[3,1583954,0.721228,2],[3,12988420,2.194373,2],[3,316791,1.028133,2],[3,950372,2.071611,2],[3,527985,2.225064,2],[3,11298869,2.255754,2],[3,6230218,3.544757,2],[3,11298869,2.194373,2],[3,11298869,2.163683,2],[3,11298869,2.102302,2],[3,11298869,2.040921,2],[3,11932451,2.56266,2],[3,11298869,1.918159,2],[3,14889164,1.120205,2],[3,15100358,2.900256,2],[3,11298869,1.703325,2],[3,11298869,1.672634,2],[3,11298869,1.611253,2],[3,11298869,1.519182,2],[3,11298869,1.488491,2],[3,2639923,2.501279,2],[3,9820513,3.14578,2],[3,11298869,1.365729,2],[3,11298869,1.304348,2],[3,11298869,1.120205,2],[3,17634684,1.703325,2],[3,17634684,1.672634,2],[3,316791,1.457801,2],[3,11298869,0.751918,2],[3,17634684,1.641944,2],[3,316791,1.42711,2],[3,15100358,3.14578,2],[3,17634684,1.519182,2],[3,14889164,1.641944,2],[3,5596636,1.918159,2],[3,16156327,4.158568,2],[3,4963055,1.242967,2],[3,17212296,2.470588,2],[3,16156327,4.035806,2],[3,16156327,4.005115,2],[3,16156327,3.974425,2],[3,16156327,3.790281,2],[3,16156327,3.7289,2],[3,739178,1.580563,2],[3,16156327,3.575448,2],[3,2428729,1.887468,2],[3,17212296,2.59335,2],[3,16156327,3.391304,2],[3,2639923,3.11509,2],[3,2428729,1.764706,2],[3,5596636,2.624041,2],[3,5596636,2.685422,2],[3,16156327,3.11509,2],[3,5596636,2.869565,2],[3,5596636,3.14578,2],[3,16156327,2.992327,2],[3,17212296,2.777494,2],[3,6230218,2.992327,2],[3,6230218,2.930946,2],[3,16156327,2.746803,2],[3,2428729,1.488491,2],[3,16156327,2.624041,2],[3,5596636,1.120205,2],[3,10242900,2.961637,2],[3,2428729,2.439898,2],[3,16156327,5.41688,2],[3,17212296,2.01023,2],[3,17212296,2.040921,2],[3,16156327,5.294118,2],[3,17212296,2.102302,2],[3,5596636,1.242967,2],[3,17212296,2.194373,2],[3,2428729,2.286445,2],[3,6441411,2.378517,2],[3,16156327,5.079284,2],[3,2428729,2.225064,2],[3,5596636,1.396419,2],[3,4963055,1.396419,2],[3,5596636,1.488491,2],[3,16156327,4.83376,2],[3,2639923,3.023018,2],[3,17212296,2.317136,2],[3,2428729,2.102302,2],[3,16156327,4.649616,2],[3,5596636,1.672634,2],[3,5596636,1.734015,2],[3,10242900,3.268542,2],[3,5596636,1.826087,2],[3,16156327,4.434783,2],[3,16156327,4.404092,2],[3,5596636,1.856777,2],[3,16156327,1.304348,2],[3,16156327,1.273657,2],[3,3907086,0.966752,2],[3,3907086,0.905371,2],[3,16156327,1.058824,2],[3,2639923,3.207161,2],[3,14466777,1.734015,2],[3,16156327,0.813299,2],[3,16156327,0.598465,2],[3,16156327,0.506394,2],[3,3907086,0.567775,2],[3,8342156,2.194373,2],[3,8342156,2.132992,2],[3,739178,1.948849,2],[3,8342156,2.01023,2],[3,14466777,1.580563,2],[3,739178,2.01023,2],[3,17423490,2.071611,2],[3,739178,2.102302,2],[3,8342156,1.948849,2],[3,8130962,1.150895,2],[3,739178,2.194373,2],[3,8342156,1.856777,2],[3,739178,2.255754,2],[3,8342156,1.611253,2],[3,15945133,11.217391,2],[3,8130962,1.365729,2],[3,739178,2.286445,2],[3,8130962,1.396419,2],[3,14889164,1.764706,2],[3,14889164,1.795396,2],[3,2428729,1.396419,2],[3,17212296,2.930946,2],[3,2428729,1.304348,2],[3,16156327,2.347826,2],[3,3907086,2.071611,2],[3,3907086,2.040921,2],[3,16156327,2.225064,2],[3,16156327,2.163683,2],[3,17212296,2.961637,2],[3,17212296,2.992327,2],[3,3907086,1.734015,2],[3,16156327,1.948849,2],[3,3907086,1.580563,2],[3,16156327,1.856777,2],[3,3907086,1.549872,2],[3,17212296,3.023018,2],[3,17212296,3.053708,2],[3,3907086,1.304348,2],[3,18479459,2.961637,2],[3,16156327,1.672634,2],[3,3907086,1.212276,2],[3,3907086,1.181586,2],[3,2639923,3.391304,2],[3,16156327,1.488491,2],[3,14466777,1.856777,2],[3,10242900,3.851662,2],[3,16156327,1.365729,2],[3,3907086,1.028133,2],[3,11087675,1.212276,2],[3,11932451,1.42711,2],[3,950372,1.273657,2],[3,11087675,0.966752,2],[3,950372,1.120205,2],[3,527985,1.273657,2],[3,11087675,0.905371,2],[3,11087675,0.813299,2],[3,9186931,1.058824,2],[3,9186931,1.120205,2],[3,9186931,1.181586,2],[3,9186931,1.242967,2],[3,9186931,1.273657,2],[3,11932451,1.304348,2],[3,14889164,1.365729,2],[3,9186931,1.365729,2],[3,14889164,1.396419,2],[3,11932451,1.058824,2],[3,9820513,1.580563,2],[3,13199614,0.475703,2],[3,11932451,0.84399,2],[3,13199614,0.659847,2],[3,7074993,2.225064,2],[3,7919768,4.496164,2],[3,7074993,2.163683,2],[3,7074993,2.132992,2],[3,14889164,2.838875,2],[3,7074993,2.102302,2],[3,17212296,0.813299,2],[3,527985,1.856777,2],[3,527985,1.764706,2],[3,18479459,3.974425,2],[3,9820513,1.703325,2],[3,14889164,1.273657,2],[3,11087675,2.317136,2],[3,11087675,2.286445,2],[3,11087675,2.255754,2],[3,5596636,0.936061,2],[3,7074993,2.838875,2],[3,9820513,1.672634,2],[3,11087675,2.163683,2],[3,5596636,0.997442,2],[3,7074993,2.716113,2],[3,10242900,2.317136,2],[3,11087675,2.01023,2],[3,11087675,1.948849,2],[3,11932451,1.703325,2],[3,11932451,1.611253,2],[3,9820513,1.641944,2],[3,2639923,2.716113,2],[3,9820513,1.611253,2],[3,11087675,1.795396,2],[3,11087675,1.734015,2],[3,11087675,1.580563,2],[3,11087675,1.42711,2],[3,1583954,5.324808,2],[3,5596636,1.058824,2],[3,950372,1.396419,2],[3,16156327,7.319693,2],[3,7074993,1.120205,2],[3,17423490,2.439898,2],[3,17212296,1.42711,2],[3,10242900,2.654731,2],[3,17212296,1.457801,2],[3,13199614,1.887468,2],[3,17212296,1.519182,2],[3,17212296,1.580563,2],[3,13199614,1.918159,2],[3,17212296,1.611253,2],[3,18479459,2.685422,2],[3,18479459,2.808184,2],[3,950372,0.352941,2],[3,7074993,0.813299,2],[3,9820513,1.273657,2],[3,17212296,1.764706,2],[3,8342156,2.56266,2],[3,4963055,1.672634,2],[3,9820513,1.242967,2],[3,13199614,2.317136,2],[3,16156327,6.337596,2],[3,17212296,1.948849,2],[3,13199614,2.56266,2],[3,17212296,1.97954,2],[3,13199614,2.624041,2],[3,16156327,5.846547,2],[3,10242900,2.869565,2],[3,10242900,2.930946,2],[3,13199614,0.84399,2],[3,7919768,4.465473,2],[3,9186931,2.163683,2],[3,739178,1.120205,2],[3,18479459,2.501279,2],[3,9186931,2.225064,2],[3,7074993,2.01023,2],[3,739178,1.150895,2],[3,9186931,2.59335,2],[3,13199614,1.365729,2],[3,9820513,1.549872,2],[3,7074993,1.795396,2],[3,7074993,1.764706,2],[3,14889164,1.519182,2],[3,7919768,4.373402,2],[3,17212296,1.120205,2],[3,10242900,2.531969,2],[3,2639923,2.930946,2],[3,17212296,1.212276,2],[3,18479459,2.624041,2],[3,14889164,1.549872,2],[3,13199614,1.549872,2],[3,7074993,1.457801,2],[3,13199614,1.580563,2],[3,9820513,1.488491,2],[3,16156327,7.503836,2],[3,9820513,1.457801,2],[3,7074993,1.242967,2],[3,17212296,1.335038,2],[3,17212296,1.396419,2],[3,10031706,2.255754,2],[3,10031706,2.347826,2],[3,1161566,0.997442,2],[3,12143645,1.97954,2],[3,10031706,2.470588,2],[3,10031706,2.531969,2],[3,10031706,2.56266,2],[3,6441411,5.631714,2],[3,10031706,2.59335,2],[3,5174249,2.59335,2],[3,316791,3.329923,2],[3,12143645,1.948849,2],[3,10031706,2.685422,2],[3,7286187,2.347826,2],[3,12143645,1.887468,2],[3,7286187,2.255754,2],[3,10031706,2.777494,2],[3,5174249,3.483376,2],[3,7286187,2.163683,2],[3,17845878,1.273657,2],[3,12143645,1.795396,2],[3,10031706,2.869565,2],[3,12143645,1.764706,2],[3,316791,3.207161,2],[3,527985,4.005115,2],[3,10031706,3.023018,2],[3,7286187,1.856777,2],[3,17845878,1.058824,2],[3,1161566,1.549872,2],[3,12354838,1.672634,2],[3,12354838,1.703325,2],[3,17001102,4.189258,2],[3,12354838,1.764706,2],[3,10031706,1.396419,2],[3,12354838,1.918159,2],[3,7286187,3.882353,2],[3,12354838,2.01023,2],[3,6441411,1.887468,2],[3,10031706,1.549872,2],[3,12143645,2.378517,2],[3,10031706,1.764706,2],[3,10031706,1.795396,2],[3,10031706,1.826087,2],[3,17845878,1.488491,2],[3,10031706,1.948849,2],[3,17212296,4.680307,2],[3,7286187,3.176471,2],[3,12354838,2.716113,2],[3,12143645,2.194373,2],[3,5174249,2.102302,2],[3,12354838,2.838875,2],[3,5174249,2.163683,2],[3,7497381,1.365729,2],[3,12143645,2.132992,2],[3,10031706,2.194373,2],[3,12143645,2.102302,2],[3,10031706,2.225064,2],[3,4540667,1.212276,2],[3,2851117,0.936061,2],[3,4540667,1.058824,2],[3,16789909,3.943734,2],[3,16789909,3.913043,2],[3,16789909,3.69821,2],[3,17845878,2.501279,2],[3,2851117,1.058824,2],[3,17845878,2.531969,2],[3,8342156,3.176471,2],[3,4540667,0.537084,2],[3,105597,1.887468,2],[3,105597,1.97954,2],[3,4540667,0.107417,2],[3,105597,2.132992,2],[3,12143645,0.598465,2],[3,16789909,2.808184,2],[3,11510063,2.685422,2],[3,12143645,0.567775,2],[3,2639923,3.790281,2],[3,11510063,2.286445,2],[3,16789909,2.59335,2],[3,16789909,2.56266,2],[3,105597,0.936061,2],[3,16789909,2.470588,2],[3,11510063,2.102302,2],[3,2851117,1.273657,2],[3,16789909,2.286445,2],[3,16789909,2.255754,2],[3,316791,3.11509,2],[3,7286187,1.611253,2],[3,17845878,0.905371,2],[3,11510063,3.329923,2],[3,12143645,1.365729,2],[3,4540667,2.071611,2],[3,12143645,1.273657,2],[3,10031706,4.158568,2],[3,7286187,1.304348,2],[3,17845878,0.84399,2],[3,316791,2.930946,2],[3,527985,4.066496,2],[3,7497381,2.01023,2],[3,316791,2.869565,2],[3,12143645,1.181586,2],[3,17212296,5.785166,2],[3,18479459,2.071611,2],[3,7286187,0.84399,2],[3,12143645,1.028133,2],[3,11510063,2.900256,2],[3,2639923,3.820972,2],[3,8342156,3.237852,2],[3,4540667,1.457801,2],[3,4540667,1.42711,2],[3,16789909,4.404092,2],[3,17845878,2.194373,2],[3,316791,2.746803,2],[3,17845878,2.286445,2],[3,17845878,2.317136,2],[3,4751861,0.87468,2],[3,6441411,2.992327,2],[3,17001102,1.396419,2],[3,17001102,1.365729,2],[3,12143645,4.28133,2],[3,17001102,1.089514,2],[3,12143645,4.465473,2],[3,17001102,0.966752,2],[3,7497381,1.580563,2],[3,12143645,4.526854,2],[3,7497381,1.641944,2],[3,17845878,1.611253,2],[3,17001102,0.721228,2],[3,6441411,3.084399,2],[3,6441411,3.11509,2],[3,17001102,0.567775,2],[3,7497381,1.795396,2],[3,17845878,1.703325,2],[3,17001102,3.207161,2],[3,17001102,0.445013,2],[3,17845878,1.734015,2],[3,12143645,4.86445,2],[3,17845878,1.795396,2],[3,12143645,4.925831,2],[3,4751861,0.506394,2],[3,7497381,1.856777,2],[3,17634684,5.601023,2],[3,1161566,2.746803,2],[3,6441411,2.746803,2],[3,12143645,3.421995,2],[3,17001102,2.59335,2],[3,17001102,2.470588,2],[3,4751861,1.212276,2],[3,12143645,3.391304,2],[3,12143645,3.268542,2],[3,1161566,2.501279,2],[3,4751861,1.304348,2],[3,17001102,2.255754,2],[3,12143645,3.69821,2],[3,4751861,1.181586,2],[3,11721257,0.997442,2],[3,17001102,1.948849,2],[3,4751861,1.028133,2],[3,12143645,3.176471,2],[3,17001102,1.887468,2],[3,12143645,3.974425,2],[3,17001102,1.826087,2],[3,4751861,0.966752,2],[3,12143645,4.035806,2],[3,12143645,4.066496,2],[3,17001102,1.672634,2],[3,4751861,0.936061,2],[3,17001102,1.611253,2],[3,12143645,3.11509,2],[3,12143645,4.127877,2],[3,4751861,0.905371,2],[3,6441411,2.961637,2],[3,18479459,0.751918,2],[3,18479459,0.721228,2],[3,6441411,3.974425,2],[3,5174249,1.089514,2],[3,5174249,1.120205,2],[3,5174249,1.181586,2],[3,12143645,2.654731,2],[3,5174249,1.365729,2],[3,17001102,3.759591,2],[3,12143645,2.56266,2],[3,5174249,1.611253,2],[3,5174249,1.641944,2],[3,105597,1.150895,2],[3,1161566,1.734015,2],[3,105597,1.396419,2],[3,105597,1.42711,2],[3,105597,1.457801,2],[3,12354838,0.598465,2],[3,10031706,0.87468,2],[3,105597,1.580563,2],[3,17423490,3.913043,2],[3,17423490,3.943734,2],[3,12354838,1.242967,2],[3,12354838,1.335038,2],[3,12354838,1.396419,2],[3,12354838,1.42711,2],[3,12354838,1.457801,2],[3,1161566,1.672634,2],[3,6441411,4.496164,2],[3,6441411,3.268542,2],[3,6441411,1.335038,2],[3,18479459,1.826087,2],[3,1161566,2.071611,2],[3,6441411,3.391304,2],[3,17423490,3.606138,2],[3,6441411,3.452685,2],[3,1161566,3.14578,2],[3,18479459,1.672634,2],[3,1161566,3.207161,2],[3,11721257,0.966752,2],[3,6441411,1.795396,2],[3,1161566,3.329923,2],[3,18479459,1.611253,2],[3,1161566,3.452685,2],[3,1161566,3.575448,2],[3,18479459,1.488491,2],[3,6441411,1.089514,2],[3,18479459,1.42711,2],[3,12143645,2.869565,2],[3,18479459,1.273657,2],[3,6441411,2.56266,2],[3,18479459,1.089514,2],[3,1161566,1.97954,2],[3,12143645,6.797954,2],[3,12143645,2.808184,2],[3,6441411,3.7289,2],[3,1161566,4.219949,2],[3,12143645,7.841432,2],[3,2639923,1.519182,2],[3,5385442,1.242967,2],[3,4751861,3.421995,2],[3,8764543,1.826087,2],[3,5385442,1.335038,2],[3,8764543,1.764706,2],[3,15100358,0.598465,2],[3,8764543,1.734015,2],[3,8764543,1.703325,2],[3,4751861,3.667519,2],[3,15100358,0.690537,2],[3,5385442,1.457801,2],[3,4329473,1.672634,2],[3,9820513,3.759591,2],[3,8764543,1.549872,2],[3,8764543,1.519182,2],[3,8764543,1.488491,2],[3,5385442,1.488491,2],[3,15100358,0.813299,2],[3,5385442,1.519182,2],[3,15100358,0.84399,2],[3,5385442,1.703325,2],[3,4329473,1.212276,2],[3,15100358,0.936061,2],[3,7708574,1.703325,2],[3,8764543,1.273657,2],[3,8764543,1.120205,2],[3,4329473,0.905371,2],[3,14677970,0.813299,2],[3,12566032,2.930946,2],[3,1372760,4.035806,2],[3,4751861,2.716113,2],[3,12566032,3.268542,2],[3,316791,2.531969,2],[3,14677970,0.383632,2],[3,4751861,2.777494,2],[3,11721257,1.580563,2],[3,12566032,5.263427,2],[3,316791,2.071611,2],[3,17423490,3.053708,2],[3,2639923,1.42711,2],[3,2851117,1.856777,2],[3,7708574,1.549872,2],[3,11721257,1.826087,2],[3,7708574,1.580563,2],[3,11721257,1.856777,2],[3,2851117,2.01023,2],[3,11721257,1.918159,2],[3,2851117,2.163683,2],[3,5385442,0.905371,2],[3,17423490,2.685422,2],[3,2639923,1.457801,2],[3,2639923,1.488491,2],[3,17634684,2.808184,2],[3,5385442,1.089514,2],[3,2851117,2.225064,2],[3,15100358,0.537084,2],[3,16578715,3.14578,2],[3,12777226,1.089514,2],[3,16578715,2.930946,2],[3,12777226,1.181586,2],[3,16578715,2.838875,2],[3,12777226,1.212276,2],[3,12777226,1.304348,2],[3,16578715,2.624041,2],[3,16578715,2.59335,2],[3,16578715,2.470588,2],[3,16578715,2.378517,2],[3,12777226,1.457801,2],[3,12777226,1.519182,2],[3,2851117,4.526854,2],[3,16578715,2.163683,2],[3,16578715,2.132992,2],[3,950372,2.59335,2],[3,12777226,1.641944,2],[3,16578715,2.040921,2],[3,16578715,1.97954,2],[3,16578715,1.948849,2],[3,12777226,1.672634,2],[3,16578715,1.764706,2],[3,7497381,0.936061,2],[3,12777226,1.856777,2],[3,16578715,1.519182,2],[3,12777226,1.918159,2],[3,16578715,1.396419,2],[3,16578715,1.365729,2],[3,4329473,0.84399,2],[3,4329473,0.813299,2],[3,7708574,1.734015,2],[3,11721257,3.14578,2],[3,11721257,3.329923,2],[3,17212296,4.158568,2],[3,17845878,0.475703,2],[3,17845878,0.445013,2],[3,17634684,2.59335,2],[3,11721257,3.452685,2],[3,17634684,2.470588,2],[3,4329473,0.29156,2],[3,17845878,0.352941,2],[3,17845878,0.29156,2],[3,2851117,3.14578,2],[3,15100358,1.212276,2],[3,5385442,1.826087,2],[3,14889164,0.936061,2],[3,15100358,1.304348,2],[3,17845878,0.230179,2],[3,739178,0.813299,2],[3,16578715,3.514066,2],[3,7708574,1.918159,2],[3,17634684,2.102302,2],[3,17634684,2.040921,2],[3,12777226,0.813299,2],[3,17634684,1.97954,2],[3,16578715,3.237852,2],[3,11932451,4.373402,2],[3,16789909,0.352941,2],[3,11510063,0.905371,2],[3,11510063,0.87468,2],[3,16789909,0.230179,2],[3,7708574,1.304348,2],[3,105597,2.225064,2],[3,11510063,0.629156,2],[3,2851117,1.672634,2],[3,8975737,1.058824,2],[3,8975737,1.089514,2],[3,105597,2.439898,2],[3,8975737,1.181586,2],[3,8975737,1.212276,2],[3,527985,3.421995,2],[3,316791,2.654731,2],[3,105597,2.624041,2],[3,527985,3.360614,2],[3,527985,3.329923,2],[3,17423490,3.452685,2],[3,105597,2.654731,2],[3,17423490,2.930946,2],[3,105597,2.746803,2],[3,4751861,1.856777,2],[3,527985,3.237852,2],[3,950372,3.207161,2],[3,14677970,1.519182,2],[3,950372,3.14578,2],[3,14677970,1.488491,2],[3,2639923,0.936061,2],[3,11510063,1.826087,2],[3,16789909,2.102302,2],[3,16789909,2.071611,2],[3,2851117,1.365729,2],[3,2851117,1.396419,2],[3,18479459,2.225064,2],[3,11510063,1.641944,2],[3,16789909,1.795396,2],[3,2851117,1.549872,2],[3,11510063,1.519182,2],[3,16789909,1.580563,2],[3,11510063,1.396419,2],[3,12143645,0.138107,2],[3,17845878,2.961637,2],[3,16789909,1.396419,2],[3,16789909,1.335038,2],[3,11510063,1.335038,2],[3,11510063,1.273657,2],[3,16789909,1.212276,2],[3,11510063,1.212276,2],[3,16789909,0.997442,2],[3,14677970,1.764706,2],[3,16789909,0.813299,2],[3,16789909,0.721228,2],[3,11510063,1.058824,2],[3,16789909,0.598465,2],[3,16789909,0.445013,2],[3,16789909,0.414322,2],[3,2639923,3.667519,2],[3,12566032,1.273657,2],[3,1372760,2.624041,2],[3,12566032,1.304348,2],[3,1372760,2.716113,2],[3,1372760,2.746803,2],[3,8975737,1.826087,2],[3,12566032,1.519182,2],[3,12566032,1.549872,2],[3,12566032,1.580563,2],[3,7708574,1.519182,2],[3,14677970,1.089514,2],[3,12566032,1.948849,2],[3,1372760,3.237852,2],[3,8975737,2.163683,2],[3,12566032,2.132992,2],[3,1372760,3.391304,2],[3,8975737,2.194373,2],[3,14677970,1.028133,2],[3,8975737,2.286445,2],[3,8975737,2.317136,2],[3,12566032,2.378517,2],[3,14677970,0.936061,2],[3,12566032,2.470588,2],[3,11721257,1.335038,2],[3,11721257,1.365729,2],[3,12566032,2.531969,2],[3,12566032,2.56266,2],[3,12566032,2.654731,2],[3,12566032,2.746803,2],[3,527985,3.14578,2],[3,17845878,3.69821,2],[3,105597,3.053708,2],[3,14677970,1.396419,2],[3,12566032,0.659847,2],[3,1372760,0.966752,2],[3,14889164,0.352941,2],[3,12566032,0.721228,2],[3,14677970,1.335038,2],[3,14677970,1.304348,2],[3,1372760,1.304348,2],[3,1372760,1.365729,2],[3,1372760,1.457801,2],[3,12566032,0.84399,2],[3,11721257,1.212276,2],[3,1372760,1.519182,2],[3,950372,2.869565,2],[3,4751861,2.347826,2],[3,17845878,3.882353,2],[3,950372,2.777494,2],[3,1372760,1.948849,2],[3,1372760,1.97954,2],[3,8975737,1.611253,2],[3,17634684,3.237852,2],[3,1372760,2.409207,2],[3,12566032,1.212276,2],[3,1372760,2.501279,2],[3,8975737,1.672634,2],[3,4751861,2.378517,2],[3,10665288,2.163683,2],[3,18057071,1.42711,2],[3,10665288,1.887468,2],[3,10665288,1.826087,2],[3,10665288,1.734015,2],[3,10665288,1.672634,2],[3,18268265,2.961637,2],[3,15311552,2.808184,2],[3,14255583,2.838875,2],[3,2006341,0.721228,2],[3,14255583,2.746803,2],[3,18268265,2.746803,2],[3,15311552,2.961637,2],[3,18268265,2.716113,2],[3,17423490,1.304348,2],[3,15311552,3.053708,2],[3,18268265,2.685422,2],[3,18268265,2.624041,2],[3,15733939,4.772379,2],[3,2006341,1.304348,2],[3,13833195,0.751918,2],[3,13833195,0.782609,2],[3,2006341,1.396419,2],[3,18057071,1.335038,2],[3,2006341,1.457801,2],[3,6863799,2.961637,2],[3,6863799,4.035806,2],[3,9398125,3.176471,2],[3,17423490,1.519182,2],[3,9398125,3.237852,2],[3,9398125,3.268542,2],[3,5807830,3.11509,2],[3,5807830,3.14578,2],[3,5807830,3.237852,2],[3,5807830,3.329923,2],[3,6863799,3.943734,2],[3,7919768,2.040921,2],[3,5807830,3.606138,2],[3,6863799,3.790281,2],[3,15311552,1.918159,2],[3,15311552,2.132992,2],[3,6863799,3.544757,2],[3,14255583,3.974425,2],[3,5807830,4.588235,2],[3,5807830,4.83376,2],[3,14255583,3.882353,2],[3,15311552,2.286445,2],[3,6863799,3.237852,2],[3,6863799,3.207161,2],[3,15311552,2.439898,2],[3,10665288,2.378517,2],[3,14255583,3.421995,2],[3,10665288,2.225064,2],[3,15733939,2.685422,2],[3,15733939,2.56266,2],[3,6863799,2.654731,2],[3,6863799,2.624041,2],[3,15733939,2.286445,2],[3,13833195,2.501279,2],[3,15733939,2.225064,2],[3,13833195,2.531969,2],[3,14255583,2.317136,2],[3,6863799,2.501279,2],[3,17423490,1.150895,2],[3,15733939,1.856777,2],[3,15733939,1.703325,2],[3,15733939,1.641944,2],[3,6863799,2.409207,2],[3,17423490,1.089514,2],[3,15733939,1.396419,2],[3,3484698,2.470588,2],[3,15733939,1.181586,2],[3,15733939,1.120205,2],[3,15733939,1.089514,2],[3,10665288,1.150895,2],[3,15733939,0.936061,2],[3,10665288,1.120205,2],[3,15733939,0.751918,2],[3,15733939,0.690537,2],[3,6652605,1.795396,2],[3,13833195,1.028133,2],[3,13833195,1.089514,2],[3,2006341,1.764706,2],[3,15733939,4.097187,2],[3,14255583,2.59335,2],[3,15311552,3.237852,2],[3,2006341,1.948849,2],[3,13833195,1.181586,2],[3,13833195,1.304348,2],[3,6863799,2.869565,2],[3,13833195,1.335038,2],[3,15311552,3.329923,2],[3,14255583,2.531969,2],[3,13833195,1.549872,2],[3,2006341,2.317136,2],[3,13833195,1.795396,2],[3,17423490,1.273657,2],[3,13833195,1.887468,2],[3,15733939,3.084399,2],[3,13833195,1.918159,2],[3,13833195,1.948849,2],[3,13833195,2.01023,2],[3,13833195,2.040921,2],[3,17423490,1.242967,2],[3,14255583,2.439898,2],[3,13833195,2.132992,2],[3,13833195,2.163683,2],[3,15945133,1.365729,2],[3,15945133,1.273657,2],[3,13622001,1.242967,2],[3,15945133,1.150895,2],[3,15945133,1.120205,2],[3,13622001,1.273657,2],[3,13622001,1.365729,2],[3,6230218,1.304348,2],[3,15945133,0.782609,2],[3,15945133,0.721228,2],[3,15945133,0.598465,2],[3,15945133,0.567775,2],[3,15945133,0.537084,2],[3,15945133,0.506394,2],[3,13622001,1.641944,2],[3,15945133,0.322251,2],[3,15945133,0.230179,2],[3,15945133,0.168798,2],[3,13622001,1.918159,2],[3,6863799,5.662404,2],[3,18268265,3.084399,2],[3,13622001,2.01023,2],[3,6863799,5.539642,2],[3,6863799,5.386189,2],[3,18057071,2.01023,2],[3,6230218,1.058824,2],[3,18268265,3.391304,2],[3,5807830,0.84399,2],[3,5807830,0.87468,2],[3,15945133,3.023018,2],[3,15945133,2.900256,2],[3,6230218,1.580563,2],[3,6863799,6.122762,2],[3,13622001,0.26087,2],[3,18268265,3.268542,2],[3,6230218,1.519182,2],[3,6863799,6.061381,2],[3,13622001,0.445013,2],[3,13622001,0.475703,2],[3,13622001,0.506394,2],[3,15945133,2.255754,2],[3,13622001,0.721228,2],[3,15945133,2.040921,2],[3,15945133,1.97954,2],[3,15945133,1.826087,2],[3,15945133,1.764706,2],[3,6230218,1.488491,2],[3,13622001,1.028133,2],[3,15945133,1.580563,2],[3,15945133,1.519182,2],[3,13622001,1.181586,2],[3,15945133,1.42711,2],[3,15945133,1.396419,2],[3,9398125,1.611253,2],[3,9398125,1.672634,2],[3,13622001,3.851662,2],[3,9398125,1.734015,2],[3,7919768,1.703325,2],[3,9398125,1.795396,2],[3,13622001,4.005115,2],[3,5807830,1.672634,2],[3,5807830,1.764706,2],[3,9398125,2.01023,2],[3,9398125,2.071611,2],[3,15311552,1.150895,2],[3,9398125,2.225064,2],[3,5807830,1.856777,2],[3,9398125,2.317136,2],[3,5807830,1.948849,2],[3,7919768,1.795396,2],[3,7919768,1.826087,2],[3,5807830,2.071611,2],[3,9398125,2.624041,2],[3,9398125,2.654731,2],[3,5807830,2.163683,2],[3,6863799,4.219949,2],[3,9398125,2.838875,2],[3,5807830,2.317136,2],[3,18057071,1.580563,2],[3,5807830,2.654731,2],[3,6863799,5.263427,2],[3,13622001,2.286445,2],[3,13622001,2.317136,2],[3,17423490,1.918159,2],[3,6230218,1.028133,2],[3,6230218,0.997442,2],[3,7919768,1.519182,2],[3,5807830,1.304348,2],[3,5807830,1.335038,2],[3,13622001,2.654731,2],[3,13622001,2.716113,2],[3,17423490,1.856777,2],[3,18057071,1.856777,2],[3,8342156,1.365729,2],[3,13622001,2.961637,2],[3,8342156,1.150895,2],[3,13622001,3.11509,2],[3,8342156,0.629156,2],[3,9398125,0.936061,2],[3,13622001,3.452685,2],[3,13622001,3.544757,2],[3,13622001,3.575448,2],[3,9398125,1.304348,2],[3,7919768,1.672634,2],[3,5807830,1.611253,2],[3,9398125,1.549872,2],[3,739178,3.483376,2],[3,9609319,1.519182,2],[3,9609319,1.580563,2],[3,9609319,1.672634,2],[3,10454094,1.212276,2],[3,9609319,1.703325,2],[3,6019024,4.28133,2],[3,6019024,4.342711,2],[3,6019024,4.373402,2],[3,9609319,1.764706,2],[3,10454094,1.242967,2],[3,9609319,1.826087,2],[3,15522746,2.286445,2],[3,10454094,1.396419,2],[3,10454094,1.42711,2],[3,15522746,2.102302,2],[3,15522746,2.01023,2],[3,6019024,4.680307,2],[3,15522746,1.948849,2],[3,15522746,1.887468,2],[3,15522746,1.795396,2],[3,6019024,4.772379,2],[3,6019024,4.83376,2],[3,15522746,1.703325,2],[3,10454094,1.611253,2],[3,15522746,1.580563,2],[3,10454094,1.641944,2],[3,14044389,2.654731,2],[3,14044389,2.716113,2],[3,6019024,3.360614,2],[3,7919768,2.685422,2],[3,6019024,3.452685,2],[3,7919768,2.869565,2],[3,6652605,4.557545,2],[3,6652605,7.350384,2],[3,14044389,3.268542,2],[3,14044389,3.299233,2],[3,6019024,3.544757,2],[3,9609319,0.782609,2],[3,8553350,1.519182,2],[3,14044389,3.483376,2],[3,7919768,2.992327,2],[3,7919768,3.084399,2],[3,9609319,0.997442,2],[3,14044389,3.667519,2],[3,8553350,1.488491,2],[3,9609319,1.089514,2],[3,6019024,3.790281,2],[3,15522746,3.329923,2],[3,6019024,3.851662,2],[3,10454094,0.936061,2],[3,6019024,4.005115,2],[3,10454094,1.058824,2],[3,8553350,1.365729,2],[3,8553350,1.120205,2],[3,17423490,0.690537,2],[3,17423490,0.782609,2],[3,2217535,1.150895,2],[3,2217535,1.181586,2],[3,2217535,1.212276,2],[3,2217535,1.396419,2],[3,2217535,1.42711,2],[3,2217535,1.488491,2],[3,3273504,1.549872,2],[3,2217535,1.641944,2],[3,18268265,0.567775,2],[3,3273504,1.365729,2],[3,2217535,1.826087,2],[3,10454094,2.624041,2],[3,2217535,2.01023,2],[3,2217535,2.040921,2],[3,3273504,0.537084,2],[3,3273504,1.150895,2],[3,10454094,2.378517,2],[3,3273504,0.966752,2],[3,9609319,3.176471,2],[3,3273504,0.659847,2],[3,3273504,0.782609,2],[3,3273504,0.751918,2],[3,3273504,0.721228,2],[3,3273504,0.690537,2],[3,15522746,1.519182,2],[3,15522746,1.457801,2],[3,10454094,1.672634,2],[3,10454094,1.703325,2],[3,15522746,1.181586,2],[3,15522746,1.089514,2],[3,7919768,3.237852,2],[3,9609319,2.255754,2],[3,15522746,0.936061,2],[3,15522746,0.87468,2],[3,6019024,5.815857,2],[3,15522746,0.690537,2],[3,10454094,1.948849,2],[3,15522746,0.506394,2],[3,15522746,0.445013,2],[3,15522746,0.414322,2],[3,15522746,0.383632,2],[3,10454094,2.040921,2],[3,10454094,2.071611,2],[3,9609319,2.501279,2],[3,17423490,0.445013,2],[3,10454094,2.347826,2],[3,18268265,0.230179,2],[3,18057071,0.659847,2],[3,18057071,0.813299,2],[3,3273504,1.764706,2],[3,18268265,0.352941,2],[3,3484698,1.181586,2],[3,14255583,1.856777,2],[3,3484698,1.058824,2],[3,6652605,2.439898,2],[3,6863799,0.751918,2],[3,6863799,0.721228,2],[3,14255583,1.703325,2],[3,3484698,0.87468,2],[3,3484698,0.813299,2],[3,3484698,0.690537,2],[3,18268265,2.225064,2],[3,3484698,0.537084,2],[3,6652605,2.59335,2],[3,7919768,3.452685,2],[3,8130962,2.838875,2],[3,6652605,2.716113,2],[3,18268265,1.826087,2],[3,7919768,3.391304,2],[3,18268265,1.703325,2],[3,14255583,1.580563,2],[3,14255583,1.519182,2],[3,18268265,1.549872,2],[3,14255583,1.488491,2],[3,18268265,1.457801,2],[3,6652605,2.900256,2],[3,18268265,1.150895,2],[3,6652605,1.826087,2],[3,6652605,1.856777,2],[3,18268265,2.439898,2],[3,14255583,2.163683,2],[3,15733939,0.414322,2],[3,14255583,2.132992,2],[3,6652605,2.01023,2],[3,14255583,2.102302,2],[3,6652605,2.071611,2],[3,10665288,0.905371,2],[3,6652605,2.132992,2],[3,3484698,1.826087,2],[3,6863799,2.225064,2],[3,10665288,0.84399,2],[3,3484698,1.703325,2],[3,3484698,1.672634,2],[3,3484698,1.641944,2],[3,3484698,1.611253,2],[3,14255583,2.071611,2],[3,3484698,1.580563,2],[3,3484698,1.519182,2],[3,6863799,1.795396,2],[3,6863799,1.764706,2],[3,3484698,1.42711,2],[3,3484698,1.396419,2],[3,3484698,1.304348,2],[3,6652605,2.286445,2],[3,18268265,1.058824,2],[3,14255583,0.905371,2],[3,7919768,2.255754,2],[3,18268265,0.997442,2],[3,14044389,0.352941,2],[3,18268265,0.782609,2],[3,14044389,0.629156,2],[3,14044389,0.782609,2],[3,14044389,0.87468,2],[3,14044389,1.058824,2],[3,15522746,6.030691,2],[3,6652605,8.424552,2],[3,14044389,1.519182,2],[3,14044389,1.580563,2],[3,14044389,1.611253,2],[3,7919768,2.378517,2],[3,14044389,1.856777,2],[3,14044389,1.918159,2],[3,14044389,1.97954,2],[3,7919768,2.439898,2],[3,6652605,3.974425,2],[3,14044389,2.163683,2],[3,6019024,3.084399,2],[3,14044389,2.317136,2],[3,6019024,3.14578,2],[3,8553350,1.641944,2],[3,15522746,4.649616,2],[3,6652605,2.992327,2],[3,6019024,0.659847,2],[3,6019024,0.690537,2],[3,14255583,1.335038,2],[3,6019024,0.751918,2],[3,6019024,0.813299,2],[3,6019024,0.84399,2],[3,6019024,0.87468,2],[3,14255583,1.273657,2],[3,6019024,0.966752,2],[3,6019024,1.120205,2],[3,6019024,1.181586,2],[3,6019024,1.212276,2],[3,6019024,1.365729,2],[3,6019024,1.457801,2],[3,6652605,3.360614,2],[3,6652605,3.421995,2],[3,6019024,2.194373,2],[3,14255583,1.028133,2],[3,6019024,2.286445,2],[3,6019024,2.409207,2],[3,6019024,2.439898,2],[3,6019024,2.470588,2],[3,14255583,0.966752,2],[3,6019024,2.716113,2],[3,6019024,2.838875,2],[3,6019024,2.869565,2],[3,3062310,1.42711,2],[3,15945133,5.938619,2],[3,8130962,1.826087,2],[3,6230218,2.56266,2],[3,3062310,1.181586,2],[3,8130962,1.764706,2],[3,3062310,1.120205,2],[3,739178,2.685422,2],[3,8130962,1.641944,2],[3,3062310,0.905371,2],[3,10876482,0.87468,2],[3,3062310,0.84399,2],[3,3062310,0.782609,2],[3,10876482,1.120205,2],[3,10876482,1.273657,2],[3,739178,2.531969,2],[3,10876482,1.549872,2],[3,10876482,1.580563,2],[3,3062310,0.567775,2],[3,10876482,1.734015,2],[3,15945133,7.534527,2],[3,10876482,2.01023,2],[3,3062310,0.352941,2],[3,10876482,2.132992,2],[3,15945133,7.902813,2],[3,10876482,2.409207,2],[3,6230218,1.887468,2],[3,3695892,0.659847,2],[3,15945133,4.158568,2],[3,3695892,0.782609,2],[3,3695892,0.813299,2],[3,3695892,0.87468,2],[3,6230218,1.918159,2],[3,3695892,0.966752,2],[3,3695892,1.058824,2],[3,3062310,2.102302,2],[3,6230218,2.102302,2],[3,15945133,4.803069,2],[3,15945133,4.86445,2],[3,3062310,1.97954,2],[3,3695892,1.457801,2],[3,3695892,1.641944,2],[3,6230218,2.194373,2],[3,3695892,1.887468,2],[3,15945133,5.324808,2],[3,6863799,7.503836,2],[3,6863799,7.534527,2],[3,6230218,2.286445,2],[3,3695892,2.040921,2],[3,3062310,1.672634,2],[3,3062310,1.611253,2],[3,15945133,5.815857,2],[3,8130962,1.918159,2],[3,13410807,1.672634,2],[3,14466777,1.304348,2],[3,13410807,1.580563,2],[3,13410807,1.549872,2],[3,1795147,1.641944,2],[3,14466777,1.335038,2],[3,13410807,1.396419,2],[3,13410807,1.365729,2],[3,13410807,1.335038,2],[3,14466777,1.365729,2],[3,13410807,1.273657,2],[3,1795147,1.457801,2],[3,18268265,4.680307,2],[3,8342156,1.42711,2],[3,1795147,1.335038,2],[3,13410807,1.120205,2],[3,15945133,10.112532,2],[3,1795147,1.181586,2],[3,14466777,1.42711,2],[3,739178,2.409207,2],[3,739178,2.378517,2],[3,1795147,1.058824,2],[3,1795147,1.028133,2],[3,14466777,1.457801,2],[3,1795147,0.84399,2],[3,1795147,0.721228,2],[3,13410807,5.294118,2],[3,8553350,2.378517,2],[3,10876482,2.869565,2],[3,7919768,1.028133,2],[3,316791,0.721228,2],[3,13410807,3.820972,2],[3,13410807,3.69821,2],[3,13410807,3.452685,2],[3,13410807,3.268542,2],[3,13410807,3.14578,2],[3,14466777,0.782609,2],[3,14466777,0.813299,2],[3,13410807,2.900256,2],[3,14466777,0.84399,2],[3,13410807,2.746803,2],[3,13410807,2.409207,2],[3,13410807,2.347826,2],[3,1795147,2.163683,2],[3,1795147,2.132992,2],[3,14466777,1.150895,2],[3,14466777,1.181586,2],[3,14466777,1.212276,2],[3,14466777,1.242967,2],[3,13410807,1.826087,2],[3,13410807,1.795396,2],[3,13410807,1.734015,2],[3,1795147,1.764706,2],[3,739178,3.023018,2],[3,6863799,6.613811,2],[3,15945133,3.514066,2],[3,739178,2.900256,2],[3,15945133,3.544757,2],[3,6230218,1.672634,2],[3,18268265,3.667519,2],[3,15945133,3.575448,2],[3,5807830,0.690537,2],[3,6230218,1.764706,2],[3,5807830,0.598465,2],[3,10454094,0.84399,3],[3,12143645,1.304348,3],[3,11510063,0.751918,3],[3,16789909,0.966752,3],[3,6652605,4.86445,3],[3,11510063,0.84399,3],[3,10665288,1.365729,3],[3,6652605,1.519182,3],[3,9609319,1.181586,3],[3,7497381,1.242967,3],[3,11087675,0.322251,3],[3,12143645,1.42711,3],[3,15733939,1.672634,3],[3,11510063,0.936061,3],[3,6441411,2.040921,3],[3,11510063,1.150895,3],[3,15733939,1.826087,3],[3,16789909,0.475703,3],[3,11510063,0.966752,3],[3,16789909,0.537084,3],[3,11510063,0.997442,3],[3,16156327,1.457801,3],[3,7708574,1.273657,3],[3,15733939,1.734015,3],[3,10876482,1.181586,3],[3,11510063,1.089514,3],[3,6230218,1.611253,3],[3,527985,3.11509,3],[3,5807830,0.966752,3],[3,10454094,0.966752,3],[3,6863799,2.716113,3],[3,15733939,2.930946,3],[3,8342156,2.378517,3],[3,12143645,0.629156,3],[3,1372760,0.537084,3],[3,11087675,0.537084,3],[3,12566032,0.26087,3],[3,12143645,0.813299,3],[3,6652605,1.335038,3],[3,6863799,2.685422,3],[3,3062310,0.721228,3],[3,18057071,1.150895,3],[3,10665288,1.42711,3],[3,16156327,6.153453,3],[3,105597,2.59335,3],[3,8342156,2.317136,3],[3,14677970,1.641944,3],[3,12143645,0.936061,3],[3,6652605,1.488491,3],[3,5807830,1.028133,3],[3,12143645,1.058824,3],[3,15945133,6.797954,3],[3,10876482,1.150895,3],[3,7497381,1.181586,3],[3,10454094,0.87468,3],[3,15733939,2.132992,3],[3,3484698,2.685422,3],[3,17845878,0.813299,3],[3,16789909,2.347826,3],[3,17845878,1.42711,3],[3,11510063,2.040921,3],[3,15733939,0.813299,3],[3,12143645,2.163683,3],[3,15945133,2.56266,3],[3,6652605,1.764706,3],[3,6441411,2.501279,3],[3,527985,3.606138,3],[3,9820513,0.87468,3],[3,15945133,7.074169,3],[3,8130962,1.580563,3],[3,15733939,0.537084,3],[3,16789909,2.777494,3],[3,15945133,2.992327,3],[3,2851117,1.181586,3],[3,15733939,0.475703,3],[3,17845878,2.654731,3],[3,15733939,0.445013,3],[3,2851117,1.150895,3],[3,17845878,2.624041,3],[3,2428729,1.028133,3],[3,105597,2.040921,3],[3,15522746,3.974425,3],[3,105597,2.01023,3],[3,6652605,1.918159,3],[3,105597,1.948849,3],[3,105597,1.918159,3],[3,3062310,0.629156,3],[3,16789909,1.028133,3],[3,12143645,1.641944,3],[3,7497381,2.194373,3],[3,11510063,1.242967,3],[3,10242900,2.838875,3],[3,16789909,1.242967,3],[3,12143645,1.734015,3],[3,9609319,1.150895,3],[3,10665288,1.242967,3],[3,16789909,1.365729,3],[3,9609319,1.120205,3],[3,3062310,0.690537,3],[3,17845878,1.242967,3],[3,16789909,1.549872,3],[3,15945133,9.621483,3],[3,17423490,1.058824,3],[3,16156327,1.611253,3],[3,6441411,1.97954,3],[3,16789909,1.887468,3],[3,17423490,2.409207,3],[3,15733939,1.058824,3],[3,16789909,2.01023,3],[3,7919768,3.053708,3],[3,15733939,0.997442,3],[3,16789909,2.132992,3],[3,16789909,2.194373,3],[3,11510063,1.856777,3],[3,10876482,1.242967,3],[3,15733939,0.87468,3],[3,2851117,1.335038,3],[3,14677970,0.84399,3],[3,17423490,0.199488,3],[3,9609319,1.918159,3],[3,7074993,1.150895,3],[3,3907086,0.782609,3],[3,13199614,1.703325,3],[3,12566032,2.439898,3],[3,10242900,2.59335,3],[3,13833195,0.87468,3],[3,14677970,0.966752,3],[3,10454094,1.365729,3],[3,10454094,1.304348,3],[3,2639923,1.089514,3],[3,2006341,1.580563,3],[3,13833195,0.997442,3],[3,11087675,1.918159,3],[3,18268265,3.360614,3],[3,15311552,3.176471,3],[3,14889164,0.414322,3],[3,12566032,2.102302,3],[3,10454094,1.273657,3],[3,6230218,1.795396,3],[3,12566032,1.887468,3],[3,4751861,2.071611,3],[3,2006341,1.734015,3],[3,16367521,2.194373,3],[3,2006341,1.795396,3],[3,16156327,0.997442,3],[3,2006341,1.856777,3],[3,12566032,1.488491,3],[3,3695892,3.360614,3],[3,9609319,2.102302,3],[3,16367521,2.409207,3],[3,2639923,1.396419,3],[3,15100358,0.138107,3],[3,18057071,1.396419,3],[3,13622001,0.629156,3],[3,7074993,1.335038,3],[3,316791,1.918159,3],[3,14255583,2.685422,3],[3,14889164,0.751918,3],[3,2006341,0.997442,3],[3,16367521,2.347826,3],[3,11721257,1.641944,3],[3,6863799,3.053708,3],[3,2006341,1.058824,3],[3,9820513,1.42711,3],[3,12566032,4.219949,3],[3,316791,2.378517,3],[3,16156327,0.782609,3],[3,2639923,1.273657,3],[3,12566032,3.514066,3],[3,12566032,3.360614,3],[3,2006341,1.120205,3],[3,527985,1.97954,3],[3,6230218,2.470588,3],[3,739178,1.764706,3],[3,2006341,1.242967,3],[3,14677970,0.751918,3],[3,14677970,0.782609,3],[3,4751861,1.641944,3],[3,6230218,1.734015,3],[3,12566032,0.936061,3],[3,739178,1.734015,3],[3,527985,2.992327,3],[3,1372760,1.641944,3],[3,13199614,2.132992,3],[3,4751861,1.549872,3],[3,8342156,2.59335,3],[3,6652605,1.150895,3],[3,17423490,3.514066,3],[3,13833195,1.672634,3],[3,1372760,1.42711,3],[3,9820513,1.734015,3],[3,13833195,1.703325,3],[3,16156327,1.212276,3],[3,6652605,1.212276,3],[3,1372760,1.273657,3],[3,13833195,1.764706,3],[3,11087675,0.659847,3],[3,950372,2.992327,3],[3,6019024,4.158568,3],[3,1372760,1.120205,3],[3,18479459,2.286445,3],[3,9609319,1.611253,3],[3,8342156,2.470588,3],[3,1372760,0.997442,3],[3,11087675,0.598465,3],[3,8975737,1.457801,3],[3,16156327,1.242967,3],[3,12566032,1.457801,3],[3,2639923,0.966752,3],[3,12566032,1.396419,3],[3,13199614,1.948849,3],[3,4751861,1.948849,3],[3,6863799,2.900256,3],[3,9820513,1.365729,3],[3,8975737,1.764706,3],[3,16367521,2.132992,3],[3,9820513,1.335038,3],[3,13833195,1.212276,3],[3,13833195,1.242967,3],[3,10665288,1.611253,3],[3,4751861,1.918159,3],[3,1372760,2.439898,3],[3,13410807,1.242967,3],[3,3907086,0.87468,3],[3,9820513,1.304348,3],[3,4751861,1.826087,3],[3,1372760,2.286445,3],[3,10665288,1.580563,3],[3,1372760,2.225064,3],[3,1372760,2.132992,3],[3,12566032,0.997442,3],[3,8975737,1.519182,3],[3,6863799,2.838875,3],[3,4751861,1.672634,3],[3,6863799,2.808184,3],[3,1372760,1.887468,3],[3,12566032,0.966752,3],[3,316791,0.87468,3],[3,5596636,2.347826,3],[3,14255583,1.304348,3],[3,16156327,3.606138,3],[3,105597,1.273657,3],[3,105597,1.212276,3],[3,14044389,1.488491,3],[3,2428729,1.948849,3],[3,14044389,1.42711,3],[3,105597,1.120205,3],[3,17001102,1.764706,3],[3,16156327,3.483376,3],[3,6019024,0.997442,3],[3,5174249,1.519182,3],[3,6652605,3.14578,3],[3,14044389,1.335038,3],[3,5174249,1.42711,3],[3,5174249,1.396419,3],[3,9820513,0.782609,3],[3,16156327,2.59335,3],[3,14466777,0.966752,3],[3,5174249,1.150895,3],[3,6019024,1.273657,3],[3,14255583,1.242967,3],[3,7919768,2.317136,3],[3,13410807,2.59335,3],[3,5174249,0.84399,3],[3,5174249,0.813299,3],[3,6441411,3.023018,3],[3,17001102,1.212276,3],[3,16367521,1.580563,3],[3,18268265,1.611253,3],[3,739178,1.488491,3],[3,6441411,2.808184,3],[3,10031706,1.335038,3],[3,10242900,3.421995,3],[3,5596636,2.132992,3],[3,10242900,2.194373,3],[3,18268265,1.365729,3],[3,12354838,1.611253,3],[3,5596636,2.163683,3],[3,6441411,1.549872,3],[3,14044389,1.795396,3],[3,12354838,1.488491,3],[3,6019024,0.29156,3],[3,6652605,2.961637,3],[3,12354838,1.365729,3],[3,10031706,1.150895,3],[3,6019024,2.961637,3],[3,12354838,1.181586,3],[3,14044389,1.641944,3],[3,12143645,3.790281,3],[3,10031706,1.028133,3],[3,4751861,1.058824,3],[3,8553350,1.826087,3],[3,16367521,1.120205,3],[3,12354838,0.751918,3],[3,16367521,1.519182,3],[3,5596636,0.690537,3],[3,16156327,2.531969,3],[3,18479459,1.580563,3],[3,6019024,2.163683,3],[3,11721257,0.84399,3],[3,5807830,0.445013,3],[3,11721257,0.936061,3],[3,14044389,0.414322,3],[3,6019024,2.347826,3],[3,6019024,2.378517,3],[3,16156327,3.14578,3],[3,6019024,2.501279,3],[3,18479459,1.764706,3],[3,1161566,3.023018,3],[3,6019024,2.531969,3],[3,7919768,2.225064,3],[3,18479459,1.795396,3],[3,2428729,1.734015,3],[3,6019024,2.624041,3],[3,6019024,2.654731,3],[3,6019024,2.685422,3],[3,6441411,1.457801,3],[3,1161566,2.716113,3],[3,105597,0.997442,3],[3,9820513,0.659847,3],[3,16156327,2.869565,3],[3,6441411,3.207161,3],[3,2428729,1.672634,3],[3,4751861,0.475703,3],[3,17845878,1.764706,3],[3,6019024,2.900256,3],[3,4751861,0.567775,3],[3,4751861,0.84399,3],[3,18479459,0.690537,3],[3,6652605,3.207161,3],[3,17001102,1.150895,3],[3,18479459,0.782609,3],[3,4751861,0.813299,3],[3,14044389,0.966752,3],[3,14255583,1.212276,3],[3,6441411,0.690537,3],[3,17001102,0.997442,3],[3,6019024,1.611253,3],[3,14255583,1.181586,3],[3,2428729,1.519182,3],[3,6441411,3.790281,3],[3,6441411,0.905371,3],[3,6019024,1.703325,3],[3,6019024,1.764706,3],[3,16367521,1.42711,3],[3,6441411,0.997442,3],[3,14044389,0.721228,3],[3,4751861,0.751918,3],[3,18479459,1.212276,3],[3,18479459,1.242967,3],[3,18479459,1.304348,3],[3,18479459,1.335038,3],[3,18479459,1.396419,3],[3,6019024,2.040921,3],[3,6441411,1.058824,3],[3,6019024,2.132992,3],[3,6441411,1.181586,3],[3,18479459,1.549872,3],[3,12143645,2.624041,3],[3,13410807,1.918159,3],[3,13410807,1.948849,3],[3,12143645,2.716113,3],[3,12143645,2.746803,3],[3,3484698,1.549872,3],[3,7497381,2.102302,3],[3,7286187,0.966752,3],[3,3907086,1.887468,3],[3,7286187,1.058824,3],[3,7286187,1.089514,3],[3,17845878,2.01023,3],[3,8553350,1.580563,3],[3,8553350,1.611253,3],[3,5596636,1.580563,3],[3,6863799,1.734015,3],[3,14255583,2.040921,3],[3,6863799,1.641944,3],[3,6863799,1.611253,3],[3,6863799,1.580563,3],[3,7286187,1.488491,3],[3,7286187,1.519182,3],[3,10876482,1.826087,3],[3,13622001,0.076726,3],[3,14255583,0.352941,3],[3,14255583,1.97954,3],[3,12143645,2.961637,3],[3,7286187,1.734015,3],[3,1161566,2.132992,3],[3,6863799,1.365729,3],[3,2851117,1.089514,3],[3,16789909,3.299233,3],[3,1161566,1.42711,3],[3,11087675,2.624041,3],[3,5596636,1.273657,3],[3,4540667,0.629156,3],[3,12143645,2.439898,3],[3,16156327,5.140665,3],[3,16367521,0.84399,3],[3,105597,1.703325,3],[3,4540667,0.997442,3],[3,15733939,0.138107,3],[3,6652605,2.102302,3],[3,4540667,1.028133,3],[3,16367521,1.887468,3],[3,7919768,2.808184,3],[3,4540667,1.120205,3],[3,15733939,0.046036,3],[3,17845878,2.347826,3],[3,16367521,0.905371,3],[3,11087675,3.023018,3],[3,2851117,0.905371,3],[3,12143645,2.59335,3],[3,3484698,1.795396,3],[3,13199614,3.69821,3],[3,10876482,1.672634,3],[3,6863799,2.163683,3],[3,5596636,1.457801,3],[3,2851117,0.782609,3],[3,10876482,1.703325,3],[3,1161566,2.347826,3],[3,3484698,0.629156,3],[3,16156327,4.250639,3],[3,5174249,2.132992,3],[3,6230218,3.053708,3],[3,17001102,2.716113,3],[3,4751861,1.273657,3],[3,6652605,2.624041,3],[3,10031706,2.01023,3],[3,5596636,0.966752,3],[3,4751861,1.242967,3],[3,18268265,2.01023,3],[3,10031706,1.856777,3],[3,5596636,2.01023,3],[3,12354838,2.470588,3],[3,18268265,1.918159,3],[3,12354838,2.409207,3],[3,14044389,2.071611,3],[3,10031706,1.672634,3],[3,5174249,1.918159,3],[3,10242900,2.132992,3],[3,16156327,4.066496,3],[3,10242900,2.225064,3],[3,7919768,1.273657,3],[3,12354838,2.132992,3],[3,316791,0.905371,3],[3,14044389,1.948849,3],[3,18268265,1.672634,3],[3,10031706,1.457801,3],[3,12354838,1.948849,3],[3,7286187,1.826087,3],[3,6863799,1.335038,3],[3,7286187,1.887468,3],[3,6441411,2.654731,3],[3,14255583,0.445013,3],[3,6863799,1.212276,3],[3,7286187,2.040921,3],[3,5596636,1.703325,3],[3,6863799,1.120205,3],[3,3484698,1.212276,3],[3,16367521,0.997442,3],[3,3062310,0.414322,3],[3,12143645,3.14578,3],[3,1161566,2.194373,3],[3,6863799,0.905371,3],[3,14255583,0.506394,3],[3,739178,1.457801,3],[3,17001102,2.930946,3],[3,10876482,2.071611,3],[3,9820513,1.918159,3],[3,3484698,0.966752,3],[3,14255583,1.826087,3],[3,14255583,1.795396,3],[3,14255583,1.734015,3],[3,17001102,2.900256,3],[3,17001102,2.869565,3],[3,13410807,2.132992,3],[3,10031706,2.286445,3],[3,12143645,3.299233,3],[3,16156327,4.28133,3],[3,6652605,2.56266,3],[3,17634684,1.457801,3],[3,16367521,3.023018,3],[3,13410807,0.84399,3],[3,11087675,0.936061,3],[3,527985,1.242967,3],[3,14889164,1.457801,3],[3,17212296,0.721228,3],[3,17634684,1.580563,3],[3,17634684,1.611253,3],[3,11087675,0.87468,3],[3,11298869,0.690537,3],[3,11298869,0.997442,3],[3,105597,0.87468,3],[3,6230218,0.936061,3],[3,739178,2.163683,3],[3,11932451,0.87468,3],[3,11932451,0.936061,3],[3,17212296,0.383632,3],[3,15100358,3.053708,3],[3,11298869,1.335038,3],[3,7497381,0.84399,3],[3,6863799,4.83376,3],[3,11932451,1.028133,3],[3,17634684,1.764706,3],[3,18057071,0.905371,3],[3,11932451,1.120205,3],[3,11298869,1.549872,3],[3,11932451,1.150895,3],[3,2217535,0.751918,3],[3,12988420,1.304348,3],[3,2217535,1.089514,3],[3,950372,1.181586,3],[3,1795147,0.905371,3],[3,316791,1.212276,3],[3,17634684,1.212276,3],[3,17423490,0.751918,3],[3,12988420,0.997442,3],[3,6230218,1.120205,3],[3,17634684,1.273657,3],[3,12988420,0.84399,3],[3,12988420,0.813299,3],[3,12988420,0.782609,3],[3,17212296,1.150895,3],[3,12988420,0.721228,3],[3,2217535,0.997442,3],[3,12988420,0.659847,3],[3,12988420,0.598465,3],[3,2217535,0.936061,3],[3,17212296,0.966752,3],[3,12988420,0.352941,3],[3,17634684,1.42711,3],[3,12988420,0.26087,3],[3,12988420,0.230179,3],[3,5807830,0.383632,3],[3,950372,1.058824,3],[3,17212296,0.936061,3],[3,15100358,3.299233,3],[3,17212296,0.905371,3],[3,316791,1.365729,3],[3,11932451,1.672634,3],[3,9398125,0.905371,3],[3,527985,1.058824,3],[3,18057071,1.058824,3],[3,6230218,2.01023,3],[3,13622001,3.483376,3],[3,13622001,3.514066,3],[3,9398125,1.150895,3],[3,5385442,2.808184,3],[3,3695892,1.181586,3],[3,9186931,1.304348,3],[3,13622001,3.606138,3],[3,8130962,1.089514,3],[3,11932451,1.856777,3],[3,6230218,4.404092,3],[3,13622001,3.667519,3],[3,14889164,3.084399,3],[3,18057071,0.598465,3],[3,15100358,1.948849,3],[3,9398125,1.519182,3],[3,11932451,2.040921,3],[3,11932451,2.071611,3],[3,12777226,2.716113,3],[3,11932451,2.102302,3],[3,9398125,1.641944,3],[3,5807830,0.168798,3],[3,16578715,0.138107,3],[3,7074993,2.286445,3],[3,5385442,2.255754,3],[3,18057071,0.475703,3],[3,950372,0.813299,3],[3,5807830,1.42711,3],[3,11298869,1.734015,3],[3,11932451,1.242967,3],[3,18057071,0.87468,3],[3,13622001,2.838875,3],[3,5807830,1.457801,3],[3,15311552,0.506394,3],[3,13622001,2.930946,3],[3,6863799,4.496164,3],[3,6230218,1.948849,3],[3,9186931,1.089514,3],[3,15311552,0.537084,3],[3,8342156,1.242967,3],[3,1795147,0.997442,3],[3,17423490,1.795396,3],[3,13622001,0.87468,3],[3,2217535,0.659847,3],[3,8342156,1.120205,3],[3,18057071,0.782609,3],[3,9398125,0.537084,3],[3,18057071,1.826087,3],[3,11932451,1.488491,3],[3,11932451,1.519182,3],[3,5807830,1.519182,3],[3,6230218,3.851662,3],[3,5385442,3.268542,3],[3,15311552,0.751918,3],[3,12777226,3.943734,3],[3,13622001,3.299233,3],[3,3695892,0.690537,3],[3,15945133,1.335038,3],[3,15945133,1.304348,3],[3,10242900,1.795396,3],[3,527985,1.734015,3],[3,6230218,1.365729,3],[3,9820513,2.317136,3],[3,11087675,1.365729,3],[3,1795147,0.506394,3],[3,15945133,1.181586,3],[3,13410807,0.506394,3],[3,13622001,1.304348,3],[3,17634684,1.058824,3],[3,4963055,1.150895,3],[3,3273504,0.506394,3],[3,15945133,0.997442,3],[3,1583954,2.501279,3],[3,3273504,1.304348,3],[3,17212296,2.531969,3],[3,12988420,3.053708,3],[3,12988420,3.023018,3],[3,316791,0.966752,3],[3,12988420,2.961637,3],[3,12988420,2.930946,3],[3,17212296,2.439898,3],[3,5807830,1.150895,3],[3,1583954,2.132992,3],[3,18268265,3.790281,3],[3,17212296,2.378517,3],[3,15945133,1.948849,3],[3,7708574,2.040921,3],[3,4118279,0.905371,3],[3,8342156,1.488491,3],[3,1795147,0.751918,3],[3,14889164,1.948849,3],[3,13622001,0.905371,3],[3,14889164,1.918159,3],[3,13410807,0.629156,3],[3,3273504,0.813299,3],[3,18479459,3.176471,3],[3,11087675,1.764706,3],[3,3273504,0.84399,3],[3,8342156,1.519182,3],[3,10242900,1.948849,3],[3,4118279,1.335038,3],[3,8130962,1.42711,3],[3,6230218,1.457801,3],[3,11087675,1.672634,3],[3,13622001,1.058824,3],[3,2217535,2.225064,3],[3,8130962,1.335038,3],[3,6230218,1.396419,3],[3,4118279,1.580563,3],[3,4118279,1.611253,3],[3,11087675,1.549872,3],[3,4118279,1.672634,3],[3,4118279,1.703325,3],[3,3273504,0.567775,3],[3,7708574,2.286445,3],[3,14889164,2.654731,3],[3,1583954,0.87468,3],[3,17212296,1.672634,3],[3,18268265,0.506394,3],[3,527985,2.317136,3],[3,6230218,1.273657,3],[3,12988420,2.132992,3],[3,527985,2.378517,3],[3,527985,1.457801,3],[3,15945133,0.199488,3],[3,17212296,1.549872,3],[3,5807830,1.242967,3],[3,10242900,0.813299,3],[3,13622001,1.734015,3],[3,17423490,0.84399,3],[3,12988420,1.856777,3],[3,13622001,1.764706,3],[3,15945133,0.015345,3],[3,527985,2.685422,3],[3,13622001,1.795396,3],[3,9820513,2.808184,3],[3,12988420,1.703325,3],[3,316791,1.058824,3],[3,18057071,2.163683,3],[3,527985,1.42711,3],[3,950372,1.242967,3],[3,12988420,1.519182,3],[3,739178,2.225064,3],[3,11087675,1.058824,3],[3,17634684,1.181586,3],[3,8130962,1.304348,3],[3,2217535,1.764706,3],[3,17423490,0.905371,3],[3,10242900,1.273657,3],[3,1583954,1.887468,3],[3,8342156,1.641944,3],[3,8130962,1.273657,3],[3,15945133,0.659847,3],[3,4963055,1.457801,3],[3,14889164,1.611253,3],[3,15945133,0.629156,3],[3,3273504,0.352941,3],[3,950372,1.335038,3],[3,11087675,1.181586,3],[3,8130962,1.242967,3],[3,2217535,1.519182,3],[3,13622001,1.549872,3],[3,15945133,3.299233,3],[3,13622001,1.580563,3],[3,12988420,2.470588,3],[3,15945133,0.414322,3],[3,10242900,1.058824,3],[3,1583954,1.273657,3],[3,14889164,1.580563,3],[3,17634684,1.120205,3],[3,1583954,1.120205,3],[3,527985,2.286445,3],[3,13410807,0.352941,3],[3,13410807,0.322251,3],[3,527985,1.488491,3],[3,739178,1.97954,3],[3,16578715,2.01023,3],[3,15100358,1.365729,3],[3,13199614,1.273657,3],[3,12777226,0.721228,3],[3,4329473,0.445013,3],[3,16156327,0.322251,3],[3,15522746,1.488491,3],[3,5385442,1.641944,3],[3,9820513,3.7289,3],[3,2639923,1.672634,3],[3,2639923,1.703325,3],[3,15522746,0.567775,3],[3,4329473,1.242967,3],[3,5807830,2.040921,3],[3,6863799,3.329923,3],[3,3907086,0.506394,3],[3,4329473,1.150895,3],[3,13199614,1.028133,3],[3,7074993,1.918159,3],[3,7919768,1.887468,3],[3,16156327,0.537084,3],[3,2639923,1.887468,3],[3,2639923,2.163683,3],[3,10454094,1.764706,3],[3,2639923,2.132992,3],[3,13410807,1.089514,3],[3,15311552,1.703325,3],[3,7919768,2.01023,3],[3,10454094,2.01023,3],[3,17423490,1.580563,3],[3,6019024,5.723785,3],[3,15311552,1.242967,3],[3,16578715,1.795396,3],[3,15733939,6.398977,3],[3,15522746,1.120205,3],[3,12777226,1.734015,3],[3,13199614,1.120205,3],[3,17634684,1.887468,3],[3,10242900,2.071611,3],[3,7919768,1.734015,3],[3,16578715,1.918159,3],[3,3695892,1.488491,3],[3,16578715,2.501279,3],[3,8764543,1.42711,3],[3,15522746,0.751918,3],[3,13410807,1.028133,3],[3,6863799,4.189258,3],[3,12777226,0.966752,3],[3,12777226,1.335038,3],[3,15311552,1.488491,3],[3,13199614,1.335038,3],[3,16578715,2.746803,3],[3,739178,1.887468,3],[3,5807830,0.107417,3],[3,9186931,2.685422,3],[3,18057071,1.611253,3],[3,18268265,3.974425,3],[3,12777226,1.150895,3],[3,15522746,0.905371,3],[3,12777226,1.120205,3],[3,4329473,0.721228,3],[3,12777226,0.997442,3],[3,2639923,1.795396,3],[3,15522746,0.997442,3],[3,7497381,1.058824,3],[3,12777226,1.580563,3],[3,13410807,1.058824,3],[3,3695892,1.580563,3],[3,4329473,1.120205,3],[3,7074993,1.826087,3],[3,3907086,0.445013,3],[3,13199614,1.42711,3],[3,5807830,4.772379,3],[3,5596636,0.87468,3],[3,16578715,2.317136,3],[3,5807830,2.132992,3],[3,12777226,0.905371,3],[3,7497381,0.87468,3],[3,17845878,0.107417,3],[3,12777226,1.396419,3],[3,3695892,1.703325,3],[3,1795147,1.212276,3],[3,8130962,1.948849,3],[3,7919768,1.97954,3],[3,7708574,1.764706,3],[3,2639923,1.918159,3],[3,15100358,0.414322,3],[3,11932451,2.317136,3],[3,14466777,1.396419,3],[3,3062310,1.457801,3],[3,10665288,1.764706,3],[3,12777226,2.194373,3],[3,10454094,2.163683,3],[3,7074993,1.519182,3],[3,15100358,0.506394,3],[3,6019024,5.478261,3],[3,9398125,1.918159,3],[3,10242900,2.040921,3],[3,16578715,0.813299,3],[3,15522746,0.168798,3],[3,7708574,1.672634,3],[3,15311552,1.058824,3],[3,15311552,1.764706,3],[3,739178,1.028133,3],[3,16578715,0.966752,3],[3,13199614,1.212276,3],[3,9186931,2.439898,3],[3,7074993,1.396419,3],[3,10242900,2.255754,3],[3,3907086,0.690537,3],[3,7074993,1.42711,3],[3,10665288,1.641944,3],[3,17423490,2.716113,3],[3,9186931,1.580563,3],[3,8342156,2.255754,3],[3,15522746,1.273657,3],[3,739178,0.997442,3],[3,8764543,1.181586,3],[3,9186931,1.641944,3],[3,16578715,0.414322,3],[3,12777226,2.347826,3],[3,16578715,0.475703,3],[3,13622001,0.659847,3],[3,18268265,0.168798,3],[3,16156327,0.629156,3],[3,7708574,1.641944,3],[3,8764543,2.01023,3],[3,16578715,0.537084,3],[3,16367521,2.624041,3],[3,17845878,0.659847,3],[3,16578715,1.304348,3],[3,8764543,1.242967,3],[3,15311552,1.734015,3],[3,950372,1.457801,3],[3,739178,3.176471,3],[3,15311552,2.501279,3],[3,1795147,1.120205,3],[3,15311552,1.887468,3],[3,15100358,1.089514,3],[3,15100358,0.721228,3],[3,14889164,0.782609,3],[3,17423490,1.611253,3],[3,14889164,0.997442,3],[3,15100358,1.488491,3],[3,12777226,0.383632,3],[3,5807830,0.813299,3],[3,950372,2.56266,3],[3,527985,1.887468,3],[3,16578715,1.611253,3],[3,17423490,1.396419,3],[3,6652605,0.87468,3],[3,15311552,2.685422,3],[3,17423490,1.641944,3],[3,16578715,1.058824,3],[3,5385442,1.304348,3],[3,16578715,3.759591,3],[3,15311552,1.120205,3],[3,15522746,0.322251,3],[3,16578715,1.181586,3],[3,5807830,1.795396,3],[3,15522746,0.352941,3],[3,2639923,1.856777,3],[3,7074993,1.580563,3],[3,4329473,0.168798,3],[3,7074993,1.611253,3],[3,15522746,1.212276,3],[3,17634684,1.826087,3],[3,2639923,1.580563,3],[3,17212296,2.071611,4],[3,17001102,2.01023,4],[3,4751861,1.120205,4],[3,18268265,0.537084,4],[3,105597,0.690537,4],[3,2217535,1.457801,4],[3,17001102,2.071611,4],[3,16156327,1.028133,4],[3,2428729,1.549872,4],[3,11721257,1.396419,4],[3,16156327,0.87468,4],[3,16367521,1.150895,4],[3,4963055,0.84399,4],[3,6019024,4.649616,4],[3,4751861,0.721228,4],[3,5596636,0.751918,4],[3,4751861,0.690537,4],[3,2639923,1.549872,4],[3,11721257,1.519182,4],[3,14255583,0.813299,4],[3,4751861,0.629156,4],[3,17423490,3.237852,4],[3,1795147,0.813299,4],[3,4963055,0.813299,4],[3,13622001,0.107417,4],[3,18268265,0.936061,4],[3,8553350,1.212276,4],[3,105597,0.567775,4],[3,18268265,0.966752,4],[3,105597,0.414322,4],[3,16156327,0.751918,4],[3,5807830,0.506394,4],[3,16156327,0.721228,4],[3,8764543,1.365729,4],[3,2639923,1.764706,4],[3,14044389,1.365729,4],[3,18268265,0.598465,4],[3,16156327,0.383632,4],[3,11721257,1.150895,4],[3,15522746,1.42711,4],[3,14044389,1.273657,4],[3,13410807,0.751918,4],[3,14044389,1.089514,4],[3,3273504,0.445013,4],[3,14044389,0.997442,4],[3,17001102,1.304348,4],[3,17001102,1.242967,4],[3,14889164,0.537084,4],[3,14889164,0.813299,4],[3,18268265,0.659847,4],[3,4751861,0.782609,4],[3,8342156,1.580563,4],[3,4963055,1.058824,4],[3,1795147,0.445013,4],[3,4963055,0.997442,4],[3,17423490,0.936061,4],[3,17423490,3.268542,4],[3,4963055,0.936061,4],[3,11932451,1.549872,4],[3,8130962,0.966752,4],[3,6441411,1.918159,4],[3,739178,2.132992,4],[3,12143645,2.409207,4],[3,11932451,1.396419,4],[3,105597,0.905371,4],[3,17845878,0.936061,4],[3,13410807,1.764706,4],[3,11721257,1.028133,4],[3,13410807,1.488491,4],[3,2428729,1.089514,4],[3,1161566,1.580563,4],[3,1161566,1.611253,4],[3,1161566,1.641944,4],[3,6441411,2.531969,4],[3,18479459,2.040921,4],[3,14889164,1.028133,4],[3,2639923,2.255754,4],[3,7497381,1.212276,4],[3,1161566,1.764706,4],[3,12143645,1.242967,4],[3,1161566,1.795396,4],[3,12143645,1.212276,4],[3,9609319,1.365729,4],[3,1161566,1.856777,4],[3,17423490,0.168798,4],[3,12143645,1.089514,4],[3,12143645,0.966752,4],[3,12143645,0.905371,4],[3,12143645,1.826087,4],[3,1161566,0.84399,4],[3,950372,1.580563,4],[3,9609319,1.028133,4],[3,16156327,1.519182,4],[3,17845878,1.396419,4],[3,12143645,2.01023,4],[3,14889164,1.212276,4],[3,13410807,0.87468,4],[3,9609319,0.966752,4],[3,13410807,1.611253,4],[3,1161566,1.150895,4],[3,8130962,1.058824,4],[3,18057071,0.567775,4],[3,527985,1.795396,4],[3,2639923,2.59335,4],[3,12143645,1.672634,4],[3,17845878,1.212276,4],[3,15522746,0.015345,4],[3,12143645,1.580563,4],[3,9609319,0.87468,4],[3,17423490,0.383632,4],[3,17845878,1.089514,4],[3,16367521,0.629156,4],[3,14889164,1.150895,4],[3,18268265,0.322251,4],[3,17423490,0.322251,4],[3,17845878,0.966752,4],[3,14889164,1.304348,4],[3,2639923,2.409207,4],[3,11932451,1.580563,4],[3,17423490,0.721228,4],[3,2428729,1.273657,4],[3,6019024,3.053708,4],[3,17212296,1.089514,4],[3,15522746,0.84399,4],[3,8764543,0.567775,4],[3,1161566,2.317136,4],[3,17212296,1.242967,4],[3,739178,1.856777,4],[3,8130962,1.488491,4],[3,17212296,1.365729,4],[3,14044389,2.132992,4],[3,16367521,1.028133,4],[3,13410807,0.29156,4],[3,2217535,1.242967,4],[3,14889164,0.168798,4],[3,17212296,1.488491,4],[3,527985,2.040921,4],[3,11721257,1.089514,4],[3,14889164,0.199488,4],[3,11721257,1.120205,4],[3,18268265,0.475703,4],[3,2428729,1.335038,4],[3,17845878,0.567775,4],[3,9820513,0.414322,4],[3,14044389,1.764706,4],[3,17212296,1.795396,4],[3,14044389,1.734015,4],[3,105597,0.751918,4],[3,14044389,1.672634,4],[3,8764543,1.150895,4],[3,17212296,0.322251,4],[3,7497381,0.813299,4],[3,14044389,2.685422,4],[3,16367521,0.936061,4],[3,15522746,0.537084,4],[3,11932451,0.721228,4],[3,1795147,0.966752,4],[3,17212296,0.598465,4],[3,1161566,2.040921,4],[3,17212296,0.629156,4],[3,11932451,0.629156,4],[3,17212296,0.690537,4],[3,12143645,0.87468,4],[3,12143645,0.84399,4],[3,2639923,2.071611,4],[3,14255583,0.322251,4],[3,12143645,0.751918,4],[3,12143645,0.721228,4],[3,17212296,0.782609,4],[3,9609319,1.457801,4],[3,12143645,0.659847,4],[3,11932451,0.567775,4],[3,2428729,1.242967,4],[3,18057071,0.936061,4],[3,14255583,0.383632,4],[3,15522746,0.629156,4],[3,950372,1.549872,4],[3,12143645,3.084399,4],[3,16367521,0.537084,4],[3,12143645,0.168798,4],[3,17212296,1.028133,4],[3,16578715,1.641944,4],[3,9186931,1.918159,4],[3,12777226,1.826087,4],[3,7919768,1.764706,4],[3,13199614,0.813299,4],[3,3695892,1.519182,4],[3,9186931,2.040921,4],[3,4118279,0.26087,4],[3,12777226,1.488491,4],[3,16367521,2.716113,4],[3,12777226,1.42711,4],[3,12777226,1.365729,4],[3,16578715,2.56266,4],[3,13199614,0.905371,4],[3,12777226,1.273657,4],[3,12777226,1.242967,4],[3,5807830,2.531969,4],[3,15311552,1.580563,4],[3,16578715,3.11509,4],[3,13199614,0.966752,4],[3,13199614,0.997442,4],[3,5807830,2.746803,4],[3,13199614,1.089514,4],[3,17634684,2.132992,4],[3,13199614,1.150895,4],[3,12777226,0.414322,4],[3,739178,0.782609,4],[3,5385442,1.918159,4],[3,5385442,1.887468,4],[3,9186931,1.335038,4],[3,7919768,1.611253,4],[3,7919768,1.641944,4],[3,9398125,1.42711,4],[3,4118279,0.506394,4],[3,9186931,1.396419,4],[3,17634684,0.107417,4],[3,15100358,1.764706,4],[3,16578715,0.230179,4],[3,16578715,0.26087,4],[3,16578715,0.322251,4],[3,15311552,1.028133,4],[3,16578715,0.567775,4],[3,16578715,0.598465,4],[3,4118279,0.414322,4],[3,13622001,0.751918,4],[3,16578715,0.721228,4],[3,16578715,0.782609,4],[3,16578715,0.84399,4],[3,9186931,1.734015,4],[3,16578715,0.997442,4],[3,16578715,1.150895,4],[3,4118279,0.322251,4],[3,15100358,1.519182,4],[3,9398125,2.194373,4],[3,9186931,1.856777,4],[3,16578715,1.457801,4],[3,739178,1.089514,4],[3,16578715,1.580563,4],[3,15100358,0.199488,4],[3,5385442,0.537084,4],[3,2006341,0.782609,4],[3,18268265,2.808184,4],[3,7074993,1.304348,4],[3,316791,2.194373,4],[3,316791,2.317136,4],[3,14677970,0.537084,4],[3,8130962,1.856777,4],[3,13833195,0.598465,4],[3,14677970,0.659847,4],[3,2006341,1.150895,4],[3,2006341,1.212276,4],[3,2006341,1.273657,4],[3,14677970,0.87468,4],[3,7074993,1.181586,4],[3,12566032,2.59335,4],[3,9820513,1.97954,4],[3,13833195,0.905371,4],[3,13199614,1.795396,4],[3,14677970,0.997442,4],[3,12566032,2.225064,4],[3,12566032,2.163683,4],[3,2006341,1.641944,4],[3,2006341,1.672634,4],[3,14677970,1.058824,4],[3,12566032,1.826087,4],[3,6863799,2.930946,4],[3,14677970,1.150895,4],[3,17634684,0.690537,4],[3,4329473,0.046036,4],[3,7074993,1.948849,4],[3,4329473,0.107417,4],[3,4329473,0.230179,4],[3,7919768,2.071611,4],[3,4329473,0.383632,4],[3,13199614,1.304348,4],[3,18057071,1.519182,4],[3,11087675,1.856777,4],[3,4329473,0.966752,4],[3,4329473,0.997442,4],[3,15100358,0.905371,4],[3,17634684,0.629156,4],[3,4329473,1.304348,4],[3,5385442,1.580563,4],[3,15733939,6.460358,4],[3,7074993,1.734015,4],[3,15100358,0.782609,4],[3,11087675,0.782609,4],[3,7074993,1.703325,4],[3,5385442,1.396419,4],[3,7074993,1.641944,4],[3,5385442,1.365729,4],[3,5385442,1.181586,4],[3,7074993,1.488491,4],[3,5385442,0.997442,4],[3,2006341,0.598465,4],[3,5385442,0.87468,4],[3,5385442,0.690537,4],[3,527985,1.641944,4],[3,15945133,0.905371,4],[3,10242900,1.396419,4],[3,10242900,1.335038,4],[3,17634684,1.089514,4],[3,15945133,0.813299,4],[3,17634684,0.87468,4],[3,10242900,1.304348,4],[3,1583954,1.97954,4],[3,15945133,2.01023,4],[3,12988420,2.685422,4],[3,15945133,0.690537,4],[3,10242900,1.212276,4],[3,1583954,1.734015,4],[3,1583954,1.672634,4],[3,10242900,1.181586,4],[3,316791,0.997442,4],[3,1583954,1.519182,4],[3,11087675,1.120205,4],[3,1583954,1.42711,4],[3,1583954,1.242967,4],[3,15945133,0.383632,4],[3,1583954,1.181586,4],[3,10242900,1.028133,4],[3,10242900,0.997442,4],[3,12988420,2.286445,4],[3,1583954,0.966752,4],[3,10242900,0.966752,4],[3,1583954,0.84399,4],[3,17634684,0.905371,4],[3,4118279,0.936061,4],[3,17634684,0.966752,4],[3,9820513,2.071611,4],[3,4118279,1.089514,4],[3,13622001,0.936061,4],[3,4118279,1.150895,4],[3,15945133,1.856777,4],[3,15945133,1.795396,4],[3,4118279,0.813299,4],[3,11087675,1.703325,4],[3,17634684,1.028133,4],[3,13622001,1.089514,4],[3,11087675,1.611253,4],[3,5807830,1.058824,4],[3,10242900,1.887468,4],[3,11087675,1.519182,4],[3,10242900,1.826087,4],[3,10242900,1.764706,4],[3,4118279,1.948849,4],[3,3695892,0.721228,4],[3,6230218,3.329923,4],[3,11087675,1.273657,4],[3,5807830,1.089514,4],[3,4118279,2.040921,4],[3,1583954,2.624041,4],[3,10242900,1.641944,4],[3,1583954,2.56266,4],[3,15945133,0.966752,4],[3,11298869,0.87468,4],[3,5807830,1.273657,4],[3,950372,0.936061,4],[3,13622001,2.56266,4],[3,17634684,1.734015,4],[3,11298869,1.181586,4],[3,11298869,1.212276,4],[3,11298869,1.242967,4],[3,18057071,1.887468,4],[3,13622001,2.685422,4],[3,9186931,0.966752,4],[3,11298869,1.580563,4],[3,5807830,0.352941,4],[3,316791,1.580563,4],[3,7919768,0.782609,4],[3,6230218,0.905371,4],[3,11298869,2.286445,4],[3,8342156,1.089514,4],[3,8342156,1.058824,4],[3,6230218,3.575448,4],[3,15100358,2.654731,4],[3,6230218,0.87468,4],[3,6230218,0.84399,4],[3,5807830,0.29156,4],[3,9398125,0.813299,4],[3,15311552,0.782609,4],[3,6230218,0.782609,4],[3,13622001,3.391304,4],[3,13622001,3.636829,4],[3,11087675,1.089514,4],[3,15945133,0.29156,4],[3,3695892,0.84399,4],[3,15945133,0.076726,4],[3,527985,2.654731,4],[3,13622001,1.826087,4],[3,12988420,1.672634,4],[3,12988420,1.488491,4],[3,13622001,1.97954,4],[3,12988420,1.273657,4],[3,10242900,2.409207,4],[3,12988420,1.212276,4],[3,17423490,2.01023,4],[3,12988420,1.058824,4],[3,17634684,1.304348,4],[3,12988420,0.629156,4],[3,17634684,1.396419,4],[3,12988420,0.445013,4],[3,950372,1.150895,4],[3,316791,1.273657,4],[3,10242900,0.383632,4],[3,13622001,2.255754,4],[3,7919768,0.87468,4],[3,17634684,1.488491,4],[3,11298869,0.29156,4],[3,4118279,0.537084,4],[3,11298869,0.475703,4],[3,11298869,0.721228,4],[3,11298869,0.813299,4],[3,11298869,0.84399,4],[3,6863799,1.273657,4],[3,7286187,1.97954,4],[3,3484698,1.273657,4],[3,7286187,2.071611,4],[3,6863799,1.058824,4],[3,6652605,2.347826,4],[3,6863799,0.966752,4],[3,6863799,0.87468,4],[3,12354838,3.820972,4],[3,16367521,1.734015,4],[3,16367521,1.703325,4],[3,3062310,0.29156,4],[3,7919768,1.365729,4],[3,3484698,0.84399,4],[3,7919768,1.335038,4],[3,3484698,0.782609,4],[3,10031706,2.102302,4],[3,3484698,0.506394,4],[3,5596636,1.97954,4],[3,3484698,0.322251,4],[3,3484698,0.26087,4],[3,18268265,1.97954,4],[3,18268265,1.887468,4],[3,5174249,1.887468,4],[3,10031706,1.519182,4],[3,7919768,1.242967,4],[3,10031706,1.365729,4],[3,10031706,1.273657,4],[3,16156327,3.851662,4],[3,4540667,0.721228,4],[3,15733939,0.168798,4],[3,2851117,0.997442,4],[3,4540667,0.813299,4],[3,4540667,0.84399,4],[3,17845878,2.439898,4],[3,4540667,0.966752,4],[3,4540667,1.089514,4],[3,16367521,1.856777,4],[3,4540667,1.242967,4],[3,6863799,2.286445,4],[3,2851117,0.84399,4],[3,6863799,8.731458,4],[3,5596636,1.519182,4],[3,6230218,1.549872,4],[3,6863799,2.01023,4],[3,316791,2.808184,4],[3,7919768,1.488491,4],[3,7286187,0.997442,4],[3,739178,1.396419,4],[3,6863799,1.887468,4],[3,6863799,1.856777,4],[3,6863799,1.826087,4],[3,7286187,1.335038,4],[3,7919768,1.457801,4],[3,6863799,1.488491,4],[3,7286187,1.641944,4],[3,6652605,2.255754,4],[3,6863799,1.396419,4],[3,3062310,0.475703,4],[3,9820513,0.751918,4],[3,18479459,0.506394,4],[3,16156327,3.329923,4],[3,18479459,0.813299,4],[3,18479459,0.87468,4],[3,18479459,0.905371,4],[3,18479459,0.936061,4],[3,6019024,1.519182,4],[3,14255583,1.150895,4],[3,18479459,1.028133,4],[3,14255583,1.089514,4],[3,2428729,1.795396,4],[3,6019024,1.948849,4],[3,6019024,2.071611,4],[3,6019024,2.102302,4],[3,6441411,1.150895,4],[3,11721257,0.782609,4],[3,9820513,0.26087,4],[3,5596636,0.721228,4],[3,13622001,0.199488,4],[3,14466777,0.721228,4],[3,1161566,2.869565,4],[3,11087675,2.808184,4],[3,6441411,1.396419,4],[3,17001102,0.076726,4],[3,6441411,1.42711,4],[3,13622001,0.168798,4],[3,16156327,2.961637,4],[3,18268265,1.089514,4],[3,6652605,2.869565,4],[3,10031706,1.212276,4],[3,6441411,4.434783,4],[3,6019024,0.352941,4],[3,6019024,0.445013,4],[3,6019024,0.537084,4],[3,5596636,0.659847,4],[3,5174249,1.672634,4],[3,12354838,1.120205,4],[3,105597,1.641944,4],[3,12354838,0.936061,4],[3,12354838,0.905371,4],[3,739178,1.549872,4],[3,12354838,0.782609,4],[3,10031706,0.84399,4],[3,7919768,0.997442,4],[3,7919768,0.966752,4],[3,105597,1.058824,4],[3,6019024,1.028133,4],[3,6019024,1.089514,4],[3,13622001,0.230179,4],[3,316791,0.813299,4],[3,6019024,1.242967,4],[3,5174249,1.058824,4],[3,5174249,1.028133,4],[3,5174249,0.966752,4],[3,5174249,0.936061,4],[3,6019024,1.335038,4],[3,5174249,0.721228,4],[3,18479459,0.352941,4],[3,12566032,0.383632,4],[3,7708574,1.42711,4],[3,9820513,1.212276,4],[3,9820513,1.181586,4],[3,9820513,1.150895,4],[3,17423490,1.181586,4],[3,11510063,0.29156,4],[3,8975737,1.304348,4],[3,8975737,1.273657,4],[3,10665288,1.396419,4],[3,9820513,1.120205,4],[3,5807830,0.414322,4],[3,8975737,1.120205,4],[3,15733939,2.163683,4],[3,8975737,1.028133,4],[3,7708574,1.396419,4],[3,8975737,0.966752,4],[3,7708574,1.335038,4],[3,11087675,0.445013,4],[3,11087675,0.414322,4],[3,16789909,0.046036,4],[3,11510063,0.782609,4],[3,11510063,0.813299,4],[3,16789909,0.199488,4],[3,8975737,0.813299,4],[3,10665288,1.335038,4],[3,9820513,1.089514,4],[3,6652605,1.611253,4],[3,16789909,0.629156,4],[3,7708574,1.488491,4],[3,2006341,1.887468,4],[3,13622001,0.414322,4],[3,12566032,1.181586,4],[3,18057071,1.273657,4],[3,1372760,2.194373,4],[3,12566032,1.058824,4],[3,12566032,1.028133,4],[3,1372760,2.040921,4],[3,6652605,1.120205,4],[3,1372760,1.826087,4],[3,1372760,1.795396,4],[3,1372760,1.703325,4],[3,17634684,3.268542,4],[3,10876482,0.936061,4],[3,12566032,0.813299,4],[3,1372760,1.335038,4],[3,13622001,0.383632,4],[3,1372760,1.089514,4],[3,527985,3.084399,4],[3,3062310,0.813299,4],[3,10876482,1.028133,4],[3,14677970,1.42711,4],[3,1372760,0.782609,4],[3,1372760,0.751918,4],[3,1372760,0.721228,4],[3,1372760,0.629156,4],[3,8342156,2.347826,4],[3,16367521,2.01023,4],[3,15733939,1.304348,4],[3,16789909,1.611253,4],[3,10665288,1.212276,4],[3,16789909,1.703325,4],[3,739178,1.335038,4],[3,2851117,1.488491,4],[3,15733939,1.150895,4],[3,16789909,1.826087,4],[3,11510063,1.611253,4],[3,9820513,0.936061,4],[3,10876482,1.212276,4],[3,15733939,0.966752,4],[3,5596636,1.089514,4],[3,15733939,0.84399,4],[3,15733939,0.782609,4],[3,10876482,1.304348,4],[3,10876482,1.335038,4],[3,10876482,1.396419,4],[3,3062310,0.659847,4],[3,4540667,0.168798,4],[3,105597,1.856777,4],[3,4540667,0.445013,4],[3,17423490,0.997442,4],[3,105597,1.795396,4],[3,9820513,1.948849,4],[3,2851117,1.028133,4],[3,15733939,0.199488,4],[3,10665288,1.304348,4],[3,16789909,1.089514,4],[3,15733939,1.611253,4],[3,16789909,1.120205,4],[3,9820513,1.058824,4],[3,16789909,0.905371,4],[3,9820513,0.997442,4],[3,15733939,1.488491,4],[3,15733939,1.42711,4],[3,16789909,0.87468,4],[3,16789909,0.84399,4],[3,739178,1.304348,4],[3,16789909,1.519182,4],[3,15733939,1.335038,4],[3,8553350,1.304348,5],[3,17423490,0.537084,5],[3,739178,1.058824,5],[3,950372,0.598465,5],[3,17423490,0.506394,5],[3,17423490,2.102302,5],[3,17634684,1.335038,5],[3,17423490,0.352941,5],[3,8553350,1.058824,5],[3,739178,1.212276,5],[3,17634684,0.537084,5],[3,8553350,0.445013,5],[3,17634684,0.84399,5],[3,17634684,0.997442,5],[3,17634684,0.813299,5],[3,950372,1.672634,5],[3,739178,3.237852,5],[3,7708574,0.782609,5],[3,17423490,0.138107,5],[3,7708574,0.813299,5],[3,739178,1.918159,5],[3,950372,0.905371,5],[3,950372,0.87468,5],[3,8553350,0.997442,5],[3,739178,1.672634,5],[3,17423490,0.87468,5],[3,17423490,1.212276,5],[3,17423490,1.457801,5],[3,8553350,0.905371,5],[3,17423490,0.230179,5],[3,8553350,0.87468,5],[3,8553350,0.84399,5],[3,7497381,1.488491,5],[3,739178,0.598465,5],[3,7497381,1.150895,5],[3,8553350,0.813299,5],[3,8553350,1.42711,5],[3,17423490,0.813299,5],[3,8553350,1.396419,5],[3,950372,0.782609,5],[3,950372,0.997442,5],[3,17634684,1.948849,5],[3,17423490,0.598465,5],[3,17423490,2.163683,5],[3,17634684,0.414322,5],[3,950372,1.42711,5],[3,6230218,1.335038,5],[3,6230218,1.181586,5],[3,6230218,1.150895,5],[3,7919768,1.856777,5],[3,14255583,1.365729,5],[3,14255583,1.058824,5],[3,14255583,0.721228,5],[3,14255583,0.598465,5],[3,7919768,2.409207,5],[3,14255583,0.230179,5],[3,14255583,0.199488,5],[3,14255583,0.046036,5],[3,10454094,0.506394,5],[3,10454094,1.028133,5],[3,10454094,1.089514,5],[3,10454094,1.580563,5],[3,18268265,0.414322,5],[3,3273504,0.475703,5],[3,3273504,0.936061,5],[3,14466777,1.058824,5],[3,14466777,0.997442,5],[3,316791,0.84399,5],[3,14466777,0.87468,5],[3,14466777,0.751918,5],[3,14466777,0.690537,5],[3,14466777,0.629156,5],[3,316791,0.782609,5],[3,14466777,0.506394,5],[3,14466777,0.414322,5],[3,14466777,0.383632,5],[3,14466777,0.322251,5],[3,316791,0.506394,5],[3,7919768,0.936061,5],[3,7919768,1.058824,5],[3,7919768,1.181586,5],[3,7919768,1.42711,5],[3,3062310,0.445013,5],[3,6230218,1.826087,5],[3,6230218,1.42711,5],[3,6019024,0.107417,5],[3,3484698,0.659847,5],[3,3484698,0.721228,5],[3,3484698,1.028133,5],[3,10665288,1.181586,5],[3,10665288,1.273657,5],[3,10665288,1.457801,5],[3,13833195,1.856777,5],[3,13833195,1.641944,5],[3,13833195,1.580563,5],[3,10665288,1.549872,5],[3,13833195,0.966752,5],[3,13833195,0.813299,5],[3,13833195,0.659847,5],[3,13833195,0.629156,5],[3,13833195,0.537084,5],[3,13833195,0.506394,5],[3,13833195,0.414322,5],[3,13833195,0.383632,5],[3,3273504,1.948849,5],[3,14044389,1.396419,5],[3,14044389,1.120205,5],[3,18268265,0.690537,5],[3,18268265,0.751918,5],[3,18268265,0.813299,5],[3,18268265,0.87468,5],[3,14044389,0.138107,5],[3,6019024,2.01023,5],[3,6019024,1.826087,5],[3,6019024,1.549872,5],[3,6019024,1.488491,5],[3,6019024,1.42711,5],[3,6019024,1.058824,5],[3,6019024,0.905371,5],[3,6019024,0.782609,5],[3,6019024,0.721228,5],[3,6019024,0.598465,5],[3,6019024,0.383632,5],[3,18268265,1.273657,5],[3,9820513,0.966752,5],[3,15100358,2.225064,5],[3,15100358,2.102302,5],[3,15100358,1.856777,5],[3,15100358,1.396419,5],[3,15100358,1.150895,5],[3,15100358,0.567775,5],[3,15100358,0.383632,5],[3,15100358,0.352941,5],[3,15100358,0.168798,5],[3,2639923,0.813299,5],[3,2639923,1.120205,5],[3,14889164,0.905371,5],[3,14889164,0.87468,5],[3,14889164,0.721228,5],[3,14889164,0.567775,5],[3,14889164,0.506394,5],[3,14889164,0.475703,5],[3,14889164,0.046036,5],[3,6652605,1.273657,5],[3,6652605,0.966752,5],[3,18057071,1.457801,5],[3,6652605,0.782609,5],[3,6652605,0.690537,5],[3,15311552,1.795396,5],[3,15311552,1.641944,5],[3,15311552,0.966752,5],[3,15311552,0.936061,5],[3,15311552,0.598465,5],[3,15311552,0.445013,5],[3,15311552,0.076726,5],[3,2428729,0.690537,5],[3,2428729,1.150895,5],[3,2428729,1.212276,5],[3,2428729,1.365729,5],[3,9820513,0.629156,5],[3,2428729,1.457801,5],[3,9820513,0.813299,5],[3,9820513,0.905371,5],[3,14677970,1.181586,5],[3,316791,1.97954,5],[3,7919768,0.813299,5],[3,316791,1.304348,5],[3,10242900,0.537084,5],[3,7919768,0.905371,5],[3,10242900,0.659847,5],[3,10242900,0.84399,5],[3,10242900,0.87468,5],[3,10242900,1.120205,5],[3,10242900,1.150895,5],[3,10242900,1.242967,5],[3,10242900,1.457801,5],[3,10242900,1.519182,5],[3,10242900,1.611253,5],[3,10242900,1.703325,5],[3,10242900,2.286445,5],[3,10242900,2.439898,5],[3,10242900,2.501279,5],[3,14466777,1.089514,5],[3,6441411,1.365729,5],[3,6441411,1.273657,5],[3,6441411,1.120205,5],[3,6441411,0.87468,5],[3,10031706,0.475703,5],[3,10031706,0.537084,5],[3,10031706,0.905371,5],[3,10031706,0.997442,5],[3,10031706,1.089514,5],[3,10031706,1.120205,5],[3,10031706,1.242967,5],[3,10031706,1.641944,5],[3,2851117,0.230179,5],[3,2851117,0.567775,5],[3,2851117,0.690537,5],[3,2851117,0.751918,5],[3,2851117,0.966752,5],[3,2851117,1.120205,5],[3,2851117,1.212276,5],[3,2851117,1.304348,5],[3,11510063,1.120205,5],[3,11510063,1.181586,5],[3,4540667,0.383632,5],[3,4540667,0.475703,5],[3,4540667,0.598465,5],[3,4540667,0.782609,5],[3,4540667,0.87468,5],[3,4540667,0.905371,5],[3,4540667,1.335038,5],[3,12354838,1.212276,5],[3,12354838,1.058824,5],[3,12354838,1.028133,5],[3,105597,1.611253,5],[3,105597,1.365729,5],[3,105597,1.335038,5],[3,105597,1.304348,5],[3,105597,1.242967,5],[3,12354838,0.29156,5],[3,12354838,0.230179,5],[3,4329473,0.598465,5],[3,4329473,0.629156,5],[3,4329473,0.690537,5],[3,4329473,0.782609,5],[3,4329473,1.058824,5],[3,5385442,1.212276,5],[3,5385442,1.058824,5],[3,5385442,1.028133,5],[3,5385442,0.966752,5],[3,5385442,0.84399,5],[3,5385442,0.813299,5],[3,5385442,0.751918,5],[3,5385442,0.721228,5],[3,12566032,1.764706,5],[3,12566032,1.335038,5],[3,12566032,0.87468,5],[3,12566032,0.567775,5],[3,12566032,0.506394,5],[3,12566032,0.475703,5],[3,11510063,0.721228,5],[3,12143645,1.611253,5],[3,12143645,1.457801,5],[3,12143645,0.997442,5],[3,12143645,0.782609,5],[3,12143645,0.475703,5],[3,12143645,0.414322,5],[3,12143645,0.383632,5],[3,12143645,0.26087,5],[3,12143645,0.199488,5],[3,11721257,1.181586,5],[3,11721257,1.273657,5],[3,11721257,1.42711,5],[3,11932451,1.212276,5],[3,11932451,0.997442,5],[3,11932451,0.905371,5],[3,11932451,0.751918,5],[3,11932451,0.475703,5],[3,11932451,0.352941,5],[3,4963055,0.506394,5],[3,4963055,0.383632,5],[3,12354838,0.168798,5],[3,18479459,0.230179,5],[3,5174249,1.335038,5],[3,5174249,0.997442,5],[3,5174249,0.87468,5],[3,5174249,0.751918,5],[3,5174249,0.659847,5],[3,18479459,0.629156,5],[3,5174249,0.475703,5],[3,18479459,1.120205,5],[3,18479459,1.150895,5],[3,11721257,0.659847,5],[3,105597,1.028133,5],[3,12143645,4.373402,5],[3,12143645,4.342711,5],[3,4751861,0.997442,5],[3,4751861,1.365729,5],[3,12143645,2.071611,5],[3,12143645,1.856777,5],[3,12143645,1.703325,5],[3,13410807,0.905371,5],[3,8130962,1.212276,5],[3,8130962,1.120205,5],[3,8130962,0.997442,5],[3,8130962,0.721228,5],[3,8130962,0.537084,5],[3,3907086,0.721228,5],[3,3907086,0.936061,5],[3,5596636,2.378517,5],[3,5596636,2.286445,5],[3,5596636,2.071611,5],[3,5596636,1.365729,5],[3,11087675,0.230179,5],[3,7919768,4.189258,5],[3,11087675,0.629156,5],[3,11087675,0.690537,5],[3,13199614,0.629156,5],[3,13199614,0.567775,5],[3,11087675,0.84399,5],[3,5807830,3.084399,5],[3,13622001,1.672634,5],[3,5807830,1.212276,5],[3,5807830,1.120205,5],[3,13622001,0.966752,5],[3,13622001,0.84399,5],[3,18268265,3.176471,5],[3,13622001,0.690537,5],[3,13622001,0.537084,5],[3,5807830,0.782609,5],[3,3695892,0.567775,5],[3,5807830,0.046036,5],[3,3695892,2.01023,5],[3,10876482,1.058824,5],[3,10876482,1.457801,5],[3,10876482,1.519182,5],[3,13410807,2.378517,5],[3,13410807,1.457801,5],[3,13410807,0.966752,5],[3,13410807,0.936061,5],[3,12988420,0.506394,5],[3,12988420,0.475703,5],[3,11298869,0.076726,5],[3,11298869,0.26087,5],[3,11298869,0.506394,5],[3,11298869,0.567775,5],[3,11298869,1.028133,5],[3,11298869,1.058824,5],[3,11298869,1.150895,5],[3,12777226,1.97954,5],[3,12777226,1.028133,5],[3,12777226,0.84399,5],[3,12777226,0.782609,5],[3,12777226,0.751918,5],[3,12777226,0.690537,5],[3,12777226,0.506394,5],[3,12777226,0.445013,5],[3,4329473,0.015345,5],[3,4329473,0.138107,5],[3,4329473,0.322251,5],[3,11087675,1.457801,5],[3,11087675,2.040921,5],[3,5596636,0.813299,5],[3,5596636,0.445013,5],[3,5596636,0.414322,5],[3,4118279,0.107417,5],[3,4118279,0.230179,5],[3,4118279,0.29156,5],[3,4118279,0.475703,5],[3,4118279,0.567775,5],[3,4118279,0.87468,5],[3,4118279,0.966752,5],[3,4118279,0.997442,5],[3,4118279,2.071611,5],[3,12988420,2.409207,5],[3,12988420,2.163683,5],[3,12988420,1.365729,5],[3,12988420,0.936061,5],[3,12988420,0.751918,5],[3,12988420,0.690537,5],[3,15945133,0.352941,5],[3,15945133,0.445013,5],[3,7286187,1.457801,5],[3,15945133,0.751918,5],[3,15945133,0.87468,5],[3,15945133,1.089514,5],[3,15945133,1.457801,5],[3,15945133,1.611253,5],[3,7286187,1.242967,5],[3,1795147,0.782609,5],[3,1795147,0.690537,5],[3,7286187,1.150895,5],[3,7286187,0.936061,5],[3,1795147,0.598465,5],[3,1795147,0.567775,5],[3,7286187,0.905371,5],[3,16789909,1.918159,5],[3,16789909,1.641944,5],[3,16789909,1.150895,5],[3,1795147,0.352941,5],[3,8342156,1.97954,5],[3,16789909,0.690537,5],[3,16156327,0.26087,5],[3,16789909,0.168798,5],[3,8975737,1.242967,5],[3,1372760,0.015345,5],[3,1372760,0.076726,5],[3,16156327,0.84399,5],[3,15733939,1.028133,5],[3,15733939,1.273657,5],[3,15733939,1.519182,5],[3,15733939,1.580563,5],[3,15733939,2.102302,5],[3,17001102,0.905371,5],[3,17001102,0.87468,5],[3,2006341,1.089514,5],[3,2006341,0.936061,5],[3,2006341,0.87468,5],[3,17001102,0.659847,5],[3,2006341,0.813299,5],[3,6863799,3.14578,5],[3,6863799,3.483376,5],[3,6863799,3.851662,5],[3,9398125,1.457801,5],[3,9398125,1.396419,5],[3,9398125,1.365729,5],[3,9398125,1.212276,5],[3,17001102,0.629156,5],[3,17001102,0.598465,5],[3,9398125,1.028133,5],[3,9398125,0.966752,5],[3,17001102,0.537084,5],[3,9398125,0.659847,5],[3,8342156,0.966752,5],[3,8342156,1.181586,5],[3,8342156,1.273657,5],[3,7286187,1.549872,5],[3,527985,1.396419,5],[3,16578715,2.439898,5],[3,16578715,2.102302,5],[3,527985,1.519182,5],[3,527985,1.549872,5],[3,16578715,1.549872,5],[3,16578715,1.488491,5],[3,16578715,1.273657,5],[3,527985,1.611253,5],[3,16367521,0.29156,5],[3,16578715,1.028133,5],[3,16367521,0.445013,5],[3,16578715,0.87468,5],[3,16367521,0.659847,5],[3,16367521,0.690537,5],[3,16367521,0.87468,5],[3,16578715,0.29156,5],[3,16367521,1.058824,5],[3,16578715,0.015345,5],[3,16367521,1.089514,5],[3,16367521,1.641944,5],[3,16367521,1.97954,5],[3,1583954,1.580563,5],[3,1583954,1.488491,5],[3,1583954,1.396419,5],[3,1583954,0.813299,5],[3,1583954,0.905371,5],[3,1583954,1.365729,5],[3,1583954,1.150895,5],[3,16156327,0.905371,5],[3,16156327,0.966752,5],[3,1372760,0.322251,5],[3,16156327,1.764706,5],[3,16156327,1.918159,5],[3,1372760,0.475703,5],[3,1372760,0.567775,5],[3,1372760,0.87468,5],[3,1372760,0.905371,5],[3,527985,0.629156,5],[3,527985,0.87468,5],[3,7074993,1.089514,5],[3,527985,0.905371,5],[3,1372760,1.242967,5],[3,7074993,1.273657,5],[3,7074993,1.365729,5],[3,1372760,1.488491,5],[3,9186931,1.457801,5],[3,9186931,1.028133,5],[3,9186931,0.997442,5],[3,9186931,0.905371,5],[3,527985,1.150895,5],[3,527985,1.212276,5],[3,9186931,0.659847,5],[3,1372760,1.918159,5],[3,1372760,2.071611,5],[3,1372760,2.347826,5],[3,9186931,0.598465,5],[3,527985,1.335038,5],[3,1161566,1.273657,5],[3,18057071,1.089514,5],[3,18057071,0.721228,5],[3,6863799,1.304348,5],[3,17845878,0.506394,5],[3,1161566,1.242967,5],[3,17845878,0.015345,5],[3,8764543,0.936061,5],[3,17212296,0.29156,5],[3,6863799,1.181586,5],[3,2217535,0.813299,5],[3,17845878,0.690537,5],[3,2217535,0.87468,5],[3,6652605,1.97954,5],[3,6652605,2.531969,5],[3,2217535,0.966752,5],[3,17212296,0.751918,5],[3,1161566,1.058824,5],[3,17845878,0.782609,5],[3,18057071,0.966752,5],[3,1161566,0.751918,5],[3,18057071,0.997442,5],[3,9609319,1.948849,5],[3,9609319,1.396419,5],[3,2217535,1.120205,5],[3,2217535,1.734015,5],[3,9609319,1.242967,5],[3,9609319,0.751918,5],[3,17212296,0.475703,5],[3,2217535,1.273657,5],[3,17212296,0.445013,5],[3,6652605,1.365729,5],[3,8764543,0.659847,5],[3,17001102,1.273657,5],[3,6652605,1.457801,5],[3,15733939,0.659847,5],[3,7497381,0.537084,5],[3,17001102,1.42711,5],[3,17845878,0.199488,5],[3,17001102,1.457801,5],[3,17845878,0.322251,5],[3,15733939,0.629156,5],[3,15733939,0.567775,5],[3,17001102,1.734015,5],[3,15733939,0.322251,5],[3,15733939,0.230179,5],[3,17845878,0.168798,5],[3,6863799,2.102302,5],[3,18057071,0.629156,5],[3,15522746,0.230179,5],[3,1161566,1.304348,5],[3,1161566,1.948849,5],[3,6863799,1.519182,5],[3,18057071,0.383632,5],[3,1161566,1.396419,5],[3,12143645,0.230179,6],[3,12143645,0.076726,6],[3,1372760,1.181586,6],[3,17212296,0.352941,6],[3,1372760,3.360614,6],[3,11932451,1.089514,6],[3,7497381,0.905371,6],[3,11298869,0.414322,6],[3,17212296,0.414322,6],[3,11932451,0.966752,6],[3,1372760,1.549872,6],[3,4118279,1.396419,6],[3,1372760,1.611253,6],[3,12988420,2.808184,6],[3,1372760,2.102302,6],[3,12988420,0.322251,6],[3,12143645,0.29156,6],[3,11298869,0.168798,6],[3,1372760,1.212276,6],[3,1372760,1.734015,6],[3,11721257,1.549872,6],[3,12988420,1.089514,6],[3,12988420,0.966752,6],[3,11721257,1.488491,6],[3,17212296,1.887468,6],[3,17634684,0.199488,6],[3,7708574,1.150895,6],[3,7708574,1.120205,6],[3,13199614,0.29156,6],[3,13199614,0.445013,6],[3,1583954,0.383632,6],[3,13199614,0.598465,6],[3,17634684,0.015345,6],[3,1583954,0.690537,6],[3,13199614,0.690537,6],[3,13199614,0.721228,6],[3,13199614,0.782609,6],[3,13199614,0.936061,6],[3,7708574,0.598465,6],[3,7708574,1.089514,6],[3,13199614,1.242967,6],[3,7708574,0.905371,6],[3,13199614,1.734015,6],[3,527985,2.347826,6],[3,7708574,0.87468,6],[3,105597,0.29156,6],[3,1583954,0.936061,6],[3,11087675,0.199488,6],[3,4118279,0.84399,6],[3,4118279,0.690537,6],[3,11932451,0.782609,6],[3,4118279,0.445013,6],[3,16578715,1.335038,6],[3,11932451,0.690537,6],[3,4118279,0.138107,6],[3,16578715,1.089514,6],[3,4118279,0.046036,6],[3,17212296,0.567775,6],[3,11932451,0.414322,6],[3,950372,2.378517,6],[3,5596636,0.506394,6],[3,17634684,0.506394,6],[3,5596636,0.782609,6],[3,17634684,0.445013,6],[3,105597,0.659847,6],[3,17634684,0.383632,6],[3,16578715,0.629156,6],[3,11087675,1.641944,6],[3,4963055,0.690537,6],[3,105597,0.506394,6],[3,5596636,1.028133,6],[3,11087675,1.335038,6],[3,17001102,0.230179,6],[3,11510063,0.659847,6],[3,11510063,0.598465,6],[3,11510063,0.537084,6],[3,12566032,0.322251,6],[3,17001102,0.199488,6],[3,17001102,0.168798,6],[3,17001102,0.046036,6],[3,1161566,1.120205,6],[3,12566032,0.751918,6],[3,18479459,0.414322,6],[3,12566032,1.120205,6],[3,12566032,1.242967,6],[3,18479459,0.567775,6],[3,1161566,1.089514,6],[3,18479459,0.659847,6],[3,18479459,0.997442,6],[3,7286187,1.365729,6],[3,5385442,0.322251,6],[3,1161566,0.721228,6],[3,11721257,0.598465,6],[3,5385442,0.414322,6],[3,5385442,0.598465,6],[3,7286187,1.273657,6],[3,17001102,1.120205,6],[3,17001102,1.181586,6],[3,12354838,0.84399,6],[3,12354838,0.445013,6],[3,17001102,0.936061,6],[3,12354838,1.089514,6],[3,12354838,1.304348,6],[3,4540667,0.936061,6],[3,17001102,0.84399,6],[3,17001102,0.813299,6],[3,17001102,1.795396,6],[3,105597,1.181586,6],[3,1161566,1.519182,6],[3,7497381,1.703325,6],[3,1161566,1.335038,6],[3,105597,1.826087,6],[3,18479459,0.26087,6],[3,4540667,0.26087,6],[3,11510063,1.795396,6],[3,11510063,1.549872,6],[3,739178,0.015345,6],[3,18479459,0.29156,6],[3,17001102,0.26087,6],[3,11510063,1.028133,6],[3,17845878,0.721228,6],[3,4751861,1.089514,6],[3,12777226,0.230179,6],[3,17845878,0.629156,6],[3,12777226,0.598465,6],[3,8764543,1.028133,6],[3,12777226,0.629156,6],[3,12777226,0.659847,6],[3,1372760,0.168798,6],[3,527985,3.299233,6],[3,1372760,0.230179,6],[3,17845878,0.414322,6],[3,1372760,0.352941,6],[3,739178,0.936061,6],[3,12777226,1.703325,6],[3,12143645,1.335038,6],[3,12777226,1.795396,6],[3,12143645,1.150895,6],[3,17634684,1.795396,6],[3,11298869,1.457801,6],[3,1372760,0.506394,6],[3,1372760,0.690537,6],[3,11298869,0.629156,6],[3,17845878,0.26087,6],[3,1161566,0.690537,6],[3,1161566,0.475703,6],[3,7286187,1.181586,6],[3,11721257,0.905371,6],[3,739178,0.445013,6],[3,7286187,1.028133,6],[3,18479459,1.734015,6],[3,4751861,0.26087,6],[3,4751861,0.352941,6],[3,4751861,0.445013,6],[3,4751861,0.537084,6],[3,5385442,1.273657,6],[3,4751861,0.598465,6],[3,4329473,1.028133,6],[3,16789909,1.304348,6],[3,17845878,1.028133,6],[3,16789909,0.751918,6],[3,4329473,0.537084,6],[3,4329473,0.506394,6],[3,4329473,0.414322,6],[3,4329473,0.352941,6],[3,8975737,0.782609,6],[3,739178,0.721228,6],[3,4329473,0.26087,6],[3,6863799,2.59335,6],[3,316791,1.120205,6],[3,316791,1.795396,6],[3,7919768,0.598465,6],[3,15733939,0.905371,6],[3,14677970,0.352941,6],[3,2851117,1.580563,6],[3,2851117,1.42711,6],[3,15733939,0.352941,6],[3,2851117,0.721228,6],[3,2851117,0.629156,6],[3,6863799,1.549872,6],[3,2851117,0.475703,6],[3,2851117,0.445013,6],[3,2851117,0.414322,6],[3,6863799,1.42711,6],[3,10031706,1.580563,6],[3,10031706,1.488491,6],[3,10031706,1.181586,6],[3,6863799,1.242967,6],[3,6863799,1.028133,6],[3,6863799,0.997442,6],[3,10031706,0.721228,6],[3,6863799,0.813299,6],[3,6863799,0.782609,6],[3,6441411,0.567775,6],[3,6441411,0.659847,6],[3,14255583,0.138107,6],[3,1795147,0.936061,6],[3,1795147,1.150895,6],[3,15945133,5.907928,6],[3,14255583,0.659847,6],[3,15945133,1.058824,6],[3,6230218,0.567775,6],[3,6230218,1.212276,6],[3,15945133,0.138107,6],[3,3062310,0.751918,6],[3,3062310,0.383632,6],[3,7919768,1.089514,6],[3,8342156,0.997442,6],[3,8342156,0.936061,6],[3,14466777,0.352941,6],[3,14466777,0.445013,6],[3,8342156,0.813299,6],[3,14466777,0.598465,6],[3,9398125,1.089514,6],[3,9398125,1.181586,6],[3,14466777,0.905371,6],[3,9398125,1.335038,6],[3,2006341,0.84399,6],[3,10242900,1.365729,6],[3,2006341,1.181586,6],[3,10242900,0.936061,6],[3,2006341,1.42711,6],[3,15100358,1.97954,6],[3,17423490,0.567775,6],[3,9820513,1.396419,6],[3,9820513,0.84399,6],[3,2217535,0.84399,6],[3,2428729,0.966752,6],[3,2428729,0.782609,6],[3,6652605,0.445013,6],[3,18057071,2.132992,6],[3,2217535,1.304348,6],[3,15311552,0.230179,6],[3,18057071,1.97954,6],[3,15311552,0.29156,6],[3,15311552,0.567775,6],[3,18057071,1.028133,6],[3,18057071,1.795396,6],[3,15311552,0.721228,6],[3,15311552,1.089514,6],[3,15311552,1.181586,6],[3,15311552,1.212276,6],[3,15311552,1.304348,6],[3,6652605,1.948849,6],[3,6652605,1.672634,6],[3,6652605,1.580563,6],[3,18057071,1.120205,6],[3,6652605,0.905371,6],[3,18057071,1.212276,6],[3,6441411,0.782609,6],[3,6863799,0.322251,6],[3,6863799,0.230179,6],[3,9609319,0.598465,6],[3,9609319,0.629156,6],[3,6441411,1.519182,6],[3,14889164,0.076726,6],[3,14889164,0.138107,6],[3,14889164,0.230179,6],[3,14889164,0.383632,6],[3,14889164,0.445013,6],[3,9609319,0.84399,6],[3,9609319,0.936061,6],[3,15522746,1.672634,6],[3,6441411,2.255754,6],[3,2639923,1.641944,6],[3,2639923,1.611253,6],[3,2639923,1.365729,6],[3,2639923,1.335038,6],[3,15522746,0.598465,6],[3,2639923,1.028133,6],[3,2639923,0.84399,6],[3,2639923,0.629156,6],[3,2639923,0.567775,6],[3,18057071,0.046036,6],[3,15100358,0.230179,6],[3,15100358,0.26087,6],[3,15522746,0.107417,6],[3,10876482,0.537084,6],[3,3695892,0.629156,6],[3,3695892,0.537084,6],[3,3695892,0.383632,6],[3,3695892,0.352941,6],[3,5807830,0.475703,6],[3,5807830,0.537084,6],[3,5807830,0.659847,6],[3,950372,1.365729,6],[3,13622001,0.567775,6],[3,13622001,0.782609,6],[3,9186931,0.414322,6],[3,527985,1.365729,6],[3,527985,1.304348,6],[3,5807830,1.488491,6],[3,13622001,3.421995,6],[3,13622001,3.820972,6],[3,950372,1.089514,6],[3,13833195,0.138107,6],[3,527985,1.181586,6],[3,950372,0.966752,6],[3,527985,1.120205,6],[3,527985,1.028133,6],[3,527985,0.997442,6],[3,10665288,1.089514,6],[3,10665288,0.87468,6],[3,527985,0.721228,6],[3,18268265,1.242967,6],[3,6019024,0.26087,6],[3,5596636,1.549872,6],[3,739178,1.42711,6],[3,5596636,1.764706,6],[3,739178,1.519182,6],[3,5596636,2.194373,6],[3,739178,1.611253,6],[3,739178,1.641944,6],[3,739178,1.703325,6],[3,3907086,0.629156,6],[3,3907086,0.475703,6],[3,3907086,0.414322,6],[3,3907086,0.383632,6],[3,16367521,1.549872,6],[3,8130962,0.87468,6],[3,16367521,1.304348,6],[3,13410807,0.168798,6],[3,8130962,1.181586,6],[3,13410807,0.383632,6],[3,13410807,0.598465,6],[3,13410807,0.659847,6],[3,16367521,0.813299,6],[3,950372,1.641944,6],[3,13410807,1.181586,6],[3,16367521,0.567775,6],[3,16367521,0.383632,6],[3,10876482,0.997442,6],[3,10876482,0.84399,6],[3,10876482,0.690537,6],[3,10876482,0.629156,6],[3,18268265,0.905371,6],[3,10454094,1.181586,6],[3,10454094,1.519182,6],[3,14044389,0.383632,6],[3,14044389,0.475703,6],[3,14044389,0.537084,6],[3,14044389,0.659847,6],[3,14044389,0.690537,6],[3,14044389,0.751918,6],[3,18268265,0.721228,6],[3,1795147,0.537084,6],[3,16156327,0.475703,6],[3,8553350,0.751918,6],[3,14044389,0.905371,6],[3,14044389,1.028133,6],[3,14044389,1.242967,6],[3,8553350,0.936061,6],[3,16156327,0.230179,6],[3,14044389,1.457801,6],[3,16156327,0.138107,6],[3,6019024,0.475703,6],[3,6019024,0.506394,6],[3,10454094,0.813299,6],[3,10454094,0.751918,6],[3,7074993,0.87468,6],[3,10454094,0.782609,6],[3,10454094,1.120205,6],[3,1795147,0.659847,6],[3,10454094,1.150895,6],[3,16156327,4.127877,6],[3,16156327,3.421995,6],[3,16156327,1.641944,6],[3,16156327,1.580563,6],[3,16156327,1.089514,6],[3,14044389,0.168798,6],[3,14044389,0.199488,6],[3,8130962,0.690537,7],[3,8130962,0.567775,7],[3,7919768,1.212276,7],[3,8130962,0.813299,7],[3,8342156,1.212276,7],[3,7919768,1.150895,7],[3,7919768,1.120205,7],[3,18268265,0.107417,7],[3,105597,0.782609,7],[3,105597,0.721228,7],[3,8342156,1.304348,7],[3,18268265,0.076726,7],[3,7708574,0.966752,7],[3,7708574,0.997442,7],[3,105597,0.629156,7],[3,18057071,1.488491,7],[3,105597,0.445013,7],[3,105597,0.475703,7],[3,527985,0.537084,7],[3,18268265,1.181586,7],[3,18268265,1.795396,7],[3,18479459,0.445013,7],[3,527985,0.414322,7],[3,18479459,0.076726,7],[3,18479459,0.966752,7],[3,527985,1.089514,7],[3,527985,0.26087,7],[3,527985,0.076726,7],[3,7919768,0.751918,7],[3,316791,1.150895,7],[3,105597,0.966752,7],[3,316791,0.936061,7],[3,527985,1.826087,7],[3,18268265,0.629156,7],[3,8342156,0.475703,7],[3,18057071,0.29156,7],[3,18057071,0.414322,7],[3,17845878,0.138107,7],[3,18057071,0.506394,7],[3,8342156,0.905371,7],[3,17845878,0.046036,7],[3,18057071,0.751918,7],[3,316791,0.445013,7],[3,316791,0.29156,7],[3,8342156,1.672634,7],[3,14466777,0.475703,7],[3,14466777,0.199488,7],[3,3062310,0.046036,7],[3,3062310,0.199488,7],[3,16789909,3.606138,7],[3,6230218,0.690537,7],[3,6230218,0.659847,7],[3,6230218,0.26087,7],[3,14255583,0.29156,7],[3,14255583,0.015345,7],[3,10454094,0.598465,7],[3,10454094,0.659847,7],[3,3273504,0.26087,7],[3,7286187,1.120205,7],[3,3273504,0.29156,7],[3,7286187,1.396419,7],[3,3273504,0.322251,7],[3,3273504,0.414322,7],[3,17001102,0.322251,7],[3,1372760,1.058824,7],[3,1372760,0.813299,7],[3,1372760,0.659847,7],[3,14677970,1.611253,7],[3,14677970,0.629156,7],[3,1372760,0.383632,7],[3,14677970,0.475703,7],[3,14677970,0.230179,7],[3,1372760,0.107417,7],[3,10242900,0.414322,7],[3,10242900,0.629156,7],[3,10242900,0.690537,7],[3,10242900,0.721228,7],[3,16789909,0.107417,7],[3,16789909,0.138107,7],[3,10242900,1.42711,7],[3,10242900,1.580563,7],[3,14466777,1.028133,7],[3,14466777,0.567775,7],[3,13833195,0.84399,7],[3,8764543,1.304348,7],[3,13833195,0.690537,7],[3,13833195,0.567775,7],[3,13833195,0.230179,7],[3,5807830,1.826087,7],[3,5807830,1.549872,7],[3,13622001,1.948849,7],[3,8764543,0.813299,7],[3,8764543,0.721228,7],[3,13622001,0.813299,7],[3,13622001,0.598465,7],[3,8764543,0.537084,7],[3,5807830,0.567775,7],[3,3695892,0.26087,7],[3,3695892,0.445013,7],[3,3695892,0.475703,7],[3,3695892,0.506394,7],[3,3695892,0.598465,7],[3,14044389,0.598465,7],[3,17001102,0.414322,7],[3,14044389,0.567775,7],[3,17001102,0.782609,7],[3,17001102,1.028133,7],[3,14044389,0.076726,7],[3,14044389,0.015345,7],[3,6019024,0.414322,7],[3,6019024,0.322251,7],[3,1161566,0.659847,7],[3,1161566,0.598465,7],[3,3484698,0.199488,7],[3,3484698,0.475703,7],[3,3484698,0.598465,7],[3,10665288,0.813299,7],[3,10665288,0.966752,7],[3,10665288,0.997442,7],[3,10665288,1.028133,7],[3,13833195,2.225064,7],[3,13833195,0.936061,7],[3,6863799,2.132992,7],[3,6863799,1.672634,7],[3,6863799,0.629156,7],[3,9609319,1.273657,7],[3,15522746,0.138107,7],[3,2217535,0.690537,7],[3,2217535,0.721228,7],[3,2217535,0.782609,7],[3,2217535,1.058824,7],[3,9609319,2.838875,7],[3,9609319,3.544757,7],[3,6652605,1.703325,7],[3,6652605,1.42711,7],[3,7074993,1.058824,7],[3,6652605,1.028133,7],[3,6652605,0.751918,7],[3,9186931,1.212276,7],[3,6652605,0.598465,7],[3,15311552,0.87468,7],[3,1795147,0.29156,7],[3,1795147,0.629156,7],[3,1795147,0.87468,7],[3,15945133,0.046036,7],[3,9398125,0.751918,7],[3,9398125,0.87468,7],[3,9398125,0.997442,7],[3,9398125,1.120205,7],[3,9398125,1.273657,7],[3,2006341,0.352941,7],[3,2006341,0.414322,7],[3,2006341,0.506394,7],[3,2006341,0.690537,7],[3,15733939,1.365729,7],[3,15733939,0.721228,7],[3,15733939,0.26087,7],[3,7074993,0.782609,7],[3,15733939,0.076726,7],[3,7074993,0.84399,7],[3,16367521,0.414322,7],[3,2639923,0.87468,7],[3,2639923,1.058824,7],[3,16367521,0.598465,7],[3,2639923,1.212276,7],[3,1583954,1.089514,7],[3,6441411,1.304348,7],[3,6441411,0.936061,7],[3,6441411,0.629156,7],[3,10031706,0.629156,7],[3,1583954,0.29156,7],[3,10031706,1.304348,7],[3,10031706,1.703325,7],[3,6441411,0.475703,7],[3,16578715,0.168798,7],[3,2851117,0.598465,7],[3,16578715,1.212276,7],[3,1372760,1.764706,7],[3,2851117,0.87468,7],[3,15311552,0.475703,7],[3,15311552,0.352941,7],[3,6652605,0.537084,7],[3,6652605,0.475703,7],[3,2428729,0.629156,7],[3,9186931,0.445013,7],[3,2428729,0.87468,7],[3,2428729,0.905371,7],[3,2428729,1.058824,7],[3,15100358,1.549872,7],[3,15100358,0.475703,7],[3,15100358,0.29156,7],[3,15100358,0.015345,7],[3,6441411,2.59335,7],[3,2639923,0.506394,7],[3,2639923,0.537084,7],[3,2639923,0.659847,7],[3,2639923,0.690537,7],[3,2639923,0.721228,7],[3,16367521,0.322251,7],[3,5385442,0.383632,7],[3,5385442,0.445013,7],[3,5385442,0.506394,7],[3,4329473,0.567775,7],[3,4329473,0.475703,7],[3,4329473,0.199488,7],[3,12777226,0.26087,7],[3,12777226,0.29156,7],[3,12777226,0.322251,7],[3,8553350,0.690537,7],[3,12777226,1.058824,7],[3,11298869,1.089514,7],[3,8553350,1.242967,7],[3,11298869,0.383632,7],[3,17423490,2.040921,7],[3,17423490,1.42711,7],[3,950372,0.629156,7],[3,11087675,1.97954,7],[3,5596636,0.567775,7],[3,5596636,0.475703,7],[3,950372,0.414322,7],[3,4118279,0.199488,7],[3,4118279,0.352941,7],[3,4118279,0.751918,7],[3,12988420,1.457801,7],[3,12988420,1.396419,7],[3,12988420,1.028133,7],[3,12988420,0.87468,7],[3,17423490,0.015345,7],[3,17423490,0.107417,7],[3,12988420,0.199488,7],[3,17423490,0.475703,7],[3,17423490,0.659847,7],[3,4963055,0.199488,7],[3,4963055,0.537084,7],[3,4963055,0.598465,7],[3,4963055,0.659847,7],[3,11932451,0.230179,7],[3,11932451,1.365729,7],[3,12143645,0.107417,7],[3,12143645,0.352941,7],[3,12143645,0.445013,7],[3,12143645,1.120205,7],[3,12143645,1.519182,7],[3,4751861,0.659847,7],[3,739178,0.383632,7],[3,11721257,0.629156,7],[3,11721257,0.475703,7],[3,739178,0.506394,7],[3,12566032,0.352941,7],[3,739178,1.795396,7],[3,739178,1.273657,7],[3,12566032,0.199488,7],[3,12566032,0.107417,7],[3,11510063,1.365729,7],[3,4540667,0.659847,7],[3,12354838,0.997442,7],[3,12354838,0.567775,7],[3,12354838,0.352941,7],[3,17634684,0.936061,7],[3,12354838,0.199488,7],[3,739178,0.87468,7],[3,739178,0.751918,7],[3,5174249,0.598465,7],[3,739178,0.629156,7],[3,11721257,0.322251,7],[3,11087675,0.26087,7],[3,13410807,0.537084,7],[3,13410807,0.475703,7],[3,13199614,1.181586,7],[3,17212296,0.230179,7],[3,13410807,0.046036,7],[3,11087675,0.506394,7],[3,13199614,1.058824,7],[3,10876482,0.751918,7],[3,11087675,0.352941,7],[3,10876482,0.721228,7],[3,13410807,1.150895,7],[3,11087675,0.475703,7],[3,7497381,0.997442,7],[3,13199614,0.199488,7],[3,3695892,1.948849,7],[3,3695892,0.751918,7],[3,950372,0.690537,7],[3,5807830,0.322251,7],[3,13410807,0.690537,7],[3,5807830,0.199488,7],[3,950372,0.721228,7],[3,13410807,0.782609,7],[3,13199614,0.046036,7],[3,11087675,0.107417,7],[3,11087675,0.383632,7],[3,3907086,0.537084,7],[3,17212296,0.537084,7],[3,15311552,0.84399,8],[3,18479459,0.107417,8],[3,6652605,1.242967,8],[3,13833195,0.199488,8],[3,15311552,0.905371,8],[3,5174249,0.905371,8],[3,5174249,0.690537,8],[3,18479459,0.168798,8],[3,6652605,1.058824,8],[3,6652605,0.629156,8],[3,6652605,1.089514,8],[3,13410807,0.567775,8],[3,6652605,0.659847,8],[3,12566032,0.138107,8],[3,3907086,0.26087,8],[3,2639923,0.475703,8],[3,2639923,0.26087,8],[3,11510063,0.690537,8],[3,8130962,0.782609,8],[3,4540667,0.076726,8],[3,15100358,0.445013,8],[3,4540667,0.29156,8],[3,8130962,0.84399,8],[3,4540667,0.751918,8],[3,2428729,0.936061,8],[3,8130962,0.936061,8],[3,12354838,0.966752,8],[3,2428729,0.84399,8],[3,12354838,0.659847,8],[3,12354838,0.629156,8],[3,9820513,0.567775,8],[3,9820513,0.475703,8],[3,13833195,0.721228,8],[3,15311552,0.414322,8],[3,15311552,0.659847,8],[3,15733939,0.383632,8],[3,12143645,0.506394,8],[3,2006341,1.488491,8],[3,2006341,0.966752,8],[3,5807830,0.721228,8],[3,2006341,0.567775,8],[3,10876482,0.567775,8],[3,11932451,0.598465,8],[3,2006341,0.168798,8],[3,105597,0.84399,8],[3,9398125,1.242967,8],[3,9398125,1.058824,8],[3,11932451,0.199488,8],[3,5807830,0.138107,8],[3,9398125,0.84399,8],[3,4963055,0.629156,8],[3,9398125,0.721228,8],[3,8342156,0.84399,8],[3,9398125,0.690537,8],[3,1795147,1.365729,8],[3,105597,0.322251,8],[3,6652605,1.304348,8],[3,6652605,1.549872,8],[3,5174249,0.537084,8],[3,13410807,0.813299,8],[3,13622001,1.887468,8],[3,13622001,0.997442,8],[3,18057071,0.537084,8],[3,11721257,0.690537,8],[3,18057071,0.076726,8],[3,15522746,0.475703,8],[3,11721257,0.721228,8],[3,9609319,1.058824,8],[3,9609319,0.813299,8],[3,6863799,0.475703,8],[3,11721257,0.87468,8],[3,6863799,1.089514,8],[3,4751861,0.138107,8],[3,4751861,0.414322,8],[3,10876482,1.488491,8],[3,12143645,1.396419,8],[3,5807830,0.905371,8],[3,316791,0.230179,8],[3,316791,0.414322,8],[3,316791,0.690537,8],[3,14466777,0.537084,8],[3,14044389,0.506394,8],[3,18268265,0.84399,8],[3,12988420,0.905371,8],[3,13199614,1.488491,8],[3,12988420,0.567775,8],[3,10242900,1.089514,8],[3,12988420,0.537084,8],[3,14044389,0.322251,8],[3,12988420,0.383632,8],[3,10242900,0.598465,8],[3,10242900,0.506394,8],[3,10242900,0.230179,8],[3,7919768,0.567775,8],[3,12988420,0.015345,8],[3,14044389,0.046036,8],[3,14677970,0.26087,8],[3,14677970,0.29156,8],[3,6019024,1.150895,8],[3,11087675,0.997442,8],[3,11087675,1.488491,8],[3,18268265,0.445013,8],[3,18268265,0.383632,8],[3,18268265,0.015345,8],[3,10454094,0.997442,8],[3,3273504,0.383632,8],[3,5596636,0.168798,8],[3,14255583,0.567775,8],[3,14255583,0.751918,8],[3,14255583,0.87468,8],[3,14044389,0.84399,8],[3,5596636,0.107417,8],[3,5596636,0.046036,8],[3,6230218,0.721228,8],[3,6230218,0.813299,8],[3,3062310,0.537084,8],[3,3062310,0.506394,8],[3,13199614,0.383632,8],[3,3062310,0.138107,8],[3,4118279,0.598465,8],[3,14466777,0.138107,8],[3,13199614,0.87468,8],[3,6441411,0.598465,8],[3,3484698,0.29156,8],[3,6441411,0.721228,8],[3,6441411,0.751918,8],[3,3484698,0.383632,8],[3,4329473,0.659847,8],[3,6441411,1.948849,8],[3,14889164,0.015345,8],[3,14889164,0.26087,8],[3,14889164,0.29156,8],[3,14889164,0.690537,8],[3,3484698,0.445013,8],[3,2639923,1.304348,8],[3,11087675,0.138107,8],[3,2639923,1.150895,8],[3,12566032,0.629156,8],[3,12566032,0.29156,8],[3,2639923,0.782609,8],[3,10665288,0.936061,8],[3,2639923,0.751918,8],[3,3907086,0.322251,8],[3,12566032,0.230179,8],[3,3907086,0.29156,8],[3,14677970,0.506394,8],[3,6019024,0.230179,8],[3,11298869,0.659847,8],[3,11298869,0.782609,8],[3,11298869,0.905371,8],[3,2851117,0.813299,8],[3,2851117,0.659847,8],[3,6019024,0.138107,8],[3,6019024,0.046036,8],[3,12777226,0.567775,8],[3,10665288,0.659847,8],[3,2851117,0.506394,8],[3,2851117,0.383632,8],[3,6441411,0.352941,8],[3,6441411,0.414322,8],[3,12777226,0.475703,8],[3,10031706,1.42711,8],[3,3484698,0.168798,8],[3,10031706,0.813299,8],[3,11087675,0.29156,8],[3,10031706,0.782609,8],[3,10031706,0.29156,8],[3,10031706,0.26087,8],[3,9186931,0.87468,8],[3,9186931,1.150895,8],[3,9186931,1.42711,8],[3,16156327,8.332481,8],[3,17001102,0.107417,8],[3,527985,0.751918,8],[3,527985,0.659847,8],[3,17001102,0.475703,8],[3,17001102,0.506394,8],[3,17001102,0.751918,8],[3,739178,0.537084,8],[3,17001102,1.058824,8],[3,1161566,1.457801,8],[3,1161566,1.365729,8],[3,1161566,1.181586,8],[3,527985,0.506394,8],[3,7074993,0.598465,8],[3,7074993,0.690537,8],[3,8764543,0.629156,8],[3,7074993,0.751918,8],[3,527985,0.107417,8],[3,8764543,0.87468,8],[3,8764543,0.997442,8],[3,16156327,6.859335,8],[3,8764543,1.089514,8],[3,1161566,0.230179,8],[3,1161566,0.414322,8],[3,1161566,0.567775,8],[3,7074993,0.905371,8],[3,950372,0.567775,8],[3,950372,0.506394,8],[3,527985,0.475703,8],[3,1161566,0.87468,8],[3,1372760,0.445013,8],[3,1372760,1.396419,8],[3,1372760,1.672634,8],[3,16578715,0.352941,8],[3,16578715,0.107417,8],[3,1372760,0.29156,8],[3,1372760,0.26087,8],[3,8975737,0.936061,8],[3,8975737,0.905371,8],[3,8975737,0.87468,8],[3,16789909,0.015345,8],[3,16789909,0.322251,8],[3,16789909,0.383632,8],[3,16789909,1.058824,8],[3,1583954,0.475703,8],[3,17634684,0.230179,8],[3,9186931,0.782609,8],[3,9186931,0.751918,8],[3,739178,0.690537,8],[3,739178,0.905371,8],[3,9186931,0.537084,8],[3,17634684,1.150895,8],[3,8553350,1.734015,8],[3,17634684,0.567775,8],[3,8553350,0.782609,8],[3,8553350,0.659847,8],[3,16367521,0.168798,8],[3,739178,0.966752,8],[3,16367521,0.475703,8],[3,1583954,1.703325,8],[3,1583954,1.028133,8],[3,1583954,0.629156,8],[3,1583954,0.537084,8],[3,17212296,1.181586,8],[3,7708574,0.936061,8],[3,16156327,0.199488,8],[3,7497381,0.659847,8],[3,7497381,0.690537,8],[3,7497381,0.751918,8],[3,1795147,0.076726,8],[3,7497381,0.782609,8],[3,7497381,1.304348,8],[3,16156327,0.352941,8],[3,7497381,0.475703,8],[3,7497381,0.629156,8],[3,17212296,0.015345,8],[3,7497381,0.414322,8],[3,16156327,0.567775,8],[3,16156327,0.107417,8],[3,2639923,0.230179,9],[3,17634684,0.659847,9],[3,2639923,0.199488,9],[3,2639923,0.168798,9],[3,9398125,0.506394,9],[3,9398125,0.445013,9],[3,9820513,0.598465,9],[3,12777226,1.611253,9],[3,9820513,0.721228,9],[3,9820513,1.028133,9],[3,8975737,0.475703,9],[3,6230218,0.966752,9],[3,4963055,0.445013,9],[3,12354838,0.690537,9],[3,17634684,0.322251,9],[3,8553350,0.721228,9],[3,7919768,1.396419,9],[3,15100358,0.046036,9],[3,12777226,0.936061,9],[3,15100358,0.322251,9],[3,15100358,0.107417,9],[3,3062310,0.26087,9],[3,7286187,0.690537,9],[3,739178,0.567775,9],[3,4118279,0.168798,9],[3,9186931,0.567775,9],[3,18479459,0.537084,9],[3,950372,0.199488,9],[3,6652605,0.138107,9],[3,17423490,0.29156,9],[3,10876482,0.475703,9],[3,12988420,0.168798,9],[3,5174249,0.782609,9],[3,14255583,0.168798,9],[3,12354838,0.015345,9],[3,14255583,0.26087,9],[3,14255583,0.475703,9],[3,14255583,0.537084,9],[3,10876482,0.782609,9],[3,14255583,0.84399,9],[3,105597,1.089514,9],[3,12354838,0.26087,9],[3,12354838,0.322251,9],[3,12354838,0.383632,9],[3,12354838,0.414322,9],[3,8342156,1.028133,9],[3,2428729,0.659847,9],[3,6230218,0.383632,9],[3,2428729,0.751918,9],[3,12354838,0.475703,9],[3,8553350,1.028133,9],[3,17634684,0.721228,9],[3,16789909,0.076726,9],[3,5385442,0.782609,9],[3,10031706,0.383632,9],[3,10242900,0.782609,9],[3,13410807,0.414322,9],[3,10242900,0.475703,9],[3,8975737,1.335038,9],[3,11510063,0.567775,9],[3,10031706,0.936061,9],[3,10242900,0.199488,9],[3,7919768,0.84399,9],[3,5385442,0.475703,9],[3,11510063,0.445013,9],[3,6441411,0.506394,9],[3,6441411,0.445013,9],[3,5385442,0.352941,9],[3,5385442,0.29156,9],[3,6441411,0.29156,9],[3,14677970,0.076726,9],[3,14677970,0.107417,9],[3,11510063,0.352941,9],[3,12566032,0.445013,9],[3,12566032,0.414322,9],[3,14677970,0.445013,9],[3,8130962,1.028133,9],[3,12566032,0.076726,9],[3,1795147,0.26087,9],[3,1372760,0.598465,9],[3,14677970,0.598465,9],[3,4963055,0.230179,9],[3,4540667,0.567775,9],[3,12777226,0.199488,9],[3,4540667,0.414322,9],[3,8975737,0.598465,9],[3,16367521,0.138107,9],[3,316791,0.26087,9],[3,10876482,0.905371,9],[3,4540667,0.230179,9],[3,16367521,0.26087,9],[3,4540667,0.199488,9],[3,10876482,1.365729,9],[3,16367521,0.506394,9],[3,8553350,0.506394,9],[3,2639923,1.181586,9],[3,17212296,0.26087,9],[3,1583954,1.212276,9],[3,1583954,1.058824,9],[3,4329473,0.751918,9],[3,4329473,0.87468,9],[3,1583954,0.751918,9],[3,1583954,0.659847,9],[3,316791,0.751918,9],[3,6441411,0.813299,9],[3,1583954,0.567775,9],[3,8342156,1.335038,9],[3,8975737,0.751918,9],[3,4540667,0.138107,9],[3,105597,0.352941,9],[3,14466777,0.936061,9],[3,5385442,1.120205,9],[3,15945133,10.879795,9],[3,739178,0.352941,9],[3,950372,0.751918,9],[3,527985,0.352941,9],[3,950372,0.659847,9],[3,5807830,0.26087,9],[3,15522746,0.26087,9],[3,16156327,0.659847,9],[3,15733939,0.107417,9],[3,950372,0.537084,9],[3,5596636,0.598465,9],[3,4963055,0.782609,9],[3,10665288,0.414322,9],[3,739178,0.475703,9],[3,15522746,0.076726,9],[3,5596636,0.383632,9],[3,1161566,0.813299,9],[3,7497381,0.721228,9],[3,6019024,0.199488,9],[3,18057071,0.445013,9],[3,1161566,0.905371,9],[3,6019024,0.567775,9],[3,2217535,0.352941,9],[3,8342156,0.383632,9],[3,5807830,0.015345,9],[3,7708574,0.659847,9],[3,2217535,0.475703,9],[3,105597,0.813299,9],[3,950372,1.028133,9],[3,6863799,0.567775,9],[3,13833195,0.445013,9],[3,6863799,0.506394,9],[3,527985,0.29156,9],[3,6863799,0.414322,9],[3,6863799,0.383632,9],[3,13199614,0.322251,9],[3,6863799,0.690537,9],[3,6863799,0.199488,9],[3,6863799,0.84399,9],[3,4751861,0.29156,9],[3,12143645,0.690537,9],[3,1161566,0.322251,9],[3,10665288,0.782609,9],[3,3484698,0.567775,9],[3,7708574,1.058824,9],[3,11721257,0.813299,9],[3,13199614,0.138107,9],[3,3484698,0.414322,9],[3,9609319,0.475703,9],[3,3484698,0.352941,9],[3,9609319,0.567775,9],[3,13199614,0.537084,9],[3,1161566,0.629156,9],[3,9609319,0.721228,9],[3,2006341,0.905371,9],[3,527985,0.966752,9],[3,6652605,0.997442,9],[3,4963055,0.567775,9],[3,2006341,0.751918,9],[3,7286187,1.212276,9],[3,7074993,0.629156,9],[3,7708574,0.721228,9],[3,13622001,0.046036,9],[3,6652605,0.567775,9],[3,8764543,0.475703,9],[3,9186931,0.84399,9],[3,18268265,0.29156,9],[3,2006341,0.537084,9],[3,950372,0.322251,9],[3,3273504,0.046036,9],[3,11932451,0.659847,9],[3,8342156,0.87468,9],[3,3273504,0.015345,9],[3,18268265,0.046036,9],[3,5174249,0.506394,9],[3,2006341,0.475703,9],[3,13622001,0.015345,9],[3,950372,1.212276,9],[3,7074993,0.997442,9],[3,17001102,0.29156,9],[3,7074993,1.028133,9],[3,8342156,0.659847,9],[3,17001102,0.352941,9],[3,7497381,1.549872,9],[3,527985,0.813299,9],[3,14044389,1.181586,9],[3,2217535,0.905371,9],[3,105597,0.537084,9],[3,17001102,0.138107,9],[3,17212296,0.107417,9],[3,7074993,0.936061,9],[3,11087675,0.567775,9],[3,527985,0.936061,9],[3,13622001,0.322251,9],[3,7074993,1.212276,9],[3,8130962,0.905371,10],[3,13410807,0.107417,10],[3,13410807,0.199488,10],[3,13833195,0.26087,10],[3,8975737,0.84399,10],[3,739178,1.181586,10],[3,7919768,0.629156,10],[3,10242900,0.445013,10],[3,14677970,0.567775,10],[3,10242900,0.352941,10],[3,10242900,0.046036,10],[3,14677970,0.138107,10],[3,14677970,0.168798,10],[3,3695892,0.322251,10],[3,8764543,0.84399,10],[3,8553350,0.322251,10],[3,8764543,0.782609,10],[3,7919768,0.537084,10],[3,8553350,0.352941,10],[3,7497381,0.352941,10],[3,8764543,0.751918,10],[3,13199614,0.751918,10],[3,739178,1.242967,10],[3,3695892,0.138107,10],[3,13199614,0.506394,10],[3,8764543,0.966752,10],[3,1372760,0.414322,10],[3,13410807,0.015345,10],[3,11298869,0.322251,10],[3,10876482,0.813299,10],[3,11298869,0.230179,10],[3,11298869,0.107417,10],[3,12988420,0.046036,10],[3,7286187,0.506394,10],[3,12988420,0.107417,10],[3,17001102,0.015345,10],[3,7286187,0.87468,10],[3,11087675,0.076726,10],[3,12988420,0.138107,10],[3,7286187,0.782609,10],[3,7497381,0.598465,10],[3,12988420,0.29156,10],[3,17423490,0.076726,10],[3,17423490,0.046036,10],[3,950372,0.29156,10],[3,4118279,0.076726,10],[3,10454094,0.629156,10],[3,10454094,0.690537,10],[3,10454094,0.905371,10],[3,10454094,1.795396,10],[3,7286187,0.751918,10],[3,13410807,0.721228,10],[3,8764543,1.058824,10],[3,8130962,0.659847,10],[3,8764543,0.352941,10],[3,1161566,0.076726,10],[3,10665288,1.058824,10],[3,1161566,0.107417,10],[3,8975737,0.721228,10],[3,13410807,0.997442,10],[3,316791,0.659847,10],[3,8130962,0.598465,10],[3,14466777,0.230179,10],[3,10876482,1.089514,10],[3,316791,0.076726,10],[3,12777226,0.168798,10],[3,10665288,0.629156,10],[3,8553350,0.629156,10],[3,14466777,0.107417,10],[3,950372,0.475703,10],[3,14044389,0.29156,10],[3,8553350,0.966752,10],[3,8553350,1.181586,10],[3,14044389,0.936061,10],[3,12354838,0.87468,10],[3,9609319,0.506394,10],[3,739178,0.26087,10],[3,4751861,0.168798,10],[3,4751861,0.199488,10],[3,4751861,0.322251,10],[3,4751861,0.383632,10],[3,2639923,0.383632,10],[3,6863799,0.29156,10],[3,4540667,0.352941,10],[3,6863799,0.352941,10],[3,6863799,0.659847,10],[3,4540667,0.322251,10],[3,12143645,0.537084,10],[3,6863799,1.457801,10],[3,12143645,0.322251,10],[3,2006341,0.659847,10],[3,14889164,0.629156,10],[3,1583954,0.782609,10],[3,14889164,0.107417,10],[3,11932451,0.813299,10],[3,2006341,0.445013,10],[3,6441411,0.84399,10],[3,1583954,0.506394,10],[3,10031706,0.199488,10],[3,11510063,1.488491,10],[3,15311552,0.046036,10],[3,15311552,0.26087,10],[3,6652605,0.414322,10],[3,6652605,0.322251,10],[3,5174249,0.567775,10],[3,739178,0.659847,10],[3,6652605,0.813299,10],[3,12143645,8.332481,10],[3,2217535,1.028133,10],[3,17634684,1.242967,10],[3,2217535,0.567775,10],[3,9820513,0.506394,10],[3,11721257,0.383632,10],[3,9820513,0.537084,10],[3,12354838,0.076726,10],[3,17634684,0.751918,10],[3,11721257,0.445013,10],[3,15522746,0.046036,10],[3,18057071,0.352941,10],[3,11721257,0.506394,10],[3,11721257,0.537084,10],[3,11721257,0.567775,10],[3,15522746,0.199488,10],[3,527985,0.383632,10],[3,2428729,0.997442,10],[3,15100358,1.457801,10],[3,1795147,0.414322,10],[3,1583954,0.076726,10],[3,8342156,0.782609,10],[3,8342156,0.721228,10],[3,11510063,0.506394,10],[3,2851117,0.199488,10],[3,105597,0.598465,10],[3,10031706,0.966752,10],[3,12566032,0.046036,10],[3,16156327,0.29156,10],[3,4963055,0.751918,10],[3,7708574,1.028133,10],[3,17634684,0.138107,10],[3,1795147,0.383632,10],[3,9398125,0.629156,10],[3,6441411,0.322251,10],[3,10031706,0.414322,10],[3,9398125,0.414322,10],[3,10031706,0.445013,10],[3,10031706,0.506394,10],[3,17634684,0.046036,10],[3,10031706,0.598465,10],[3,9398125,0.567775,10],[3,2006341,0.076726,10],[3,9398125,0.26087,10],[3,10031706,0.690537,10],[3,105597,0.107417,10],[3,9398125,0.598465,10],[3,1795147,0.107417,10],[3,2217535,0.506394,11],[3,13410807,0.26087,11],[3,6019024,0.168798,11],[3,13410807,0.445013,11],[3,5596636,0.352941,11],[3,14044389,0.230179,11],[3,3907086,0.168798,11],[3,5596636,0.29156,11],[3,3907086,0.199488,11],[3,3907086,0.230179,11],[3,7708574,0.751918,11],[3,2217535,0.383632,11],[3,16156327,0.015345,11],[3,10454094,0.721228,11],[3,15311552,0.168798,11],[3,7286187,0.721228,11],[3,1795147,0.230179,11],[3,5174249,0.445013,11],[3,18268265,0.138107,11],[3,13410807,0.076726,11],[3,4118279,0.015345,11],[3,15311552,0.690537,11],[3,950372,0.445013,11],[3,18268265,0.26087,11],[3,9186931,0.936061,11],[3,7286187,0.813299,11],[3,6652605,0.84399,11],[3,6652605,1.181586,11],[3,3907086,0.138107,11],[3,11721257,0.230179,11],[3,7074993,0.966752,11],[3,14044389,0.445013,11],[3,7708574,0.690537,11],[3,1161566,0.015345,11],[3,13199614,0.352941,11],[3,17212296,0.046036,11],[3,6863799,1.150895,11],[3,13833195,0.076726,11],[3,13833195,0.046036,11],[3,527985,0.199488,11],[3,8764543,0.322251,11],[3,12143645,0.046036,11],[3,527985,0.015345,11],[3,8764543,0.690537,11],[3,12143645,0.015345,11],[3,7497381,1.028133,11],[3,11932451,0.29156,11],[3,950372,2.716113,11],[3,7708574,0.629156,11],[3,2006341,0.383632,11],[3,2006341,0.230179,11],[3,3695892,0.29156,11],[3,13410807,1.304348,11],[3,4963055,0.352941,11],[3,18057071,0.168798,11],[3,5596636,0.537084,11],[3,18057071,0.015345,11],[3,13199614,0.015345,11],[3,3484698,0.107417,11],[3,9609319,0.690537,11],[3,8130962,0.506394,11],[3,739178,0.322251,11],[3,13199614,0.076726,11],[3,1161566,0.537084,11],[3,17212296,0.138107,11],[3,4963055,0.475703,11],[3,1161566,0.506394,11],[3,11721257,0.751918,11],[3,7497381,0.567775,11],[3,1161566,0.29156,11],[3,950372,0.84399,11],[3,739178,0.168798,11],[3,13833195,1.42711,11],[3,6230218,0.629156,11],[3,5385442,0.629156,11],[3,8553350,1.150895,11],[3,5385442,0.567775,11],[3,6230218,0.445013,11],[3,10031706,1.058824,11],[3,1583954,0.199488,11],[3,6230218,0.414322,11],[3,2428729,0.721228,11],[3,6230218,0.352941,11],[3,11298869,0.445013,11],[3,7919768,0.721228,11],[3,9186931,0.475703,11],[3,11298869,0.015345,11],[3,17423490,0.414322,11],[3,14255583,0.997442,11],[3,18479459,0.046036,11],[3,2639923,0.598465,11],[3,2639923,0.905371,11],[3,12777226,0.046036,11],[3,16367521,0.721228,11],[3,14466777,0.29156,11],[3,316791,0.537084,11],[3,17634684,0.29156,11],[3,14466777,0.015345,11],[3,3062310,0.107417,11],[3,3062310,0.168798,11],[3,1583954,0.445013,11],[3,17634684,0.352941,11],[3,3062310,0.322251,11],[3,10031706,0.567775,11],[3,1583954,0.352941,11],[3,8975737,0.997442,11],[3,11298869,0.936061,11],[3,5385442,0.659847,11],[3,18479459,0.598465,11],[3,15311552,0.107417,11],[3,9186931,0.629156,11],[3,17634684,0.076726,11],[3,7919768,0.322251,11],[3,10454094,0.445013,11],[3,11510063,0.138107,11],[3,18479459,0.475703,11],[3,5174249,0.629156,11],[3,12566032,0.537084,11],[3,7919768,0.506394,11],[3,739178,0.84399,11],[3,6441411,0.168798,11],[3,6441411,0.230179,11],[3,12988420,0.076726,11],[3,14677970,0.015345,11],[3,9820513,0.383632,11],[3,7286187,0.567775,11],[3,9820513,0.352941,11],[3,6441411,0.26087,11],[3,11932451,0.445013,12],[3,4963055,0.414322,12],[3,7074993,0.475703,12],[3,4540667,0.015345,12],[3,7708574,0.537084,12],[3,1583954,0.598465,12],[3,11510063,0.383632,12],[3,16578715,0.046036,12],[3,8975737,0.690537,12],[3,7074993,0.659847,12],[3,316791,0.567775,12],[3,10876482,0.659847,12],[3,15733939,0.598465,12],[3,6441411,0.383632,12],[3,17212296,0.199488,12],[3,8553350,0.537084,12],[3,8975737,0.629156,12],[3,316791,0.383632,12],[3,14677970,0.721228,12],[3,1583954,0.015345,12],[3,1583954,0.322251,12],[3,9398125,0.322251,12],[3,5807830,0.076726,12],[3,1372760,0.046036,12],[3,16156327,0.414322,12],[3,8553350,0.26087,12],[3,105597,0.383632,12],[3,11932451,0.168798,12],[3,5385442,0.230179,12],[3,5385442,0.26087,12],[3,11932451,0.26087,12],[3,1372760,0.138107,12],[3,10031706,0.659847,12],[3,2006341,0.138107,12],[3,10876482,0.383632,12],[3,8130962,0.751918,12],[3,16156327,0.168798,12],[3,6441411,0.537084,12],[3,8764543,0.445013,12],[3,11510063,0.26087,12],[3,11510063,0.414322,12],[3,13410807,0.230179,12],[3,9609319,0.905371,12],[3,6230218,0.751918,12],[3,12354838,0.537084,12],[3,1161566,0.782609,12],[3,739178,0.414322,12],[3,10665288,0.567775,12],[3,950372,0.230179,12],[3,6230218,0.475703,12],[3,18057071,0.322251,12],[3,6019024,0.015345,12],[3,11298869,0.537084,12],[3,2217535,0.230179,12],[3,1161566,0.936061,12],[3,1161566,0.966752,12],[3,11721257,0.414322,12],[3,17423490,0.26087,12],[3,14255583,0.690537,12],[3,2217535,0.629156,12],[3,14044389,0.813299,12],[3,5174249,0.138107,12],[3,527985,0.84399,12],[3,7286187,0.598465,12],[3,18479459,0.84399,12],[3,5174249,0.322251,12],[3,9820513,0.29156,12],[3,6652605,0.721228,12],[3,5596636,0.199488,12],[3,3273504,0.168798,12],[3,14255583,0.076726,12],[3,3273504,0.199488,12],[3,6863799,0.537084,12],[3,6863799,0.445013,12],[3,8975737,0.567775,12],[3,316791,0.138107,12],[3,12777226,0.138107,12],[3,2639923,0.414322,12],[3,13833195,0.352941,12],[3,2639923,0.352941,12],[3,7286187,0.659847,12],[3,4540667,0.506394,12],[3,15311552,0.199488,12],[3,6863799,0.598465,12],[3,12777226,0.352941,12],[3,8975737,0.506394,12],[3,4751861,0.230179,12],[3,13199614,0.414322,12],[3,6652605,0.506394,12],[3,13199614,0.168798,12],[3,4540667,0.690537,12],[3,9609319,0.445013,12],[3,17634684,0.475703,12],[3,9186931,0.690537,12],[3,5174249,0.414322,12],[3,8975737,0.352941,12],[3,9186931,0.230179,12],[3,3484698,0.138107,12],[3,9820513,0.690537,12],[3,5385442,0.168798,13],[3,12566032,0.168798,13],[3,4963055,0.26087,13],[3,18479459,0.322251,13],[3,4963055,0.29156,13],[3,11510063,0.199488,13],[3,105597,0.138107,13],[3,11510063,0.168798,13],[3,12777226,0.076726,13],[3,4329473,0.076726,13],[3,739178,0.107417,13],[3,8553350,0.414322,13],[3,4540667,0.046036,13],[3,12777226,0.537084,13],[3,12354838,0.721228,13],[3,17634684,0.168798,13],[3,12354838,0.506394,13],[3,11298869,0.598465,13],[3,11721257,0.352941,13],[3,8130962,0.475703,13],[3,5596636,0.26087,13],[3,18479459,0.138107,13],[3,18479459,0.199488,13],[3,8130962,0.629156,13],[3,11510063,0.322251,13],[3,105597,0.26087,13],[3,10454094,0.199488,13],[3,10454094,0.168798,13],[3,10665288,0.751918,13],[3,15311552,0.138107,13],[3,9186931,0.721228,13],[3,9186931,0.813299,13],[3,1161566,0.138107,13],[3,6441411,0.046036,13],[3,14255583,0.107417,13],[3,14255583,0.629156,13],[3,2217535,0.414322,13],[3,18057071,0.26087,13],[3,527985,0.445013,13],[3,2851117,0.322251,13],[3,9609319,0.29156,13],[3,6863799,0.107417,13],[3,7919768,0.199488,13],[3,15100358,0.076726,13],[3,10454094,0.475703,13],[3,10454094,0.537084,13],[3,10454094,0.567775,13],[3,9186931,0.138107,13],[3,9186931,0.168798,13],[3,9186931,0.383632,13],[3,2428729,0.813299,13],[3,10454094,0.383632,13],[3,2428729,0.475703,13],[3,9186931,0.506394,13],[3,14044389,0.26087,13],[3,16367521,0.352941,13],[3,9820513,0.445013,13],[3,10665288,0.445013,13],[3,1583954,0.230179,13],[3,1583954,0.138107,13],[3,10665288,0.690537,13],[3,1795147,0.138107,13],[3,316791,0.199488,13],[3,316791,0.475703,13],[3,8975737,0.414322,13],[3,7497381,0.29156,13],[3,3062310,0.015345,13],[3,8342156,0.751918,13],[3,10242900,0.322251,13],[3,13410807,1.212276,13],[3,10242900,0.168798,13],[3,10242900,0.076726,13],[3,7074993,0.230179,13],[3,10242900,0.015345,13],[3,10876482,0.445013,13],[3,10876482,0.414322,13],[3,7919768,0.475703,13],[3,3695892,0.199488,13],[3,7074993,0.506394,13],[3,1372760,0.199488,13],[3,527985,0.046036,13],[3,3695892,0.414322,13],[3,14677970,0.690537,13],[3,8764543,0.383632,13],[3,8553350,0.567775,14],[3,12777226,0.107417,14],[3,1372760,1.150895,14],[3,12777226,0.015345,14],[3,2851117,0.26087,14],[3,8975737,0.659847,14],[3,11510063,0.230179,14],[3,2639923,0.29156,14],[3,7919768,0.383632,14],[3,8553350,0.107417,14],[3,10031706,0.076726,14],[3,10031706,0.352941,14],[3,10242900,0.29156,14],[3,7919768,0.445013,14],[3,10031706,0.751918,14],[3,8553350,0.230179,14],[3,14677970,0.199488,14],[3,6441411,0.138107,14],[3,5385442,0.199488,14],[3,527985,0.230179,14],[3,739178,0.076726,14],[3,7708574,0.445013,14],[3,7074993,0.537084,14],[3,11932451,0.537084,14],[3,11932451,0.506394,14],[3,2006341,0.199488,14],[3,11932451,0.383632,14],[3,7074993,0.445013,14],[3,11932451,0.107417,14],[3,11932451,0.076726,14],[3,8342156,0.445013,14],[3,9398125,0.782609,14],[3,16156327,0.046036,14],[3,9398125,0.475703,14],[3,9398125,0.383632,14],[3,1795147,0.046036,14],[3,105597,0.230179,14],[3,1795147,0.475703,14],[3,1795147,0.199488,14],[3,7708574,0.84399,14],[3,16367521,0.046036,14],[3,2428729,0.598465,14],[3,12354838,0.138107,14],[3,12354838,0.107417,14],[3,2428729,0.383632,14],[3,12354838,0.046036,14],[3,9820513,0.322251,14],[3,9820513,0.168798,14],[3,18479459,0.383632,14],[3,6652605,0.26087,14],[3,6652605,0.352941,14],[3,5174249,0.352941,14],[3,5174249,0.26087,14],[3,6652605,0.936061,14],[3,527985,0.782609,14],[3,18479459,1.365729,14],[3,9609319,0.414322,14],[3,739178,0.29156,14],[3,739178,0.230179,14],[3,739178,0.199488,14],[3,6863799,0.936061,14],[3,8130962,0.445013,14],[3,10665288,0.383632,14],[3,11087675,0.046036,14],[3,10876482,0.352941,14],[3,10876482,0.322251,14],[3,10665288,0.506394,14],[3,6230218,0.598465,14],[3,10665288,0.598465,14],[3,950372,0.046036,14],[3,8764543,0.414322,14],[3,10454094,0.352941,14],[3,6230218,0.29156,14],[3,8764543,0.506394,14],[3,8764543,0.905371,14],[3,1161566,0.383632,14],[3,7286187,0.629156,14],[3,14255583,0.782609,14],[3,7497381,0.383632,14],[3,13410807,0.138107,14],[3,7497381,0.445013,14],[3,5596636,0.015345,14],[3,18268265,0.199488,14],[3,17212296,0.168798,14],[3,7497381,0.506394,14],[3,3062310,0.230179,14],[3,1161566,1.212276,14],[3,10876482,0.506394,14],[3,10876482,0.598465,14],[3,5174249,0.076726,15],[3,5174249,0.168798,15],[3,5174249,0.199488,15],[3,13199614,0.26087,15],[3,1161566,0.445013,15],[3,15311552,0.629156,15],[3,15311552,0.322251,15],[3,2639923,0.076726,15],[3,15311552,0.015345,15],[3,10665288,0.721228,15],[3,3273504,0.076726,15],[3,2428729,0.107417,15],[3,9186931,0.29156,15],[3,6652605,0.230179,15],[3,9186931,0.352941,15],[3,5596636,0.076726,15],[3,5596636,0.138107,15],[3,3273504,0.138107,15],[3,4963055,0.322251,15],[3,9398125,0.230179,15],[3,9398125,0.352941,15],[3,7497381,0.322251,15],[3,7497381,0.26087,15],[3,8342156,0.690537,15],[3,8342156,0.567775,15],[3,8342156,0.537084,15],[3,8342156,0.506394,15],[3,2006341,0.046036,15],[3,3907086,0.352941,15],[3,2006341,0.29156,15],[3,2006341,0.629156,15],[3,7074993,0.721228,15],[3,11087675,0.168798,15],[3,6863799,0.26087,15],[3,3695892,0.230179,15],[3,8764543,0.598465,15],[3,9609319,0.352941,15],[3,9609319,0.537084,15],[3,527985,0.322251,15],[3,13833195,0.168798,15],[3,18057071,0.138107,15],[3,13833195,0.29156,15],[3,8764543,1.212276,15],[3,2217535,0.598465,15],[3,527985,0.598465,15],[3,11721257,0.138107,15],[3,527985,0.690537,15],[3,10031706,0.138107,15],[3,950372,0.015345,15],[3,1583954,0.168798,15],[3,11510063,0.475703,15],[3,10454094,0.322251,15],[3,6441411,0.199488,15],[3,7286187,0.445013,15],[3,11510063,0.076726,15],[3,11510063,0.046036,15],[3,2851117,0.352941,15],[3,7919768,0.29156,15],[3,11298869,0.199488,15],[3,7286187,0.414322,15],[3,14677970,0.046036,15],[3,7286187,0.383632,15],[3,7286187,0.352941,15],[3,316791,0.598465,15],[3,3062310,0.076726,15],[3,14466777,0.046036,15],[3,8975737,0.537084,15],[3,14466777,0.168798,15],[3,8553350,0.598465,15],[3,2639923,0.107417,15],[3,16367521,0.076726,15],[3,16367521,0.230179,15],[3,16367521,0.199488,15],[3,2639923,0.445013,15],[3,10031706,0.046036,15],[3,10454094,0.414322,15],[3,10242900,0.138107,16],[3,10242900,0.107417,16],[3,7919768,0.690537,16],[3,7708574,0.475703,16],[3,10876482,0.26087,16],[3,7708574,0.168798,16],[3,17212296,0.076726,16],[3,8764543,0.199488,16],[3,6230218,0.506394,16],[3,6230218,0.322251,16],[3,739178,0.138107,16],[3,950372,1.764706,16],[3,6230218,0.230179,16],[3,4751861,0.076726,16],[3,14677970,0.322251,16],[3,8553350,0.138107,16],[3,16367521,0.107417,16],[3,105597,0.046036,16],[3,105597,0.076726,16],[3,3907086,0.076726,16],[3,1795147,0.322251,16],[3,3907086,0.015345,16],[3,4963055,0.046036,16],[3,316791,0.046036,16],[3,4963055,0.015345,16],[3,9186931,0.076726,16],[3,316791,0.322251,16],[3,7497381,0.138107,16],[3,17212296,0.506394,16],[3,14466777,0.26087,16],[3,8342156,0.26087,16],[3,10242900,0.905371,16],[3,8342156,0.138107,16],[3,8975737,0.107417,16],[3,11932451,0.322251,16],[3,10242900,0.26087,16],[3,9186931,0.199488,16],[3,6230218,0.015345,16],[3,11721257,0.046036,16],[3,2428729,0.537084,16],[3,2851117,0.138107,16],[3,2851117,0.076726,16],[3,13199614,0.230179,16],[3,1583954,0.107417,16],[3,13199614,0.107417,16],[3,3484698,0.230179,16],[3,950372,0.107417,16],[3,3484698,0.015345,16],[3,10665288,0.537084,16],[3,9820513,0.230179,16],[3,2428729,0.015345,16],[3,2428729,0.046036,16],[3,10031706,0.230179,16],[3,950372,0.076726,16],[3,10665288,0.29156,16],[3,6019024,0.076726,16],[3,11721257,0.26087,16],[3,13833195,0.322251,16],[3,9186931,0.107417,17],[3,9398125,0.29156,17],[3,14466777,0.076726,17],[3,2217535,0.29156,17],[3,950372,0.26087,17],[3,7497381,0.230179,17],[3,9820513,0.138107,17],[3,316791,0.352941,17],[3,1583954,0.414322,17],[3,6652605,0.076726,17],[3,6652605,0.107417,17],[3,8553350,0.475703,17],[3,950372,0.168798,17],[3,8342156,0.414322,17],[3,6230218,0.046036,17],[3,1795147,0.015345,17],[3,9820513,0.199488,17],[3,6230218,0.199488,17],[3,2217535,0.26087,17],[3,316791,0.015345,17],[3,4963055,0.076726,17],[3,18057071,0.107417,17],[3,105597,0.168798,17],[3,2428729,0.414322,17],[3,3907086,0.107417,17],[3,1795147,0.168798,17],[3,11298869,0.138107,17],[3,18057071,0.230179,17],[3,2428729,0.29156,17],[3,6230218,0.107417,17],[3,9186931,0.322251,17],[3,5385442,0.107417,17],[3,6863799,0.168798,17],[3,950372,0.383632,17],[3,6863799,0.076726,17],[3,2428729,0.567775,17],[3,6863799,0.046036,17],[3,1161566,0.046036,17],[3,7708574,0.414322,17],[3,527985,0.168798,17],[3,2851117,0.168798,17],[3,6230218,0.537084,17],[3,6863799,0.015345,17],[3,9609319,0.230179,17],[3,11721257,0.29156,17],[3,10876482,0.29156,17],[3,9186931,0.26087,17],[3,10454094,0.046036,17],[3,2428729,0.506394,17],[3,5174249,0.383632,17],[3,8130962,0.352941,17],[3,9609319,0.322251,17],[3,4751861,0.107417,17],[3,7286187,0.199488,17],[3,2006341,0.107417,17],[3,2217535,0.445013,17],[3,13622001,0.29156,17],[3,7074993,0.29156,17],[3,3273504,0.230179,17],[3,8975737,0.230179,17],[3,316791,0.629156,17],[3,10454094,0.230179,18],[3,10031706,0.322251,18],[3,9820513,0.015345,18],[3,9398125,0.199488,18],[3,9398125,0.168798,18],[3,8764543,0.168798,18],[3,8764543,0.076726,18],[3,8342156,0.352941,18],[3,8342156,0.29156,18],[3,8342156,0.230179,18],[3,7919768,0.414322,18],[3,7708574,0.230179,18],[3,6652605,0.383632,18],[3,6441411,0.107417,18],[3,6441411,0.015345,18],[3,5385442,0.138107,18],[3,5385442,0.076726,18],[3,5174249,0.230179,18],[3,5174249,0.046036,18],[3,3907086,0.046036,18],[3,2851117,0.29156,18],[3,2851117,0.107417,18],[3,2639923,0.322251,18],[3,2428729,0.352941,18],[3,2428729,0.168798,18],[3,2006341,0.015345,18],[3,1583954,0.26087,18],[3,1583954,0.046036,18],[3,1161566,0.199488,18],[3,316791,0.107417,18],[3,105597,0.199488,18],[3,105597,0.015345,18],[3,18479459,0.015345,18],[3,11721257,0.199488,18],[3,16156327,0.076726,18],[3,11721257,0.168798,18],[3,12988420,1.42711,18],[3,11721257,0.076726,18],[3,3695892,0.107417,19],[3,3695892,0.168798,19],[3,9609319,0.659847,19],[3,9609319,0.383632,19],[3,5174249,0.107417,19],[3,10876482,0.107417,19],[3,6652605,0.168798,19],[3,6652605,0.29156,19],[3,7286187,0.29156,19],[3,8975737,0.445013,19],[3,11298869,0.352941,19],[3,7708574,0.506394,19],[3,7708574,0.567775,19],[3,8130962,0.29156,19],[3,8342156,0.199488,19],[3,8975737,0.015345,19],[3,8553350,0.015345,19],[3,11932451,0.046036,19],[3,11932451,0.138107,19],[3,527985,0.138107,19],[3,12566032,0.015345,19],[3,739178,0.046036,19],[3,1161566,0.168798,19],[3,2217535,0.199488,19],[3,10665288,0.168798,19],[3,1372760,1.856777,19],[3,2006341,0.322251,20],[3,7286187,0.322251,20],[3,2006341,0.26087,20],[3,7286187,0.537084,20],[3,7708574,0.138107,20],[3,13833195,0.015345,20],[3,7919768,0.138107,20],[3,7919768,0.659847,20],[3,10876482,0.230179,20],[3,18057071,0.199488,20],[3,8553350,0.383632,20],[3,7074993,0.26087,20],[3,2217535,0.107417,20],[3,6652605,0.199488,20],[3,6652605,0.015345,20],[3,2217535,0.537084,20],[3,6230218,0.168798,20],[3,6230218,0.138107,20],[3,6230218,0.076726,20],[3,2428729,0.26087,20],[3,11721257,0.107417,20],[3,5174249,0.29156,20],[3,2639923,0.138107,20],[3,2851117,0.046036,20],[3,4963055,0.138107,20],[3,3273504,0.107417,20],[3,3484698,0.046036,20],[3,8975737,0.138107,20],[3,9609319,0.26087,20],[3,8975737,0.322251,20],[3,8975737,0.383632,20],[3,7497381,0.076726,21],[3,10031706,0.168798,21],[3,1161566,0.352941,21],[3,10665288,0.138107,21],[3,7708574,0.383632,21],[3,8130962,0.414322,21],[3,6441411,0.076726,21],[3,3484698,0.076726,21],[3,7286187,0.076726,21],[3,7286187,0.475703,21],[3,10454094,0.29156,21],[3,10454094,0.26087,21],[3,7919768,0.230179,21],[3,4963055,0.107417,21],[3,11932451,0.015345,21],[3,2639923,0.046036,21],[3,8764543,0.046036,21],[3,527985,0.567775,21],[3,8553350,0.29156,21],[3,8553350,0.199488,21],[3,5596636,0.230179,21],[3,7074993,0.352941,21],[3,5385442,0.015345,21],[3,8342156,0.598465,21],[3,10876482,0.199488,21],[3,7074993,0.383632,21],[3,7497381,0.107417,21],[3,7708574,0.26087,21],[3,7708574,0.107417,22],[3,7708574,0.352941,22],[3,10031706,0.015345,22],[3,7286187,0.26087,22],[3,8975737,0.168798,22],[3,7497381,0.199488,22],[3,7919768,0.168798,22],[3,9820513,0.046036,22],[3,9820513,0.076726,22],[3,3695892,0.076726,22],[3,7074993,0.322251,22],[3,8764543,0.26087,22],[3,4751861,0.015345,22],[3,11087675,0.015345,22],[3,7074993,0.567775,22],[3,8342156,0.168798,22],[3,16367521,0.015345,22],[3,8342156,0.015345,22],[3,8130962,0.230179,22],[3,13833195,0.107417,22],[3,7286187,0.107417,22],[3,8130962,0.138107,22],[3,6652605,0.046036,22],[3,2217535,0.322251,22],[3,3695892,0.015345,23],[3,4751861,0.046036,23],[3,7497381,0.168798,23],[3,9820513,0.107417,23],[3,7286187,0.230179,23],[3,7286187,0.168798,23],[3,7708574,0.046036,23],[3,17634684,0.26087,23],[3,8764543,0.107417,23],[3,10876482,0.168798,23],[3,7708574,0.322251,23],[3,8975737,0.26087,23],[3,10665288,0.26087,23],[3,13622001,0.138107,23],[3,8764543,0.29156,23],[3,10665288,0.475703,23],[3,8130962,0.322251,23],[3,11510063,0.107417,23],[3,7074993,0.138107,24],[3,950372,0.138107,24],[3,8342156,0.322251,24],[3,8975737,0.046036,24],[3,8975737,0.076726,24],[3,2217535,0.046036,24],[3,7919768,0.352941,24],[3,2428729,0.138107,24],[3,7919768,0.107417,24],[3,2428729,0.230179,24],[3,2851117,0.015345,24],[3,7708574,0.29156,24],[3,7708574,0.199488,24],[3,9398125,0.107417,25],[3,4963055,0.168798,25],[3,9609319,0.015345,25],[3,7074993,0.168798,25],[3,3695892,0.046036,25],[3,10031706,0.107417,25],[3,10454094,0.015345,25],[3,10454094,0.138107,25],[3,8130962,0.26087,25],[3,8130962,0.383632,25],[3,8553350,0.046036,25],[3,10665288,0.230179,25],[3,10665288,0.322251,25],[3,2428729,0.445013,26],[3,9609319,0.168798,26],[3,2428729,0.199488,26],[3,2217535,0.138107,26],[3,9609319,0.138107,26],[3,11298869,0.046036,26],[3,10876482,0.138107,26],[3,8764543,0.138107,26],[3,11721257,0.015345,26],[3,7708574,0.015345,26],[3,9398125,0.046036,26],[3,7074993,0.414322,26],[3,8764543,0.230179,26],[3,7919768,0.076726,26],[3,8975737,0.29156,27],[3,2217535,0.168798,27],[3,7497381,0.046036,27],[3,10876482,0.015345,27],[3,10876482,0.076726,27],[3,9398125,0.076726,27],[3,7919768,0.26087,27],[3,8764543,0.015345,27],[3,6863799,0.138107,27],[3,2639923,0.015345,28],[3,5385442,0.046036,28],[3,10454094,0.076726,28],[3,8553350,0.168798,28],[3,8130962,0.168798,28],[3,8130962,0.046036,28],[3,7286187,0.138107,28],[3,8975737,0.199488,28],[3,7919768,0.015345,28],[3,1161566,0.26087,28],[3,2428729,0.322251,29],[3,8130962,0.107417,29],[3,11510063,0.015345,29],[3,2428729,0.076726,29],[3,7919768,0.046036,29],[3,8342156,0.107417,29],[3,2217535,0.015345,30],[3,8130962,0.199488,30],[3,8342156,0.076726,30],[3,10876482,0.046036,30],[3,9609319,0.199488,30],[3,9398125,0.138107,30],[3,10665288,0.352941,30],[3,10665288,0.015345,31],[3,8553350,0.076726,31],[3,8130962,0.015345,31],[3,10454094,0.107417,31],[3,7708574,0.076726,31],[3,7497381,0.015345,31],[3,5174249,0.015345,31],[3,7074993,0.107417,32],[3,7074993,0.199488,32],[3,10665288,0.199488,32],[3,7074993,0.076726,32],[3,7074993,0.015345,32],[3,10665288,0.076726,32],[3,9186931,0.015345,32],[3,2217535,0.076726,32],[3,8130962,0.076726,32],[3,316791,0.168798,33],[3,9609319,0.107417,33],[3,9609319,0.046036,33],[3,8342156,0.046036,33],[3,7286187,0.046036,33],[3,10665288,0.107417,34],[3,9398125,0.015345,36],[3,9186931,0.046036,37],[3,10665288,0.046036,39],[3,9609319,0.076726,42],[3,7286187,0.015345,43],[3,7074993,0.046036,47],[4,2386294,1.795396,1],[4,2386294,1.703325,1],[4,2178791,6.859335,1],[4,2386294,1.641944,1],[4,2386294,7.565217,1],[4,23966696,1.672634,1],[4,21476650,9.191816,1],[4,23344184,2.961637,1],[4,1556279,3.544757,1],[4,2386294,1.457801,1],[4,4253829,2.777494,1],[4,4253829,2.808184,1],[4,21684154,7.657289,1],[4,23551688,1.918159,1],[4,2386294,1.42711,1],[4,4253829,2.531969,1],[4,2386294,1.856777,1],[4,4253829,2.439898,1],[4,3838821,3.7289,1],[4,2801302,2.808184,1],[4,4253829,2.378517,1],[4,22306665,0.997442,1],[4,2386294,1.97954,1],[4,22306665,4.005115,1],[4,24381704,1.887468,1],[4,24796711,1.887468,1],[4,23966696,1.181586,1],[4,4253829,2.347826,1],[4,23551688,2.01023,1],[4,24381704,1.948849,1],[4,24796711,1.856777,1],[4,3631318,1.948849,1],[4,24796711,1.948849,1],[4,22099161,5.969309,1],[4,4253829,3.514066,1],[4,1556279,4.557545,1],[4,4253829,3.452685,1],[4,4253829,3.421995,1],[4,23551688,1.826087,1],[4,2801302,0.537084,1],[4,25211719,2.777494,1],[4,2386294,1.028133,1],[4,2386294,1.089514,1],[4,4253829,3.299233,1],[4,23966696,1.242967,1],[4,23344184,2.869565,1],[4,4253829,3.268542,1],[4,23344184,3.913043,1],[4,21684154,7.503836,1],[4,4253829,2.992327,1],[4,2593798,8.179028,1],[4,2386294,1.396419,1],[4,23344184,2.930946,1],[4,24381704,1.703325,1],[4,2386294,1.335038,1],[4,24381704,1.641944,1],[4,2386294,1.273657,1],[4,4253829,3.11509,1],[4,24381704,1.611253,1],[4,22514169,1.058824,1],[4,4253829,3.176471,1],[4,25211719,2.746803,1],[4,2801302,2.470588,1],[4,2386294,1.150895,1],[4,24381704,2.286445,1],[4,23551688,4.373402,1],[4,2386294,6.920716,1],[4,24381704,2.317136,1],[4,1971287,4.710997,1],[4,23551688,2.255754,1],[4,2801302,1.488491,1],[4,24381704,2.347826,1],[4,2386294,5.846547,1],[4,2386294,2.132992,1],[4,1971287,4.557545,1],[4,23344184,3.11509,1],[4,2801302,1.549872,1],[4,24381704,2.439898,1],[4,2801302,1.611253,1],[4,22514169,1.42711,1],[4,1971287,4.158568,1],[4,22306665,1.273657,1],[4,2801302,2.777494,1],[4,22514169,1.580563,1],[4,22514169,1.549872,1],[4,22721673,7.626598,1],[4,3838821,2.531969,1],[4,3838821,2.59335,1],[4,2386294,6.644501,1],[4,2801302,1.672634,1],[4,2386294,2.194373,1],[4,2801302,1.641944,1],[4,3838821,4.956522,1],[4,2386294,6.061381,1],[4,4461333,6.245524,1],[4,3631318,1.97954,1],[4,21269146,5.263427,1],[4,22514169,1.181586,1],[4,2801302,1.089514,1],[4,23551688,2.102302,1],[4,4253829,2.255754,1],[4,2386294,7.319693,1],[4,2178791,6.797954,1],[4,4253829,2.286445,1],[4,2386294,7.350384,1],[4,3838821,2.777494,1],[4,23344184,4.28133,1],[4,1971287,7.13555,1],[4,1556279,5.202046,1],[4,2386294,7.381074,1],[4,2386294,7.411765,1],[4,2593798,7.657289,1],[4,24381704,2.040921,1],[4,2801302,0.936061,1],[4,23551688,2.163683,1],[4,21891657,1.42711,1],[4,2386294,7.012788,1],[4,2801302,1.242967,1],[4,1556279,4.588235,1],[4,2386294,7.074169,1],[4,2386294,5.815857,1],[4,2386294,5.017903,1],[4,22514169,1.242967,1],[4,24381704,2.225064,1],[4,4253829,2.132992,1],[4,23551688,2.132992,1],[4,24381704,2.163683,1],[4,2386294,2.102302,1],[4,22514169,1.212276,1],[4,4253829,2.194373,1],[4,3838821,2.746803,1],[4,22721673,2.470588,1],[4,23551688,0.997442,1],[4,25211719,2.930946,1],[4,23344184,1.918159,1],[4,22721673,2.409207,1],[4,23344184,1.948849,1],[4,23551688,1.120205,1],[4,23551688,1.150895,1],[4,22721673,2.317136,1],[4,25211719,3.299233,1],[4,22721673,2.255754,1],[4,2386294,5.386189,1],[4,2386294,3.820972,1],[4,25211719,2.900256,1],[4,1556279,4.250639,1],[4,22721673,2.071611,1],[4,23551688,1.304348,1],[4,24796711,2.255754,1],[4,22721673,1.580563,1],[4,22721673,1.641944,1],[4,22721673,1.672634,1],[4,22721673,1.764706,1],[4,3631318,1.764706,1],[4,23344184,3.974425,1],[4,2801302,3.176471,1],[4,22721673,1.826087,1],[4,22721673,1.856777,1],[4,23966696,1.549872,1],[4,23551688,1.242967,1],[4,22721673,1.887468,1],[4,22721673,1.918159,1],[4,22721673,1.948849,1],[4,25211719,3.391304,1],[4,2801302,3.14578,1],[4,23344184,4.158568,1],[4,22721673,2.838875,1],[4,23344184,4.097187,1],[4,25211719,3.207161,1],[4,1556279,4.342711,1],[4,23966696,1.335038,1],[4,2386294,3.851662,1],[4,22721673,2.961637,1],[4,22721673,2.992327,1],[4,24381704,0.751918,1],[4,25211719,3.14578,1],[4,23344184,1.734015,1],[4,22721673,3.084399,1],[4,1556279,4.404092,1],[4,25211719,3.023018,1],[4,3838821,3.11509,1],[4,23344184,4.035806,1],[4,3838821,3.483376,1],[4,23344184,1.856777,1],[4,23551688,0.813299,1],[4,23344184,1.826087,1],[4,22306665,4.373402,1],[4,2801302,2.439898,1],[4,1971287,6.859335,1],[4,3631318,1.887468,1],[4,22721673,2.654731,1],[4,24589208,5.386189,1],[4,22721673,2.685422,1],[4,23344184,1.764706,1],[4,1971287,6.613811,1],[4,3838821,3.023018,1],[4,3838821,3.360614,1],[4,25211719,3.237852,1],[4,2801302,3.237852,1],[4,4253829,4.31202,1],[4,24796711,2.409207,1],[4,4253829,4.28133,1],[4,4253829,4.250639,1],[4,24381704,1.396419,1],[4,23344184,2.624041,1],[4,3631318,1.181586,1],[4,21891657,1.028133,1],[4,23344184,2.654731,1],[4,23551688,1.734015,1],[4,3631318,1.120205,1],[4,23759192,4.741688,1],[4,2386294,0.445013,1],[4,23966696,1.611253,1],[4,23344184,1.365729,1],[4,4253829,3.575448,1],[4,4253829,3.636829,1],[4,4253829,3.667519,1],[4,4253829,3.69821,1],[4,4253829,3.7289,1],[4,4253829,3.759591,1],[4,21684154,6.675192,1],[4,4253829,3.820972,1],[4,23551688,1.795396,1],[4,24381704,1.488491,1],[4,23344184,2.716113,1],[4,4253829,3.882353,1],[4,23551688,1.764706,1],[4,24796711,3.11509,1],[4,24381704,1.457801,1],[4,4253829,3.974425,1],[4,2386294,0.475703,1],[4,23344184,2.317136,1],[4,23344184,2.286445,1],[4,23551688,1.457801,1],[4,23344184,2.225064,1],[4,22514169,1.856777,1],[4,3631318,1.580563,1],[4,2386294,5.478261,1],[4,2801302,3.207161,1],[4,25211719,3.514066,1],[4,22721673,1.089514,1],[4,23551688,1.335038,1],[4,25211719,3.452685,1],[4,3423814,4.035806,1],[4,24796711,2.225064,1],[4,25211719,3.421995,1],[4,23759192,3.606138,1],[4,23759192,3.575448,1],[4,21684154,6.092072,1],[4,24381704,1.335038,1],[4,23344184,4.250639,1],[4,2386294,0.230179,1],[4,23759192,4.31202,1],[4,2386294,0.168798,1],[4,23551688,1.641944,1],[4,4253829,4.496164,1],[4,2178791,7.074169,1],[4,24796711,2.040921,1],[4,23551688,1.580563,1],[4,3631318,1.304348,1],[4,22721673,0.690537,1],[4,23551688,1.488491,1],[4,3631318,1.365729,1],[4,24796711,2.132992,1],[4,21476650,8.578005,1],[4,2593798,4.219949,1],[4,2593798,4.158568,1],[4,22306665,2.961637,1],[4,2386294,3.237852,1],[4,2593798,4.066496,1],[4,2386294,3.176471,1],[4,3216310,3.329923,1],[4,2801302,2.01023,1],[4,2593798,3.974425,1],[4,22306665,3.084399,1],[4,2593798,3.882353,1],[4,4253829,0.936061,1],[4,23344184,10.358056,1],[4,2801302,1.948849,1],[4,21269146,4.189258,1],[4,4253829,0.997442,1],[4,2593798,3.69821,1],[4,23551688,3.69821,1],[4,21684154,10.327366,1],[4,22306665,2.654731,1],[4,3216310,3.053708,1],[4,4253829,0.414322,1],[4,2801302,2.56266,1],[4,24174200,3.667519,1],[4,22306665,2.746803,1],[4,4253829,0.506394,1],[4,22306665,2.777494,1],[4,25211719,3.974425,1],[4,25211719,4.005115,1],[4,22514169,1.764706,1],[4,24174200,3.759591,1],[4,2593798,6.214834,1],[4,25004215,1.918159,1],[4,23551688,3.790281,1],[4,22306665,2.900256,1],[4,3216310,4.066496,1],[4,2386294,6.214834,1],[4,2593798,3.176471,1],[4,25004215,1.856777,1],[4,21269146,4.28133,1],[4,3216310,4.189258,1],[4,23136681,1.918159,1],[4,3216310,4.250639,1],[4,23136681,1.948849,1],[4,23136681,1.97954,1],[4,2593798,3.053708,1],[4,3216310,2.746803,1],[4,23344184,3.299233,1],[4,23136681,2.132992,1],[4,23136681,2.286445,1],[4,23136681,2.317136,1],[4,25004215,1.150895,1],[4,23136681,2.409207,1],[4,25211719,4.158568,1],[4,2386294,3.084399,1],[4,23136681,1.120205,1],[4,2386294,3.053708,1],[4,22306665,3.207161,1],[4,22306665,3.237852,1],[4,22306665,3.268542,1],[4,24381704,2.869565,1],[4,21684154,9.529412,1],[4,2593798,3.391304,1],[4,2593798,3.360614,1],[4,25211719,4.219949,1],[4,2593798,3.299233,1],[4,2593798,3.268542,1],[4,23136681,1.212276,1],[4,23136681,1.365729,1],[4,2593798,3.237852,1],[4,23136681,1.672634,1],[4,2801302,2.071611,1],[4,1971287,2.439898,1],[4,1971287,2.470588,1],[4,21269146,3.023018,1],[4,2593798,5.723785,1],[4,21269146,3.053708,1],[4,1971287,1.672634,1],[4,2593798,5.693095,1],[4,2593798,6.092072,1],[4,3838821,5.846547,1],[4,1971287,2.59335,1],[4,2593798,6.122762,1],[4,25004215,2.286445,1],[4,25004215,2.378517,1],[4,2386294,3.667519,1],[4,1971287,1.611253,1],[4,22306665,2.01023,1],[4,21269146,2.624041,1],[4,25004215,2.132992,1],[4,1971287,1.856777,1],[4,1971287,2.01023,1],[4,1971287,1.764706,1],[4,21269146,2.746803,1],[4,2801302,2.286445,1],[4,2386294,6.092072,1],[4,23551688,3.360614,1],[4,25004215,2.040921,1],[4,23344184,3.575448,1],[4,25004215,1.97954,1],[4,24174200,3.237852,1],[4,25004215,2.255754,1],[4,21269146,2.930946,1],[4,1971287,2.317136,1],[4,2593798,5.785166,1],[4,24174200,3.299233,1],[4,2386294,3.514066,1],[4,1971287,2.777494,1],[4,24381704,2.961637,1],[4,21269146,3.69821,1],[4,25211719,3.759591,1],[4,3838821,4.618926,1],[4,22306665,2.439898,1],[4,22306665,2.470588,1],[4,21684154,10.57289,1],[4,24174200,3.636829,1],[4,1556279,3.974425,1],[4,1971287,2.838875,1],[4,21684154,10.419437,1],[4,21269146,2.163683,1],[4,22306665,2.56266,1],[4,1556279,3.943734,1],[4,22306665,2.59335,1],[4,2593798,4.741688,1],[4,21269146,2.317136,1],[4,2801302,2.040921,1],[4,21269146,3.329923,1],[4,21269146,2.286445,1],[4,21269146,3.391304,1],[4,2386294,3.606138,1],[4,25004215,2.470588,1],[4,25004215,2.501279,1],[4,25004215,2.531969,1],[4,22306665,2.132992,1],[4,2801302,2.378517,1],[4,22306665,2.194373,1],[4,2801302,2.531969,1],[4,21269146,3.575448,1],[4,22306665,2.286445,1],[4,25211719,3.636829,1],[4,23551688,3.176471,1],[4,2386294,3.544757,1],[4,1763783,2.992327,1],[4,3838821,5.171355,1],[4,2178791,6.613811,1],[4,1971287,3.176471,1],[4,22306665,1.396419,1],[4,23551688,2.685422,1],[4,3008806,4.803069,1],[4,21269146,4.496164,1],[4,1971287,3.207161,1],[4,1971287,3.237852,1],[4,23136681,5.539642,1],[4,23551688,2.59335,1],[4,2593798,2.01023,1],[4,2593798,1.97954,1],[4,2386294,2.531969,1],[4,2593798,1.887468,1],[4,23551688,2.56266,1],[4,21269146,1.488491,1],[4,4253829,1.519182,1],[4,2593798,2.409207,1],[4,2386294,2.869565,1],[4,1763783,2.347826,1],[4,2386294,2.808184,1],[4,1971287,3.023018,1],[4,1971287,3.053708,1],[4,21684154,9.038363,1],[4,2801302,1.887468,1],[4,2593798,2.317136,1],[4,23344184,4.404092,1],[4,22514169,1.703325,1],[4,4253829,1.580563,1],[4,2386294,2.716113,1],[4,1763783,2.900256,1],[4,2386294,2.685422,1],[4,2386294,2.624041,1],[4,1971287,3.7289,1],[4,24381704,2.531969,1],[4,1971287,3.759591,1],[4,4253829,1.887468,1],[4,1971287,3.790281,1],[4,2386294,2.286445,1],[4,22514169,1.611253,1],[4,2801302,1.826087,1],[4,21684154,8.670077,1],[4,21684154,8.578005,1],[4,1971287,4.035806,1],[4,2801302,1.795396,1],[4,4253829,1.97954,1],[4,2801302,1.764706,1],[4,1971287,4.097187,1],[4,2386294,6.491049,1],[4,23551688,2.439898,1],[4,2801302,1.734015,1],[4,22514169,1.672634,1],[4,1971287,3.360614,1],[4,2386294,2.470588,1],[4,23551688,2.501279,1],[4,25004215,1.580563,1],[4,1556279,6.245524,1],[4,24796711,3.360614,1],[4,24381704,2.59335,1],[4,2593798,6.705882,1],[4,1971287,3.483376,1],[4,23344184,3.790281,1],[4,1971287,3.514066,1],[4,2386294,3.790281,1],[4,2386294,2.378517,1],[4,2386294,2.347826,1],[4,1971287,3.667519,1],[4,4253829,1.856777,1],[4,3838821,5.017903,1],[4,23551688,3.023018,1],[4,2593798,2.808184,1],[4,23136681,3.084399,1],[4,4253829,1.335038,1],[4,3216310,2.347826,1],[4,3216310,5.140665,1],[4,3216310,2.317136,1],[4,4253829,1.365729,1],[4,21269146,1.887468,1],[4,3216310,2.225064,1],[4,3216310,2.194373,1],[4,21684154,9.253197,1],[4,3216310,2.163683,1],[4,2593798,2.777494,1],[4,23136681,3.421995,1],[4,2593798,2.746803,1],[4,21269146,1.856777,1],[4,22306665,3.391304,1],[4,3216310,2.654731,1],[4,4253829,1.212276,1],[4,23136681,2.685422,1],[4,23136681,2.716113,1],[4,23551688,3.11509,1],[4,3216310,2.59335,1],[4,21269146,2.01023,1],[4,23551688,3.084399,1],[4,3216310,2.56266,1],[4,22306665,3.452685,1],[4,23136681,2.838875,1],[4,25004215,1.734015,1],[4,3216310,4.86445,1],[4,1763783,2.317136,1],[4,2386294,2.900256,1],[4,23136681,2.961637,1],[4,23136681,2.992327,1],[4,3216310,1.396419,1],[4,3216310,1.335038,1],[4,21269146,1.703325,1],[4,22306665,1.488491,1],[4,3216310,1.304348,1],[4,25004215,0.813299,1],[4,2593798,2.56266,1],[4,1763783,2.439898,1],[4,23551688,2.838875,1],[4,2593798,2.501279,1],[4,25004215,1.641944,1],[4,21269146,1.580563,1],[4,23551688,2.777494,1],[4,2593798,2.439898,1],[4,21269146,1.519182,1],[4,1971287,2.992327,1],[4,4253829,1.42711,1],[4,4253829,1.457801,1],[4,2593798,2.716113,1],[4,3216310,1.97954,1],[4,3216310,1.918159,1],[4,3216310,1.887468,1],[4,2593798,2.685422,1],[4,23551688,2.992327,1],[4,3216310,1.764706,1],[4,3216310,1.734015,1],[4,3216310,1.703325,1],[4,3216310,1.672634,1],[4,1971287,2.900256,1],[4,23136681,3.882353,1],[4,2593798,2.654731,1],[4,2593798,2.624041,1],[4,3216310,1.549872,1],[4,2593798,6.306905,1],[4,3216310,1.457801,1],[4,24174200,4.219949,1],[4,2178791,3.544757,1],[4,21476650,2.01023,1],[4,23759192,1.42711,1],[4,21476650,2.071611,1],[4,21476650,2.132992,1],[4,2178791,3.514066,1],[4,22929177,2.900256,1],[4,1556279,1.764706,1],[4,21476650,2.225064,1],[4,3423814,1.764706,1],[4,21476650,2.317136,1],[4,4461333,2.56266,1],[4,21476650,2.378517,1],[4,21476650,2.409207,1],[4,4461333,2.531969,1],[4,3008806,2.501279,1],[4,2178791,3.483376,1],[4,2178791,3.452685,1],[4,1556279,1.028133,1],[4,23759192,1.611253,1],[4,22929177,3.14578,1],[4,2178791,3.7289,1],[4,1556279,1.181586,1],[4,1556279,1.212276,1],[4,1556279,1.304348,1],[4,2801302,6.092072,1],[4,1556279,1.335038,1],[4,23759192,1.580563,1],[4,23344184,6.306905,1],[4,2178791,3.667519,1],[4,1556279,1.457801,1],[4,21476650,1.641944,1],[4,22514169,2.930946,1],[4,21476650,1.703325,1],[4,2178791,3.575448,1],[4,1556279,1.641944,1],[4,1556279,1.672634,1],[4,3423814,1.580563,1],[4,21476650,2.992327,1],[4,21476650,3.023018,1],[4,22721673,3.329923,1],[4,21476650,3.053708,1],[4,23759192,0.84399,1],[4,2178791,3.207161,1],[4,21476650,3.14578,1],[4,25004215,2.59335,1],[4,2801302,4.741688,1],[4,2801302,4.772379,1],[4,22929177,2.409207,1],[4,1763783,2.040921,1],[4,2801302,4.83376,1],[4,21476650,3.207161,1],[4,2178791,3.023018,1],[4,21476650,3.268542,1],[4,2178791,2.961637,1],[4,2178791,2.808184,1],[4,21476650,2.501279,1],[4,21476650,2.59335,1],[4,2178791,3.421995,1],[4,23344184,6.030691,1],[4,23759192,1.304348,1],[4,4461333,2.501279,1],[4,21476650,2.685422,1],[4,22929177,2.716113,1],[4,23344184,6,1],[4,3423814,1.703325,1],[4,21476650,2.716113,1],[4,2178791,3.360614,1],[4,22929177,2.59335,1],[4,23344184,5.938619,1],[4,2178791,3.329923,1],[4,1556279,1.826087,1],[4,2178791,3.268542,1],[4,2178791,3.237852,1],[4,21476650,2.777494,1],[4,2801302,4.28133,1],[4,1556279,2.286445,1],[4,22514169,2.470588,1],[4,23759192,2.777494,1],[4,22514169,2.531969,1],[4,3631318,2.930946,1],[4,2178791,4.127877,1],[4,4461333,3.360614,1],[4,21476650,6,1],[4,23344184,7.964194,1],[4,1763783,4.526854,1],[4,23759192,2.501279,1],[4,4461333,3.268542,1],[4,23759192,2.470588,1],[4,2801302,4.373402,1],[4,21476650,5.907928,1],[4,23759192,2.378517,1],[4,2178791,4.066496,1],[4,23759192,2.317136,1],[4,3631318,2.59335,1],[4,1556279,2.59335,1],[4,2801302,4.097187,1],[4,2801302,4.127877,1],[4,3631318,2.654731,1],[4,1556279,2.501279,1],[4,1556279,2.470588,1],[4,21476650,6.491049,1],[4,2801302,4.158568,1],[4,4046325,4.250639,1],[4,1556279,2.439898,1],[4,21476650,6.398977,1],[4,21476650,6.368286,1],[4,21684154,2.900256,1],[4,2178791,4.434783,1],[4,3423814,2.409207,1],[4,4461333,0.445013,1],[4,3631318,2.808184,1],[4,2178791,4.342711,1],[4,3423814,2.132992,1],[4,3008806,1.641944,1],[4,3008806,1.734015,1],[4,23759192,1.856777,1],[4,2178791,3.943734,1],[4,23759192,1.826087,1],[4,23759192,1.795396,1],[4,2801302,6.429668,1],[4,3423814,2.071611,1],[4,3008806,1.918159,1],[4,3008806,1.97954,1],[4,23759192,1.734015,1],[4,3008806,2.040921,1],[4,3423814,1.948849,1],[4,22514169,2.838875,1],[4,3008806,2.102302,1],[4,3631318,3.69821,1],[4,3631318,3.7289,1],[4,1556279,0.598465,1],[4,3423814,2.347826,1],[4,23759192,2.225064,1],[4,4461333,3.053708,1],[4,3631318,3.084399,1],[4,3631318,3.14578,1],[4,23759192,2.102302,1],[4,4461333,2.930946,1],[4,4461333,0.813299,1],[4,3008806,1.212276,1],[4,3008806,1.273657,1],[4,3008806,1.304348,1],[4,3008806,1.335038,1],[4,3008806,1.42711,1],[4,4461333,2.777494,1],[4,4461333,2.746803,1],[4,4461333,2.716113,1],[4,3008806,1.549872,1],[4,1556279,2.194373,1],[4,3631318,3.329923,1],[4,25211719,4.895141,1],[4,25004215,2.869565,1],[4,25211719,4.956522,1],[4,1556279,3.176471,1],[4,22929177,1.948849,1],[4,1556279,3.14578,1],[4,2178791,7.810742,1],[4,21684154,0.721228,1],[4,2386294,7.68798,1],[4,2386294,7.749361,1],[4,23966696,7.749361,1],[4,2801302,5.294118,1],[4,24796711,0.29156,1],[4,25211719,5.202046,1],[4,22929177,1.795396,1],[4,25004215,2.992327,1],[4,2801302,5.324808,1],[4,25004215,4.649616,1],[4,1763783,0.721228,1],[4,21684154,1.795396,1],[4,21684154,1.764706,1],[4,23966696,7.104859,1],[4,21684154,1.672634,1],[4,2178791,7.657289,1],[4,25211719,4.557545,1],[4,2801302,5.202046,1],[4,25211719,4.649616,1],[4,25211719,4.680307,1],[4,25211719,4.710997,1],[4,2178791,0.936061,1],[4,1763783,3.391304,1],[4,22929177,2.071611,1],[4,23344184,4.618926,1],[4,1763783,3.452685,1],[4,22929177,2.040921,1],[4,2178791,0.659847,1],[4,22721673,4.035806,1],[4,24796711,0.690537,1],[4,25004215,3.421995,1],[4,1763783,1.457801,1],[4,22929177,1.488491,1],[4,2386294,8.240409,1],[4,22929177,1.028133,1],[4,22929177,1.089514,1],[4,22929177,1.457801,1],[4,2178791,8.547315,1],[4,1763783,1.519182,1],[4,2801302,0.414322,1],[4,2386294,7.933504,1],[4,2178791,8.30179,1],[4,2178791,8.455243,1],[4,1763783,1.549872,1],[4,22929177,1.42711,1],[4,22929177,1.212276,1],[4,2801302,5.355499,1],[4,1763783,1.641944,1],[4,22929177,1.304348,1],[4,21684154,0.138107,1],[4,1556279,2.808184,1],[4,2178791,7.964194,1],[4,1556279,2.746803,1],[4,22929177,1.734015,1],[4,25004215,4.189258,1],[4,1763783,0.782609,1],[4,1763783,0.813299,1],[4,1763783,1.795396,1],[4,22721673,4.649616,1],[4,25004215,4.005115,1],[4,1763783,1.058824,1],[4,1763783,1.150895,1],[4,1763783,1.734015,1],[4,1763783,1.273657,1],[4,2178791,8.148338,1],[4,2801302,0.26087,1],[4,2178791,8.209719,1],[4,25004215,3.483376,1],[4,22721673,5.263427,1],[4,21476650,3.759591,1],[4,2178791,2.59335,1],[4,21476650,3.882353,1],[4,21476650,3.913043,1],[4,21476650,4.127877,1],[4,4461333,1.887468,1],[4,21476650,4.219949,1],[4,21476650,4.250639,1],[4,4461333,1.826087,1],[4,2178791,2.531969,1],[4,21476650,4.342711,1],[4,1556279,1.97954,1],[4,21476650,4.434783,1],[4,21476650,4.465473,1],[4,21684154,2.470588,1],[4,4461333,1.641944,1],[4,21476650,4.710997,1],[4,21476650,4.741688,1],[4,3631318,4.373402,1],[4,2178791,2.777494,1],[4,21476650,3.360614,1],[4,21476650,3.391304,1],[4,1556279,1.887468,1],[4,4461333,2.286445,1],[4,25004215,2.716113,1],[4,2386294,9.836317,1],[4,21476650,3.483376,1],[4,2801302,4.86445,1],[4,22929177,2.255754,1],[4,3631318,4.496164,1],[4,21476650,3.544757,1],[4,22721673,3.360614,1],[4,22929177,2.225064,1],[4,24796711,1.764706,1],[4,2178791,2.654731,1],[4,22721673,3.421995,1],[4,1556279,1.918159,1],[4,22721673,3.575448,1],[4,21684154,2.194373,1],[4,21476650,5.570332,1],[4,2178791,1.887468,1],[4,21476650,5.693095,1],[4,21684154,2.102302,1],[4,22721673,3.636829,1],[4,4461333,0.905371,1],[4,2801302,5.017903,1],[4,21684154,2.071611,1],[4,3631318,4.987212,1],[4,21476650,5.754476,1],[4,24796711,1.641944,1],[4,24796711,1.549872,1],[4,22929177,2.132992,1],[4,2178791,1.580563,1],[4,21684154,1.97954,1],[4,24796711,1.089514,1],[4,24796711,1.058824,1],[4,1556279,2.040921,1],[4,2178791,2.378517,1],[4,21476650,4.803069,1],[4,21476650,4.83376,1],[4,2178791,2.286445,1],[4,2178791,2.225064,1],[4,4461333,1.488491,1],[4,2178791,2.194373,1],[4,21476650,4.956522,1],[4,21684154,2.409207,1],[4,21684154,2.347826,1],[4,21476650,5.171355,1],[4,2801302,4.956522,1],[4,1556279,2.132992,1],[4,4461333,1.150895,1],[4,21476650,5.355499,1],[4,4461333,1.058824,1],[4,21476650,5.508951,1],[4,23344184,4.956522,1],[4,21684154,5.202046,1],[4,24174200,2.439898,1],[4,24381704,3.943734,1],[4,24174200,2.378517,1],[4,21891657,3.606138,1],[4,21476650,7.749361,1],[4,22099161,5.048593,1],[4,3423814,5.662404,1],[4,24174200,2.317136,1],[4,24174200,2.286445,1],[4,3631318,2.040921,1],[4,21684154,4.741688,1],[4,24796711,3.606138,1],[4,1971287,7.657289,1],[4,24174200,2.163683,1],[4,24174200,2.132992,1],[4,24174200,2.102302,1],[4,3423814,2.685422,1],[4,21891657,2.992327,1],[4,21891657,3.023018,1],[4,23966696,4.219949,1],[4,24174200,2.808184,1],[4,21684154,5.693095,1],[4,21891657,3.207161,1],[4,2386294,4.097187,1],[4,21684154,5.601023,1],[4,21891657,3.268542,1],[4,21476650,7.933504,1],[4,21891657,3.391304,1],[4,3423814,2.777494,1],[4,24796711,2.869565,1],[4,21684154,5.386189,1],[4,24174200,2.685422,1],[4,24174200,2.654731,1],[4,4253829,4.987212,1],[4,21684154,5.263427,1],[4,2386294,4.28133,1],[4,22099161,3.820972,1],[4,25211719,0.966752,1],[4,22099161,3.636829,1],[4,2178791,5.41688,1],[4,25211719,1.028133,1],[4,25211719,1.058824,1],[4,22099161,3.483376,1],[4,24174200,1.856777,1],[4,25211719,1.089514,1],[4,22099161,3.360614,1],[4,4461333,4.465473,1],[4,22099161,3.329923,1],[4,21684154,4.342711,1],[4,21684154,4.31202,1],[4,21891657,3.790281,1],[4,24174200,1.826087,1],[4,22099161,3.14578,1],[4,1971287,8.025575,1],[4,22099161,3.11509,1],[4,24174200,2.071611,1],[4,2386294,4.404092,1],[4,2178791,5.44757,1],[4,24381704,4.066496,1],[4,22099161,4.680307,1],[4,24174200,1.948849,1],[4,24381704,4.097187,1],[4,22099161,4.618926,1],[4,21684154,4.465473,1],[4,22099161,4.557545,1],[4,1556279,5.079284,1],[4,1556279,5.048593,1],[4,22099161,4.373402,1],[4,22099161,4.219949,1],[4,22099161,4.158568,1],[4,25211719,0.84399,1],[4,4046325,0.537084,1],[4,4046325,0.567775,1],[4,22099161,3.913043,1],[4,21891657,1.703325,1],[4,21891657,1.795396,1],[4,1971287,7.473146,1],[4,23966696,2.317136,1],[4,3838821,2.102302,1],[4,23966696,2.347826,1],[4,23966696,2.378517,1],[4,23966696,2.470588,1],[4,21891657,1.826087,1],[4,3838821,2.071611,1],[4,21891657,1.856777,1],[4,3838821,2.01023,1],[4,23966696,2.624041,1],[4,23966696,2.654731,1],[4,24381704,3.299233,1],[4,23966696,2.746803,1],[4,23966696,2.777494,1],[4,23966696,2.808184,1],[4,23966696,2.838875,1],[4,21891657,1.457801,1],[4,2386294,4.956522,1],[4,23966696,1.795396,1],[4,3838821,2.409207,1],[4,2386294,4.925831,1],[4,23966696,1.887468,1],[4,2593798,1.795396,1],[4,23966696,2.01023,1],[4,24381704,3.176471,1],[4,3838821,2.378517,1],[4,2178791,6.153453,1],[4,23966696,2.040921,1],[4,3838821,2.317136,1],[4,21891657,1.519182,1],[4,23966696,2.102302,1],[4,23966696,2.163683,1],[4,23966696,2.194373,1],[4,23344184,1.335038,1],[4,24381704,3.268542,1],[4,21891657,2.439898,1],[4,3838821,1.150895,1],[4,2593798,0.690537,1],[4,3838821,1.058824,1],[4,2593798,0.537084,1],[4,2801302,3.329923,1],[4,2386294,4.680307,1],[4,22721673,3.176471,1],[4,3423814,2.992327,1],[4,2386294,4.618926,1],[4,21891657,2.624041,1],[4,2386294,4.588235,1],[4,3423814,2.930946,1],[4,21891657,2.746803,1],[4,21891657,2.838875,1],[4,2593798,0.352941,1],[4,2178791,5.693095,1],[4,3423814,2.900256,1],[4,21891657,2.930946,1],[4,23966696,2.869565,1],[4,21891657,1.97954,1],[4,21891657,2.01023,1],[4,23966696,2.992327,1],[4,2593798,1.365729,1],[4,24381704,3.329923,1],[4,25211719,2.624041,1],[4,2593798,1.150895,1],[4,25211719,2.59335,1],[4,2386294,4.86445,1],[4,23966696,3.299233,1],[4,24796711,2.531969,1],[4,2386294,4.83376,1],[4,2593798,0.936061,1],[4,3838821,1.42711,1],[4,23966696,3.544757,1],[4,2593798,0.87468,1],[4,2593798,0.84399,1],[4,3838821,1.335038,1],[4,2178791,5.079284,1],[4,4046325,2.255754,1],[4,4046325,2.317136,1],[4,22721673,3.299233,1],[4,4046325,2.439898,1],[4,4046325,2.56266,1],[4,4046325,2.59335,1],[4,24174200,1.181586,1],[4,1971287,1.335038,1],[4,2801302,3.667519,1],[4,24796711,3.851662,1],[4,2801302,3.69821,1],[4,21891657,4.035806,1],[4,2801302,3.759591,1],[4,24589208,0.936061,1],[4,24589208,0.87468,1],[4,4046325,2.838875,1],[4,24589208,0.84399,1],[4,21891657,4.066496,1],[4,21684154,3.943734,1],[4,25211719,2.071611,1],[4,25211719,2.102302,1],[4,25211719,2.132992,1],[4,25211719,2.163683,1],[4,24589208,1.273657,1],[4,21684154,3.913043,1],[4,25211719,2.255754,1],[4,2178791,5.140665,1],[4,25211719,2.409207,1],[4,24589208,1.181586,1],[4,25211719,2.439898,1],[4,24174200,1.335038,1],[4,21684154,3.820972,1],[4,3631318,2.255754,1],[4,4046325,2.071611,1],[4,4046325,2.102302,1],[4,21684154,3.759591,1],[4,24174200,1.242967,1],[4,24796711,4.097187,1],[4,2801302,3.882353,1],[4,2178791,4.680307,1],[4,4046325,3.421995,1],[4,2801302,3.913043,1],[4,4046325,3.544757,1],[4,4046325,3.575448,1],[4,21684154,3.14578,1],[4,21891657,4.189258,1],[4,3631318,2.409207,1],[4,3631318,2.470588,1],[4,3631318,2.501279,1],[4,4046325,3.790281,1],[4,4046325,3.820972,1],[4,2801302,4.005115,1],[4,2178791,4.588235,1],[4,21684154,3.023018,1],[4,3631318,2.56266,1],[4,1556279,2.654731,1],[4,24796711,3.913043,1],[4,24589208,0.690537,1],[4,22514169,2.102302,1],[4,1971287,0.966752,1],[4,1971287,0.936061,1],[4,24174200,0.87468,1],[4,24589208,0.598465,1],[4,1971287,0.905371,1],[4,24589208,0.537084,1],[4,1971287,0.87468,1],[4,4046325,3.053708,1],[4,1971287,0.813299,1],[4,1971287,0.782609,1],[4,1971287,0.414322,1],[4,1971287,0.29156,1],[4,4046325,3.176471,1],[4,24174200,0.782609,1],[4,4046325,3.237852,1],[4,4046325,3.268542,1],[4,4046325,1.457801,1],[4,24589208,3.329923,1],[4,22929177,4.342711,1],[4,22099161,2.531969,1],[4,4046325,1.488491,1],[4,25211719,1.242967,1],[4,25211719,1.304348,1],[4,22099161,2.409207,1],[4,24589208,3.207161,1],[4,24174200,1.641944,1],[4,22929177,4.189258,1],[4,22929177,4.158568,1],[4,24589208,3.11509,1],[4,22099161,2.347826,1],[4,22099161,2.317136,1],[4,22929177,4.097187,1],[4,22929177,4.066496,1],[4,22929177,4.005115,1],[4,4046325,1.580563,1],[4,21891657,3.851662,1],[4,2386294,4.496164,1],[4,1556279,4.956522,1],[4,24174200,1.703325,1],[4,24589208,3.69821,1],[4,22099161,3.023018,1],[4,4046325,1.242967,1],[4,1971287,8.240409,1],[4,4046325,1.335038,1],[4,4046325,1.365729,1],[4,22099161,2.777494,1],[4,3423814,2.624041,1],[4,4461333,4.005115,1],[4,1971287,8.393862,1],[4,4461333,3.943734,1],[4,21684154,4.189258,1],[4,4461333,3.913043,1],[4,22099161,2.746803,1],[4,4046325,1.42711,1],[4,24589208,2.286445,1],[4,24589208,2.255754,1],[4,22099161,1.549872,1],[4,25211719,1.519182,1],[4,25211719,1.641944,1],[4,22929177,3.421995,1],[4,24589208,2.040921,1],[4,24589208,2.01023,1],[4,24589208,1.887468,1],[4,22099161,0.997442,1],[4,22099161,0.905371,1],[4,25211719,1.764706,1],[4,1556279,4.86445,1],[4,24589208,1.764706,1],[4,24589208,1.611253,1],[4,25211719,1.948849,1],[4,24589208,1.488491,1],[4,24589208,1.457801,1],[4,24796711,2.930946,1],[4,4461333,3.452685,1],[4,24589208,2.930946,1],[4,24589208,2.900256,1],[4,4046325,1.611253,1],[4,22099161,2.225064,1],[4,22099161,2.194373,1],[4,22099161,2.163683,1],[4,22099161,2.132992,1],[4,24174200,1.611253,1],[4,3631318,2.071611,1],[4,24589208,2.624041,1],[4,22099161,1.948849,1],[4,22929177,3.69821,1],[4,4046325,1.764706,1],[4,25211719,1.335038,1],[4,4046325,1.856777,1],[4,22099161,1.703325,1],[4,24589208,2.347826,1],[4,22099161,1.641944,1],[4,17119069,3.421995,1],[4,17119069,3.391304,1],[4,17119069,3.084399,1],[4,17119069,2.961637,1],[4,17119069,2.869565,1],[4,12761487,2.838875,1],[4,17119069,2.59335,1],[4,17119069,2.56266,1],[4,17119069,2.439898,1],[4,17119069,2.255754,1],[4,17119069,2.225064,1],[4,12761487,2.930946,1],[4,12761487,2.992327,1],[4,12761487,3.11509,1],[4,17119069,1.97954,1],[4,17119069,1.918159,1],[4,12761487,3.14578,1],[4,17119069,1.703325,1],[4,17119069,1.672634,1],[4,12761487,3.207161,1],[4,12761487,3.299233,1],[4,26249238,1.396419,1],[4,26249238,1.457801,1],[4,12761487,3.391304,1],[4,12761487,3.421995,1],[4,26249238,1.580563,1],[4,26249238,1.672634,1],[4,26249238,1.795396,1],[4,12761487,2.59335,1],[4,12761487,2.777494,1],[4,12761487,2.808184,1],[4,7573891,4.373402,1],[4,7573891,4.404092,1],[4,7573891,4.465473,1],[4,7573891,4.496164,1],[4,7573891,4.557545,1],[4,7573891,4.588235,1],[4,7573891,4.649616,1],[4,7573891,4.803069,1],[4,7573891,4.895141,1],[4,7573891,4.956522,1],[4,7573891,5.017903,1],[4,7573891,5.109974,1],[4,7573891,5.386189,1],[4,7573891,5.570332,1],[4,7573891,5.601023,1],[4,7573891,5.662404,1],[4,7573891,5.693095,1],[4,7573891,5.723785,1],[4,7573891,6.061381,1],[4,7573891,6.092072,1],[4,7573891,6.122762,1],[4,7573891,6.245524,1],[4,26249238,1.181586,1],[4,7573891,6.644501,1],[4,7573891,6.675192,1],[4,17119069,3.483376,1],[4,26249238,3.974425,1],[4,11101457,3.913043,1],[4,12761487,5.815857,1],[4,11101457,3.575448,1],[4,7781395,1.918159,1],[4,7781395,2.040921,1],[4,7781395,2.225064,1],[4,11101457,3.329923,1],[4,7781395,2.378517,1],[4,11101457,3.207161,1],[4,7781395,2.501279,1],[4,7781395,2.531969,1],[4,7781395,2.716113,1],[4,7781395,3.023018,1],[4,11101457,3.023018,1],[4,11101457,2.961637,1],[4,11101457,2.900256,1],[4,7781395,3.084399,1],[4,7781395,3.207161,1],[4,11101457,2.777494,1],[4,7781395,3.268542,1],[4,11101457,2.716113,1],[4,7781395,3.299233,1],[4,11101457,2.654731,1],[4,7781395,3.483376,1],[4,11101457,2.59335,1],[4,7781395,3.544757,1],[4,7781395,3.636829,1],[4,7781395,3.667519,1],[4,26249238,1.97954,1],[4,26249238,2.040921,1],[4,26249238,2.071611,1],[4,12761487,3.483376,1],[4,26249238,2.194373,1],[4,26249238,2.378517,1],[4,26249238,2.409207,1],[4,26249238,2.439898,1],[4,26249238,2.470588,1],[4,26249238,2.59335,1],[4,26249238,2.685422,1],[4,12761487,3.544757,1],[4,26249238,2.777494,1],[4,26249238,2.808184,1],[4,26249238,3.053708,1],[4,26249238,3.084399,1],[4,26249238,3.483376,1],[4,26249238,3.69821,1],[4,7781395,1.212276,1],[4,7781395,1.242967,1],[4,12761487,3.667519,1],[4,12761487,4.097187,1],[4,12761487,4.526854,1],[4,12761487,4.557545,1],[4,7781395,1.519182,1],[4,12761487,4.83376,1],[4,7781395,1.580563,1],[4,7781395,1.672634,1],[4,11101457,4.035806,1],[4,17534076,2.808184,1],[4,17534076,2.685422,1],[4,933767,1.856777,1],[4,17534076,2.531969,1],[4,17534076,2.439898,1],[4,12761487,1.181586,1],[4,12761487,1.242967,1],[4,17534076,2.378517,1],[4,17534076,2.347826,1],[4,17534076,2.225064,1],[4,933767,1.795396,1],[4,933767,1.734015,1],[4,933767,1.703325,1],[4,17534076,1.97954,1],[4,17534076,1.918159,1],[4,933767,1.672634,1],[4,12761487,1.457801,1],[4,12761487,1.488491,1],[4,17534076,1.734015,1],[4,17534076,1.703325,1],[4,12761487,1.611253,1],[4,12761487,1.641944,1],[4,26041735,6.982097,1],[4,12761487,1.764706,1],[4,7366387,4.803069,1],[4,7366387,5.324808,1],[4,7366387,5.478261,1],[4,7366387,5.662404,1],[4,26041735,6.276215,1],[4,7366387,1.97954,1],[4,7366387,2.163683,1],[4,7366387,2.286445,1],[4,933767,1.887468,1],[4,17534076,5.41688,1],[4,7366387,2.501279,1],[4,7366387,2.531969,1],[4,7366387,2.624041,1],[4,7366387,2.654731,1],[4,7366387,2.716113,1],[4,7366387,2.746803,1],[4,7366387,2.869565,1],[4,7366387,2.930946,1],[4,17534076,4.649616,1],[4,7366387,3.207161,1],[4,12761487,1.120205,1],[4,7366387,3.575448,1],[4,17534076,4.097187,1],[4,17534076,4.066496,1],[4,7366387,3.667519,1],[4,17534076,3.974425,1],[4,7366387,3.759591,1],[4,17534076,3.667519,1],[4,17534076,3.544757,1],[4,17534076,3.421995,1],[4,17534076,3.329923,1],[4,17534076,3.11509,1],[4,17534076,2.869565,1],[4,17326572,1.948849,1],[4,17326572,1.856777,1],[4,17326572,1.734015,1],[4,26249238,0.751918,1],[4,7573891,2.102302,1],[4,7573891,2.255754,1],[4,7573891,2.317136,1],[4,7573891,2.378517,1],[4,7573891,2.470588,1],[4,7573891,2.501279,1],[4,7573891,2.59335,1],[4,7573891,2.654731,1],[4,7573891,2.685422,1],[4,26249238,1.028133,1],[4,7573891,2.746803,1],[4,7573891,2.777494,1],[4,7573891,2.900256,1],[4,7573891,2.992327,1],[4,7573891,3.11509,1],[4,7573891,3.14578,1],[4,7573891,3.268542,1],[4,7573891,3.299233,1],[4,26249238,1.089514,1],[4,7573891,3.421995,1],[4,7573891,3.514066,1],[4,26249238,1.120205,1],[4,7573891,3.636829,1],[4,7573891,3.790281,1],[4,7573891,3.882353,1],[4,7366387,6.092072,1],[4,7366387,7.841432,1],[4,17326572,4.526854,1],[4,7573891,0.690537,1],[4,12761487,1.856777,1],[4,12761487,1.97954,1],[4,7573891,1.120205,1],[4,12761487,2.071611,1],[4,7573891,1.335038,1],[4,7573891,1.549872,1],[4,17326572,3.053708,1],[4,17326572,2.961637,1],[4,17326572,2.869565,1],[4,17326572,2.838875,1],[4,17326572,2.808184,1],[4,17326572,2.746803,1],[4,17326572,2.685422,1],[4,7573891,1.764706,1],[4,17326572,2.56266,1],[4,17326572,2.439898,1],[4,7573891,1.887468,1],[4,17326572,2.378517,1],[4,12761487,2.225064,1],[4,12761487,2.255754,1],[4,17326572,2.225064,1],[4,17326572,2.163683,1],[4,17326572,2.132992,1],[4,17326572,2.102302,1],[4,17326572,2.040921,1],[4,8196403,1.948849,1],[4,8196403,2.040921,1],[4,8196403,2.071611,1],[4,8196403,2.102302,1],[4,8196403,2.286445,1],[4,16496557,4.127877,1],[4,16496557,4.097187,1],[4,8196403,2.378517,1],[4,12968991,0.383632,1],[4,16496557,3.943734,1],[4,16496557,3.913043,1],[4,12968991,0.506394,1],[4,8196403,2.654731,1],[4,16496557,3.606138,1],[4,8196403,2.716113,1],[4,8196403,2.746803,1],[4,16496557,3.483376,1],[4,16496557,3.452685,1],[4,8196403,2.869565,1],[4,16496557,3.299233,1],[4,16496557,3.207161,1],[4,12968991,0.905371,1],[4,8196403,3.023018,1],[4,12968991,0.997442,1],[4,8196403,3.084399,1],[4,12968991,1.089514,1],[4,8196403,3.207161,1],[4,16496557,2.900256,1],[4,726264,2.869565,1],[4,726264,2.746803,1],[4,726264,2.56266,1],[4,726264,2.531969,1],[4,726264,2.409207,1],[4,726264,2.378517,1],[4,726264,2.194373,1],[4,726264,2.102302,1],[4,11101457,0.966752,1],[4,726264,2.071611,1],[4,726264,2.040921,1],[4,726264,1.97954,1],[4,726264,1.948849,1],[4,11101457,0.84399,1],[4,726264,1.856777,1],[4,726264,1.826087,1],[4,726264,1.734015,1],[4,11101457,0.690537,1],[4,11101457,0.598465,1],[4,16496557,5.263427,1],[4,11101457,0.506394,1],[4,726264,1.519182,1],[4,16496557,5.048593,1],[4,16496557,5.017903,1],[4,11101457,0.29156,1],[4,8196403,1.580563,1],[4,16496557,4.895141,1],[4,12968991,0.076726,1],[4,726264,1.396419,1],[4,12968991,1.672634,1],[4,12968991,1.703325,1],[4,12968991,1.795396,1],[4,8196403,3.759591,1],[4,8196403,3.943734,1],[4,8196403,4.097187,1],[4,8196403,4.127877,1],[4,8196403,4.526854,1],[4,8196403,4.680307,1],[4,8196403,4.772379,1],[4,8196403,4.86445,1],[4,8196403,4.925831,1],[4,12968991,1.918159,1],[4,8196403,5.140665,1],[4,8196403,5.171355,1],[4,8196403,5.263427,1],[4,8196403,5.294118,1],[4,8196403,5.478261,1],[4,8196403,5.539642,1],[4,8196403,5.815857,1],[4,16289053,4.250639,1],[4,16289053,3.974425,1],[4,12968991,2.194373,1],[4,12968991,2.347826,1],[4,12968991,2.439898,1],[4,16289053,3.391304,1],[4,16289053,3.329923,1],[4,12968991,2.869565,1],[4,12968991,2.900256,1],[4,8196403,3.268542,1],[4,12968991,1.242967,1],[4,8196403,3.421995,1],[4,16496557,2.56266,1],[4,16496557,2.501279,1],[4,8196403,3.483376,1],[4,16496557,2.409207,1],[4,12968991,1.273657,1],[4,16496557,2.347826,1],[4,16496557,2.317136,1],[4,16496557,2.194373,1],[4,16496557,2.132992,1],[4,8196403,3.575448,1],[4,16496557,2.040921,1],[4,16496557,2.01023,1],[4,16496557,1.97954,1],[4,16496557,1.887468,1],[4,16496557,1.826087,1],[4,16496557,1.795396,1],[4,16496557,1.764706,1],[4,12968991,1.335038,1],[4,12968991,1.396419,1],[4,12968991,1.42711,1],[4,12968991,1.457801,1],[4,16496557,1.42711,1],[4,16496557,1.396419,1],[4,12968991,1.519182,1],[4,16496557,1.273657,1],[4,8196403,3.69821,1],[4,16911565,2.01023,1],[4,16911565,1.948849,1],[4,16911565,1.918159,1],[4,16911565,1.856777,1],[4,16911565,1.826087,1],[4,16911565,1.734015,1],[4,16911565,1.672634,1],[4,16911565,1.580563,1],[4,11101457,2.163683,1],[4,11101457,2.102302,1],[4,11101457,2.071611,1],[4,26249238,4.649616,1],[4,726264,5.662404,1],[4,11101457,2.01023,1],[4,7988899,1.242967,1],[4,7988899,1.304348,1],[4,726264,4.28133,1],[4,11101457,1.97954,1],[4,11101457,1.918159,1],[4,11101457,1.734015,1],[4,7988899,1.826087,1],[4,11101457,1.641944,1],[4,7988899,2.132992,1],[4,7988899,2.163683,1],[4,11101457,1.488491,1],[4,11101457,1.42711,1],[4,7988899,2.409207,1],[4,7988899,2.501279,1],[4,7781395,3.820972,1],[4,7781395,3.882353,1],[4,7781395,3.974425,1],[4,7781395,4.005115,1],[4,7781395,4.066496,1],[4,11101457,2.378517,1],[4,7781395,4.189258,1],[4,7781395,4.31202,1],[4,11101457,2.317136,1],[4,7781395,5.048593,1],[4,7781395,5.079284,1],[4,7781395,5.355499,1],[4,7781395,5.478261,1],[4,7781395,5.785166,1],[4,11101457,2.286445,1],[4,11101457,2.255754,1],[4,7781395,6.245524,1],[4,7781395,6.429668,1],[4,7781395,6.58312,1],[4,7781395,6.675192,1],[4,16911565,3.606138,1],[4,16911565,2.930946,1],[4,16911565,2.838875,1],[4,16911565,2.716113,1],[4,16911565,2.56266,1],[4,16911565,2.470588,1],[4,16911565,2.439898,1],[4,16911565,2.347826,1],[4,16911565,2.225064,1],[4,16704061,2.378517,1],[4,16704061,2.347826,1],[4,16704061,2.317136,1],[4,16704061,2.225064,1],[4,16704061,2.132992,1],[4,16704061,2.102302,1],[4,16704061,2.071611,1],[4,16704061,2.040921,1],[4,16704061,2.01023,1],[4,16704061,1.948849,1],[4,11101457,1.181586,1],[4,16704061,1.856777,1],[4,16704061,1.764706,1],[4,16704061,1.734015,1],[4,16704061,1.641944,1],[4,16704061,1.580563,1],[4,726264,3.974425,1],[4,11101457,1.150895,1],[4,16704061,1.457801,1],[4,11101457,1.120205,1],[4,11101457,1.089514,1],[4,726264,3.851662,1],[4,726264,3.69821,1],[4,726264,3.329923,1],[4,726264,3.299233,1],[4,726264,3.11509,1],[4,726264,3.053708,1],[4,726264,3.023018,1],[4,726264,2.900256,1],[4,7988899,2.56266,1],[4,7988899,2.59335,1],[4,7988899,2.624041,1],[4,11101457,1.396419,1],[4,7988899,2.838875,1],[4,7988899,2.900256,1],[4,7988899,2.961637,1],[4,7988899,3.053708,1],[4,7988899,3.176471,1],[4,7988899,3.207161,1],[4,7988899,3.268542,1],[4,7988899,3.329923,1],[4,7988899,3.360614,1],[4,7988899,3.391304,1],[4,7988899,3.483376,1],[4,7988899,3.514066,1],[4,7988899,3.575448,1],[4,11101457,1.304348,1],[4,7988899,4.588235,1],[4,7988899,4.710997,1],[4,7988899,4.741688,1],[4,16704061,4.31202,1],[4,7988899,5.017903,1],[4,7988899,5.938619,1],[4,16704061,2.961637,1],[4,16704061,2.930946,1],[4,16704061,2.838875,1],[4,16704061,2.59335,1],[4,16704061,2.501279,1],[4,6743876,3.023018,1],[4,6743876,3.053708,1],[4,12553984,2.255754,1],[4,6743876,3.14578,1],[4,18364092,3.207161,1],[4,18364092,3.14578,1],[4,18364092,3.11509,1],[4,6743876,3.237852,1],[4,11308960,2.900256,1],[4,18364092,3.023018,1],[4,18364092,2.961637,1],[4,6743876,3.329923,1],[4,6743876,3.421995,1],[4,18364092,2.685422,1],[4,18364092,2.654731,1],[4,6743876,3.514066,1],[4,18364092,2.59335,1],[4,6743876,3.544757,1],[4,6743876,3.667519,1],[4,12553984,2.409207,1],[4,12553984,2.439898,1],[4,6743876,3.69821,1],[4,18364092,2.225064,1],[4,18364092,2.194373,1],[4,18364092,2.163683,1],[4,18364092,2.102302,1],[4,12553984,2.470588,1],[4,18364092,2.01023,1],[4,6536372,8.731458,1],[4,6536372,8.915601,1],[4,6536372,8.976982,1],[4,6536372,9.590793,1],[4,6743876,0.629156,1],[4,6743876,0.997442,1],[4,6743876,1.058824,1],[4,6743876,1.089514,1],[4,12553984,1.641944,1],[4,6743876,1.212276,1],[4,12553984,1.672634,1],[4,6743876,1.335038,1],[4,6743876,1.365729,1],[4,18364092,4.956522,1],[4,103752,4.680307,1],[4,12553984,1.764706,1],[4,11308960,2.992327,1],[4,6743876,2.102302,1],[4,6743876,2.194373,1],[4,12553984,1.887468,1],[4,6743876,2.378517,1],[4,6743876,2.409207,1],[4,6743876,2.501279,1],[4,6743876,2.531969,1],[4,12553984,1.948849,1],[4,6743876,2.624041,1],[4,6743876,2.746803,1],[4,18364092,3.575448,1],[4,12553984,2.225064,1],[4,6743876,6.828645,1],[4,6743876,6.951407,1],[4,6743876,7.104859,1],[4,6743876,7.258312,1],[4,6743876,7.350384,1],[4,6743876,7.565217,1],[4,6743876,7.626598,1],[4,6743876,7.964194,1],[4,6743876,9.867008,1],[4,18156588,4.097187,1],[4,18156588,3.636829,1],[4,18156588,3.514066,1],[4,18156588,3.299233,1],[4,18156588,3.176471,1],[4,18156588,3.084399,1],[4,18156588,3.023018,1],[4,18156588,2.992327,1],[4,18156588,2.838875,1],[4,18156588,2.808184,1],[4,18156588,2.746803,1],[4,18156588,2.624041,1],[4,18156588,2.531969,1],[4,18156588,2.501279,1],[4,18156588,2.347826,1],[4,18156588,2.317136,1],[4,18156588,2.194373,1],[4,18156588,2.132992,1],[4,11308960,2.716113,1],[4,18156588,2.071611,1],[4,18364092,1.764706,1],[4,6743876,3.7289,1],[4,6743876,3.790281,1],[4,18364092,1.549872,1],[4,11308960,2.808184,1],[4,18364092,1.488491,1],[4,12553984,2.685422,1],[4,12553984,2.716113,1],[4,12553984,2.777494,1],[4,6743876,4.035806,1],[4,6743876,4.189258,1],[4,6743876,4.219949,1],[4,6743876,4.250639,1],[4,6743876,4.83376,1],[4,6743876,4.956522,1],[4,6743876,5.140665,1],[4,6743876,5.232737,1],[4,6743876,5.263427,1],[4,6743876,5.324808,1],[4,6743876,5.355499,1],[4,6743876,5.693095,1],[4,6743876,5.754476,1],[4,6743876,6.030691,1],[4,6743876,6.122762,1],[4,6743876,6.214834,1],[4,6743876,6.306905,1],[4,6743876,6.429668,1],[4,6743876,6.644501,1],[4,6743876,6.705882,1],[4,6536372,3.329923,1],[4,18571596,7.319693,1],[4,6536372,3.360614,1],[4,6536372,3.391304,1],[4,6536372,3.514066,1],[4,6536372,3.606138,1],[4,6536372,3.7289,1],[4,6536372,3.790281,1],[4,18571596,6.797954,1],[4,18571596,6.767263,1],[4,6536372,3.820972,1],[4,6536372,3.882353,1],[4,18571596,6.58312,1],[4,18571596,6.521739,1],[4,18571596,6.491049,1],[4,18571596,6.460358,1],[4,6536372,3.974425,1],[4,6536372,4.066496,1],[4,6536372,4.158568,1],[4,6536372,4.189258,1],[4,6536372,4.250639,1],[4,18571596,6,1],[4,6536372,4.465473,1],[4,18571596,5.723785,1],[4,18571596,5.41688,1],[4,6536372,4.803069,1],[4,18571596,5.232737,1],[4,18571596,5.171355,1],[4,1141271,0.84399,1],[4,18571596,9.621483,1],[4,18571596,9.468031,1],[4,6536372,1.519182,1],[4,6536372,1.549872,1],[4,18571596,9.345269,1],[4,6536372,1.703325,1],[4,12553984,0.751918,1],[4,6536372,1.826087,1],[4,18571596,9.069054,1],[4,6536372,1.887468,1],[4,12553984,0.87468,1],[4,6536372,2.132992,1],[4,18571596,8.516624,1],[4,6536372,2.531969,1],[4,18571596,8.209719,1],[4,18571596,8.117647,1],[4,6536372,2.746803,1],[4,6536372,2.777494,1],[4,6536372,2.838875,1],[4,6536372,2.900256,1],[4,6536372,2.992327,1],[4,6536372,3.14578,1],[4,18571596,7.626598,1],[4,6536372,3.176471,1],[4,18571596,7.565217,1],[4,6536372,3.207161,1],[4,18571596,7.473146,1],[4,18571596,7.381074,1],[4,12553984,1.058824,1],[4,12553984,1.089514,1],[4,18571596,2.992327,1],[4,18571596,2.900256,1],[4,18571596,2.808184,1],[4,6536372,6.337596,1],[4,18571596,2.746803,1],[4,18571596,2.654731,1],[4,18571596,2.531969,1],[4,18571596,2.439898,1],[4,18571596,2.255754,1],[4,12553984,1.181586,1],[4,18571596,1.948849,1],[4,18571596,1.918159,1],[4,18571596,1.764706,1],[4,18571596,1.672634,1],[4,18571596,1.304348,1],[4,12553984,1.335038,1],[4,18571596,1.242967,1],[4,6536372,6.58312,1],[4,6536372,6.736573,1],[4,6536372,7.442455,1],[4,6536372,7.503836,1],[4,6536372,7.933504,1],[4,6536372,8.025575,1],[4,12553984,1.42711,1],[4,6536372,8.30179,1],[4,6536372,8.424552,1],[4,6536372,8.455243,1],[4,6536372,4.987212,1],[4,18571596,5.048593,1],[4,18571596,4.925831,1],[4,18571596,4.83376,1],[4,18571596,4.741688,1],[4,6536372,5.232737,1],[4,18571596,4.680307,1],[4,18571596,4.649616,1],[4,6536372,5.263427,1],[4,6536372,5.386189,1],[4,18571596,4.342711,1],[4,18571596,4.158568,1],[4,18571596,4.066496,1],[4,6536372,5.662404,1],[4,18571596,4.005115,1],[4,18571596,3.913043,1],[4,6536372,5.754476,1],[4,18571596,3.820972,1],[4,18571596,3.759591,1],[4,6536372,5.969309,1],[4,18571596,3.575448,1],[4,18571596,3.483376,1],[4,18571596,3.452685,1],[4,18571596,3.329923,1],[4,6536372,6.153453,1],[4,18571596,3.268542,1],[4,18571596,3.237852,1],[4,6536372,6.184143,1],[4,18571596,3.14578,1],[4,7158883,2.286445,1],[4,7158883,2.317136,1],[4,12553984,5.662404,1],[4,7158883,2.501279,1],[4,7158883,2.56266,1],[4,26041735,3.606138,1],[4,11308960,0.383632,1],[4,7158883,2.746803,1],[4,7158883,2.808184,1],[4,7158883,2.900256,1],[4,7158883,3.237852,1],[4,7158883,3.268542,1],[4,7158883,3.299233,1],[4,7158883,3.329923,1],[4,7158883,3.544757,1],[4,7158883,3.667519,1],[4,7158883,3.7289,1],[4,7158883,3.851662,1],[4,7158883,3.913043,1],[4,7158883,3.974425,1],[4,7158883,4.097187,1],[4,7158883,4.127877,1],[4,7158883,4.158568,1],[4,7158883,4.404092,1],[4,7158883,4.557545,1],[4,11308960,0.199488,1],[4,7158883,4.895141,1],[4,7158883,5.048593,1],[4,26041735,2.409207,1],[4,26041735,2.439898,1],[4,933767,4.618926,1],[4,11308960,0.905371,1],[4,26041735,2.56266,1],[4,11308960,0.87468,1],[4,26041735,2.777494,1],[4,933767,4.526854,1],[4,26041735,2.838875,1],[4,26041735,2.869565,1],[4,26041735,3.023018,1],[4,11308960,0.721228,1],[4,26041735,3.084399,1],[4,7158883,0.84399,1],[4,26041735,3.11509,1],[4,26041735,3.14578,1],[4,7158883,0.936061,1],[4,26041735,3.207161,1],[4,12553984,5.386189,1],[4,26041735,3.268542,1],[4,7158883,1.212276,1],[4,12553984,5.41688,1],[4,7158883,1.42711,1],[4,7158883,1.519182,1],[4,26041735,3.391304,1],[4,11308960,0.598465,1],[4,7158883,1.918159,1],[4,933767,4.189258,1],[4,11308960,0.537084,1],[4,26041735,3.943734,1],[4,933767,3.820972,1],[4,26041735,4.127877,1],[4,933767,3.7289,1],[4,933767,3.69821,1],[4,26041735,4.28133,1],[4,26041735,4.31202,1],[4,933767,3.575448,1],[4,26041735,4.557545,1],[4,26041735,4.618926,1],[4,933767,3.329923,1],[4,26041735,4.86445,1],[4,933767,3.176471,1],[4,26041735,5.017903,1],[4,26041735,5.048593,1],[4,26041735,5.171355,1],[4,933767,2.716113,1],[4,933767,2.685422,1],[4,933767,2.654731,1],[4,933767,2.624041,1],[4,933767,2.59335,1],[4,933767,2.531969,1],[4,933767,2.501279,1],[4,7366387,0.87468,1],[4,7366387,1.089514,1],[4,933767,2.194373,1],[4,7366387,1.365729,1],[4,7366387,1.549872,1],[4,12761487,0.905371,1],[4,7158883,5.202046,1],[4,7158883,5.508951,1],[4,17741580,3.636829,1],[4,17741580,3.514066,1],[4,17741580,3.237852,1],[4,17741580,3.176471,1],[4,17741580,2.930946,1],[4,7158883,7.289003,1],[4,17741580,2.838875,1],[4,12553984,6.092072,1],[4,17741580,2.685422,1],[4,11308960,0.046036,1],[4,17741580,2.654731,1],[4,17741580,2.501279,1],[4,17741580,2.439898,1],[4,17741580,2.409207,1],[4,17741580,2.317136,1],[4,17741580,2.255754,1],[4,17741580,2.040921,1],[4,17741580,2.01023,1],[4,17741580,1.918159,1],[4,12761487,0.506394,1],[4,12761487,0.567775,1],[4,12761487,0.598465,1],[4,26041735,3.667519,1],[4,17741580,1.42711,1],[4,933767,4.035806,1],[4,26041735,3.851662,1],[4,17741580,1.242967,1],[4,6951379,3.053708,1],[4,6951379,3.084399,1],[4,11308960,2.317136,1],[4,6951379,3.176471,1],[4,6951379,3.207161,1],[4,6951379,3.237852,1],[4,6951379,3.268542,1],[4,6951379,3.299233,1],[4,12553984,3.514066,1],[4,6951379,3.329923,1],[4,6951379,3.360614,1],[4,6951379,3.421995,1],[4,6951379,3.452685,1],[4,6951379,3.483376,1],[4,6951379,3.544757,1],[4,6951379,3.7289,1],[4,6951379,3.759591,1],[4,12553984,3.575448,1],[4,11308960,2.255754,1],[4,11308960,2.194373,1],[4,11308960,2.132992,1],[4,12553984,3.882353,1],[4,6951379,4.465473,1],[4,6951379,4.588235,1],[4,6951379,4.680307,1],[4,6951379,4.803069,1],[4,6951379,4.925831,1],[4,6951379,4.956522,1],[4,6951379,5.171355,1],[4,18156588,2.040921,1],[4,11308960,2.624041,1],[4,18156588,1.948849,1],[4,18156588,1.918159,1],[4,18156588,1.703325,1],[4,12553984,3.023018,1],[4,18156588,1.580563,1],[4,11308960,2.501279,1],[4,12553984,3.14578,1],[4,12553984,3.207161,1],[4,6951379,1.335038,1],[4,6951379,1.457801,1],[4,6951379,1.795396,1],[4,6951379,1.826087,1],[4,6951379,1.887468,1],[4,6951379,1.918159,1],[4,6951379,1.948849,1],[4,12553984,3.360614,1],[4,6951379,2.040921,1],[4,6951379,2.132992,1],[4,6951379,2.225064,1],[4,6951379,2.255754,1],[4,6951379,2.347826,1],[4,6951379,2.56266,1],[4,6951379,2.624041,1],[4,6951379,2.685422,1],[4,6951379,2.716113,1],[4,6951379,2.777494,1],[4,6951379,2.930946,1],[4,12553984,4.250639,1],[4,11308960,1.734015,1],[4,17949084,1.795396,1],[4,17949084,1.764706,1],[4,11308960,1.703325,1],[4,12553984,4.465473,1],[4,17949084,1.549872,1],[4,26041735,0.936061,1],[4,11308960,1.365729,1],[4,17949084,1.242967,1],[4,26041735,1.150895,1],[4,26041735,1.335038,1],[4,26041735,1.365729,1],[4,26041735,1.42711,1],[4,26041735,1.457801,1],[4,26041735,1.549872,1],[4,26041735,1.611253,1],[4,11308960,1.058824,1],[4,11308960,1.028133,1],[4,26041735,1.734015,1],[4,26041735,1.764706,1],[4,26041735,1.795396,1],[4,26041735,1.918159,1],[4,26041735,2.040921,1],[4,26041735,2.071611,1],[4,12553984,5.079284,1],[4,26041735,2.286445,1],[4,11308960,0.966752,1],[4,26041735,2.378517,1],[4,6951379,5.355499,1],[4,6951379,5.693095,1],[4,6951379,5.815857,1],[4,6951379,6.675192,1],[4,6951379,6.859335,1],[4,6951379,7.196931,1],[4,17949084,4.925831,1],[4,17949084,3.667519,1],[4,17949084,3.299233,1],[4,17949084,3.207161,1],[4,17949084,3.14578,1],[4,17949084,2.930946,1],[4,17949084,2.685422,1],[4,17949084,2.654731,1],[4,17949084,2.59335,1],[4,17949084,2.501279,1],[4,17949084,2.439898,1],[4,17949084,2.409207,1],[4,17949084,2.347826,1],[4,17949084,2.317136,1],[4,17949084,2.225064,1],[4,12553984,4.097187,1],[4,11308960,1.795396,1],[4,17949084,2.132992,1],[4,17949084,2.102302,1],[4,12553984,4.158568,1],[4,12553984,4.189258,1],[4,17949084,1.948849,1],[4,17949084,1.887468,1],[4,14629022,2.470588,1],[4,14629022,2.439898,1],[4,13591503,2.501279,1],[4,14629022,2.347826,1],[4,14629022,2.132992,1],[4,14629022,2.102302,1],[4,13591503,2.746803,1],[4,14629022,1.948849,1],[4,14629022,1.826087,1],[4,14629022,1.703325,1],[4,13591503,3.023018,1],[4,14629022,1.488491,1],[4,14629022,1.304348,1],[4,13591503,3.14578,1],[4,10478945,3.667519,1],[4,10478945,3.575448,1],[4,10478945,3.023018,1],[4,10478945,2.685422,1],[4,10478945,2.624041,1],[4,10478945,2.317136,1],[4,10478945,2.102302,1],[4,26871750,0.598465,1],[4,26871750,0.659847,1],[4,26871750,0.690537,1],[4,10478945,1.764706,1],[4,10478945,1.672634,1],[4,26871750,0.905371,1],[4,10478945,1.611253,1],[4,9648930,1.641944,1],[4,9648930,1.703325,1],[4,9648930,1.795396,1],[4,9648930,1.856777,1],[4,9648930,1.887468,1],[4,9648930,1.948849,1],[4,9648930,1.97954,1],[4,13591503,2.378517,1],[4,9648930,2.255754,1],[4,9648930,2.531969,1],[4,9648930,2.654731,1],[4,9648930,2.838875,1],[4,9648930,3.023018,1],[4,9648930,3.391304,1],[4,14629022,3.913043,1],[4,9648930,3.514066,1],[4,9648930,3.636829,1],[4,14629022,3.69821,1],[4,14629022,3.606138,1],[4,14629022,3.176471,1],[4,14629022,2.900256,1],[4,14629022,2.777494,1],[4,9648930,4.557545,1],[4,14629022,2.654731,1],[4,14629022,2.624041,1],[4,14629022,2.59335,1],[4,13591503,2.409207,1],[4,14629022,2.501279,1],[4,13591503,2.470588,1],[4,9856433,1.734015,1],[4,14421518,3.14578,1],[4,9856433,1.764706,1],[4,9856433,1.795396,1],[4,14421518,3.053708,1],[4,14421518,2.930946,1],[4,9856433,1.97954,1],[4,9856433,2.071611,1],[4,14421518,2.716113,1],[4,9856433,2.132992,1],[4,9856433,2.194373,1],[4,9856433,2.225064,1],[4,9856433,2.255754,1],[4,9856433,2.347826,1],[4,9856433,2.409207,1],[4,9856433,2.439898,1],[4,9856433,2.470588,1],[4,9856433,2.56266,1],[4,9856433,2.624041,1],[4,9856433,2.716113,1],[4,9856433,2.808184,1],[4,9856433,2.869565,1],[4,14421518,1.734015,1],[4,9856433,3.11509,1],[4,14421518,1.457801,1],[4,14421518,1.42711,1],[4,14421518,1.335038,1],[4,9856433,3.329923,1],[4,9856433,3.360614,1],[4,26871750,1.028133,1],[4,26871750,1.058824,1],[4,10478945,1.488491,1],[4,26871750,1.150895,1],[4,9648930,5.324808,1],[4,9648930,5.785166,1],[4,9648930,6.644501,1],[4,10478945,1.365729,1],[4,26871750,1.335038,1],[4,26871750,1.365729,1],[4,26871750,1.396419,1],[4,26871750,1.42711,1],[4,26871750,1.519182,1],[4,311256,1.488491,1],[4,26871750,1.764706,1],[4,26871750,1.826087,1],[4,26871750,1.856777,1],[4,26871750,1.918159,1],[4,26871750,1.948849,1],[4,14421518,4.066496,1],[4,26871750,2.132992,1],[4,26871750,2.225064,1],[4,26871750,2.286445,1],[4,26871750,2.317136,1],[4,10478945,1.242967,1],[4,26871750,2.409207,1],[4,14421518,3.606138,1],[4,311256,1.549872,1],[4,26871750,2.654731,1],[4,13383999,4.066496,1],[4,9441426,1.42711,1],[4,9441426,1.641944,1],[4,9441426,1.703325,1],[4,13383999,4.28133,1],[4,10478945,4.987212,1],[4,9441426,1.795396,1],[4,9441426,1.948849,1],[4,9441426,2.01023,1],[4,9441426,2.040921,1],[4,9441426,2.071611,1],[4,9441426,2.163683,1],[4,9441426,2.317136,1],[4,9441426,2.347826,1],[4,9441426,2.531969,1],[4,9441426,2.56266,1],[4,9441426,2.59335,1],[4,9441426,2.624041,1],[4,9441426,2.654731,1],[4,9441426,2.716113,1],[4,13591503,1.273657,1],[4,9441426,2.900256,1],[4,9441426,2.961637,1],[4,9441426,2.992327,1],[4,9441426,3.023018,1],[4,9441426,3.14578,1],[4,9441426,3.176471,1],[4,9441426,3.237852,1],[4,26664246,4.987212,1],[4,15044030,1.611253,1],[4,15044030,1.549872,1],[4,13383999,3.14578,1],[4,15044030,1.457801,1],[4,26664246,5.109974,1],[4,26664246,5.171355,1],[4,26664246,5.202046,1],[4,26664246,5.232737,1],[4,26664246,5.386189,1],[4,26664246,5.44757,1],[4,10686449,1.058824,1],[4,26664246,5.539642,1],[4,26664246,5.570332,1],[4,26664246,5.662404,1],[4,10686449,1.028133,1],[4,26664246,6.245524,1],[4,26664246,6.306905,1],[4,26664246,6.429668,1],[4,26664246,6.675192,1],[4,26664246,6.951407,1],[4,26664246,7.16624,1],[4,26664246,7.534527,1],[4,26664246,7.71867,1],[4,10686449,0.936061,1],[4,13383999,3.820972,1],[4,26664246,8.485934,1],[4,26664246,8.516624,1],[4,9441426,1.273657,1],[4,14836526,2.961637,1],[4,14836526,2.900256,1],[4,14836526,2.777494,1],[4,14836526,2.531969,1],[4,14836526,2.501279,1],[4,14836526,2.439898,1],[4,14836526,2.317136,1],[4,14836526,2.040921,1],[4,14836526,2.01023,1],[4,14836526,1.641944,1],[4,14836526,1.580563,1],[4,311256,1.273657,1],[4,14836526,1.519182,1],[4,14836526,1.181586,1],[4,14836526,1.150895,1],[4,26664246,9.375959,1],[4,9648930,0.537084,1],[4,13591503,1.918159,1],[4,13591503,2.01023,1],[4,9648930,0.905371,1],[4,13591503,2.040921,1],[4,13591503,2.102302,1],[4,9648930,1.242967,1],[4,9648930,1.273657,1],[4,9648930,1.365729,1],[4,13591503,2.163683,1],[4,9648930,1.488491,1],[4,13591503,2.194373,1],[4,9648930,1.580563,1],[4,9441426,3.299233,1],[4,9441426,3.360614,1],[4,9441426,3.544757,1],[4,9441426,3.606138,1],[4,9441426,3.636829,1],[4,9441426,3.69821,1],[4,9441426,4.005115,1],[4,9441426,4.158568,1],[4,9441426,4.250639,1],[4,9441426,4.28133,1],[4,9441426,4.31202,1],[4,9441426,4.404092,1],[4,9441426,4.434783,1],[4,9441426,4.618926,1],[4,9441426,4.803069,1],[4,9441426,4.925831,1],[4,9441426,5.048593,1],[4,9441426,5.109974,1],[4,9441426,5.324808,1],[4,9441426,5.355499,1],[4,9441426,5.44757,1],[4,9441426,5.508951,1],[4,9441426,6,1],[4,14836526,3.544757,1],[4,9441426,6.214834,1],[4,14836526,3.268542,1],[4,9441426,6.521739,1],[4,14836526,3.084399,1],[4,9441426,6.58312,1],[4,13799007,1.97954,1],[4,14006511,2.654731,1],[4,14006511,2.59335,1],[4,26871750,5.324808,1],[4,26871750,5.355499,1],[4,14006511,2.409207,1],[4,13799007,2.194373,1],[4,14006511,2.317136,1],[4,14006511,2.286445,1],[4,14006511,2.225064,1],[4,26871750,5.41688,1],[4,13799007,2.225064,1],[4,13799007,2.470588,1],[4,14006511,1.97954,1],[4,26871750,5.508951,1],[4,14006511,1.856777,1],[4,26871750,5.601023,1],[4,26871750,5.631714,1],[4,14006511,1.641944,1],[4,26871750,5.693095,1],[4,26871750,5.785166,1],[4,13799007,2.654731,1],[4,26871750,5.815857,1],[4,26871750,5.877238,1],[4,13799007,2.746803,1],[4,26871750,6.398977,1],[4,26871750,6.55243,1],[4,26871750,6.644501,1],[4,10063937,2.501279,1],[4,10063937,2.56266,1],[4,10063937,2.685422,1],[4,10063937,2.716113,1],[4,10063937,2.869565,1],[4,10063937,3.14578,1],[4,10063937,3.360614,1],[4,10063937,3.483376,1],[4,10063937,3.514066,1],[4,10063937,3.790281,1],[4,10063937,3.882353,1],[4,10063937,3.913043,1],[4,10063937,4.496164,1],[4,10063937,5.324808,1],[4,14006511,5.017903,1],[4,14006511,4.557545,1],[4,14006511,4.373402,1],[4,14006511,4.066496,1],[4,14006511,3.882353,1],[4,14006511,3.667519,1],[4,13799007,1.641944,1],[4,14006511,3.299233,1],[4,14006511,3.268542,1],[4,14006511,3.237852,1],[4,14006511,3.207161,1],[4,13799007,1.948849,1],[4,14006511,3.176471,1],[4,14006511,3.14578,1],[4,14006511,2.838875,1],[4,10271441,3.11509,1],[4,10271441,3.207161,1],[4,10271441,3.237852,1],[4,10271441,3.360614,1],[4,10271441,3.391304,1],[4,10271441,3.421995,1],[4,10271441,3.667519,1],[4,10271441,3.69821,1],[4,10271441,3.7289,1],[4,10271441,3.851662,1],[4,10271441,4.127877,1],[4,13799007,6.030691,1],[4,10271441,4.28133,1],[4,10271441,4.342711,1],[4,10271441,4.434783,1],[4,13799007,5.324808,1],[4,10271441,5.017903,1],[4,13799007,4.987212,1],[4,13799007,4.588235,1],[4,13799007,4.496164,1],[4,13799007,4.465473,1],[4,13799007,4.342711,1],[4,13799007,3.974425,1],[4,13799007,3.943734,1],[4,13799007,3.882353,1],[4,13799007,3.851662,1],[4,10271441,6.030691,1],[4,13799007,3.636829,1],[4,13799007,3.544757,1],[4,13799007,2.961637,1],[4,26871750,7.810742,1],[4,13799007,3.084399,1],[4,13799007,3.176471,1],[4,311256,4.097187,1],[4,311256,4.066496,1],[4,10271441,1.089514,1],[4,311256,4.005115,1],[4,13799007,3.268542,1],[4,10271441,1.335038,1],[4,10271441,1.457801,1],[4,10271441,1.641944,1],[4,10271441,1.672634,1],[4,10271441,1.703325,1],[4,13799007,3.391304,1],[4,10271441,1.97954,1],[4,10271441,2.040921,1],[4,10271441,2.102302,1],[4,10271441,2.225064,1],[4,10271441,2.286445,1],[4,10271441,2.378517,1],[4,13799007,3.421995,1],[4,13799007,3.483376,1],[4,10271441,2.470588,1],[4,10271441,2.685422,1],[4,10271441,2.838875,1],[4,10271441,2.869565,1],[4,10271441,3.023018,1],[4,10271441,3.084399,1],[4,9856433,5.570332,1],[4,9856433,5.631714,1],[4,9856433,5.662404,1],[4,9856433,5.754476,1],[4,9856433,5.877238,1],[4,26871750,2.777494,1],[4,9856433,6.030691,1],[4,311256,1.795396,1],[4,9856433,6.122762,1],[4,9856433,6.214834,1],[4,9856433,6.429668,1],[4,9856433,7.68798,1],[4,26871750,2.808184,1],[4,26871750,2.992327,1],[4,26871750,3.023018,1],[4,26871750,3.053708,1],[4,26871750,3.207161,1],[4,26871750,3.299233,1],[4,14214015,3.483376,1],[4,26871750,3.452685,1],[4,14214015,3.391304,1],[4,26871750,3.514066,1],[4,26871750,3.544757,1],[4,26871750,3.606138,1],[4,10063937,0.905371,1],[4,311256,2.225064,1],[4,14214015,3.053708,1],[4,14214015,3.023018,1],[4,26871750,3.69821,1],[4,9856433,3.391304,1],[4,14421518,1.212276,1],[4,14421518,1.120205,1],[4,9856433,3.544757,1],[4,14421518,0.813299,1],[4,9856433,3.7289,1],[4,14421518,0.751918,1],[4,14421518,0.659847,1],[4,9856433,3.820972,1],[4,14421518,0.322251,1],[4,14421518,0.26087,1],[4,9856433,4.066496,1],[4,26871750,2.746803,1],[4,14421518,0.107417,1],[4,14421518,0.076726,1],[4,9856433,4.219949,1],[4,9856433,4.250639,1],[4,311256,1.764706,1],[4,9856433,4.434783,1],[4,9856433,4.557545,1],[4,9856433,4.618926,1],[4,9856433,4.680307,1],[4,9856433,4.710997,1],[4,9856433,4.86445,1],[4,9856433,4.925831,1],[4,9856433,4.956522,1],[4,9856433,5.017903,1],[4,9856433,5.355499,1],[4,9856433,5.508951,1],[4,26871750,4.035806,1],[4,13799007,0.813299,1],[4,26871750,4.097187,1],[4,14214015,1.181586,1],[4,10063937,1.365729,1],[4,26871750,4.219949,1],[4,13799007,0.905371,1],[4,26871750,4.31202,1],[4,26871750,4.526854,1],[4,26871750,4.649616,1],[4,26871750,4.956522,1],[4,26871750,5.017903,1],[4,26871750,5.079284,1],[4,26871750,5.109974,1],[4,10063937,1.457801,1],[4,10063937,1.549872,1],[4,10063937,1.672634,1],[4,10063937,1.795396,1],[4,10063937,1.887468,1],[4,10063937,1.97954,1],[4,10063937,2.01023,1],[4,10063937,2.040921,1],[4,10063937,2.071611,1],[4,10063937,2.102302,1],[4,10063937,2.194373,1],[4,26871750,5.232737,1],[4,10063937,2.347826,1],[4,10063937,2.378517,1],[4,10063937,2.409207,1],[4,14214015,2.930946,1],[4,26871750,3.759591,1],[4,14214015,2.869565,1],[4,14214015,2.716113,1],[4,14214015,2.685422,1],[4,26871750,3.820972,1],[4,14214015,2.624041,1],[4,14214015,2.59335,1],[4,14214015,2.531969,1],[4,10063937,1.212276,1],[4,14214015,2.378517,1],[4,14214015,2.347826,1],[4,311256,2.378517,1],[4,14214015,2.286445,1],[4,10063937,1.242967,1],[4,14214015,2.163683,1],[4,14214015,1.887468,1],[4,311256,2.746803,1],[4,311256,2.808184,1],[4,311256,2.838875,1],[4,14214015,1.734015,1],[4,14214015,1.672634,1],[4,26871750,3.974425,1],[4,311256,2.930946,1],[4,311256,3.053708,1],[4,14214015,1.488491,1],[4,14214015,1.457801,1],[4,14214015,1.396419,1],[4,311256,3.084399,1],[4,8611410,2.071611,1],[4,8611410,2.194373,1],[4,10893953,1.918159,1],[4,8611410,2.347826,1],[4,10893953,1.826087,1],[4,8611410,2.439898,1],[4,8611410,2.470588,1],[4,8611410,2.624041,1],[4,8611410,2.777494,1],[4,8611410,2.869565,1],[4,8611410,2.961637,1],[4,8611410,3.084399,1],[4,8611410,3.207161,1],[4,8611410,3.237852,1],[4,8611410,3.391304,1],[4,8611410,3.452685,1],[4,8611410,3.514066,1],[4,8611410,3.544757,1],[4,8611410,3.606138,1],[4,8611410,3.913043,1],[4,8611410,3.974425,1],[4,8611410,4.035806,1],[4,8611410,4.434783,1],[4,8611410,4.649616,1],[4,8611410,4.680307,1],[4,8611410,4.83376,1],[4,8611410,6.276215,1],[4,15874045,3.636829,1],[4,16081549,2.654731,1],[4,16081549,2.59335,1],[4,16081549,2.501279,1],[4,16081549,2.317136,1],[4,16081549,2.286445,1],[4,16081549,2.225064,1],[4,16081549,2.163683,1],[4,16081549,2.132992,1],[4,16081549,2.102302,1],[4,16081549,1.97954,1],[4,16081549,1.887468,1],[4,16081549,1.734015,1],[4,16081549,1.703325,1],[4,16081549,1.672634,1],[4,16081549,1.580563,1],[4,16081549,1.519182,1],[4,10893953,2.163683,1],[4,10893953,2.132992,1],[4,16081549,0.936061,1],[4,26456742,4.373402,1],[4,26456742,4.925831,1],[4,26456742,5.202046,1],[4,10893953,2.040921,1],[4,8611410,1.335038,1],[4,8611410,1.42711,1],[4,8611410,1.549872,1],[4,8611410,1.672634,1],[4,8611410,1.948849,1],[4,8611410,2.01023,1],[4,8818914,2.040921,1],[4,8818914,2.163683,1],[4,8818914,2.194373,1],[4,8818914,2.225064,1],[4,8818914,2.439898,1],[4,8818914,2.501279,1],[4,8818914,2.654731,1],[4,8818914,2.716113,1],[4,8818914,2.777494,1],[4,8818914,3.023018,1],[4,8818914,3.207161,1],[4,8818914,3.237852,1],[4,15666542,4.219949,1],[4,8818914,3.820972,1],[4,15666542,3.69821,1],[4,15666542,3.237852,1],[4,15666542,3.207161,1],[4,15666542,3.053708,1],[4,15666542,3.023018,1],[4,15666542,2.900256,1],[4,15666542,2.624041,1],[4,15666542,2.531969,1],[4,15666542,2.470588,1],[4,15666542,2.409207,1],[4,15666542,2.194373,1],[4,15666542,2.071611,1],[4,13176495,1.519182,1],[4,15666542,1.826087,1],[4,15666542,1.734015,1],[4,15874045,3.421995,1],[4,15874045,2.961637,1],[4,15874045,2.838875,1],[4,15874045,2.777494,1],[4,15874045,2.56266,1],[4,15874045,2.531969,1],[4,15874045,2.439898,1],[4,15874045,2.347826,1],[4,15874045,2.317136,1],[4,15874045,2.286445,1],[4,15874045,2.225064,1],[4,15874045,2.194373,1],[4,15874045,2.102302,1],[4,10893953,1.42711,1],[4,15874045,1.856777,1],[4,15874045,1.764706,1],[4,15874045,1.580563,1],[4,15874045,1.181586,1],[4,518760,5.44757,1],[4,8818914,1.058824,1],[4,13176495,0.84399,1],[4,8818914,1.580563,1],[4,13176495,0.966752,1],[4,8818914,1.611253,1],[4,8818914,1.795396,1],[4,8818914,1.856777,1],[4,8818914,1.887468,1],[4,8818914,1.948849,1],[4,8818914,1.97954,1],[4,16289053,2.163683,1],[4,16289053,2.132992,1],[4,16289053,2.102302,1],[4,16289053,2.01023,1],[4,16289053,1.856777,1],[4,12968991,3.913043,1],[4,12968991,4.404092,1],[4,16289053,1.795396,1],[4,16289053,1.764706,1],[4,16289053,1.703325,1],[4,26456742,2.102302,1],[4,12968991,4.434783,1],[4,12968991,4.526854,1],[4,12968991,5.232737,1],[4,16289053,1.641944,1],[4,10893953,3.974425,1],[4,10893953,3.636829,1],[4,10893953,3.575448,1],[4,10893953,3.544757,1],[4,10893953,3.452685,1],[4,10893953,3.053708,1],[4,10893953,3.023018,1],[4,10893953,2.930946,1],[4,10893953,2.900256,1],[4,16289053,1.549872,1],[4,16289053,1.457801,1],[4,16289053,1.42711,1],[4,26456742,2.163683,1],[4,26456742,1.457801,1],[4,12968991,3.053708,1],[4,12968991,3.084399,1],[4,26456742,1.519182,1],[4,16289053,3.11509,1],[4,26456742,1.549872,1],[4,12968991,3.14578,1],[4,12968991,3.207161,1],[4,26456742,1.672634,1],[4,26456742,1.734015,1],[4,16289053,2.900256,1],[4,16289053,2.869565,1],[4,26456742,1.764706,1],[4,26456742,1.795396,1],[4,16289053,2.777494,1],[4,12968991,3.299233,1],[4,16289053,2.685422,1],[4,12968991,3.360614,1],[4,16289053,2.531969,1],[4,16289053,2.501279,1],[4,12968991,3.421995,1],[4,16289053,2.439898,1],[4,16289053,2.409207,1],[4,16289053,2.347826,1],[4,16289053,2.317136,1],[4,12968991,3.544757,1],[4,16289053,2.255754,1],[4,16289053,2.225064,1],[4,16289053,2.194373,1],[4,26456742,3.790281,1],[4,10893953,2.409207,1],[4,8403906,1.948849,1],[4,8403906,1.97954,1],[4,8403906,2.040921,1],[4,8403906,2.286445,1],[4,8403906,2.317136,1],[4,8403906,2.409207,1],[4,26456742,3.943734,1],[4,10893953,2.286445,1],[4,8403906,2.624041,1],[4,8403906,2.746803,1],[4,8403906,3.237852,1],[4,8403906,3.299233,1],[4,8403906,3.360614,1],[4,8403906,3.421995,1],[4,8403906,3.514066,1],[4,8403906,3.820972,1],[4,8403906,3.943734,1],[4,8403906,4.035806,1],[4,8403906,4.127877,1],[4,8403906,4.680307,1],[4,16081549,4.342711,1],[4,16081549,3.237852,1],[4,16081549,2.930946,1],[4,16081549,2.838875,1],[4,16081549,2.808184,1],[4,16081549,2.746803,1],[4,16081549,2.716113,1],[4,16289053,1.304348,1],[4,10893953,2.808184,1],[4,26456742,2.255754,1],[4,26456742,2.347826,1],[4,26456742,2.378517,1],[4,26456742,2.501279,1],[4,26456742,2.654731,1],[4,26456742,2.685422,1],[4,26456742,2.716113,1],[4,26456742,2.777494,1],[4,26456742,2.838875,1],[4,26456742,2.869565,1],[4,26456742,2.900256,1],[4,26456742,3.023018,1],[4,26456742,3.053708,1],[4,26456742,3.11509,1],[4,26456742,3.176471,1],[4,26456742,3.207161,1],[4,26456742,3.268542,1],[4,26456742,3.329923,1],[4,26456742,3.360614,1],[4,26456742,3.391304,1],[4,26456742,3.421995,1],[4,8403906,1.212276,1],[4,26456742,3.544757,1],[4,8403906,1.365729,1],[4,8403906,1.396419,1],[4,8403906,1.488491,1],[4,10893953,2.501279,1],[4,13383999,1.457801,1],[4,13383999,1.519182,1],[4,10686449,2.56266,1],[4,26664246,2.409207,1],[4,26664246,2.501279,1],[4,26664246,2.56266,1],[4,26664246,2.746803,1],[4,13383999,1.672634,1],[4,26664246,2.838875,1],[4,26664246,2.869565,1],[4,26664246,2.900256,1],[4,26664246,2.930946,1],[4,13383999,1.703325,1],[4,518760,2.01023,1],[4,26664246,3.053708,1],[4,10686449,2.470588,1],[4,26664246,3.452685,1],[4,26664246,3.514066,1],[4,13383999,1.826087,1],[4,13383999,1.856777,1],[4,26664246,3.575448,1],[4,13383999,1.887468,1],[4,26664246,3.636829,1],[4,13383999,1.948849,1],[4,13383999,2.01023,1],[4,13383999,2.102302,1],[4,10686449,2.225064,1],[4,26664246,3.882353,1],[4,15251534,2.900256,1],[4,15251534,2.838875,1],[4,15251534,2.654731,1],[4,15251534,2.624041,1],[4,15251534,2.56266,1],[4,15251534,2.531969,1],[4,15251534,2.439898,1],[4,15251534,2.378517,1],[4,13383999,0.966752,1],[4,15251534,2.286445,1],[4,15251534,2.255754,1],[4,15251534,2.163683,1],[4,15251534,2.102302,1],[4,15251534,2.040921,1],[4,15251534,1.97954,1],[4,15251534,1.887468,1],[4,15251534,1.856777,1],[4,13383999,1.058824,1],[4,15251534,1.672634,1],[4,13383999,1.150895,1],[4,15251534,1.519182,1],[4,26664246,2.01023,1],[4,26664246,2.040921,1],[4,10686449,2.685422,1],[4,10686449,2.654731,1],[4,26664246,2.132992,1],[4,15251534,1.089514,1],[4,13383999,1.365729,1],[4,13383999,1.42711,1],[4,9233922,2.501279,1],[4,9233922,2.531969,1],[4,9233922,2.685422,1],[4,9233922,2.746803,1],[4,9233922,2.777494,1],[4,9233922,2.808184,1],[4,9233922,2.838875,1],[4,9233922,2.900256,1],[4,9233922,2.992327,1],[4,9233922,3.11509,1],[4,9233922,3.391304,1],[4,9233922,3.514066,1],[4,9233922,3.575448,1],[4,9233922,3.759591,1],[4,9233922,3.790281,1],[4,9233922,3.851662,1],[4,15044030,3.237852,1],[4,15044030,2.808184,1],[4,15044030,2.531969,1],[4,15044030,2.409207,1],[4,15044030,2.317136,1],[4,15044030,2.163683,1],[4,15044030,2.132992,1],[4,15044030,2.102302,1],[4,10686449,1.457801,1],[4,15044030,1.918159,1],[4,15044030,1.887468,1],[4,26664246,4.925831,1],[4,15044030,1.826087,1],[4,26664246,4.005115,1],[4,26664246,4.127877,1],[4,10686449,2.102302,1],[4,26664246,4.219949,1],[4,26664246,4.250639,1],[4,26664246,4.28133,1],[4,13383999,2.501279,1],[4,26664246,4.342711,1],[4,26664246,4.404092,1],[4,10686449,1.826087,1],[4,26664246,4.496164,1],[4,26664246,4.557545,1],[4,26664246,4.649616,1],[4,9233922,1.273657,1],[4,26664246,4.680307,1],[4,26664246,4.741688,1],[4,13383999,2.777494,1],[4,10686449,1.641944,1],[4,10686449,1.611253,1],[4,518760,1.519182,1],[4,9233922,1.826087,1],[4,26664246,4.83376,1],[4,9233922,1.887468,1],[4,9233922,1.918159,1],[4,9233922,2.01023,1],[4,9233922,2.225064,1],[4,9233922,2.255754,1],[4,9233922,2.317136,1],[4,9233922,2.378517,1],[4,9026418,1.795396,1],[4,15459038,3.882353,1],[4,9026418,1.918159,1],[4,9026418,1.948849,1],[4,518760,2.56266,1],[4,9026418,2.040921,1],[4,13176495,1.948849,1],[4,15459038,3.544757,1],[4,15459038,3.483376,1],[4,15459038,3.452685,1],[4,13176495,1.97954,1],[4,9026418,2.194373,1],[4,15459038,3.360614,1],[4,9026418,2.286445,1],[4,15459038,3.237852,1],[4,9026418,2.317136,1],[4,15459038,3.14578,1],[4,15459038,3.11509,1],[4,9026418,2.409207,1],[4,9026418,2.439898,1],[4,13176495,2.040921,1],[4,15459038,2.930946,1],[4,15459038,2.838875,1],[4,15459038,2.808184,1],[4,9026418,2.56266,1],[4,15459038,2.746803,1],[4,15459038,2.654731,1],[4,15459038,2.59335,1],[4,9026418,2.59335,1],[4,15666542,1.672634,1],[4,15666542,1.641944,1],[4,15666542,1.519182,1],[4,15666542,1.365729,1],[4,15666542,1.212276,1],[4,15666542,1.058824,1],[4,15666542,0.936061,1],[4,13176495,1.611253,1],[4,13176495,1.672634,1],[4,518760,4.557545,1],[4,518760,4.035806,1],[4,518760,3.820972,1],[4,518760,3.575448,1],[4,518760,3.421995,1],[4,518760,3.329923,1],[4,518760,3.299233,1],[4,518760,3.237852,1],[4,13176495,1.795396,1],[4,518760,3.023018,1],[4,9026418,1.181586,1],[4,518760,2.900256,1],[4,518760,2.869565,1],[4,13176495,1.826087,1],[4,518760,2.838875,1],[4,9026418,1.488491,1],[4,518760,2.746803,1],[4,518760,2.716113,1],[4,13176495,1.918159,1],[4,518760,2.654731,1],[4,10686449,3.452685,1],[4,13383999,0.107417,1],[4,13383999,0.659847,1],[4,26664246,1.028133,1],[4,13383999,0.813299,1],[4,26664246,1.181586,1],[4,13383999,0.87468,1],[4,26664246,1.42711,1],[4,26664246,1.549872,1],[4,26664246,1.641944,1],[4,26664246,1.703325,1],[4,26664246,1.734015,1],[4,9026418,3.053708,1],[4,9026418,3.176471,1],[4,9026418,3.329923,1],[4,9026418,3.391304,1],[4,9026418,3.514066,1],[4,9026418,3.606138,1],[4,9026418,4.465473,1],[4,9026418,4.496164,1],[4,15251534,4.925831,1],[4,15251534,4.035806,1],[4,15251534,4.005115,1],[4,15251534,3.974425,1],[4,15251534,3.851662,1],[4,15251534,3.69821,1],[4,15251534,3.575448,1],[4,15251534,3.391304,1],[4,15251534,3.084399,1],[4,13176495,2.102302,1],[4,15459038,2.439898,1],[4,15459038,2.409207,1],[4,15459038,2.317136,1],[4,15459038,2.255754,1],[4,15459038,2.225064,1],[4,15459038,2.194373,1],[4,13176495,2.194373,1],[4,15459038,2.071611,1],[4,15459038,2.040921,1],[4,13176495,2.225064,1],[4,13176495,2.255754,1],[4,518760,2.470588,1],[4,15459038,1.795396,1],[4,15459038,1.764706,1],[4,15459038,1.703325,1],[4,13176495,2.470588,1],[4,13176495,2.531969,1],[4,13176495,2.654731,1],[4,13176495,2.685422,1],[4,15459038,1.42711,1],[4,13176495,2.961637,1],[4,15459038,1.396419,1],[4,15459038,1.365729,1],[4,518760,2.347826,1],[4,13176495,3.11509,1],[4,13176495,3.514066,1],[4,518760,2.286445,1],[4,10686449,3.790281,1],[4,11723968,0.905371,1],[4,6121364,2.777494,1],[4,6121364,3.207161,1],[4,6121364,3.360614,1],[4,19194107,5.109974,1],[4,19194107,4.588235,1],[4,11723968,0.966752,1],[4,19194107,4.342711,1],[4,19194107,4.28133,1],[4,19194107,3.606138,1],[4,19194107,3.268542,1],[4,25419223,3.360614,1],[4,4876341,7.964194,1],[4,5706356,1.611253,1],[4,19194107,3.176471,1],[4,19194107,3.023018,1],[4,19194107,2.992327,1],[4,5291348,2.869565,1],[4,6121364,2.040921,1],[4,5291348,2.930946,1],[4,25419223,3.790281,1],[4,5706356,1.887468,1],[4,25419223,3.759591,1],[4,5291348,2.961637,1],[4,25419223,3.7289,1],[4,25419223,3.667519,1],[4,6121364,2.102302,1],[4,25419223,3.636829,1],[4,5291348,2.992327,1],[4,6121364,2.439898,1],[4,6121364,2.470588,1],[4,25419223,3.575448,1],[4,25419223,3.544757,1],[4,5706356,1.856777,1],[4,19194107,2.163683,1],[4,25419223,2.439898,1],[4,5291348,3.391304,1],[4,5291348,3.421995,1],[4,11723968,1.212276,1],[4,19194107,1.948849,1],[4,25626727,1.948849,1],[4,25419223,2.347826,1],[4,103752,1.826087,1],[4,5291348,3.452685,1],[4,19194107,1.764706,1],[4,5291348,3.544757,1],[4,12138976,2.470588,1],[4,5291348,3.636829,1],[4,25419223,2.286445,1],[4,20854138,1.304348,1],[4,11723968,1.304348,1],[4,19194107,2.838875,1],[4,25419223,3.053708,1],[4,25419223,3.023018,1],[4,11516464,1.365729,1],[4,25419223,2.961637,1],[4,25419223,2.838875,1],[4,25419223,2.746803,1],[4,25419223,2.716113,1],[4,25419223,2.685422,1],[4,19194107,2.378517,1],[4,25419223,2.56266,1],[4,12138976,2.409207,1],[4,11723968,1.058824,1],[4,19194107,2.255754,1],[4,19194107,2.225064,1],[4,5291348,3.299233,1],[4,11723968,1.089514,1],[4,5291348,3.360614,1],[4,5083845,1.795396,1],[4,5706356,2.685422,1],[4,5083845,1.734015,1],[4,5083845,1.672634,1],[4,5083845,1.641944,1],[4,5083845,1.580563,1],[4,5706356,2.56266,1],[4,5083845,1.488491,1],[4,5706356,2.501279,1],[4,19401611,1.304348,1],[4,19401611,1.273657,1],[4,103752,1.641944,1],[4,19401611,1.089514,1],[4,12138976,2.040921,1],[4,5291348,1.764706,1],[4,5706356,2.470588,1],[4,5291348,1.826087,1],[4,20439130,1.242967,1],[4,5706356,3.268542,1],[4,5706356,3.237852,1],[4,11723968,0.322251,1],[4,5706356,3.14578,1],[4,19401611,2.194373,1],[4,19401611,2.163683,1],[4,19401611,2.132992,1],[4,19401611,2.102302,1],[4,25419223,6.675192,1],[4,11723968,0.445013,1],[4,5706356,3.023018,1],[4,11723968,0.475703,1],[4,19401611,1.97954,1],[4,19401611,1.948849,1],[4,12138976,1.948849,1],[4,5706356,2.746803,1],[4,19401611,1.856777,1],[4,5706356,2.132992,1],[4,5706356,2.102302,1],[4,5291348,2.439898,1],[4,5291348,2.716113,1],[4,5291348,2.746803,1],[4,1348775,4.097187,1],[4,25419223,4.189258,1],[4,11723968,0.659847,1],[4,5706356,2.040921,1],[4,25419223,4.127877,1],[4,5083845,0.966752,1],[4,5706356,1.97954,1],[4,25419223,4.066496,1],[4,25419223,4.005115,1],[4,11723968,0.751918,1],[4,5706356,1.948849,1],[4,5706356,1.918159,1],[4,5706356,2.439898,1],[4,12138976,2.071611,1],[4,5083845,1.365729,1],[4,5706356,2.409207,1],[4,6121364,1.212276,1],[4,5083845,1.273657,1],[4,5706356,2.347826,1],[4,5291348,2.071611,1],[4,6121364,1.457801,1],[4,5706356,2.317136,1],[4,6121364,1.488491,1],[4,12138976,2.132992,1],[4,12138976,2.163683,1],[4,5706356,2.225064,1],[4,103752,1.672634,1],[4,6121364,1.519182,1],[4,25419223,4.250639,1],[4,5291348,2.286445,1],[4,4876341,3.14578,1],[4,4876341,3.11509,1],[4,6328868,1.887468,1],[4,4876341,3.053708,1],[4,11723968,1.396419,1],[4,18986603,4.066496,1],[4,25626727,1.242967,1],[4,4876341,2.900256,1],[4,12346480,2.040921,1],[4,6328868,2.01023,1],[4,4876341,2.869565,1],[4,25626727,1.212276,1],[4,4876341,2.838875,1],[4,4876341,2.777494,1],[4,4876341,2.746803,1],[4,4876341,2.716113,1],[4,18986603,3.882353,1],[4,6328868,1.611253,1],[4,18986603,4.557545,1],[4,25626727,1.273657,1],[4,18986603,4.496164,1],[4,6328868,1.734015,1],[4,18986603,4.434783,1],[4,18986603,4.404092,1],[4,20231627,2.808184,1],[4,20231627,2.716113,1],[4,18986603,4.342711,1],[4,4876341,3.391304,1],[4,20231627,2.685422,1],[4,4876341,3.360614,1],[4,18986603,4.28133,1],[4,4876341,3.299233,1],[4,4876341,3.268542,1],[4,4876341,3.176471,1],[4,20231627,2.040921,1],[4,12138976,2.777494,1],[4,6328868,2.255754,1],[4,4876341,2.102302,1],[4,11723968,1.42711,1],[4,20231627,1.887468,1],[4,4876341,2.01023,1],[4,4876341,1.97954,1],[4,11516464,2.01023,1],[4,4876341,1.948849,1],[4,11723968,1.457801,1],[4,18986603,3.452685,1],[4,18986603,3.391304,1],[4,18986603,3.360614,1],[4,18986603,3.329923,1],[4,4876341,1.856777,1],[4,18986603,3.268542,1],[4,18986603,3.851662,1],[4,18986603,3.820972,1],[4,20231627,2.59335,1],[4,18986603,3.759591,1],[4,4876341,2.654731,1],[4,4876341,2.624041,1],[4,4876341,2.59335,1],[4,20231627,2.409207,1],[4,4876341,2.501279,1],[4,11516464,1.918159,1],[4,18986603,3.636829,1],[4,12138976,2.531969,1],[4,4876341,2.439898,1],[4,4876341,2.378517,1],[4,4876341,2.317136,1],[4,20231627,2.102302,1],[4,25626727,0.966752,1],[4,4876341,2.194373,1],[4,20854138,1.918159,1],[4,1141271,3.483376,1],[4,18986603,5.877238,1],[4,103752,3.667519,1],[4,20854138,1.97954,1],[4,1141271,3.237852,1],[4,18986603,5.478261,1],[4,6328868,0.966752,1],[4,5291348,5.294118,1],[4,25626727,1.672634,1],[4,20854138,2.040921,1],[4,18986603,5.355499,1],[4,1141271,3.11509,1],[4,20854138,2.071611,1],[4,20854138,2.347826,1],[4,20854138,2.501279,1],[4,20854138,2.531969,1],[4,5706356,1.150895,1],[4,5706356,1.089514,1],[4,5291348,3.851662,1],[4,19194107,1.42711,1],[4,5291348,3.882353,1],[4,19194107,1.365729,1],[4,20854138,1.549872,1],[4,20854138,1.580563,1],[4,5291348,4.250639,1],[4,5291348,4.465473,1],[4,19194107,1.212276,1],[4,5291348,4.741688,1],[4,5291348,4.956522,1],[4,25626727,1.795396,1],[4,20854138,1.734015,1],[4,11516464,1.611253,1],[4,20854138,1.887468,1],[4,5291348,5.202046,1],[4,11516464,1.795396,1],[4,1141271,3.053708,1],[4,4876341,3.974425,1],[4,4876341,3.882353,1],[4,18986603,4.86445,1],[4,103752,1.795396,1],[4,18986603,4.83376,1],[4,4876341,3.759591,1],[4,4876341,3.636829,1],[4,4876341,3.606138,1],[4,4876341,3.575448,1],[4,4876341,3.483376,1],[4,25626727,1.396419,1],[4,6328868,1.519182,1],[4,4876341,3.452685,1],[4,20231627,2.961637,1],[4,25626727,1.304348,1],[4,18986603,5.140665,1],[4,11516464,1.703325,1],[4,6328868,1.242967,1],[4,20854138,2.654731,1],[4,20854138,2.685422,1],[4,20854138,2.716113,1],[4,4876341,6.184143,1],[4,20854138,2.808184,1],[4,20854138,2.838875,1],[4,18986603,5.017903,1],[4,25626727,1.611253,1],[4,4876341,5.907928,1],[4,20231627,4.526854,1],[4,4876341,5.693095,1],[4,4876341,5.44757,1],[4,4876341,4.649616,1],[4,20231627,3.053708,1],[4,4876341,4.127877,1],[4,20439130,3.207161,1],[4,25626727,2.624041,1],[4,25626727,2.59335,1],[4,20439130,3.176471,1],[4,25626727,2.56266,1],[4,103752,2.132992,1],[4,20439130,3.053708,1],[4,25626727,2.470588,1],[4,25626727,4.250639,1],[4,19816619,1.212276,1],[4,20646634,1.335038,1],[4,19609115,2.685422,1],[4,20439130,2.992327,1],[4,20439130,2.961637,1],[4,103752,2.685422,1],[4,20646634,1.396419,1],[4,20439130,2.746803,1],[4,20439130,3.759591,1],[4,20439130,3.667519,1],[4,25626727,2.777494,1],[4,19609115,3.023018,1],[4,103752,1.549872,1],[4,12138976,0.813299,1],[4,20646634,1.273657,1],[4,19609115,2.900256,1],[4,19609115,2.869565,1],[4,20439130,3.606138,1],[4,20439130,3.514066,1],[4,20439130,3.483376,1],[4,12138976,1.549872,1],[4,20439130,3.421995,1],[4,20439130,3.360614,1],[4,12138976,1.611253,1],[4,20439130,3.268542,1],[4,5083845,4.342711,1],[4,19609115,2.040921,1],[4,20646634,1.795396,1],[4,20646634,1.887468,1],[4,19816619,1.519182,1],[4,20646634,2.040921,1],[4,19609115,1.826087,1],[4,20646634,2.102302,1],[4,20646634,2.132992,1],[4,20646634,2.255754,1],[4,19609115,1.764706,1],[4,25626727,2.317136,1],[4,19609115,1.672634,1],[4,5083845,4.005115,1],[4,20646634,2.378517,1],[4,25626727,2.286445,1],[4,103752,3.299233,1],[4,20439130,2.56266,1],[4,20646634,1.519182,1],[4,20439130,2.531969,1],[4,20646634,1.549872,1],[4,25626727,4.404092,1],[4,19609115,2.409207,1],[4,20646634,1.580563,1],[4,103752,2.838875,1],[4,25626727,2.409207,1],[4,5083845,4.373402,1],[4,19609115,2.286445,1],[4,12138976,0.690537,1],[4,103752,2.930946,1],[4,103752,3.084399,1],[4,12138976,1.734015,1],[4,25626727,2.378517,1],[4,12138976,0.629156,1],[4,20646634,1.703325,1],[4,19609115,4.005115,1],[4,19609115,4.649616,1],[4,12138976,1.304348,1],[4,25419223,5.171355,1],[4,12138976,1.335038,1],[4,19609115,4.83376,1],[4,103752,2.225064,1],[4,19609115,4.86445,1],[4,20439130,4.28133,1],[4,19609115,3.913043,1],[4,12138976,1.058824,1],[4,20646634,0.690537,1],[4,19609115,3.851662,1],[4,25419223,4.526854,1],[4,19609115,3.820972,1],[4,103752,2.317136,1],[4,19609115,3.69821,1],[4,5083845,9.314578,1],[4,25419223,4.803069,1],[4,19609115,4.189258,1],[4,19609115,4.158568,1],[4,19609115,4.097187,1],[4,25419223,4.710997,1],[4,20439130,4.710997,1],[4,19609115,4.219949,1],[4,20439130,4.649616,1],[4,103752,2.163683,1],[4,19609115,4.496164,1],[4,19609115,4.526854,1],[4,19609115,4.035806,1],[4,12138976,1.150895,1],[4,25419223,5.109974,1],[4,19609115,4.557545,1],[4,19609115,4.618926,1],[4,12138976,1.273657,1],[4,19609115,3.421995,1],[4,25626727,3.421995,1],[4,19609115,3.329923,1],[4,19609115,3.237852,1],[4,103752,2.347826,1],[4,103752,2.409207,1],[4,25626727,3.360614,1],[4,20439130,3.974425,1],[4,20646634,0.905371,1],[4,25419223,5.570332,1],[4,20439130,3.851662,1],[4,12138976,0.87468,1],[4,25626727,2.992327,1],[4,20646634,1.058824,1],[4,20439130,3.790281,1],[4,25626727,2.869565,1],[4,103752,2.470588,1],[4,19609115,5.048593,1],[4,20439130,4.189258,1],[4,19609115,5.079284,1],[4,19609115,5.232737,1],[4,19609115,3.667519,1],[4,25626727,3.943734,1],[4,12138976,0.966752,1],[4,19609115,5.386189,1],[4,19609115,5.41688,1],[4,19609115,5.508951,1],[4,20439130,4.097187,1],[4,19609115,3.514066,1],[4,12138976,0.905371,1],[4,19609115,5.693095,1],[4,19609115,3.483376,1],[4,19609115,5.815857,1],[4,19609115,6.030691,1],[4,19609115,7.503836,1],[4,5083845,2.531969,1],[4,5083845,2.501279,1],[4,19816619,2.808184,1],[4,5083845,2.439898,1],[4,19401611,3.575448,1],[4,19401611,3.544757,1],[4,19401611,3.514066,1],[4,19401611,3.483376,1],[4,19816619,2.869565,1],[4,19401611,3.268542,1],[4,19401611,3.084399,1],[4,19401611,3.023018,1],[4,19401611,2.992327,1],[4,12346480,0.936061,1],[4,19816619,2.900256,1],[4,103752,1.887468,1],[4,20439130,1.549872,1],[4,19401611,5.202046,1],[4,19401611,4.895141,1],[4,19401611,4.83376,1],[4,19401611,4.526854,1],[4,19401611,4.250639,1],[4,19816619,2.654731,1],[4,19401611,4.158568,1],[4,5083845,2.654731,1],[4,19401611,4.097187,1],[4,19401611,4.066496,1],[4,20646634,4.158568,1],[4,20439130,1.641944,1],[4,19401611,3.913043,1],[4,19816619,2.746803,1],[4,19401611,3.759591,1],[4,19816619,2.777494,1],[4,19401611,3.667519,1],[4,5083845,2.56266,1],[4,19816619,3.759591,1],[4,19816619,3.882353,1],[4,19816619,3.913043,1],[4,19401611,2.531969,1],[4,19401611,2.501279,1],[4,11516464,1.304348,1],[4,19816619,3.943734,1],[4,19816619,4.005115,1],[4,19401611,2.470588,1],[4,19401611,2.439898,1],[4,19401611,2.409207,1],[4,19401611,2.378517,1],[4,19816619,4.066496,1],[4,20439130,1.365729,1],[4,19401611,2.317136,1],[4,20439130,1.335038,1],[4,19816619,4.496164,1],[4,12138976,0.076726,1],[4,19816619,2.930946,1],[4,19816619,2.961637,1],[4,19816619,3.023018,1],[4,19816619,3.14578,1],[4,5083845,2.347826,1],[4,19816619,3.176471,1],[4,19816619,3.207161,1],[4,19816619,3.391304,1],[4,12138976,0.015345,1],[4,19401611,2.838875,1],[4,20439130,1.519182,1],[4,19816619,3.514066,1],[4,103752,1.856777,1],[4,5083845,2.255754,1],[4,19401611,2.746803,1],[4,19401611,2.59335,1],[4,103752,0.936061,1],[4,5913860,1.150895,1],[4,20646634,3.053708,1],[4,5913860,1.335038,1],[4,20439130,2.01023,1],[4,5913860,1.488491,1],[4,19816619,1.97954,1],[4,20646634,3.084399,1],[4,5913860,1.580563,1],[4,19816619,2.102302,1],[4,5291348,1.42711,1],[4,5913860,1.672634,1],[4,103752,1.918159,1],[4,5913860,1.703325,1],[4,20439130,1.918159,1],[4,5913860,1.887468,1],[4,12138976,0.445013,1],[4,5913860,1.918159,1],[4,103752,3.360614,1],[4,12138976,0.537084,1],[4,20646634,2.59335,1],[4,103752,3.452685,1],[4,20439130,2.132992,1],[4,19609115,0.721228,1],[4,103752,1.97954,1],[4,20646634,2.685422,1],[4,20646634,2.746803,1],[4,20646634,2.900256,1],[4,20646634,2.961637,1],[4,19816619,1.795396,1],[4,19816619,1.826087,1],[4,25626727,5.969309,1],[4,103752,1.948849,1],[4,5083845,3.575448,1],[4,11516464,1.120205,1],[4,5913860,0.997442,1],[4,5913860,2.194373,1],[4,12138976,0.322251,1],[4,5913860,2.225064,1],[4,5083845,2.808184,1],[4,20439130,1.734015,1],[4,5913860,2.255754,1],[4,20646634,3.974425,1],[4,5913860,2.378517,1],[4,5913860,2.531969,1],[4,5913860,2.56266,1],[4,5913860,2.654731,1],[4,5083845,2.777494,1],[4,5913860,2.808184,1],[4,5913860,3.329923,1],[4,5083845,2.746803,1],[4,5913860,4.158568,1],[4,19401611,6.184143,1],[4,5913860,1.948849,1],[4,20439130,1.887468,1],[4,20646634,3.14578,1],[4,20439130,1.856777,1],[4,5913860,2.01023,1],[4,19816619,2.317136,1],[4,20646634,3.483376,1],[4,20646634,3.606138,1],[4,5913860,2.071611,1],[4,19816619,2.378517,1],[4,5083845,3.084399,1],[4,19816619,2.439898,1],[4,20646634,3.759591,1],[4,103752,1.365729,1],[4,19816619,2.470588,1],[4,19816619,2.56266,1],[4,5083845,2.838875,1],[4,5913860,2.163683,1],[4,11516464,2.992327,1],[4,21061642,2.869565,1],[4,21061642,2.777494,1],[4,20024123,2.56266,1],[4,11931472,0.567775,1],[4,20024123,2.531969,1],[4,21061642,2.746803,1],[4,21061642,2.716113,1],[4,25834231,1.826087,1],[4,21061642,2.685422,1],[4,5498852,3.207161,1],[4,21061642,2.654731,1],[4,25834231,1.856777,1],[4,4668837,1.918159,1],[4,6328868,3.237852,1],[4,6328868,3.207161,1],[4,21061642,2.470588,1],[4,21061642,2.439898,1],[4,6328868,3.176471,1],[4,6328868,3.023018,1],[4,6328868,2.992327,1],[4,1348775,2.838875,1],[4,6328868,2.900256,1],[4,6328868,2.869565,1],[4,11308960,3.11509,1],[4,5498852,3.14578,1],[4,11308960,3.14578,1],[4,20024123,2.409207,1],[4,12346480,6.184143,1],[4,20024123,2.654731,1],[4,18779099,7.595908,1],[4,12138976,3.913043,1],[4,4668837,6.061381,1],[4,21061642,4.526854,1],[4,18779099,7.810742,1],[4,1348775,2.439898,1],[4,18779099,8.179028,1],[4,6328868,4.127877,1],[4,20024123,2.624041,1],[4,1348775,2.531969,1],[4,21061642,3.636829,1],[4,6328868,3.943734,1],[4,6328868,3.575448,1],[4,21061642,3.575448,1],[4,6328868,3.514066,1],[4,21061642,3.391304,1],[4,5498852,3.391304,1],[4,5498852,3.299233,1],[4,12138976,3.237852,1],[4,1348775,2.654731,1],[4,21061642,3.329923,1],[4,25834231,1.795396,1],[4,21061642,3.14578,1],[4,1348775,2.716113,1],[4,21061642,3.053708,1],[4,21061642,3.023018,1],[4,6328868,3.483376,1],[4,21061642,2.900256,1],[4,1141271,2.347826,1],[4,25834231,2.163683,1],[4,20024123,1.856777,1],[4,20024123,1.826087,1],[4,20024123,1.795396,1],[4,21061642,2.040921,1],[4,25834231,2.225064,1],[4,4668837,1.672634,1],[4,4668837,1.611253,1],[4,1348775,3.207161,1],[4,4668837,1.580563,1],[4,12346480,4.219949,1],[4,12138976,4.250639,1],[4,12346480,4.189258,1],[4,25834231,2.531969,1],[4,21061642,1.97954,1],[4,12346480,4.066496,1],[4,20024123,1.734015,1],[4,25834231,2.56266,1],[4,20024123,1.703325,1],[4,25834231,2.59335,1],[4,5498852,1.703325,1],[4,11516464,2.900256,1],[4,1141271,2.01023,1],[4,12346480,3.943734,1],[4,12346480,3.882353,1],[4,1348775,3.237852,1],[4,11931472,0.905371,1],[4,21061642,1.795396,1],[4,20024123,2.347826,1],[4,21061642,2.409207,1],[4,25834231,1.887468,1],[4,1348775,2.869565,1],[4,4668837,1.887468,1],[4,5498852,1.457801,1],[4,5498852,2.992327,1],[4,25834231,1.365729,1],[4,12138976,3.974425,1],[4,12346480,6.061381,1],[4,12346480,5.539642,1],[4,25834231,1.273657,1],[4,12346480,5.171355,1],[4,20024123,2.194373,1],[4,20024123,2.163683,1],[4,5498852,2.961637,1],[4,20024123,2.132992,1],[4,12138976,4.066496,1],[4,20024123,2.071611,1],[4,18986603,0.322251,1],[4,1348775,3.14578,1],[4,21061642,2.347826,1],[4,11516464,2.930946,1],[4,1348775,1.641944,1],[4,21061642,2.286445,1],[4,21061642,2.194373,1],[4,12346480,4.741688,1],[4,18986603,0.537084,1],[4,12346480,4.557545,1],[4,4668837,1.703325,1],[4,4668837,2.900256,1],[4,20024123,3.606138,1],[4,4668837,3.023018,1],[4,18779099,2.716113,1],[4,12138976,3.636829,1],[4,4668837,3.053708,1],[4,18779099,2.746803,1],[4,12138976,3.820972,1],[4,20024123,3.329923,1],[4,20024123,3.207161,1],[4,5498852,3.69821,1],[4,4668837,3.084399,1],[4,4668837,3.11509,1],[4,20024123,3.11509,1],[4,5498852,1.181586,1],[4,12138976,3.544757,1],[4,4668837,3.176471,1],[4,18779099,2.869565,1],[4,11931472,0.659847,1],[4,4668837,3.329923,1],[4,11308960,3.084399,1],[4,12138976,3.851662,1],[4,18779099,2.930946,1],[4,20024123,3.053708,1],[4,20024123,2.992327,1],[4,25834231,1.611253,1],[4,5498852,3.636829,1],[4,1348775,2.040921,1],[4,18779099,2.961637,1],[4,18779099,2.132992,1],[4,18779099,2.102302,1],[4,12138976,3.759591,1],[4,18779099,2.194373,1],[4,5498852,3.790281,1],[4,12138976,3.7289,1],[4,4668837,2.59335,1],[4,5498852,4.465473,1],[4,20024123,4.526854,1],[4,12138976,3.790281,1],[4,4668837,2.531969,1],[4,18779099,2.317136,1],[4,20024123,4.005115,1],[4,20024123,3.974425,1],[4,18779099,2.470588,1],[4,11931472,0.690537,1],[4,18779099,2.531969,1],[4,20024123,3.943734,1],[4,18779099,2.56266,1],[4,4668837,2.777494,1],[4,4668837,2.808184,1],[4,1348775,1.918159,1],[4,18779099,2.59335,1],[4,18779099,2.654731,1],[4,1348775,1.948849,1],[4,11516464,3.268542,1],[4,11516464,3.329923,1],[4,18779099,1.887468,1],[4,11516464,3.084399,1],[4,20024123,3.820972,1],[4,18779099,4.895141,1],[4,18779099,5.324808,1],[4,18779099,5.693095,1],[4,18779099,5.785166,1],[4,4668837,4.31202,1],[4,18779099,5.938619,1],[4,1348775,2.347826,1],[4,1348775,2.409207,1],[4,20024123,2.808184,1],[4,20024123,2.746803,1],[4,4668837,4.404092,1],[4,4668837,4.434783,1],[4,4668837,2.317136,1],[4,4668837,4.649616,1],[4,4668837,4.710997,1],[4,18779099,6.153453,1],[4,4668837,5.079284,1],[4,25834231,1.764706,1],[4,18779099,6.890026,1],[4,20024123,2.716113,1],[4,4668837,2.286445,1],[4,4668837,5.263427,1],[4,12138976,3.299233,1],[4,18779099,7.227621,1],[4,18779099,7.381074,1],[4,18779099,7.534527,1],[4,4668837,5.478261,1],[4,18779099,1.396419,1],[4,4668837,5.846547,1],[4,18779099,3.053708,1],[4,20024123,2.900256,1],[4,1141271,2.501279,1],[4,4668837,3.391304,1],[4,18779099,3.268542,1],[4,12138976,3.329923,1],[4,18779099,3.421995,1],[4,18779099,3.544757,1],[4,4668837,3.421995,1],[4,18779099,3.667519,1],[4,25834231,1.703325,1],[4,103752,3.943734,1],[4,18779099,3.851662,1],[4,18779099,3.882353,1],[4,11931472,0.598465,1],[4,18779099,3.913043,1],[4,4668837,3.636829,1],[4,4668837,3.69821,1],[4,4668837,3.759591,1],[4,20024123,2.869565,1],[4,4668837,3.882353,1],[4,1348775,2.163683,1],[4,4668837,3.974425,1],[4,1348775,2.194373,1],[4,18779099,4.189258,1],[4,18779099,4.250639,1],[4,18779099,4.404092,1],[4,4668837,4.189258,1],[4,18779099,4.618926,1],[4,4668837,2.378517,1],[4,12138976,4.434783,1],[4,12138976,3.084399,1],[4,25419223,1.641944,1],[4,5498852,2.163683,1],[4,12346480,2.900256,1],[4,20231627,1.181586,1],[4,12138976,3.053708,1],[4,25419223,1.734015,1],[4,12346480,2.808184,1],[4,11516464,3.514066,1],[4,12138976,4.925831,1],[4,4668837,0.966752,1],[4,18986603,2.439898,1],[4,4668837,0.87468,1],[4,25419223,1.826087,1],[4,103752,4.373402,1],[4,5498852,2.071611,1],[4,11516464,3.575448,1],[4,11723968,1.887468,1],[4,12346480,2.746803,1],[4,20231627,1.335038,1],[4,18986603,2.501279,1],[4,11723968,1.826087,1],[4,12346480,2.716113,1],[4,6328868,2.56266,1],[4,25419223,1.887468,1],[4,12138976,2.900256,1],[4,11723968,1.734015,1],[4,11516464,2.59335,1],[4,1141271,1.212276,1],[4,11723968,2.808184,1],[4,12138976,3.207161,1],[4,11723968,2.746803,1],[4,4668837,1.304348,1],[4,11723968,2.654731,1],[4,11723968,2.409207,1],[4,11516464,2.56266,1],[4,11516464,2.531969,1],[4,11931472,0.475703,1],[4,11723968,2.317136,1],[4,20231627,0.997442,1],[4,25419223,1.488491,1],[4,11723968,2.163683,1],[4,12553984,0.690537,1],[4,18986603,2.225064,1],[4,11931472,0.445013,1],[4,11931472,0.414322,1],[4,11516464,2.501279,1],[4,11723968,1.97954,1],[4,1141271,2.900256,1],[4,12346480,2.930946,1],[4,4668837,1.150895,1],[4,25419223,1.611253,1],[4,6536372,0.813299,1],[4,11516464,3.452685,1],[4,20231627,1.028133,1],[4,18986603,2.347826,1],[4,20231627,1.611253,1],[4,18571596,9.897698,1],[4,18986603,2.716113,1],[4,18986603,2.746803,1],[4,12138976,4.987212,1],[4,11516464,2.317136,1],[4,18986603,2.777494,1],[4,11516464,2.286445,1],[4,21269146,0.87468,1],[4,12138976,5.631714,1],[4,18986603,2.838875,1],[4,18986603,2.900256,1],[4,18986603,2.930946,1],[4,11931472,0.107417,1],[4,18986603,2.992327,1],[4,20231627,1.641944,1],[4,6328868,2.439898,1],[4,11516464,2.194373,1],[4,18571596,9.836317,1],[4,18986603,3.084399,1],[4,11931472,0.076726,1],[4,12138976,2.808184,1],[4,18986603,3.11509,1],[4,12346480,2.255754,1],[4,18986603,3.14578,1],[4,20231627,1.734015,1],[4,4876341,1.795396,1],[4,4876341,1.826087,1],[4,20231627,1.795396,1],[4,5498852,2.040921,1],[4,11516464,2.409207,1],[4,12346480,2.654731,1],[4,12346480,2.59335,1],[4,12346480,2.56266,1],[4,18986603,2.59335,1],[4,1348775,1.734015,1],[4,12346480,2.531969,1],[4,6328868,2.531969,1],[4,25419223,2.01023,1],[4,11931472,0.29156,1],[4,12346480,2.470588,1],[4,11516464,3.636829,1],[4,11723968,1.672634,1],[4,18571596,10.02046,1],[4,11723968,1.641944,1],[4,4668837,0.659847,1],[4,4876341,1.212276,1],[4,25419223,2.071611,1],[4,18986603,2.685422,1],[4,12138976,2.869565,1],[4,12346480,2.409207,1],[4,11516464,4.097187,1],[4,25419223,2.102302,1],[4,11931472,0.230179,1],[4,4668837,0.352941,1],[4,1348775,1.672634,1],[4,1348775,0.567775,1],[4,4668837,0.107417,1],[4,5498852,2.685422,1],[4,18986603,1.150895,1],[4,11931472,0.997442,1],[4,11931472,1.028133,1],[4,1141271,1.641944,1],[4,11931472,1.089514,1],[4,1141271,1.580563,1],[4,12346480,3.452685,1],[4,1141271,1.549872,1],[4,11516464,2.808184,1],[4,18986603,1.457801,1],[4,11516464,2.777494,1],[4,1348775,3.452685,1],[4,1348775,1.396419,1],[4,5498852,2.56266,1],[4,25419223,0.629156,1],[4,11931472,1.335038,1],[4,12346480,3.360614,1],[4,18986603,1.549872,1],[4,11516464,2.746803,1],[4,25419223,0.721228,1],[4,1141271,2.869565,1],[4,11516464,2.685422,1],[4,1348775,1.304348,1],[4,25834231,3.268542,1],[4,1348775,1.212276,1],[4,25834231,0.966752,1],[4,21061642,1.764706,1],[4,20024123,1.488491,1],[4,20024123,1.457801,1],[4,12346480,3.820972,1],[4,21061642,1.672634,1],[4,20024123,1.42711,1],[4,11516464,2.838875,1],[4,1348775,1.488491,1],[4,20024123,1.335038,1],[4,12346480,3.790281,1],[4,20024123,1.304348,1],[4,12346480,3.667519,1],[4,12138976,4.373402,1],[4,12346480,3.636829,1],[4,1141271,1.856777,1],[4,1348775,1.457801,1],[4,1141271,1.795396,1],[4,12346480,3.544757,1],[4,11931472,0.936061,1],[4,18986603,1.089514,1],[4,4668837,1.457801,1],[4,5498852,2.746803,1],[4,12346480,3.483376,1],[4,11931472,0.966752,1],[4,25834231,3.023018,1],[4,21061642,0.966752,1],[4,11931472,1.641944,1],[4,18986603,1.764706,1],[4,25834231,3.329923,1],[4,5498852,2.439898,1],[4,5498852,2.317136,1],[4,25419223,0.87468,1],[4,11931472,1.703325,1],[4,12346480,3.207161,1],[4,1348775,3.7289,1],[4,12346480,3.176471,1],[4,18986603,1.918159,1],[4,5498852,2.194373,1],[4,11931472,1.918159,1],[4,4668837,1.365729,1],[4,1141271,1.273657,1],[4,11931472,2.071611,1],[4,18986603,1.97954,1],[4,11723968,3.176471,1],[4,11516464,2.654731,1],[4,25834231,3.544757,1],[4,11931472,1.42711,1],[4,18986603,1.672634,1],[4,18986603,1.703325,1],[4,12346480,3.268542,1],[4,25419223,0.813299,1],[4,16081549,1.150895,2],[4,20439130,2.163683,2],[4,5291348,1.212276,2],[4,26664246,1.089514,2],[4,13383999,0.905371,2],[4,26664246,1.150895,2],[4,10893953,1.795396,2],[4,20439130,2.470588,2],[4,26664246,2.255754,2],[4,5291348,1.335038,2],[4,5291348,1.304348,2],[4,24174200,2.501279,2],[4,12138976,1.703325,2],[4,9026418,2.838875,2],[4,21684154,0.936061,2],[4,21684154,1.304348,2],[4,2386294,1.181586,2],[4,20439130,2.624041,2],[4,15251534,1.549872,2],[4,13383999,1.120205,2],[4,26664246,1.212276,2],[4,12138976,1.212276,2],[4,8611410,1.641944,2],[4,16081549,1.273657,2],[4,13383999,0.506394,2],[4,15251534,2.409207,2],[4,10893953,1.764706,2],[4,10893953,1.519182,2],[4,10893953,2.01023,2],[4,2386294,0.905371,2],[4,10893953,1.948849,2],[4,2386294,1.488491,2],[4,2386294,4.066496,2],[4,25419223,5.693095,2],[4,9026418,2.808184,2],[4,16081549,1.181586,2],[4,26664246,2.347826,2],[4,8611410,1.826087,2],[4,1556279,2.347826,2],[4,9026418,2.777494,2],[4,8611410,1.97954,2],[4,26664246,0.997442,2],[4,20439130,2.59335,2],[4,8611410,1.457801,2],[4,15251534,2.59335,2],[4,15251534,1.488491,2],[4,10893953,1.672634,2],[4,21684154,1.058824,2],[4,4461333,0.567775,2],[4,8611410,2.716113,2],[4,26664246,1.580563,2],[4,10893953,1.611253,2],[4,2386294,0.997442,2],[4,15251534,1.764706,2],[4,15251534,4.342711,2],[4,2386294,4.250639,2],[4,103752,1.519182,2],[4,21684154,1.089514,2],[4,20439130,2.286445,2],[4,2386294,4.158568,2],[4,8611410,1.519182,2],[4,26664246,1.396419,2],[4,15251534,1.580563,2],[4,9026418,4.680307,2],[4,1556279,2.378517,2],[4,15251534,1.918159,2],[4,26664246,1.887468,2],[4,5498852,1.519182,2],[4,4461333,0.475703,2],[4,15251534,1.304348,2],[4,10893953,1.549872,2],[4,2386294,4.219949,2],[4,8611410,0.782609,2],[4,26664246,1.457801,2],[4,2386294,1.212276,2],[4,8611410,2.56266,2],[4,8611410,2.163683,2],[4,4461333,0.352941,2],[4,16081549,0.87468,2],[4,13383999,1.181586,2],[4,26664246,1.856777,2],[4,8611410,1.488491,2],[4,5498852,1.672634,2],[4,8611410,2.838875,2],[4,518760,2.163683,2],[4,1348775,1.795396,2],[4,20439130,2.378517,2],[4,8611410,1.611253,2],[4,9026418,3.14578,2],[4,1348775,1.703325,2],[4,5498852,1.887468,2],[4,9026418,2.930946,2],[4,15251534,2.132992,2],[4,26456742,5.171355,2],[4,5291348,3.759591,2],[4,9026418,0.690537,2],[4,2386294,2.255754,2],[4,5291348,4.219949,2],[4,13176495,0.751918,2],[4,2386294,2.317136,2],[4,5291348,4.710997,2],[4,23344184,1.273657,2],[4,23344184,4.342711,2],[4,8818914,1.304348,2],[4,2386294,2.961637,2],[4,8818914,1.488491,2],[4,20231627,0.905371,2],[4,15666542,1.028133,2],[4,2386294,2.439898,2],[4,15666542,1.089514,2],[4,23344184,1.519182,2],[4,2386294,2.501279,2],[4,15666542,1.120205,2],[4,23344184,1.611253,2],[4,23344184,1.641944,2],[4,2386294,2.930946,2],[4,23344184,1.672634,2],[4,13176495,1.120205,2],[4,8818914,1.764706,2],[4,15874045,1.273657,2],[4,9026418,1.887468,2],[4,2386294,1.887468,2],[4,5291348,3.023018,2],[4,2386294,1.918159,2],[4,5291348,3.084399,2],[4,5291348,3.11509,2],[4,10893953,1.273657,2],[4,8818914,0.87468,2],[4,10893953,1.242967,2],[4,9026418,1.672634,2],[4,8818914,0.966752,2],[4,2386294,3.14578,2],[4,10893953,1.212276,2],[4,5291348,3.14578,2],[4,9026418,1.549872,2],[4,5291348,3.176471,2],[4,518760,2.777494,2],[4,9026418,1.42711,2],[4,2386294,2.071611,2],[4,9026418,1.304348,2],[4,13176495,0.107417,2],[4,20231627,0.782609,2],[4,23344184,1.028133,2],[4,518760,3.268542,2],[4,2386294,2.654731,2],[4,20231627,1.396419,2],[4,13176495,1.273657,2],[4,15666542,1.97954,2],[4,8818914,2.56266,2],[4,13176495,1.457801,2],[4,8818914,2.59335,2],[4,2386294,2.838875,2],[4,20231627,1.488491,2],[4,20231627,1.580563,2],[4,13176495,1.42711,2],[4,20231627,2.347826,2],[4,20231627,2.317136,2],[4,15666542,2.501279,2],[4,8818914,2.838875,2],[4,20231627,2.132992,2],[4,13176495,1.304348,2],[4,20231627,2.071611,2],[4,13176495,1.335038,2],[4,8818914,3.053708,2],[4,20231627,1.856777,2],[4,20231627,1.703325,2],[4,8818914,3.329923,2],[4,2386294,2.777494,2],[4,23344184,3.084399,2],[4,15666542,1.304348,2],[4,15666542,1.335038,2],[4,20231627,1.120205,2],[4,23344184,1.887468,2],[4,8818914,2.01023,2],[4,23344184,3.943734,2],[4,20231627,1.273657,2],[4,8818914,2.102302,2],[4,23344184,2.071611,2],[4,13176495,1.212276,2],[4,20231627,1.304348,2],[4,13176495,1.242967,2],[4,15666542,1.488491,2],[4,15666542,1.549872,2],[4,15666542,1.580563,2],[4,20231627,2.838875,2],[4,23344184,2.194373,2],[4,23344184,2.255754,2],[4,8818914,2.255754,2],[4,8818914,2.286445,2],[4,23344184,2.378517,2],[4,20231627,2.654731,2],[4,15666542,1.918159,2],[4,8818914,2.317136,2],[4,8818914,2.347826,2],[4,5498852,1.120205,2],[4,1348775,1.97954,2],[4,21684154,0.168798,2],[4,15459038,1.580563,2],[4,1348775,2.102302,2],[4,3008806,0.905371,2],[4,103752,1.611253,2],[4,1348775,2.132992,2],[4,13176495,2.409207,2],[4,518760,2.439898,2],[4,1348775,2.255754,2],[4,3008806,1.058824,2],[4,20439130,1.580563,2],[4,3008806,1.150895,2],[4,2386294,1.580563,2],[4,15874045,2.470588,2],[4,2386294,3.575448,2],[4,13176495,2.286445,2],[4,15874045,2.409207,2],[4,20439130,1.488491,2],[4,12138976,1.887468,2],[4,2386294,3.483376,2],[4,3008806,1.365729,2],[4,3008806,1.396419,2],[4,5498852,0.445013,2],[4,21684154,0.598465,2],[4,20439130,2.102302,2],[4,24174200,2.930946,2],[4,10686449,2.777494,2],[4,10686449,2.930946,2],[4,20439130,2.071611,2],[4,8611410,3.299233,2],[4,12138976,1.795396,2],[4,5498852,1.335038,2],[4,20439130,1.97954,2],[4,518760,2.317136,2],[4,15459038,1.242967,2],[4,15459038,1.273657,2],[4,13176495,3.084399,2],[4,21684154,0.414322,2],[4,13176495,3.023018,2],[4,20439130,1.826087,2],[4,12138976,1.826087,2],[4,20439130,1.764706,2],[4,10893953,1.457801,2],[4,3008806,0.751918,2],[4,15459038,1.488491,2],[4,5498852,1.150895,2],[4,518760,2.409207,2],[4,8611410,4.158568,2],[4,15874045,1.795396,2],[4,9026418,2.531969,2],[4,5291348,1.97954,2],[4,5291348,2.040921,2],[4,5291348,2.102302,2],[4,5291348,2.317136,2],[4,10893953,1.365729,2],[4,9026418,2.225064,2],[4,15874045,1.703325,2],[4,5291348,2.470588,2],[4,15874045,1.672634,2],[4,12138976,2.317136,2],[4,15874045,1.641944,2],[4,15874045,1.611253,2],[4,9026418,2.071611,2],[4,12138976,2.347826,2],[4,15874045,1.549872,2],[4,518760,2.531969,2],[4,23344184,0.26087,2],[4,2386294,1.734015,2],[4,15874045,1.488491,2],[4,15874045,1.457801,2],[4,10893953,1.335038,2],[4,23344184,0.445013,2],[4,15874045,1.365729,2],[4,15459038,1.918159,2],[4,20439130,1.42711,2],[4,2386294,3.421995,2],[4,3008806,1.519182,2],[4,2386294,3.391304,2],[4,15459038,2.102302,2],[4,3008806,1.672634,2],[4,9026418,2.685422,2],[4,15459038,2.163683,2],[4,20439130,1.181586,2],[4,12138976,1.918159,2],[4,3008806,1.887468,2],[4,15459038,2.286445,2],[4,2386294,1.611253,2],[4,20439130,0.629156,2],[4,15459038,2.378517,2],[4,5291348,1.580563,2],[4,15459038,2.470588,2],[4,2386294,1.672634,2],[4,12138976,1.97954,2],[4,2386294,3.360614,2],[4,13176495,2.071611,2],[4,518760,2.501279,2],[4,15459038,2.716113,2],[4,5291348,1.795396,2],[4,15874045,1.826087,2],[4,26871750,3.360614,2],[4,26871750,3.421995,2],[4,25419223,1.549872,2],[4,10063937,0.659847,2],[4,311256,2.071611,2],[4,11723968,2.225064,2],[4,311256,2.132992,2],[4,25419223,1.365729,2],[4,25419223,1.335038,2],[4,26871750,3.7289,2],[4,25419223,1.181586,2],[4,10063937,1.089514,2],[4,2593798,5.079284,2],[4,26871750,3.790281,2],[4,14214015,2.746803,2],[4,25419223,1.028133,2],[4,2593798,4.86445,2],[4,2593798,4.83376,2],[4,10063937,1.181586,2],[4,311256,2.286445,2],[4,9856433,5.815857,2],[4,4876341,0.87468,2],[4,25419223,1.856777,2],[4,311256,1.826087,2],[4,9856433,6.276215,2],[4,25419223,1.795396,2],[4,11723968,1.918159,2],[4,311256,1.856777,2],[4,26871750,2.869565,2],[4,26871750,2.900256,2],[4,26871750,2.930946,2],[4,311256,1.887468,2],[4,4876341,0.567775,2],[4,25419223,1.672634,2],[4,26871750,3.14578,2],[4,26871750,3.176471,2],[4,311256,1.918159,2],[4,26871750,3.268542,2],[4,4876341,0.475703,2],[4,311256,1.97954,2],[4,21061642,1.549872,2],[4,21061642,1.611253,2],[4,14214015,1.42711,2],[4,21061642,1.734015,2],[4,14214015,1.365729,2],[4,14214015,1.335038,2],[4,311256,3.207161,2],[4,21061642,1.856777,2],[4,26871750,4.127877,2],[4,14214015,1.120205,2],[4,14214015,1.089514,2],[4,2593798,3.14578,2],[4,2593798,3.11509,2],[4,21061642,1.918159,2],[4,21061642,1.948849,2],[4,26871750,4.250639,2],[4,14214015,0.87468,2],[4,13799007,1.058824,2],[4,2593798,2.869565,2],[4,21061642,2.01023,2],[4,14214015,2.439898,2],[4,25419223,0.751918,2],[4,311256,2.470588,2],[4,14214015,2.317136,2],[4,311256,2.501279,2],[4,14214015,2.225064,2],[4,14214015,2.132992,2],[4,311256,2.56266,2],[4,10063937,1.273657,2],[4,2593798,4.189258,2],[4,14214015,1.97954,2],[4,14214015,1.948849,2],[4,14214015,1.918159,2],[4,311256,2.900256,2],[4,26871750,3.943734,2],[4,2593798,3.790281,2],[4,21061642,1.181586,2],[4,14214015,1.611253,2],[4,21061642,1.273657,2],[4,21061642,1.519182,2],[4,26871750,4.005115,2],[4,26871750,2.59335,2],[4,26871750,2.624041,2],[4,10478945,1.181586,2],[4,311256,1.519182,2],[4,9856433,1.580563,2],[4,9856433,1.611253,2],[4,9856433,1.672634,2],[4,9856433,1.826087,2],[4,9856433,2.01023,2],[4,9856433,2.040921,2],[4,10478945,0.966752,2],[4,9856433,2.163683,2],[4,9856433,2.317136,2],[4,1971287,3.544757,2],[4,9856433,2.378517,2],[4,14421518,2.286445,2],[4,9856433,2.531969,2],[4,4876341,2.56266,2],[4,9856433,2.685422,2],[4,4876341,2.470588,2],[4,26871750,0.813299,2],[4,20854138,1.948849,2],[4,26871750,0.966752,2],[4,311256,1.457801,2],[4,20854138,2.01023,2],[4,26871750,1.120205,2],[4,10478945,1.42711,2],[4,26871750,1.304348,2],[4,26871750,1.549872,2],[4,26871750,1.580563,2],[4,26871750,1.734015,2],[4,26871750,1.795396,2],[4,10478945,1.304348,2],[4,4876341,4.250639,2],[4,26871750,1.97954,2],[4,26871750,2.163683,2],[4,26871750,2.255754,2],[4,26871750,2.439898,2],[4,26871750,2.470588,2],[4,26871750,2.501279,2],[4,26871750,2.531969,2],[4,4876341,1.580563,2],[4,4876341,1.549872,2],[4,2386294,6.951407,2],[4,9856433,4.097187,2],[4,11723968,1.519182,2],[4,11723968,1.611253,2],[4,4876341,1.42711,2],[4,9856433,4.373402,2],[4,4876341,1.396419,2],[4,4876341,1.365729,2],[4,4876341,1.304348,2],[4,4876341,1.273657,2],[4,25419223,2.040921,2],[4,9856433,5.048593,2],[4,9856433,5.109974,2],[4,4876341,1.089514,2],[4,4876341,1.058824,2],[4,4876341,0.966752,2],[4,25419223,1.948849,2],[4,2593798,6.613811,2],[4,9856433,2.746803,2],[4,9856433,2.777494,2],[4,9856433,2.930946,2],[4,4876341,2.255754,2],[4,25419223,2.194373,2],[4,9856433,3.268542,2],[4,4876341,2.163683,2],[4,4876341,2.132992,2],[4,4876341,2.040921,2],[4,9856433,3.514066,2],[4,14421518,0.87468,2],[4,9856433,3.759591,2],[4,14421518,0.690537,2],[4,9856433,3.851662,2],[4,14421518,0.352941,2],[4,25419223,2.163683,2],[4,9856433,4.035806,2],[4,4876341,1.672634,2],[4,4876341,1.641944,2],[4,14421518,0.168798,2],[4,14421518,0.138107,2],[4,26871750,7.473146,2],[4,13799007,2.900256,2],[4,10271441,0.506394,2],[4,13799007,2.992327,2],[4,10271441,0.905371,2],[4,13799007,3.14578,2],[4,4668837,1.856777,2],[4,10271441,0.997442,2],[4,4668837,1.826087,2],[4,4668837,1.795396,2],[4,4668837,1.764706,2],[4,10271441,1.120205,2],[4,13799007,3.207161,2],[4,10271441,1.273657,2],[4,10271441,1.365729,2],[4,10271441,1.42711,2],[4,13799007,3.299233,2],[4,13799007,3.329923,2],[4,10271441,1.549872,2],[4,10271441,1.580563,2],[4,2593798,1.028133,2],[4,2593798,0.997442,2],[4,2593798,0.966752,2],[4,14006511,1.764706,2],[4,14006511,1.734015,2],[4,1971287,2.347826,2],[4,2593798,0.813299,2],[4,2593798,0.782609,2],[4,13799007,2.531969,2],[4,14006511,1.549872,2],[4,14006511,1.457801,2],[4,13799007,2.56266,2],[4,13799007,2.59335,2],[4,4668837,2.225064,2],[4,13799007,2.777494,2],[4,13799007,2.808184,2],[4,14006511,0.751918,2],[4,4668837,2.102302,2],[4,26871750,6.429668,2],[4,4668837,1.97954,2],[4,1971287,1.887468,2],[4,21269146,1.826087,2],[4,21269146,1.795396,2],[4,10271441,3.483376,2],[4,10271441,3.575448,2],[4,11931472,0.352941,2],[4,4668837,0.813299,2],[4,4668837,0.782609,2],[4,1971287,1.795396,2],[4,21269146,1.611253,2],[4,21269146,1.549872,2],[4,11931472,0.26087,2],[4,21269146,1.42711,2],[4,21269146,1.365729,2],[4,11931472,0.168798,2],[4,21269146,1.273657,2],[4,21269146,0.905371,2],[4,21269146,0.966752,2],[4,21269146,0.997442,2],[4,13799007,3.575448,2],[4,10271441,1.611253,2],[4,4668837,1.519182,2],[4,4668837,1.488491,2],[4,1971287,2.194373,2],[4,10271441,1.795396,2],[4,10271441,1.826087,2],[4,10271441,1.918159,2],[4,10271441,1.948849,2],[4,1971287,2.163683,2],[4,10271441,2.01023,2],[4,11931472,0.537084,2],[4,23966696,5.601023,2],[4,10271441,2.071611,2],[4,4668837,1.335038,2],[4,10271441,2.56266,2],[4,11931472,0.383632,2],[4,21269146,2.071611,2],[4,10271441,2.961637,2],[4,4668837,1.058824,2],[4,1971287,1.948849,2],[4,1971287,1.580563,2],[4,10063937,1.734015,2],[4,10063937,1.764706,2],[4,21061642,2.531969,2],[4,10063937,2.132992,2],[4,13799007,1.304348,2],[4,13799007,1.365729,2],[4,10063937,2.439898,2],[4,10063937,2.624041,2],[4,10063937,2.654731,2],[4,10063937,2.746803,2],[4,21061642,4.066496,2],[4,10063937,3.207161,2],[4,21061642,4.496164,2],[4,23966696,0.936061,2],[4,23966696,0.997442,2],[4,13799007,1.457801,2],[4,23966696,1.120205,2],[4,23966696,1.150895,2],[4,10063937,4.005115,2],[4,23966696,1.396419,2],[4,26871750,4.342711,2],[4,26871750,4.465473,2],[4,26871750,4.496164,2],[4,26871750,4.557545,2],[4,26871750,4.618926,2],[4,21061642,2.132992,2],[4,26871750,4.741688,2],[4,2593798,2.531969,2],[4,26871750,4.803069,2],[4,21061642,2.317136,2],[4,10063937,1.396419,2],[4,26871750,5.202046,2],[4,2593798,2.194373,2],[4,2593798,2.163683,2],[4,13799007,1.212276,2],[4,21061642,2.378517,2],[4,10063937,1.580563,2],[4,10063937,1.611253,2],[4,10063937,1.641944,2],[4,10063937,1.703325,2],[4,2593798,1.918159,2],[4,4668837,3.14578,2],[4,23966696,2.56266,2],[4,2593798,1.519182,2],[4,14006511,2.439898,2],[4,14006511,2.378517,2],[4,11931472,0.782609,2],[4,14006511,2.255754,2],[4,4668837,2.869565,2],[4,14006511,2.194373,2],[4,2593798,1.42711,2],[4,14006511,2.163683,2],[4,13799007,2.439898,2],[4,26871750,5.44757,2],[4,2593798,1.242967,2],[4,4668837,2.746803,2],[4,11931472,0.721228,2],[4,4668837,2.624041,2],[4,14006511,1.887468,2],[4,14006511,1.826087,2],[4,13799007,2.501279,2],[4,13799007,1.549872,2],[4,13799007,1.611253,2],[4,23966696,1.519182,2],[4,23966696,1.580563,2],[4,23966696,1.641944,2],[4,23966696,1.703325,2],[4,23966696,1.764706,2],[4,4668837,3.483376,2],[4,11931472,0.813299,2],[4,23966696,1.97954,2],[4,14006511,3.023018,2],[4,23966696,2.071611,2],[4,14006511,2.930946,2],[4,2593798,1.764706,2],[4,2386294,8.455243,2],[4,26871750,5.294118,2],[4,4668837,3.360614,2],[4,14006511,2.777494,2],[4,14006511,2.716113,2],[4,14006511,2.624041,2],[4,2593798,1.641944,2],[4,1556279,1.948849,2],[4,4461333,1.97954,2],[4,21476650,4.005115,2],[4,12138976,0.659847,2],[4,20646634,1.734015,2],[4,12138976,0.567775,2],[4,9233922,3.268542,2],[4,21476650,3.790281,2],[4,20646634,1.856777,2],[4,20646634,2.01023,2],[4,4461333,2.194373,2],[4,15044030,3.360614,2],[4,1971287,5.263427,2],[4,23551688,4.588235,2],[4,15044030,2.225064,2],[4,20646634,2.409207,2],[4,15044030,2.071611,2],[4,15044030,2.040921,2],[4,5083845,3.974425,2],[4,15044030,1.97954,2],[4,23551688,2.930946,2],[4,10686449,1.734015,2],[4,10686449,1.703325,2],[4,9233922,1.549872,2],[4,9233922,1.611253,2],[4,26664246,4.772379,2],[4,20646634,1.365729,2],[4,10686449,1.580563,2],[4,1556279,2.01023,2],[4,20646634,1.42711,2],[4,20646634,1.457801,2],[4,23551688,3.391304,2],[4,4461333,1.856777,2],[4,9233922,1.97954,2],[4,9233922,2.102302,2],[4,21476650,4.189258,2],[4,9233922,2.286445,2],[4,20646634,1.641944,2],[4,26664246,4.86445,2],[4,9233922,2.439898,2],[4,518760,1.304348,2],[4,4461333,2.470588,2],[4,21476650,2.900256,2],[4,10686449,1.150895,2],[4,10686449,1.120205,2],[4,21476650,2.869565,2],[4,518760,1.212276,2],[4,103752,1.396419,2],[4,5083845,3.360614,2],[4,26664246,5.723785,2],[4,26664246,5.785166,2],[4,518760,1.028133,2],[4,10686449,0.997442,2],[4,2801302,5.539642,2],[4,21476650,2.624041,2],[4,21476650,2.531969,2],[4,5083845,2.961637,2],[4,10686449,0.966752,2],[4,9441426,0.84399,2],[4,9441426,1.058824,2],[4,10686449,1.42711,2],[4,4461333,2.347826,2],[4,21476650,3.237852,2],[4,10686449,1.396419,2],[4,518760,1.457801,2],[4,15044030,1.703325,2],[4,518760,1.396419,2],[4,24174200,0.537084,2],[4,4461333,2.439898,2],[4,24174200,0.506394,2],[4,15044030,1.396419,2],[4,15044030,1.365729,2],[4,10686449,1.273657,2],[4,15044030,1.273657,2],[4,26664246,5.140665,2],[4,2801302,6.276215,2],[4,15044030,1.181586,2],[4,2801302,6.214834,2],[4,10686449,1.212276,2],[4,12138976,0.506394,2],[4,518760,1.365729,2],[4,12138976,1.089514,2],[4,23551688,0.690537,2],[4,26664246,3.483376,2],[4,23551688,0.751918,2],[4,4461333,1.212276,2],[4,23551688,0.905371,2],[4,20646634,0.751918,2],[4,23551688,0.966752,2],[4,26664246,3.606138,2],[4,20646634,0.782609,2],[4,23551688,1.058824,2],[4,12138976,1.028133,2],[4,26664246,3.667519,2],[4,23551688,1.181586,2],[4,23551688,1.212276,2],[4,4461333,1.335038,2],[4,24174200,1.457801,2],[4,12138976,0.936061,2],[4,10686449,2.194373,2],[4,10686449,2.163683,2],[4,25419223,4.956522,2],[4,518760,2.071611,2],[4,26664246,2.531969,2],[4,26664246,2.59335,2],[4,26664246,2.654731,2],[4,24174200,1.887468,2],[4,4461333,0.936061,2],[4,1556279,2.163683,2],[4,26664246,2.808184,2],[4,4461333,0.997442,2],[4,20646634,0.414322,2],[4,20646634,0.567775,2],[4,21476650,5.44757,2],[4,4461333,1.089514,2],[4,21476650,5.386189,2],[4,26664246,3.207161,2],[4,23551688,0.475703,2],[4,518760,1.887468,2],[4,10686449,2.439898,2],[4,23551688,0.598465,2],[4,2386294,4.526854,2],[4,23551688,2.225064,2],[4,12138976,0.84399,2],[4,24174200,1.120205,2],[4,23551688,2.347826,2],[4,23551688,2.409207,2],[4,12138976,0.782609,2],[4,26664246,4.618926,2],[4,20646634,1.304348,2],[4,23551688,2.531969,2],[4,9233922,1.242967,2],[4,4461333,1.672634,2],[4,24174200,1.089514,2],[4,21476650,4.557545,2],[4,9233922,1.335038,2],[4,26664246,4.710997,2],[4,23551688,2.746803,2],[4,23551688,2.808184,2],[4,10686449,1.795396,2],[4,9233922,1.457801,2],[4,23551688,2.900256,2],[4,26664246,3.943734,2],[4,24174200,1.304348,2],[4,23551688,1.519182,2],[4,23551688,1.549872,2],[4,24174200,1.273657,2],[4,23551688,1.611253,2],[4,4461333,1.42711,2],[4,26664246,4.035806,2],[4,26664246,4.097187,2],[4,4461333,1.457801,2],[4,20646634,0.966752,2],[4,23551688,1.856777,2],[4,9233922,0.813299,2],[4,23551688,1.948849,2],[4,23551688,1.97954,2],[4,23551688,2.040921,2],[4,9233922,0.905371,2],[4,20646634,1.089514,2],[4,20646634,1.150895,2],[4,26664246,4.373402,2],[4,23551688,2.194373,2],[4,11723968,0.567775,2],[4,13591503,1.826087,2],[4,11723968,0.629156,2],[4,13591503,1.856777,2],[4,9648930,0.506394,2],[4,5083845,1.120205,2],[4,9648930,0.690537,2],[4,4461333,2.685422,2],[4,13591503,2.071611,2],[4,9648930,1.212276,2],[4,2801302,0.138107,2],[4,11723968,0.721228,2],[4,11723968,0.84399,2],[4,11723968,0.87468,2],[4,9648930,1.549872,2],[4,5083845,0.629156,2],[4,5083845,0.537084,2],[4,1971287,4.005115,2],[4,9648930,2.102302,2],[4,9648930,2.132992,2],[4,21476650,0.26087,2],[4,2801302,1.457801,2],[4,14836526,1.549872,2],[4,2801302,1.396419,2],[4,2386294,5.140665,2],[4,2801302,1.304348,2],[4,14836526,1.488491,2],[4,2801302,1.212276,2],[4,2801302,1.150895,2],[4,2801302,1.058824,2],[4,2801302,1.028133,2],[4,14836526,1.335038,2],[4,311256,1.42711,2],[4,13591503,1.672634,2],[4,2801302,0.905371,2],[4,2801302,0.87468,2],[4,13591503,1.703325,2],[4,2801302,0.782609,2],[4,2801302,0.751918,2],[4,2801302,0.721228,2],[4,14629022,1.918159,2],[4,20854138,1.181586,2],[4,14629022,1.795396,2],[4,20854138,1.242967,2],[4,14629022,1.641944,2],[4,14629022,1.273657,2],[4,14629022,1.212276,2],[4,20854138,1.457801,2],[4,14629022,0.905371,2],[4,20854138,1.519182,2],[4,26871750,0.107417,2],[4,23759192,2.040921,2],[4,20854138,1.641944,2],[4,26871750,0.414322,2],[4,20854138,1.672634,2],[4,20854138,1.703325,2],[4,10478945,1.918159,2],[4,10478945,1.826087,2],[4,20854138,1.795396,2],[4,20854138,1.826087,2],[4,9648930,2.470588,2],[4,9648930,2.808184,2],[4,9648930,2.961637,2],[4,25419223,3.14578,2],[4,11723968,0.997442,2],[4,25419223,2.992327,2],[4,23759192,0.751918,2],[4,25419223,2.869565,2],[4,23759192,0.966752,2],[4,11723968,1.028133,2],[4,23759192,1.028133,2],[4,14629022,2.531969,2],[4,20854138,0.813299,2],[4,23759192,1.181586,2],[4,25419223,2.501279,2],[4,23759192,1.273657,2],[4,11723968,1.150895,2],[4,13591503,2.56266,2],[4,23759192,1.396419,2],[4,25419223,2.378517,2],[4,14629022,2.01023,2],[4,9441426,2.777494,2],[4,12138976,0.046036,2],[4,9441426,2.930946,2],[4,5083845,2.286445,2],[4,21476650,1.611253,2],[4,2801302,3.7289,2],[4,1556279,1.519182,2],[4,2801302,3.606138,2],[4,21476650,1.457801,2],[4,1556279,1.488491,2],[4,2801302,3.514066,2],[4,9441426,3.514066,2],[4,25419223,4.373402,2],[4,5083845,2.163683,2],[4,5083845,2.102302,2],[4,9441426,4.219949,2],[4,5083845,2.040921,2],[4,1556279,1.273657,2],[4,1556279,1.242967,2],[4,9441426,4.342711,2],[4,9441426,1.181586,2],[4,9441426,1.396419,2],[4,9441426,1.580563,2],[4,21476650,2.255754,2],[4,5083845,2.685422,2],[4,9441426,1.764706,2],[4,25419223,4.404092,2],[4,9441426,1.826087,2],[4,2801302,4.618926,2],[4,9441426,2.102302,2],[4,9441426,2.132992,2],[4,13591503,1.028133,2],[4,311256,0.782609,2],[4,13591503,1.120205,2],[4,21476650,1.918159,2],[4,103752,1.242967,2],[4,12138976,0.107417,2],[4,21476650,1.795396,2],[4,2801302,4.066496,2],[4,1556279,1.611253,2],[4,1556279,1.580563,2],[4,2801302,2.317136,2],[4,2386294,4.987212,2],[4,103752,0.721228,2],[4,2801302,2.194373,2],[4,2801302,2.163683,2],[4,2801302,2.132992,2],[4,25419223,4.31202,2],[4,2801302,1.97954,2],[4,5083845,1.549872,2],[4,5083845,1.457801,2],[4,14836526,1.948849,2],[4,13591503,1.457801,2],[4,14836526,1.887468,2],[4,2801302,1.703325,2],[4,14836526,1.795396,2],[4,2386294,5.048593,2],[4,14836526,1.734015,2],[4,2801302,1.580563,2],[4,13591503,1.488491,2],[4,11723968,0.537084,2],[4,5083845,2.01023,2],[4,2801302,3.084399,2],[4,11723968,0.168798,2],[4,2801302,2.992327,2],[4,103752,0.87468,2],[4,1556279,1.058824,2],[4,2801302,2.900256,2],[4,9441426,4.987212,2],[4,2801302,2.838875,2],[4,11723968,0.26087,2],[4,5083845,1.856777,2],[4,9441426,5.140665,2],[4,103752,0.84399,2],[4,1556279,0.966752,2],[4,311256,1.181586,2],[4,11723968,0.352941,2],[4,9441426,5.570332,2],[4,103752,0.813299,2],[4,1556279,0.322251,2],[4,4461333,2.654731,2],[4,311256,1.242967,2],[4,3631318,3.11509,2],[4,6328868,1.181586,2],[4,6328868,1.150895,2],[4,6328868,1.120205,2],[4,3631318,2.900256,2],[4,3631318,2.869565,2],[4,11308960,0.230179,2],[4,6328868,0.782609,2],[4,19194107,0.659847,2],[4,12346480,1.611253,2],[4,19194107,1.028133,2],[4,3631318,2.439898,2],[4,12346480,1.549872,2],[4,19194107,1.150895,2],[4,3631318,2.317136,2],[4,12346480,1.42711,2],[4,19194107,1.242967,2],[4,3631318,2.163683,2],[4,3631318,2.132992,2],[4,3631318,2.102302,2],[4,19194107,1.273657,2],[4,6328868,1.457801,2],[4,11308960,0.690537,2],[4,7158883,1.580563,2],[4,6328868,1.396419,2],[4,7158883,1.948849,2],[4,11308960,0.567775,2],[4,7158883,2.040921,2],[4,7158883,2.071611,2],[4,12346480,1.764706,2],[4,7158883,2.225064,2],[4,2178791,5.907928,2],[4,7158883,2.255754,2],[4,3631318,3.483376,2],[4,12346480,1.734015,2],[4,6328868,1.273657,2],[4,11308960,0.475703,2],[4,11308960,0.414322,2],[4,7158883,2.409207,2],[4,7158883,2.439898,2],[4,7158883,2.470588,2],[4,7158883,2.531969,2],[4,3631318,1.212276,2],[4,17741580,2.132992,2],[4,12761487,0.383632,2],[4,19194107,2.347826,2],[4,12761487,0.445013,2],[4,17741580,1.856777,2],[4,12761487,0.475703,2],[4,3631318,0.84399,2],[4,17741580,1.734015,2],[4,19194107,2.409207,2],[4,19194107,2.501279,2],[4,17741580,1.641944,2],[4,12761487,0.690537,2],[4,19194107,2.59335,2],[4,17741580,1.457801,2],[4,19194107,2.654731,2],[4,26041735,3.759591,2],[4,933767,3.851662,2],[4,19194107,3.207161,2],[4,19194107,3.237852,2],[4,19194107,3.299233,2],[4,3631318,2.01023,2],[4,12346480,1.396419,2],[4,19194107,1.488491,2],[4,19194107,1.519182,2],[4,3631318,1.826087,2],[4,11308960,0.107417,2],[4,19194107,1.549872,2],[4,19194107,1.672634,2],[4,3631318,1.703325,2],[4,3631318,1.672634,2],[4,19194107,1.734015,2],[4,3631318,1.611253,2],[4,11308960,0.076726,2],[4,19194107,1.795396,2],[4,3631318,1.488491,2],[4,19194107,1.918159,2],[4,11308960,0.015345,2],[4,17741580,2.470588,2],[4,19194107,1.97954,2],[4,12346480,1.304348,2],[4,12346480,1.212276,2],[4,17949084,1.641944,2],[4,17949084,1.611253,2],[4,25211719,2.501279,2],[4,18986603,3.483376,2],[4,17949084,1.488491,2],[4,17949084,1.457801,2],[4,17949084,1.42711,2],[4,11308960,1.488491,2],[4,11308960,1.457801,2],[4,11308960,1.396419,2],[4,4046325,2.286445,2],[4,12346480,2.132992,2],[4,4046325,2.347826,2],[4,11308960,1.335038,2],[4,26041735,1.181586,2],[4,26041735,1.273657,2],[4,17949084,0.997442,2],[4,4046325,2.409207,2],[4,26041735,1.396419,2],[4,6328868,2.163683,2],[4,4046325,2.470588,2],[4,25211719,1.826087,2],[4,22514169,1.887468,2],[4,12346480,2.378517,2],[4,6328868,2.501279,2],[4,22099161,0.506394,2],[4,12346480,2.347826,2],[4,22514169,2.225064,2],[4,17949084,2.531969,2],[4,25211719,2.194373,2],[4,12346480,2.317136,2],[4,25211719,2.286445,2],[4,11308960,1.826087,2],[4,17949084,2.255754,2],[4,18986603,3.176471,2],[4,18986603,3.207161,2],[4,12346480,2.225064,2],[4,4046325,1.948849,2],[4,17949084,1.918159,2],[4,18986603,3.299233,2],[4,11308960,1.672634,2],[4,11308960,1.611253,2],[4,4046325,3.023018,2],[4,12346480,1.948849,2],[4,26041735,2.624041,2],[4,26041735,2.685422,2],[4,4046325,3.11509,2],[4,6328868,1.795396,2],[4,6328868,1.764706,2],[4,26041735,2.961637,2],[4,6328868,1.703325,2],[4,7158883,0.966752,2],[4,26041735,3.176471,2],[4,6328868,1.580563,2],[4,7158883,1.058824,2],[4,7158883,1.089514,2],[4,4046325,3.483376,2],[4,12346480,1.856777,2],[4,7158883,1.242967,2],[4,6328868,1.488491,2],[4,7158883,1.335038,2],[4,26041735,3.329923,2],[4,7158883,1.396419,2],[4,2178791,5.355499,2],[4,11308960,1.150895,2],[4,4046325,2.501279,2],[4,11308960,1.120205,2],[4,4046325,2.531969,2],[4,6328868,2.102302,2],[4,11308960,0.997442,2],[4,26041735,1.826087,2],[4,26041735,1.856777,2],[4,26041735,1.887468,2],[4,18986603,3.913043,2],[4,26041735,1.948849,2],[4,26041735,1.97954,2],[4,6328868,2.040921,2],[4,26041735,2.194373,2],[4,933767,4.710997,2],[4,4046325,2.869565,2],[4,4046325,2.900256,2],[4,6328868,1.97954,2],[4,12346480,2.01023,2],[4,26041735,2.501279,2],[4,19401611,2.808184,2],[4,933767,1.488491,2],[4,22721673,2.624041,2],[4,2178791,6.920716,2],[4,17534076,1.335038,2],[4,12761487,1.672634,2],[4,22721673,2.746803,2],[4,22721673,2.808184,2],[4,26041735,6.920716,2],[4,1971287,0.751918,2],[4,933767,1.242967,2],[4,933767,1.120205,2],[4,17534076,1.089514,2],[4,17534076,1.058824,2],[4,12761487,1.734015,2],[4,933767,0.629156,2],[4,19401611,3.452685,2],[4,7573891,0.567775,2],[4,12761487,1.918159,2],[4,22721673,3.483376,2],[4,19401611,3.606138,2],[4,22721673,1.519182,2],[4,22721673,1.549872,2],[4,22721673,1.611253,2],[4,24381704,2.194373,2],[4,12761487,1.335038,2],[4,22721673,1.703325,2],[4,24381704,2.132992,2],[4,24381704,2.102302,2],[4,933767,1.764706,2],[4,17534076,1.948849,2],[4,22721673,1.97954,2],[4,22721673,2.01023,2],[4,12761487,1.42711,2],[4,22721673,2.163683,2],[4,19401611,2.56266,2],[4,24381704,1.97954,2],[4,19401611,2.685422,2],[4,22721673,2.347826,2],[4,17534076,1.672634,2],[4,12761487,1.519182,2],[4,17534076,1.580563,2],[4,5913860,2.102302,2],[4,24381704,1.058824,2],[4,7573891,2.132992,2],[4,7573891,2.163683,2],[4,12761487,2.378517,2],[4,5913860,2.040921,2],[4,7573891,2.286445,2],[4,5913860,1.97954,2],[4,7573891,2.409207,2],[4,7573891,2.439898,2],[4,5913860,1.856777,2],[4,5913860,1.795396,2],[4,5913860,1.734015,2],[4,7573891,2.808184,2],[4,7573891,2.930946,2],[4,5913860,1.641944,2],[4,12761487,2.501279,2],[4,12761487,2.531969,2],[4,5913860,1.611253,2],[4,7573891,3.207161,2],[4,1971287,0.84399,2],[4,19401611,3.636829,2],[4,7573891,1.242967,2],[4,7573891,1.304348,2],[4,7573891,1.396419,2],[4,19401611,4.035806,2],[4,12761487,2.163683,2],[4,19401611,4.127877,2],[4,17326572,2.777494,2],[4,17326572,2.654731,2],[4,24381704,1.365729,2],[4,17326572,2.470588,2],[4,17326572,2.347826,2],[4,7573891,1.948849,2],[4,17326572,1.97954,2],[4,17326572,1.887468,2],[4,7573891,2.040921,2],[4,17326572,1.641944,2],[4,17326572,1.488491,2],[4,17326572,1.42711,2],[4,24796711,2.01023,2],[4,12761487,2.347826,2],[4,7366387,1.335038,2],[4,6121364,1.703325,2],[4,7366387,1.396419,2],[4,7366387,1.457801,2],[4,933767,2.132992,2],[4,7366387,1.519182,2],[4,6121364,1.672634,2],[4,7366387,1.580563,2],[4,933767,2.071611,2],[4,933767,2.040921,2],[4,7366387,1.764706,2],[4,7366387,1.795396,2],[4,933767,2.01023,2],[4,933767,1.948849,2],[4,6121364,1.611253,2],[4,7366387,2.01023,2],[4,7366387,2.040921,2],[4,7366387,2.255754,2],[4,7366387,2.317136,2],[4,6121364,1.42711,2],[4,6121364,1.365729,2],[4,26041735,4.496164,2],[4,6121364,2.869565,2],[4,6121364,2.59335,2],[4,933767,3.084399,2],[4,6121364,2.501279,2],[4,6121364,2.347826,2],[4,6121364,2.194373,2],[4,6121364,2.071611,2],[4,933767,2.470588,2],[4,2178791,6.55243,2],[4,933767,2.347826,2],[4,933767,2.317136,2],[4,7366387,0.84399,2],[4,7366387,0.905371,2],[4,12761487,0.84399,2],[4,7366387,0.997442,2],[4,6121364,1.918159,2],[4,7366387,1.120205,2],[4,933767,2.225064,2],[4,7366387,1.242967,2],[4,7366387,1.273657,2],[4,17534076,2.930946,2],[4,22721673,0.629156,2],[4,17534076,2.838875,2],[4,1971287,0.598465,2],[4,17534076,2.777494,2],[4,17534076,2.716113,2],[4,22721673,0.87468,2],[4,17534076,2.56266,2],[4,1971287,0.721228,2],[4,24381704,2.378517,2],[4,7366387,4.618926,2],[4,17534076,2.470588,2],[4,12761487,1.212276,2],[4,19401611,2.255754,2],[4,22721673,1.273657,2],[4,22721673,1.304348,2],[4,17534076,2.286445,2],[4,12761487,1.304348,2],[4,22721673,1.42711,2],[4,22721673,1.457801,2],[4,22721673,1.488491,2],[4,6121364,1.335038,2],[4,12346480,1.089514,2],[4,7366387,2.59335,2],[4,12346480,1.028133,2],[4,12346480,0.997442,2],[4,7366387,2.777494,2],[4,6121364,0.383632,2],[4,7366387,2.961637,2],[4,7366387,2.992327,2],[4,19401611,0.506394,2],[4,19401611,0.567775,2],[4,19401611,0.598465,2],[4,7366387,3.299233,2],[4,7366387,3.360614,2],[4,19401611,1.242967,2],[4,1971287,0.445013,2],[4,7366387,3.943734,2],[4,19401611,1.457801,2],[4,19401611,1.549872,2],[4,19401611,1.672634,2],[4,17534076,3.14578,2],[4,17534076,3.084399,2],[4,22306665,2.930946,2],[4,18571596,2.01023,2],[4,18571596,1.97954,2],[4,18779099,2.685422,2],[4,2178791,2.317136,2],[4,18779099,2.838875,2],[4,18571596,1.641944,2],[4,18571596,1.611253,2],[4,18571596,1.580563,2],[4,18571596,1.457801,2],[4,12553984,1.242967,2],[4,22306665,3.544757,2],[4,2178791,2.56266,2],[4,22306665,3.636829,2],[4,22306665,3.667519,2],[4,18571596,0.87468,2],[4,18779099,3.084399,2],[4,22306665,3.851662,2],[4,18779099,3.207161,2],[4,18779099,3.329923,2],[4,22306665,4.097187,2],[4,22306665,1.887468,2],[4,18779099,1.918159,2],[4,25834231,1.549872,2],[4,24796711,1.703325,2],[4,18779099,2.040921,2],[4,18779099,2.071611,2],[4,22306665,2.071611,2],[4,18571596,3.11509,2],[4,18571596,3.023018,2],[4,18779099,2.225064,2],[4,18571596,2.930946,2],[4,24796711,0.537084,2],[4,22306665,2.378517,2],[4,2178791,0.383632,2],[4,18571596,2.685422,2],[4,2178791,2.163683,2],[4,22306665,2.685422,2],[4,18571596,2.378517,2],[4,18571596,2.317136,2],[4,18571596,2.194373,2],[4,12553984,1.212276,2],[4,6743876,2.255754,2],[4,6743876,2.286445,2],[4,12553984,1.856777,2],[4,3838821,2.194373,2],[4,6743876,2.439898,2],[4,6743876,2.56266,2],[4,3838821,1.97954,2],[4,6743876,2.59335,2],[4,6743876,2.685422,2],[4,3838821,1.826087,2],[4,3838821,1.764706,2],[4,12553984,2.01023,2],[4,3838821,1.611253,2],[4,3838821,1.580563,2],[4,3838821,1.549872,2],[4,6743876,2.869565,2],[4,6743876,2.900256,2],[4,3838821,1.396419,2],[4,3838821,1.365729,2],[4,6743876,2.930946,2],[4,3838821,1.304348,2],[4,6743876,0.445013,2],[4,2178791,2.685422,2],[4,6743876,0.598465,2],[4,6743876,0.721228,2],[4,6743876,0.84399,2],[4,6743876,0.936061,2],[4,2178791,2.838875,2],[4,6743876,1.488491,2],[4,6743876,1.580563,2],[4,2178791,2.930946,2],[4,6743876,1.734015,2],[4,12553984,1.703325,2],[4,2178791,2.992327,2],[4,6743876,1.856777,2],[4,3838821,2.654731,2],[4,6743876,1.887468,2],[4,3838821,2.56266,2],[4,12553984,1.795396,2],[4,3838821,2.501279,2],[4,6743876,2.071611,2],[4,2178791,3.14578,2],[4,6536372,2.194373,2],[4,6536372,2.255754,2],[4,6536372,2.286445,2],[4,6536372,2.317136,2],[4,6536372,0.84399,2],[4,2178791,1.764706,2],[4,6536372,2.501279,2],[4,2178791,1.795396,2],[4,6536372,2.59335,2],[4,6536372,2.624041,2],[4,1141271,1.150895,2],[4,6536372,2.716113,2],[4,1141271,1.181586,2],[4,6536372,2.869565,2],[4,6536372,2.930946,2],[4,1141271,1.304348,2],[4,1141271,1.365729,2],[4,1141271,1.457801,2],[4,1141271,1.488491,2],[4,1141271,1.519182,2],[4,2178791,1.058824,2],[4,1141271,0.905371,2],[4,24796711,1.335038,2],[4,6536372,1.304348,2],[4,6536372,1.365729,2],[4,6536372,1.396419,2],[4,1141271,0.813299,2],[4,2178791,1.304348,2],[4,1141271,1.028133,2],[4,6536372,1.580563,2],[4,6536372,1.089514,2],[4,6536372,1.641944,2],[4,2178791,1.273657,2],[4,6536372,1.764706,2],[4,6536372,1.795396,2],[4,6536372,1.028133,2],[4,6536372,0.997442,2],[4,2178791,1.242967,2],[4,2178791,1.611253,2],[4,6536372,0.936061,2],[4,6536372,2.102302,2],[4,6536372,2.163683,2],[4,2178791,1.918159,2],[4,18779099,1.058824,2],[4,2178791,0.905371,2],[4,2178791,1.948849,2],[4,22306665,0.936061,2],[4,18571596,4.772379,2],[4,12553984,1.028133,2],[4,2178791,2.01023,2],[4,2178791,2.040921,2],[4,12553984,0.445013,2],[4,18571596,4.31202,2],[4,18571596,4.250639,2],[4,18779099,1.488491,2],[4,25834231,1.734015,2],[4,24796711,0.721228,2],[4,22306665,1.580563,2],[4,22306665,1.641944,2],[4,22306665,1.703325,2],[4,22306665,1.734015,2],[4,18779099,1.764706,2],[4,24796711,0.659847,2],[4,6536372,3.483376,2],[4,18571596,7.043478,2],[4,2178791,1.028133,2],[4,6536372,3.667519,2],[4,1141271,1.918159,2],[4,25834231,2.746803,2],[4,1141271,1.97954,2],[4,1141271,2.040921,2],[4,18571596,6.55243,2],[4,1141271,2.163683,2],[4,18571596,6.337596,2],[4,18571596,6.306905,2],[4,25834231,2.378517,2],[4,24796711,1.028133,2],[4,1141271,2.225064,2],[4,18571596,6.061381,2],[4,18571596,6.030691,2],[4,22306665,0.506394,2],[4,6536372,4.557545,2],[4,25834231,1.948849,2],[4,12553984,0.997442,2],[4,12553984,3.268542,2],[4,6951379,1.641944,2],[4,6951379,1.672634,2],[4,12553984,3.329923,2],[4,6951379,1.734015,2],[4,18986603,2.071611,2],[4,12346480,3.11509,2],[4,6951379,1.856777,2],[4,18986603,2.132992,2],[4,12346480,2.992327,2],[4,4046325,1.672634,2],[4,18986603,2.194373,2],[4,6951379,2.102302,2],[4,22099161,1.97954,2],[4,6951379,2.194373,2],[4,12553984,3.421995,2],[4,18986603,2.317136,2],[4,11308960,2.347826,2],[4,6951379,2.409207,2],[4,6951379,2.501279,2],[4,6951379,2.531969,2],[4,22099161,2.685422,2],[4,12346480,3.299233,2],[4,18156588,2.01023,2],[4,12346480,3.237852,2],[4,18986603,1.795396,2],[4,18156588,1.856777,2],[4,18156588,1.826087,2],[4,11308960,2.531969,2],[4,18986603,1.826087,2],[4,18156588,1.611253,2],[4,18156588,1.396419,2],[4,18986603,1.948849,2],[4,12553984,3.176471,2],[4,18156588,1.242967,2],[4,18156588,1.058824,2],[4,18156588,0.966752,2],[4,6951379,1.028133,2],[4,6951379,1.304348,2],[4,18986603,2.01023,2],[4,11308960,2.439898,2],[4,18986603,2.040921,2],[4,22514169,0.905371,2],[4,6951379,3.575448,2],[4,6951379,3.606138,2],[4,22099161,1.212276,2],[4,25211719,1.580563,2],[4,6951379,4.342711,2],[4,11308960,1.948849,2],[4,25211719,1.703325,2],[4,11308960,1.856777,2],[4,18986603,2.654731,2],[4,6951379,4.895141,2],[4,22514169,1.488491,2],[4,22514169,1.519182,2],[4,12346480,2.439898,2],[4,25211719,1.734015,2],[4,26041735,0.567775,2],[4,6951379,5.478261,2],[4,22099161,0.751918,2],[4,22099161,0.721228,2],[4,2178791,4.741688,2],[4,22514169,1.826087,2],[4,6951379,2.59335,2],[4,18986603,2.378517,2],[4,26041735,0.383632,2],[4,22099161,1.795396,2],[4,6951379,2.746803,2],[4,22099161,1.734015,2],[4,6951379,2.808184,2],[4,6951379,2.838875,2],[4,6951379,2.992327,2],[4,24381704,5.140665,2],[4,22099161,1.672634,2],[4,22099161,1.611253,2],[4,4046325,1.918159,2],[4,18986603,2.470588,2],[4,22099161,1.519182,2],[4,22099161,1.488491,2],[4,25211719,1.365729,2],[4,22099161,1.396419,2],[4,6951379,3.391304,2],[4,25211719,1.457801,2],[4,18986603,2.56266,2],[4,12346480,4.83376,2],[4,18364092,2.255754,2],[4,12346480,4.772379,2],[4,18364092,2.132992,2],[4,12346480,4.496164,2],[4,12346480,4.250639,2],[4,18364092,1.948849,2],[4,12553984,2.501279,2],[4,18364092,1.887468,2],[4,18364092,1.826087,2],[4,12553984,2.59335,2],[4,25211719,0.414322,2],[4,18364092,1.734015,2],[4,18364092,1.703325,2],[4,18364092,1.641944,2],[4,12346480,4.158568,2],[4,18986603,0.598465,2],[4,18986603,0.629156,2],[4,18364092,1.335038,2],[4,2178791,3.851662,2],[4,25211719,0.782609,2],[4,12553984,2.194373,2],[4,3838821,1.242967,2],[4,6328868,3.360614,2],[4,3838821,1.181586,2],[4,3838821,1.089514,2],[4,6743876,3.084399,2],[4,6328868,2.930946,2],[4,18364092,3.053708,2],[4,18364092,2.992327,2],[4,12553984,2.347826,2],[4,22099161,4.86445,2],[4,6743876,3.391304,2],[4,6743876,3.483376,2],[4,25834231,1.335038,2],[4,6743876,3.575448,2],[4,12553984,2.378517,2],[4,6743876,3.636829,2],[4,2178791,3.606138,2],[4,18986603,0.383632,2],[4,18364092,2.317136,2],[4,25834231,1.181586,2],[4,4046325,0.997442,2],[4,4046325,1.058824,2],[4,6743876,8.025575,2],[4,18986603,1.120205,2],[4,18986603,1.242967,2],[4,18986603,1.273657,2],[4,18986603,1.365729,2],[4,18986603,1.42711,2],[4,4046325,1.212276,2],[4,6951379,0.629156,2],[4,18156588,2.869565,2],[4,22099161,2.930946,2],[4,12346480,3.391304,2],[4,25211719,1.212276,2],[4,18156588,2.716113,2],[4,18986603,1.488491,2],[4,6951379,0.84399,2],[4,18156588,2.439898,2],[4,18156588,2.409207,2],[4,22099161,2.716113,2],[4,18156588,2.225064,2],[4,18364092,1.181586,2],[4,25834231,0.997442,2],[4,25211719,0.905371,2],[4,2178791,3.974425,2],[4,6743876,4.373402,2],[4,6743876,4.404092,2],[4,25834231,0.936061,2],[4,4046325,0.598465,2],[4,4046325,0.629156,2],[4,12346480,3.851662,2],[4,4046325,0.659847,2],[4,22099161,3.7289,2],[4,6743876,5.723785,2],[4,25834231,0.84399,2],[4,25211719,0.997442,2],[4,18986603,0.84399,2],[4,12346480,3.7289,2],[4,25834231,0.751918,2],[4,6743876,6.797954,2],[4,12346480,3.606138,2],[4,18986603,1.028133,2],[4,12346480,3.514066,2],[4,12968991,0.751918,2],[4,8196403,2.838875,2],[4,8196403,2.900256,2],[4,4253829,3.053708,2],[4,16496557,3.268542,2],[4,24589208,2.56266,2],[4,4253829,3.14578,2],[4,5706356,1.549872,2],[4,8196403,3.176471,2],[4,11516464,1.396419,2],[4,5706356,1.457801,2],[4,11516464,1.457801,2],[4,16496557,2.808184,2],[4,16496557,2.777494,2],[4,8196403,3.299233,2],[4,8196403,3.329923,2],[4,8196403,3.360614,2],[4,12968991,1.212276,2],[4,8196403,3.452685,2],[4,3216310,4.526854,2],[4,726264,1.457801,2],[4,8196403,1.703325,2],[4,8196403,1.764706,2],[4,4253829,2.470588,2],[4,12968991,0.107417,2],[4,12968991,0.168798,2],[4,8196403,1.97954,2],[4,4253829,2.59335,2],[4,12968991,0.29156,2],[4,8196403,2.255754,2],[4,8196403,2.317136,2],[4,4253829,2.685422,2],[4,8196403,2.347826,2],[4,5706356,2.194373,2],[4,4253829,2.838875,2],[4,5706356,2.071611,2],[4,16496557,3.790281,2],[4,12968991,0.598465,2],[4,8196403,2.624041,2],[4,5706356,2.01023,2],[4,4253829,2.930946,2],[4,12968991,1.488491,2],[4,25626727,1.42711,2],[4,11516464,1.856777,2],[4,16496557,1.212276,2],[4,16496557,1.181586,2],[4,3216310,3.299233,2],[4,16496557,1.089514,2],[4,16496557,0.751918,2],[4,16496557,0.721228,2],[4,12968991,1.764706,2],[4,16496557,0.629156,2],[4,16496557,0.567775,2],[4,8196403,3.790281,2],[4,8196403,3.851662,2],[4,8196403,3.913043,2],[4,25626727,1.150895,2],[4,8196403,3.974425,2],[4,11516464,1.887468,2],[4,8196403,4.219949,2],[4,1763783,2.132992,2],[4,1763783,2.163683,2],[4,11516464,1.549872,2],[4,5706356,1.212276,2],[4,11516464,1.580563,2],[4,4253829,3.606138,2],[4,12968991,1.304348,2],[4,8196403,3.544757,2],[4,16496557,2.225064,2],[4,5706356,1.058824,2],[4,16496557,2.163683,2],[4,25626727,1.887468,2],[4,25626727,1.856777,2],[4,16496557,2.071611,2],[4,16496557,1.918159,2],[4,16496557,1.856777,2],[4,25626727,1.764706,2],[4,11516464,1.672634,2],[4,8196403,3.636829,2],[4,11516464,1.734015,2],[4,3216310,3.636829,2],[4,16496557,1.549872,2],[4,25626727,1.580563,2],[4,11101457,1.365729,2],[4,24589208,2.194373,2],[4,103752,2.01023,2],[4,25626727,2.194373,2],[4,25626727,2.163683,2],[4,7988899,3.299233,2],[4,19816619,1.764706,2],[4,21684154,10.235294,2],[4,19816619,1.856777,2],[4,7988899,3.790281,2],[4,19816619,1.948849,2],[4,4253829,0.598465,2],[4,19816619,2.01023,2],[4,4253829,0.721228,2],[4,4253829,0.751918,2],[4,19816619,2.132992,2],[4,16704061,2.624041,2],[4,4253829,0.84399,2],[4,4253829,0.87468,2],[4,4253829,0.905371,2],[4,11101457,1.764706,2],[4,7988899,1.703325,2],[4,7988899,1.734015,2],[4,7988899,1.887468,2],[4,7988899,1.918159,2],[4,7988899,2.01023,2],[4,22929177,4.035806,2],[4,11101457,1.580563,2],[4,7988899,2.071611,2],[4,19816619,1.396419,2],[4,7988899,2.194373,2],[4,7988899,2.255754,2],[4,19816619,1.42711,2],[4,7988899,2.317136,2],[4,19816619,1.457801,2],[4,11516464,0.966752,2],[4,7988899,2.439898,2],[4,103752,2.040921,2],[4,4253829,0.168798,2],[4,7988899,2.685422,2],[4,25626727,2.255754,2],[4,726264,2.501279,2],[4,19816619,3.667519,2],[4,726264,2.317136,2],[4,726264,2.163683,2],[4,8196403,0.751918,2],[4,8196403,0.782609,2],[4,11101457,0.87468,2],[4,726264,1.918159,2],[4,4253829,2.040921,2],[4,16496557,5.662404,2],[4,4253829,2.071611,2],[4,726264,1.764706,2],[4,726264,1.641944,2],[4,726264,1.611253,2],[4,4253829,2.225064,2],[4,8196403,1.365729,2],[4,11101457,0.414322,2],[4,8196403,1.457801,2],[4,5706356,2.930946,2],[4,11101457,0.383632,2],[4,5706356,2.531969,2],[4,24589208,2.378517,2],[4,19816619,2.225064,2],[4,19816619,2.286445,2],[4,4253829,1.058824,2],[4,19816619,2.347826,2],[4,19816619,2.59335,2],[4,16704061,1.826087,2],[4,16704061,1.795396,2],[4,11516464,1.181586,2],[4,4253829,1.273657,2],[4,16704061,1.703325,2],[4,16704061,1.672634,2],[4,16704061,1.611253,2],[4,19816619,2.716113,2],[4,16704061,1.488491,2],[4,16704061,1.396419,2],[4,726264,3.882353,2],[4,11101457,1.058824,2],[4,4253829,1.611253,2],[4,726264,2.777494,2],[4,25626727,2.132992,2],[4,21684154,3.360614,2],[4,2386294,0.383632,2],[4,20024123,3.084399,2],[4,20024123,3.176471,2],[4,21684154,3.176471,2],[4,21684154,3.053708,2],[4,26456742,3.299233,2],[4,8403906,0.997442,2],[4,1556279,3.483376,2],[4,26456742,3.452685,2],[4,8403906,1.335038,2],[4,21684154,2.808184,2],[4,21684154,2.777494,2],[4,11516464,3.14578,2],[4,26456742,3.69821,2],[4,10893953,2.439898,2],[4,2386294,0.567775,2],[4,21684154,2.624041,2],[4,8403906,2.01023,2],[4,2386294,0.598465,2],[4,25004215,0.690537,2],[4,20024123,2.470588,2],[4,20024123,2.501279,2],[4,16289053,1.580563,2],[4,21684154,3.7289,2],[4,10893953,2.869565,2],[4,3216310,0.690537,2],[4,21684154,3.636829,2],[4,16289053,1.335038,2],[4,26456742,2.194373,2],[4,10893953,2.654731,2],[4,26456742,2.286445,2],[4,20024123,2.838875,2],[4,2386294,0.322251,2],[4,26456742,2.409207,2],[4,1763783,3.053708,2],[4,26456742,2.439898,2],[4,26456742,2.470588,2],[4,10893953,2.56266,2],[4,26456742,2.531969,2],[4,26456742,2.624041,2],[4,21684154,2.040921,2],[4,16081549,2.869565,2],[4,21684154,1.918159,2],[4,21684154,1.887468,2],[4,21684154,1.826087,2],[4,16081549,2.531969,2],[4,21684154,1.734015,2],[4,21684154,1.703325,2],[4,21684154,1.580563,2],[4,16081549,2.071611,2],[4,16081549,2.040921,2],[4,16081549,1.948849,2],[4,21684154,1.519182,2],[4,16081549,1.826087,2],[4,21684154,1.42711,2],[4,16081549,1.611253,2],[4,21684154,1.365729,2],[4,16081549,1.457801,2],[4,5498852,1.97954,2],[4,16081549,1.365729,2],[4,16081549,1.335038,2],[4,2386294,0.659847,2],[4,8403906,2.225064,2],[4,21684154,2.501279,2],[4,8403906,2.56266,2],[4,8403906,2.685422,2],[4,8403906,2.716113,2],[4,8403906,2.777494,2],[4,8403906,2.808184,2],[4,8403906,2.900256,2],[4,2386294,0.782609,2],[4,8403906,2.961637,2],[4,8403906,3.053708,2],[4,5498852,2.930946,2],[4,21684154,2.317136,2],[4,21684154,2.286445,2],[4,21684154,2.255754,2],[4,10893953,2.255754,2],[4,21684154,2.225064,2],[4,5498852,2.777494,2],[4,5498852,2.716113,2],[4,8403906,4.710997,2],[4,23136681,1.488491,2],[4,23136681,1.519182,2],[4,12968991,2.654731,2],[4,23136681,1.580563,2],[4,23136681,1.611253,2],[4,23136681,1.641944,2],[4,12968991,2.685422,2],[4,23136681,1.703325,2],[4,23136681,1.734015,2],[4,26456742,1.150895,2],[4,23136681,1.795396,2],[4,12968991,2.716113,2],[4,25004215,1.212276,2],[4,23136681,1.887468,2],[4,12968991,2.746803,2],[4,1348775,0.84399,2],[4,12968991,2.777494,2],[4,12968991,2.838875,2],[4,1348775,0.905371,2],[4,23136681,2.163683,2],[4,12968991,2.961637,2],[4,8196403,4.250639,2],[4,1763783,2.225064,2],[4,25004215,2.163683,2],[4,21684154,5.969309,2],[4,25004215,2.102302,2],[4,25004215,2.071611,2],[4,25004215,2.01023,2],[4,8196403,4.895141,2],[4,25626727,0.87468,2],[4,8196403,5.109974,2],[4,11516464,2.040921,2],[4,25004215,1.887468,2],[4,11516464,2.255754,2],[4,23136681,1.150895,2],[4,25004215,1.457801,2],[4,1348775,0.690537,2],[4,12968991,2.317136,2],[4,25004215,1.335038,2],[4,1348775,0.721228,2],[4,12968991,2.378517,2],[4,12968991,2.624041,2],[4,3216310,2.01023,2],[4,21684154,4.496164,2],[4,3216310,1.948849,2],[4,20024123,1.672634,2],[4,12968991,3.636829,2],[4,3216310,1.826087,2],[4,16289053,2.071611,2],[4,12968991,3.759591,2],[4,26456742,2.01023,2],[4,16289053,1.948849,2],[4,16289053,1.918159,2],[4,12968991,3.882353,2],[4,3216310,1.580563,2],[4,1348775,1.611253,2],[4,20024123,1.97954,2],[4,16289053,1.734015,2],[4,3216310,1.365729,2],[4,21684154,4.127877,2],[4,3216310,1.120205,2],[4,20024123,2.255754,2],[4,3216310,1.058824,2],[4,1348775,0.966752,2],[4,1348775,1.089514,2],[4,25004215,1.120205,2],[4,23136681,2.439898,2],[4,12968991,3.176471,2],[4,16289053,3.023018,2],[4,23136681,2.56266,2],[4,23136681,2.59335,2],[4,1348775,1.150895,2],[4,1348775,1.181586,2],[4,11516464,2.716113,2],[4,23136681,2.869565,2],[4,21684154,4.895141,2],[4,26456742,1.856777,2],[4,26456742,1.887468,2],[4,8403906,0.782609,2],[4,26456742,1.918159,2],[4,21684154,4.803069,2],[4,20024123,1.242967,2],[4,25004215,0.997442,2],[4,16289053,2.286445,2],[4,21891657,2.040921,2],[4,1763783,0.997442,2],[4,21891657,3.11509,2],[4,21891657,1.948849,2],[4,1971287,1.212276,2],[4,11101457,2.746803,2],[4,25211719,3.053708,2],[4,26249238,2.56266,2],[4,21891657,1.918159,2],[4,1763783,0.905371,2],[4,26249238,2.654731,2],[4,7781395,3.237852,2],[4,19609115,3.943734,2],[4,7781395,3.176471,2],[4,24589208,1.396419,2],[4,1763783,0.751918,2],[4,19609115,2.992327,2],[4,103752,2.194373,2],[4,3423814,2.56266,2],[4,21891657,0.84399,2],[4,11101457,2.992327,2],[4,19609115,1.97954,2],[4,1763783,0.537084,2],[4,1763783,0.414322,2],[4,17119069,3.268542,2],[4,19609115,3.882353,2],[4,11101457,3.176471,2],[4,19609115,2.01023,2],[4,21891657,0.445013,2],[4,22929177,0.936061,2],[4,19609115,1.611253,2],[4,22929177,0.905371,2],[4,103752,2.746803,2],[4,19609115,1.734015,2],[4,1763783,1.42711,2],[4,7781395,3.606138,2],[4,21891657,3.329923,2],[4,103752,2.624041,2],[4,7781395,3.514066,2],[4,7573891,5.938619,2],[4,19609115,4.066496,2],[4,21891657,3.299233,2],[4,1971287,1.120205,2],[4,1763783,1.242967,2],[4,21891657,3.176471,2],[4,17119069,1.580563,2],[4,1763783,1.212276,2],[4,7781395,3.421995,2],[4,7781395,3.391304,2],[4,26249238,2.255754,2],[4,21891657,0.598465,2],[4,17119069,1.611253,2],[4,26249238,2.286445,2],[4,1971287,1.181586,2],[4,26249238,2.347826,2],[4,11101457,2.685422,2],[4,1763783,1.089514,2],[4,12761487,3.606138,2],[4,26249238,1.212276,2],[4,7781395,1.703325,2],[4,1971287,1.488491,2],[4,7781395,1.641944,2],[4,3423814,1.734015,2],[4,7781395,1.611253,2],[4,19609115,3.391304,2],[4,21891657,2.808184,2],[4,3423814,1.887468,2],[4,17119069,1.887468,2],[4,3423814,1.97954,2],[4,7781395,1.396419,2],[4,12761487,3.636829,2],[4,17119069,2.163683,2],[4,17119069,1.948849,2],[4,12761487,4.035806,2],[4,17119069,2.132992,2],[4,26249238,1.242967,2],[4,12761487,3.913043,2],[4,7781395,1.273657,2],[4,3423814,2.163683,2],[4,3423814,2.194373,2],[4,21891657,2.654731,2],[4,21891657,1.580563,2],[4,24589208,1.549872,2],[4,1971287,1.457801,2],[4,19609115,2.317136,2],[4,7781395,2.838875,2],[4,3423814,0.87468,2],[4,1971287,1.42711,2],[4,7781395,2.654731,2],[4,7781395,2.56266,2],[4,17119069,3.023018,2],[4,11101457,3.237852,2],[4,7781395,2.347826,2],[4,19609115,2.59335,2],[4,7781395,2.286445,2],[4,21891657,1.764706,2],[4,24796711,2.777494,2],[4,21891657,2.501279,2],[4,24589208,1.703325,2],[4,17119069,2.777494,2],[4,7781395,2.255754,2],[4,11101457,3.421995,2],[4,7781395,2.01023,2],[4,7781395,1.97954,2],[4,24589208,1.120205,2],[4,21891657,1.181586,2],[4,3423814,1.42711,2],[4,21891657,1.672634,2],[4,19609115,3.575448,2],[4,19609115,2.132992,2],[4,19609115,2.163683,2],[4,17119069,1.795396,2],[4,7781395,1.887468,2],[4,21891657,1.242967,2],[4,12761487,2.624041,2],[4,16911565,1.457801,2],[4,24589208,1.97954,2],[4,26249238,1.734015,2],[4,3423814,3.667519,2],[4,7573891,4.127877,2],[4,17119069,1.396419,2],[4,19816619,0.905371,2],[4,16911565,1.611253,2],[4,24589208,1.948849,2],[4,21891657,3.913043,2],[4,12346480,0.751918,2],[4,7573891,4.31202,2],[4,16911565,1.703325,2],[4,12346480,0.721228,2],[4,16911565,1.764706,2],[4,25626727,2.838875,2],[4,16911565,1.887468,2],[4,21891657,2.378517,2],[4,25626727,2.961637,2],[4,16911565,1.97954,2],[4,25626727,3.084399,2],[4,16911565,2.071611,2],[4,21891657,2.409207,2],[4,25626727,3.14578,2],[4,25004215,2.56266,2],[4,25626727,3.299233,2],[4,21891657,2.225064,2],[4,7988899,1.611253,2],[4,7988899,1.549872,2],[4,7988899,1.519182,2],[4,24381704,0.87468,2],[4,5913860,1.396419,2],[4,17119069,1.181586,2],[4,7988899,1.42711,2],[4,22721673,6.214834,2],[4,7573891,3.575448,2],[4,25626727,2.439898,2],[4,19609115,2.746803,2],[4,25626727,2.501279,2],[4,7573891,3.606138,2],[4,26249238,1.549872,2],[4,26249238,1.611253,2],[4,7573891,3.69821,2],[4,7573891,3.7289,2],[4,25626727,2.654731,2],[4,7573891,3.820972,2],[4,16911565,1.089514,2],[4,17119069,1.273657,2],[4,16911565,1.212276,2],[4,16911565,1.242967,2],[4,12346480,0.782609,2],[4,25626727,2.685422,2],[4,19609115,0.383632,2],[4,16911565,1.365729,2],[4,26249238,1.519182,2],[4,7573891,4.83376,2],[4,26249238,2.01023,2],[4,19609115,2.808184,2],[4,1763783,1.826087,2],[4,17119069,0.690537,2],[4,1556279,4.189258,2],[4,19609115,1.519182,2],[4,1763783,1.764706,2],[4,7573891,5.263427,2],[4,1971287,1.549872,2],[4,1763783,1.703325,2],[4,7781395,4.741688,2],[4,11101457,2.347826,2],[4,19609115,4.741688,2],[4,21891657,2.132992,2],[4,1763783,1.611253,2],[4,22929177,1.273657,2],[4,7573891,5.324808,2],[4,26249238,2.102302,2],[4,7781395,4.035806,2],[4,7781395,3.851662,2],[4,11101457,2.439898,2],[4,11101457,2.501279,2],[4,19609115,1.580563,2],[4,7781395,3.69821,2],[4,1763783,1.948849,2],[4,25004215,2.746803,2],[4,25004215,2.808184,2],[4,19609115,1.181586,2],[4,7573891,4.710997,2],[4,19609115,5.324808,2],[4,19609115,0.782609,2],[4,26249238,1.365729,2],[4,22929177,1.856777,2],[4,25626727,3.391304,2],[4,16911565,5.202046,2],[4,21891657,2.194373,2],[4,24796711,2.685422,2],[4,7781395,5.877238,2],[4,26249238,1.856777,2],[4,19609115,4.925831,2],[4,16911565,4.005115,2],[4,25004215,2.624041,2],[4,2178791,2.409207,3],[4,13799007,2.102302,3],[4,2178791,2.347826,3],[4,12761487,1.549872,3],[4,10893953,1.304348,3],[4,13799007,2.255754,3],[4,13799007,2.040921,3],[4,12761487,3.329923,3],[4,12553984,1.150895,3],[4,311256,1.058824,3],[4,10893953,0.751918,3],[4,103752,0.905371,3],[4,11723968,0.107417,3],[4,24796711,0.475703,3],[4,12553984,1.304348,3],[4,2386294,1.826087,3],[4,2386294,1.764706,3],[4,24796711,0.414322,3],[4,12553984,1.396419,3],[4,10686449,1.549872,3],[4,10686449,1.488491,3],[4,12553984,1.273657,3],[4,12553984,1.488491,3],[4,12761487,1.396419,3],[4,2178791,2.255754,3],[4,24174200,0.905371,3],[4,24381704,0.506394,3],[4,10893953,1.120205,3],[4,2178791,2.439898,3],[4,2178791,0.168798,3],[4,24796711,2.071611,3],[4,2386294,1.120205,3],[4,24381704,1.120205,3],[4,12346480,0.537084,3],[4,2386294,0.813299,3],[4,24589208,0.751918,3],[4,24796711,1.97954,3],[4,2178791,1.826087,3],[4,10686449,0.813299,3],[4,12553984,0.629156,3],[4,12346480,0.475703,3],[4,12761487,2.317136,3],[4,24381704,1.273657,3],[4,10686449,0.537084,3],[4,10893953,2.378517,3],[4,10893953,1.703325,3],[4,2386294,0.690537,3],[4,2386294,0.629156,3],[4,103752,1.335038,3],[4,103752,0.598465,3],[4,2178791,1.396419,3],[4,24796711,1.304348,3],[4,12346480,0.813299,3],[4,24796711,1.396419,3],[4,2178791,1.488491,3],[4,10893953,2.071611,3],[4,12761487,2.56266,3],[4,24796711,1.488491,3],[4,2178791,1.549872,3],[4,12346480,0.905371,3],[4,24796711,2.163683,3],[4,2386294,1.058824,3],[4,12761487,2.746803,3],[4,24796711,1.519182,3],[4,12761487,2.439898,3],[4,10686449,1.335038,3],[4,103752,4.496164,3],[4,12346480,0.629156,3],[4,1971287,1.97954,3],[4,13799007,2.716113,3],[4,13799007,2.685422,3],[4,12138976,0.230179,3],[4,13591503,1.242967,3],[4,13799007,2.624041,3],[4,24381704,1.672634,3],[4,24796711,3.084399,3],[4,24381704,0.629156,3],[4,2178791,0.567775,3],[4,24174200,0.721228,3],[4,2386294,0.199488,3],[4,12761487,1.703325,3],[4,10893953,2.838875,3],[4,2386294,0.138107,3],[4,12553984,0.322251,3],[4,1971287,1.365729,3],[4,103752,1.181586,3],[4,24381704,1.826087,3],[4,2178791,0.445013,3],[4,103752,1.120205,3],[4,2386294,0.537084,3],[4,12346480,0.352941,3],[4,2178791,0.966752,3],[4,2178791,1.856777,3],[4,12761487,2.102302,3],[4,13591503,0.936061,3],[4,12138976,0.26087,3],[4,12553984,0.475703,3],[4,12761487,2.01023,3],[4,2178791,0.84399,3],[4,24589208,1.028133,3],[4,2386294,0.414322,3],[4,2178791,0.813299,3],[4,13799007,2.869565,3],[4,24796711,0.966752,3],[4,13799007,2.838875,3],[4,24796711,0.87468,3],[4,1971287,2.255754,3],[4,2178791,0.721228,3],[4,24589208,1.058824,3],[4,12761487,0.168798,3],[4,11101457,0.076726,3],[4,11101457,0.168798,3],[4,11101457,0.26087,3],[4,24174200,1.97954,3],[4,11101457,0.445013,3],[4,11101457,0.567775,3],[4,11308960,1.918159,3],[4,11723968,1.273657,3],[4,11101457,0.751918,3],[4,11101457,0.782609,3],[4,11101457,0.905371,3],[4,13383999,1.273657,3],[4,13383999,1.242967,3],[4,1971287,3.636829,3],[4,11516464,1.242967,3],[4,311256,1.734015,3],[4,10478945,0.87468,3],[4,12346480,1.335038,3],[4,24174200,2.255754,3],[4,11101457,1.028133,3],[4,11723968,0.936061,3],[4,12968991,0.782609,3],[4,2386294,3.207161,3],[4,24174200,1.795396,3],[4,2178791,6.491049,3],[4,12968991,0.690537,3],[4,311256,2.194373,3],[4,12138976,1.120205,3],[4,24589208,1.856777,3],[4,12968991,0.567775,3],[4,12761487,0.629156,3],[4,12968991,0.445013,3],[4,12138976,2.286445,3],[4,12968991,0.322251,3],[4,12761487,0.537084,3],[4,13176495,2.01023,3],[4,13383999,1.611253,3],[4,12968991,0.26087,3],[4,12968991,0.199488,3],[4,12138976,2.102302,3],[4,12761487,0.414322,3],[4,12968991,0.138107,3],[4,12138976,1.764706,3],[4,11101457,2.132992,3],[4,13383999,0.84399,3],[4,12138976,1.580563,3],[4,2386294,4.189258,3],[4,10478945,1.028133,3],[4,311256,1.611253,3],[4,10478945,1.089514,3],[4,12346480,1.795396,3],[4,11101457,2.040921,3],[4,12138976,1.641944,3],[4,2178791,5.815857,3],[4,2178791,5.754476,3],[4,11308960,0.659847,3],[4,11308960,0.751918,3],[4,10478945,1.273657,3],[4,11101457,1.611253,3],[4,12138976,1.672634,3],[4,11101457,1.703325,3],[4,11516464,0.936061,3],[4,11516464,0.84399,3],[4,11101457,1.887468,3],[4,11723968,1.488491,3],[4,2386294,6.153453,3],[4,11308960,0.138107,3],[4,12346480,2.163683,3],[4,12346480,1.457801,3],[4,10478945,1.795396,3],[4,13383999,0.997442,3],[4,311256,1.703325,3],[4,12346480,1.580563,3],[4,12346480,1.703325,3],[4,11308960,0.29156,3],[4,11308960,1.273657,3],[4,11308960,1.242967,3],[4,2386294,3.882353,3],[4,11308960,1.212276,3],[4,1971287,3.606138,3],[4,13383999,0.352941,3],[4,11101457,1.335038,3],[4,11101457,2.194373,3],[4,103752,1.580563,3],[4,13383999,0.690537,3],[4,24589208,2.163683,3],[4,24381704,2.409207,3],[4,12553984,2.040921,3],[4,12553984,2.102302,3],[4,12553984,2.132992,3],[4,103752,1.734015,3],[4,24589208,1.365729,3],[4,12553984,2.163683,3],[4,1971287,0.567775,3],[4,1971287,0.537084,3],[4,13799007,1.273657,3],[4,12346480,0.966752,3],[4,103752,2.439898,3],[4,12968991,2.225064,3],[4,12968991,2.163683,3],[4,12761487,1.089514,3],[4,11516464,2.378517,3],[4,12968991,2.132992,3],[4,12968991,2.071611,3],[4,11516464,2.347826,3],[4,12968991,2.01023,3],[4,11516464,2.225064,3],[4,12553984,1.519182,3],[4,12553984,1.580563,3],[4,12138976,0.721228,3],[4,24796711,1.826087,3],[4,2386294,2.163683,3],[4,2178791,2.900256,3],[4,13799007,1.519182,3],[4,13176495,0.322251,3],[4,13176495,0.445013,3],[4,13799007,1.488491,3],[4,12968991,3.237852,3],[4,12761487,1.273657,3],[4,13591503,1.365729,3],[4,24381704,0.29156,3],[4,13176495,0.87468,3],[4,24174200,1.058824,3],[4,11723968,0.414322,3],[4,12968991,2.992327,3],[4,13176495,0.997442,3],[4,24796711,0.199488,3],[4,11516464,2.470588,3],[4,13176495,1.150895,3],[4,13591503,1.764706,3],[4,13591503,1.795396,3],[4,12346480,1.120205,3],[4,13591503,1.887468,3],[4,24174200,1.42711,3],[4,13176495,1.580563,3],[4,12968991,1.365729,3],[4,311256,2.716113,3],[4,11516464,1.641944,3],[4,24589208,2.808184,3],[4,13591503,2.132992,3],[4,13176495,1.764706,3],[4,12346480,1.150895,3],[4,24589208,1.734015,3],[4,12761487,0.813299,3],[4,12761487,0.751918,3],[4,11516464,1.488491,3],[4,311256,2.255754,3],[4,12346480,1.181586,3],[4,12761487,0.721228,3],[4,24174200,1.734015,3],[4,12968991,1.181586,3],[4,1971287,2.501279,3],[4,13799007,1.181586,3],[4,13799007,1.150895,3],[4,12968991,1.97954,3],[4,12968991,1.948849,3],[4,11516464,2.163683,3],[4,1971287,0.383632,3],[4,13799007,1.089514,3],[4,1971287,0.322251,3],[4,10686449,2.01023,3],[4,311256,1.304348,3],[4,11516464,1.948849,3],[4,13591503,1.580563,3],[4,2178791,3.882353,3],[4,13799007,0.84399,3],[4,311256,1.335038,3],[4,12346480,4.005115,3],[4,12968991,1.826087,3],[4,12761487,1.058824,3],[4,12761487,0.997442,3],[4,1971287,1.519182,3],[4,12761487,0.936061,3],[4,1141271,0.966752,3],[4,6536372,1.273657,3],[4,6536372,1.457801,3],[4,1141271,0.721228,3],[4,1141271,0.690537,3],[4,6536372,1.672634,3],[4,6536372,1.734015,3],[4,1141271,0.598465,3],[4,1141271,0.414322,3],[4,6536372,2.347826,3],[4,6536372,2.439898,3],[4,6536372,2.56266,3],[4,6536372,3.053708,3],[4,18571596,5.662404,3],[4,22306665,0.659847,3],[4,22306665,0.690537,3],[4,6536372,5.109974,3],[4,22306665,1.150895,3],[4,25834231,1.580563,3],[4,18779099,1.734015,3],[4,18779099,1.549872,3],[4,18779099,1.42711,3],[4,18779099,1.365729,3],[4,18779099,1.335038,3],[4,18779099,1.304348,3],[4,18779099,1.242967,3],[4,18779099,1.150895,3],[4,18779099,1.089514,3],[4,25834231,1.918159,3],[4,18779099,0.567775,3],[4,1141271,1.703325,3],[4,1141271,1.396419,3],[4,6536372,0.751918,3],[4,1141271,1.089514,3],[4,6536372,0.966752,3],[4,1141271,1.058824,3],[4,1141271,0.997442,3],[4,18571596,0.598465,3],[4,3838821,3.759591,3],[4,6536372,9.069054,3],[4,6743876,0.537084,3],[4,6743876,0.782609,3],[4,6743876,1.150895,3],[4,6743876,1.181586,3],[4,6743876,1.242967,3],[4,6743876,1.304348,3],[4,6743876,1.549872,3],[4,6743876,1.611253,3],[4,6743876,1.641944,3],[4,6743876,1.795396,3],[4,6743876,1.826087,3],[4,3838821,2.685422,3],[4,6743876,1.97954,3],[4,6743876,2.01023,3],[4,3838821,2.439898,3],[4,22306665,1.181586,3],[4,18571596,4.618926,3],[4,22306665,1.97954,3],[4,22306665,2.163683,3],[4,22306665,2.225064,3],[4,18571596,2.59335,3],[4,18571596,2.501279,3],[4,18571596,2.225064,3],[4,18571596,2.132992,3],[4,18571596,2.040921,3],[4,18571596,1.887468,3],[4,18571596,1.856777,3],[4,18571596,1.42711,3],[4,18571596,1.396419,3],[4,18571596,1.365729,3],[4,18571596,1.335038,3],[4,18571596,1.273657,3],[4,22306665,3.514066,3],[4,18571596,1.150895,3],[4,6328868,2.378517,3],[4,25211719,2.470588,3],[4,25211719,2.347826,3],[4,25211719,2.225064,3],[4,25211719,2.01023,3],[4,25211719,1.918159,3],[4,22099161,0.782609,3],[4,22099161,0.87468,3],[4,22099161,0.966752,3],[4,25211719,1.672634,3],[4,25211719,1.611253,3],[4,22099161,1.120205,3],[4,22099161,1.304348,3],[4,22099161,1.42711,3],[4,6328868,2.59335,3],[4,4046325,1.887468,3],[4,6328868,2.624041,3],[4,6328868,2.654731,3],[4,19194107,2.102302,3],[4,19194107,2.01023,3],[4,19194107,1.457801,3],[4,19194107,1.396419,3],[4,19194107,1.181586,3],[4,19194107,1.120205,3],[4,19194107,1.058824,3],[4,19194107,0.997442,3],[4,19194107,0.87468,3],[4,6328868,0.629156,3],[4,6328868,0.905371,3],[4,6328868,1.304348,3],[4,6328868,1.335038,3],[4,6328868,1.365729,3],[4,6328868,1.549872,3],[4,6328868,1.826087,3],[4,6328868,1.856777,3],[4,4046325,2.808184,3],[4,6328868,2.225064,3],[4,25211719,0.87468,3],[4,25211719,0.751918,3],[4,25211719,0.721228,3],[4,25211719,0.537084,3],[4,25834231,1.058824,3],[4,25834231,1.150895,3],[4,25834231,1.242967,3],[4,18986603,0.230179,3],[4,25834231,1.396419,3],[4,6328868,2.808184,3],[4,18779099,3.943734,3],[4,18779099,3.790281,3],[4,18779099,3.636829,3],[4,18779099,2.900256,3],[4,18779099,2.378517,3],[4,18779099,2.286445,3],[4,18779099,2.255754,3],[4,18779099,2.163683,3],[4,18779099,1.856777,3],[4,18986603,2.102302,3],[4,22099161,2.378517,3],[4,18986603,1.856777,3],[4,18986603,1.734015,3],[4,22099161,2.56266,3],[4,4046325,1.396419,3],[4,18986603,1.519182,3],[4,4046325,1.273657,3],[4,4046325,1.181586,3],[4,18986603,1.058824,3],[4,4046325,0.936061,3],[4,25834231,0.721228,3],[4,4046325,0.87468,3],[4,18986603,0.936061,3],[4,18986603,0.905371,3],[4,4046325,0.690537,3],[4,25834231,0.905371,3],[4,18986603,0.690537,3],[4,25211719,0.936061,3],[4,3631318,2.286445,3],[4,3631318,2.194373,3],[4,3631318,1.795396,3],[4,3631318,1.641944,3],[4,3631318,1.549872,3],[4,3631318,1.519182,3],[4,3631318,1.396419,3],[4,17741580,2.071611,3],[4,17741580,1.948849,3],[4,17741580,1.887468,3],[4,3631318,0.966752,3],[4,3631318,0.905371,3],[4,17741580,1.826087,3],[4,17741580,1.795396,3],[4,17741580,1.703325,3],[4,17741580,1.672634,3],[4,17741580,1.611253,3],[4,17741580,1.580563,3],[4,26041735,2.716113,3],[4,7158883,0.445013,3],[4,7158883,0.751918,3],[4,7158883,1.150895,3],[4,7158883,1.304348,3],[4,7158883,1.488491,3],[4,7158883,1.672634,3],[4,7158883,1.734015,3],[4,7158883,1.764706,3],[4,7158883,1.887468,3],[4,7158883,2.01023,3],[4,26041735,3.544757,3],[4,3631318,3.544757,3],[4,7158883,2.347826,3],[4,3631318,3.360614,3],[4,7158883,2.378517,3],[4,7158883,2.716113,3],[4,3631318,3.023018,3],[4,7158883,3.11509,3],[4,22721673,1.734015,3],[4,17534076,2.132992,3],[4,17534076,1.856777,3],[4,22721673,2.132992,3],[4,17534076,1.795396,3],[4,17534076,1.764706,3],[4,17534076,1.641944,3],[4,933767,1.549872,3],[4,17534076,1.519182,3],[4,17534076,1.42711,3],[4,933767,1.42711,3],[4,933767,1.396419,3],[4,933767,1.365729,3],[4,933767,1.181586,3],[4,7573891,0.721228,3],[4,7573891,0.997442,3],[4,7573891,1.058824,3],[4,7573891,1.181586,3],[4,7573891,1.273657,3],[4,17741580,1.089514,3],[4,933767,2.961637,3],[4,933767,2.439898,3],[4,7366387,0.813299,3],[4,7366387,0.936061,3],[4,933767,2.286445,3],[4,7366387,1.734015,3],[4,7366387,2.102302,3],[4,7366387,2.132992,3],[4,7366387,3.14578,3],[4,22721673,0.076726,3],[4,17534076,2.59335,3],[4,22721673,0.997442,3],[4,22721673,1.120205,3],[4,22721673,1.150895,3],[4,17534076,2.409207,3],[4,22721673,1.365729,3],[4,22721673,1.396419,3],[4,17534076,2.194373,3],[4,18364092,1.918159,3],[4,18364092,1.795396,3],[4,18364092,1.519182,3],[4,18364092,1.365729,3],[4,18364092,1.304348,3],[4,18364092,1.242967,3],[4,18364092,1.212276,3],[4,18364092,0.905371,3],[4,6743876,4.342711,3],[4,18156588,2.102302,3],[4,18156588,1.97954,3],[4,18156588,1.764706,3],[4,18156588,1.641944,3],[4,18156588,1.519182,3],[4,18156588,1.335038,3],[4,18156588,1.304348,3],[4,18156588,1.120205,3],[4,6951379,1.42711,3],[4,6743876,2.225064,3],[4,3838821,2.255754,3],[4,6743876,2.317136,3],[4,3838821,1.918159,3],[4,3838821,1.734015,3],[4,3838821,1.703325,3],[4,3838821,1.672634,3],[4,6743876,2.808184,3],[4,3838821,1.457801,3],[4,3838821,1.273657,3],[4,6743876,2.961637,3],[4,3838821,1.028133,3],[4,3838821,0.84399,3],[4,6743876,3.299233,3],[4,18364092,2.501279,3],[4,18364092,2.409207,3],[4,18364092,2.347826,3],[4,3838821,0.168798,3],[4,18364092,2.040921,3],[4,26041735,0.905371,3],[4,17949084,1.826087,3],[4,17949084,1.734015,3],[4,17949084,1.703325,3],[4,17949084,1.672634,3],[4,17949084,1.580563,3],[4,26041735,1.058824,3],[4,26041735,1.089514,3],[4,17949084,1.181586,3],[4,26041735,1.242967,3],[4,26041735,1.304348,3],[4,17949084,0.966752,3],[4,26041735,1.488491,3],[4,26041735,1.519182,3],[4,26041735,1.672634,3],[4,26041735,1.703325,3],[4,26041735,2.132992,3],[4,26041735,2.317136,3],[4,26041735,2.531969,3],[4,6951379,1.611253,3],[4,6951379,1.703325,3],[4,6951379,1.97954,3],[4,6951379,2.378517,3],[4,6951379,3.023018,3],[4,6951379,3.14578,3],[4,22514169,0.659847,3],[4,6951379,3.820972,3],[4,6951379,4.250639,3],[4,22514169,1.150895,3],[4,6951379,4.373402,3],[4,22514169,1.273657,3],[4,22514169,1.335038,3],[4,22514169,1.396419,3],[4,17949084,2.286445,3],[4,17949084,2.194373,3],[4,26041735,0.751918,3],[4,26041735,0.782609,3],[4,26041735,0.84399,3],[4,21476650,2.286445,3],[4,21476650,2.439898,3],[4,21476650,2.56266,3],[4,21476650,2.808184,3],[4,21476650,2.961637,3],[4,21476650,3.329923,3],[4,21476650,3.606138,3],[4,21476650,3.820972,3],[4,4461333,2.040921,3],[4,4461333,2.01023,3],[4,4461333,1.948849,3],[4,4461333,1.703325,3],[4,4461333,1.611253,3],[4,20646634,1.242967,3],[4,20646634,1.212276,3],[4,4461333,1.519182,3],[4,20646634,0.87468,3],[4,20646634,0.84399,3],[4,5083845,1.42711,3],[4,1556279,0.29156,3],[4,5083845,1.826087,3],[4,1556279,0.690537,3],[4,1556279,0.905371,3],[4,21476650,0.966752,3],[4,1556279,1.150895,3],[4,21476650,1.058824,3],[4,5083845,1.97954,3],[4,21476650,1.335038,3],[4,21476650,1.519182,3],[4,1556279,1.549872,3],[4,21476650,1.580563,3],[4,21476650,1.672634,3],[4,4461333,2.624041,3],[4,5083845,2.378517,3],[4,21476650,1.887468,3],[4,5083845,2.409207,3],[4,21476650,2.102302,3],[4,5291348,1.365729,3],[4,20439130,2.040921,3],[4,20439130,1.795396,3],[4,20439130,1.703325,3],[4,20439130,1.457801,3],[4,20439130,1.028133,3],[4,20439130,0.537084,3],[4,5291348,1.611253,3],[4,5291348,1.641944,3],[4,5291348,1.672634,3],[4,5291348,1.918159,3],[4,5291348,1.948849,3],[4,5291348,2.163683,3],[4,5291348,2.194373,3],[4,5291348,2.225064,3],[4,5291348,2.409207,3],[4,5291348,2.777494,3],[4,5291348,2.838875,3],[4,4461333,1.273657,3],[4,4461333,1.120205,3],[4,20646634,0.659847,3],[4,20646634,0.629156,3],[4,4461333,1.028133,3],[4,4461333,0.782609,3],[4,4461333,0.751918,3],[4,4461333,0.721228,3],[4,4461333,0.690537,3],[4,1556279,2.255754,3],[4,4461333,0.29156,3],[4,1556279,2.531969,3],[4,20439130,3.452685,3],[4,4461333,0.046036,3],[4,5291348,0.782609,3],[4,20439130,3.11509,3],[4,5291348,0.905371,3],[4,5291348,0.936061,3],[4,5291348,1.242967,3],[4,21269146,2.409207,3],[4,4668837,1.948849,3],[4,4668837,2.040921,3],[4,21269146,3.084399,3],[4,4668837,2.439898,3],[4,4668837,2.470588,3],[4,4668837,2.501279,3],[4,4668837,2.685422,3],[4,4668837,2.930946,3],[4,4668837,3.452685,3],[4,21061642,2.163683,3],[4,21061642,1.826087,3],[4,21061642,1.120205,3],[4,21061642,1.058824,3],[4,25419223,0.29156,3],[4,25419223,0.445013,3],[4,25419223,0.782609,3],[4,25419223,1.089514,3],[4,21269146,1.028133,3],[4,21269146,1.181586,3],[4,21269146,1.242967,3],[4,21269146,0.751918,3],[4,4668837,0.567775,3],[4,4668837,0.598465,3],[4,4668837,0.721228,3],[4,21269146,1.734015,3],[4,21269146,1.764706,3],[4,4668837,0.905371,3],[4,21269146,1.948849,3],[4,4668837,0.997442,3],[4,21269146,2.040921,3],[4,4668837,1.120205,3],[4,4668837,1.242967,3],[4,21269146,2.194373,3],[4,21269146,2.225064,3],[4,4668837,1.42711,3],[4,21269146,2.378517,3],[4,20854138,2.56266,3],[4,20854138,1.396419,3],[4,20854138,1.365729,3],[4,20854138,1.150895,3],[4,20854138,1.028133,3],[4,20854138,0.966752,3],[4,20854138,0.905371,3],[4,20854138,0.84399,3],[4,25419223,3.391304,3],[4,5083845,0.168798,3],[4,25419223,3.483376,3],[4,5083845,0.475703,3],[4,25419223,3.882353,3],[4,5083845,0.751918,3],[4,5083845,0.813299,3],[4,25419223,4.097187,3],[4,5083845,1.058824,3],[4,5083845,1.181586,3],[4,5083845,1.212276,3],[4,25419223,1.120205,3],[4,25419223,1.150895,3],[4,25419223,1.273657,3],[4,25419223,1.396419,3],[4,25419223,1.42711,3],[4,25419223,1.519182,3],[4,25419223,1.580563,3],[4,25419223,1.764706,3],[4,4876341,0.751918,3],[4,4876341,0.813299,3],[4,4876341,1.120205,3],[4,4876341,1.181586,3],[4,4876341,1.457801,3],[4,4876341,1.488491,3],[4,4876341,1.611253,3],[4,4876341,1.887468,3],[4,4876341,2.071611,3],[4,4876341,2.685422,3],[4,4876341,2.930946,3],[4,21891657,1.058824,3],[4,21891657,1.089514,3],[4,21891657,1.304348,3],[4,21891657,1.365729,3],[4,19609115,3.176471,3],[4,21891657,1.549872,3],[4,19609115,3.11509,3],[4,21891657,1.641944,3],[4,19609115,3.084399,3],[4,25211719,2.685422,3],[4,19609115,3.053708,3],[4,21891657,1.887468,3],[4,21891657,2.071611,3],[4,19609115,2.838875,3],[4,19609115,2.654731,3],[4,19609115,2.624041,3],[4,19609115,2.347826,3],[4,19609115,2.255754,3],[4,19816619,2.194373,3],[4,4253829,0.813299,3],[4,19816619,1.918159,3],[4,19816619,1.887468,3],[4,19816619,1.734015,3],[4,4253829,0.322251,3],[4,4253829,0.29156,3],[4,4253829,0.107417,3],[4,25626727,2.347826,3],[4,19816619,1.304348,3],[4,19816619,1.273657,3],[4,19816619,0.936061,3],[4,19816619,0.813299,3],[4,19609115,4.895141,3],[4,21891657,0.383632,3],[4,21891657,0.659847,3],[4,21891657,0.782609,3],[4,21891657,0.813299,3],[4,21891657,0.997442,3],[4,5913860,0.936061,3],[4,5913860,1.549872,3],[4,5913860,1.826087,3],[4,19401611,2.961637,3],[4,19401611,2.900256,3],[4,19401611,2.040921,3],[4,19401611,1.887468,3],[4,19401611,1.703325,3],[4,19401611,1.519182,3],[4,19401611,1.42711,3],[4,19401611,1.212276,3],[4,19401611,0.475703,3],[4,6121364,0.905371,3],[4,6121364,1.089514,3],[4,6121364,1.181586,3],[4,6121364,1.273657,3],[4,6121364,1.641944,3],[4,6121364,1.856777,3],[4,6121364,2.286445,3],[4,19609115,2.194373,3],[4,21891657,2.777494,3],[4,19609115,2.102302,3],[4,19609115,2.071611,3],[4,21891657,3.053708,3],[4,19609115,1.918159,3],[4,21891657,3.14578,3],[4,19609115,1.887468,3],[4,19609115,1.795396,3],[4,19609115,1.549872,3],[4,21891657,3.544757,3],[4,19609115,1.396419,3],[4,19609115,1.273657,3],[4,19609115,1.028133,3],[4,21891657,3.7289,3],[4,19609115,0.751918,3],[4,19609115,0.690537,3],[4,19609115,0.414322,3],[4,5913860,0.690537,3],[4,21684154,0.690537,3],[4,5498852,1.42711,3],[4,5498852,1.488491,3],[4,21684154,0.966752,3],[4,5498852,1.734015,3],[4,21684154,1.120205,3],[4,5498852,1.795396,3],[4,5498852,1.948849,3],[4,25211719,4.588235,3],[4,21684154,1.488491,3],[4,21684154,1.549872,3],[4,21684154,1.641944,3],[4,5498852,2.132992,3],[4,21684154,1.856777,3],[4,21684154,2.685422,3],[4,21684154,2.716113,3],[4,21684154,2.746803,3],[4,21684154,3.084399,3],[4,5291348,3.207161,3],[4,5291348,3.606138,3],[4,20231627,2.163683,3],[4,20231627,1.948849,3],[4,20231627,1.672634,3],[4,20231627,1.42711,3],[4,20231627,1.365729,3],[4,20231627,1.242967,3],[4,20231627,1.089514,3],[4,20231627,0.936061,3],[4,5498852,0.383632,3],[4,5498852,0.598465,3],[4,5498852,0.966752,3],[4,21684154,0.322251,3],[4,21684154,0.383632,3],[4,5498852,1.365729,3],[4,21684154,0.567775,3],[4,21684154,0.629156,3],[4,5498852,1.396419,3],[4,25626727,1.089514,3],[4,5706356,0.690537,3],[4,5706356,0.721228,3],[4,5706356,0.813299,3],[4,4253829,3.790281,3],[4,5706356,0.905371,3],[4,25626727,1.826087,3],[4,5706356,1.242967,3],[4,5706356,1.273657,3],[4,5706356,1.335038,3],[4,5706356,1.396419,3],[4,5706356,1.519182,3],[4,5706356,1.580563,3],[4,5706356,1.703325,3],[4,4253829,1.948849,3],[4,19816619,3.575448,3],[4,4253829,1.795396,3],[4,4253829,1.488491,3],[4,4253829,1.242967,3],[4,20024123,2.59335,3],[4,20024123,2.040921,3],[4,20024123,1.641944,3],[4,1348775,1.519182,3],[4,20024123,1.212276,3],[4,1348775,1.365729,3],[4,1348775,1.335038,3],[4,20024123,1.058824,3],[4,20024123,0.905371,3],[4,1348775,1.120205,3],[4,1348775,1.058824,3],[4,1348775,0.936061,3],[4,1348775,0.87468,3],[4,1348775,0.782609,3],[4,1348775,0.537084,3],[4,1348775,0.506394,3],[4,1348775,0.322251,3],[4,25626727,0.813299,3],[4,25626727,1.058824,3],[4,15251534,1.703325,3],[4,26664246,1.795396,3],[4,15251534,1.335038,3],[4,26664246,1.948849,3],[4,26664246,2.071611,3],[4,26664246,2.102302,3],[4,15251534,1.058824,3],[4,26664246,2.163683,3],[4,26664246,2.225064,3],[4,26664246,2.286445,3],[4,26664246,2.317136,3],[4,26664246,2.624041,3],[4,26664246,2.716113,3],[4,23551688,0.29156,3],[4,26664246,3.544757,3],[4,23551688,0.84399,3],[4,23551688,0.936061,3],[4,23551688,1.089514,3],[4,3008806,0.690537,3],[4,3008806,0.537084,3],[4,15459038,1.212276,3],[4,15459038,1.150895,3],[4,518760,2.225064,3],[4,26664246,0.506394,3],[4,26664246,0.537084,3],[4,26664246,0.598465,3],[4,26664246,0.690537,3],[4,26664246,0.87468,3],[4,15459038,0.751918,3],[4,518760,2.194373,3],[4,26664246,1.335038,3],[4,26664246,1.488491,3],[4,26664246,1.519182,3],[4,15251534,2.347826,3],[4,15251534,2.317136,3],[4,15251534,1.826087,3],[4,15251534,1.734015,3],[4,23551688,3.575448,3],[4,9233922,2.132992,3],[4,9233922,2.624041,3],[4,15044030,2.01023,3],[4,518760,1.488491,3],[4,15044030,1.795396,3],[4,26664246,5.017903,3],[4,15044030,1.519182,3],[4,15044030,1.488491,3],[4,15044030,1.42711,3],[4,15044030,1.335038,3],[4,15044030,1.120205,3],[4,26664246,5.478261,3],[4,2801302,5.938619,3],[4,15044030,0.905371,3],[4,2801302,5.754476,3],[4,9441426,0.721228,3],[4,9441426,0.966752,3],[4,518760,1.764706,3],[4,26664246,3.790281,3],[4,26664246,3.820972,3],[4,23551688,1.365729,3],[4,23551688,1.42711,3],[4,9233922,0.537084,3],[4,26664246,4.158568,3],[4,26664246,4.189258,3],[4,26664246,4.465473,3],[4,23551688,2.624041,3],[4,9233922,1.396419,3],[4,9233922,1.42711,3],[4,23551688,2.961637,3],[4,9233922,1.519182,3],[4,23551688,3.053708,3],[4,9233922,1.580563,3],[4,23551688,3.207161,3],[4,9233922,1.672634,3],[4,9233922,1.734015,3],[4,23344184,1.089514,3],[4,23344184,1.120205,3],[4,8818914,1.120205,3],[4,8818914,1.242967,3],[4,23344184,1.212276,3],[4,8818914,1.273657,3],[4,23344184,1.304348,3],[4,23344184,1.42711,3],[4,23344184,1.457801,3],[4,8818914,1.672634,3],[4,23344184,1.580563,3],[4,23344184,1.703325,3],[4,8818914,1.734015,3],[4,23344184,2.102302,3],[4,23344184,2.163683,3],[4,8818914,2.378517,3],[4,8818914,2.470588,3],[4,8818914,2.900256,3],[4,15874045,2.040921,3],[4,15874045,1.97954,3],[4,15874045,1.918159,3],[4,15874045,1.734015,3],[4,23344184,0.29156,3],[4,15874045,1.519182,3],[4,15874045,1.396419,3],[4,15874045,1.304348,3],[4,15874045,1.242967,3],[4,15874045,1.150895,3],[4,15874045,1.089514,3],[4,15874045,1.058824,3],[4,8818914,0.905371,3],[4,23344184,0.813299,3],[4,23344184,0.84399,3],[4,23344184,0.87468,3],[4,8818914,0.997442,3],[4,23344184,0.966752,3],[4,8818914,1.089514,3],[4,9026418,2.378517,3],[4,15459038,2.961637,3],[4,3008806,2.255754,3],[4,15459038,2.624041,3],[4,15459038,2.531969,3],[4,3008806,1.703325,3],[4,15459038,1.97954,3],[4,15459038,1.948849,3],[4,3008806,1.457801,3],[4,15459038,1.887468,3],[4,15459038,1.856777,3],[4,3008806,1.242967,3],[4,3008806,1.181586,3],[4,15459038,1.641944,3],[4,3008806,0.966752,3],[4,15459038,1.611253,3],[4,15459038,1.549872,3],[4,15459038,1.457801,3],[4,23344184,2.808184,3],[4,8818914,3.421995,3],[4,15666542,2.378517,3],[4,15666542,2.132992,3],[4,15666542,2.01023,3],[4,15666542,1.887468,3],[4,15666542,1.273657,3],[4,15666542,1.150895,3],[4,15666542,0.966752,3],[4,15666542,0.905371,3],[4,15666542,0.84399,3],[4,15666542,0.782609,3],[4,9026418,0.997442,3],[4,9026418,1.335038,3],[4,9026418,1.611253,3],[4,9026418,1.703325,3],[4,9026418,1.856777,3],[4,9026418,2.102302,3],[4,9026418,2.163683,3],[4,2593798,3.913043,3],[4,14214015,1.580563,3],[4,14214015,1.549872,3],[4,2593798,3.483376,3],[4,14214015,1.273657,3],[4,14214015,1.058824,3],[4,2593798,2.930946,3],[4,2593798,2.900256,3],[4,2593798,2.470588,3],[4,26871750,4.83376,3],[4,10063937,1.519182,3],[4,10063937,1.948849,3],[4,10063937,2.163683,3],[4,10063937,2.317136,3],[4,23966696,1.058824,3],[4,23966696,1.304348,3],[4,23966696,1.42711,3],[4,23966696,1.457801,3],[4,9856433,4.28133,3],[4,9856433,6.061381,3],[4,9856433,6.153453,3],[4,26871750,2.838875,3],[4,26871750,2.961637,3],[4,26871750,3.483376,3],[4,10063937,0.84399,3],[4,26871750,3.636829,3],[4,26871750,3.667519,3],[4,14214015,2.56266,3],[4,14214015,2.470588,3],[4,2593798,4.526854,3],[4,2593798,4.496164,3],[4,14214015,2.255754,3],[4,14214015,2.040921,3],[4,26871750,3.913043,3],[4,10063937,1.304348,3],[4,14214015,1.795396,3],[4,14214015,1.764706,3],[4,26871750,6.184143,3],[4,2593798,0.322251,3],[4,2593798,0.29156,3],[4,2593798,0.138107,3],[4,2593798,0.076726,3],[4,2593798,0.046036,3],[4,2593798,0.015345,3],[4,10271441,0.813299,3],[4,10271441,0.87468,3],[4,10271441,0.936061,3],[4,10271441,0.966752,3],[4,10271441,1.242967,3],[4,10271441,1.304348,3],[4,10271441,1.488491,3],[4,10271441,1.519182,3],[4,10271441,1.734015,3],[4,10271441,2.409207,3],[4,10271441,2.439898,3],[4,23966696,1.488491,3],[4,23966696,1.734015,3],[4,23966696,1.918159,3],[4,14006511,2.900256,3],[4,14006511,2.746803,3],[4,2593798,1.611253,3],[4,23966696,2.685422,3],[4,14006511,2.347826,3],[4,14006511,2.071611,3],[4,2593798,1.335038,3],[4,2593798,1.304348,3],[4,2593798,1.212276,3],[4,2593798,1.058824,3],[4,14006511,1.580563,3],[4,2593798,0.598465,3],[4,2593798,0.567775,3],[4,2593798,0.506394,3],[4,14006511,1.120205,3],[4,26871750,6.061381,3],[4,14836526,1.672634,3],[4,2801302,1.365729,3],[4,2801302,1.335038,3],[4,14836526,1.457801,3],[4,14836526,1.396419,3],[4,14836526,1.365729,3],[4,2801302,0.966752,3],[4,14836526,1.242967,3],[4,2801302,0.813299,3],[4,14836526,1.028133,3],[4,2801302,0.629156,3],[4,14836526,0.936061,3],[4,14836526,0.813299,3],[4,2801302,0.506394,3],[4,2801302,0.383632,3],[4,9648930,0.813299,3],[4,9648930,0.966752,3],[4,9648930,1.058824,3],[4,9441426,1.028133,3],[4,9441426,1.120205,3],[4,9441426,1.242967,3],[4,9441426,1.335038,3],[4,2801302,4.803069,3],[4,9441426,1.734015,3],[4,9441426,1.918159,3],[4,9441426,2.194373,3],[4,9441426,2.225064,3],[4,9441426,2.255754,3],[4,9441426,2.470588,3],[4,2801302,3.943734,3],[4,2801302,3.636829,3],[4,2801302,2.654731,3],[4,2801302,2.624041,3],[4,2801302,2.347826,3],[4,2801302,2.255754,3],[4,14836526,1.918159,3],[4,14836526,1.764706,3],[4,26871750,0.629156,3],[4,26871750,0.721228,3],[4,26871750,0.87468,3],[4,26871750,0.997442,3],[4,9648930,5.969309,3],[4,26871750,1.212276,3],[4,9856433,1.058824,3],[4,26871750,2.378517,3],[4,9856433,1.519182,3],[4,9856433,1.549872,3],[4,9856433,1.641944,3],[4,9856433,1.887468,3],[4,9856433,1.918159,3],[4,26871750,2.685422,3],[4,9856433,2.102302,3],[4,9856433,3.667519,3],[4,14421518,0.046036,3],[4,2593798,7.350384,3],[4,14421518,0.015345,3],[4,2801302,0.230179,3],[4,9648930,1.150895,3],[4,9648930,1.457801,3],[4,9648930,1.519182,3],[4,9648930,2.163683,3],[4,23759192,1.058824,3],[4,23759192,1.150895,3],[4,14629022,2.378517,3],[4,14629022,2.317136,3],[4,14629022,2.040921,3],[4,14629022,1.580563,3],[4,14629022,1.028133,3],[4,14629022,0.966752,3],[4,14629022,0.813299,3],[4,26871750,0.168798,3],[4,23759192,2.132992,3],[4,26871750,0.475703,3],[4,14629022,0.598465,3],[4,26871750,0.537084,3],[4,16704061,1.335038,3],[4,16704061,1.304348,3],[4,16704061,1.089514,3],[4,16704061,0.87468,3],[4,8196403,0.598465,3],[4,8196403,0.84399,3],[4,8196403,0.87468,3],[4,8196403,0.997442,3],[4,726264,1.795396,3],[4,726264,1.703325,3],[4,8196403,1.181586,3],[4,8196403,1.273657,3],[4,8196403,1.396419,3],[4,726264,1.549872,3],[4,8196403,1.549872,3],[4,8196403,1.672634,3],[4,8196403,1.734015,3],[4,8196403,1.795396,3],[4,7988899,0.537084,3],[4,7988899,0.905371,3],[4,7988899,1.365729,3],[4,7988899,1.396419,3],[4,7988899,1.641944,3],[4,7988899,1.672634,3],[4,7988899,1.795396,3],[4,7988899,1.856777,3],[4,7988899,1.948849,3],[4,7988899,1.97954,3],[4,7988899,2.040921,3],[4,7988899,2.286445,3],[4,7988899,2.347826,3],[4,7988899,2.716113,3],[4,7988899,2.869565,3],[4,7988899,3.237852,3],[4,7988899,4.28133,3],[4,16704061,1.887468,3],[4,16704061,1.519182,3],[4,16496557,1.580563,3],[4,16496557,1.519182,3],[4,16496557,1.488491,3],[4,16496557,1.335038,3],[4,16496557,0.997442,3],[4,16496557,0.813299,3],[4,16496557,0.690537,3],[4,16496557,0.445013,3],[4,8196403,4.005115,3],[4,23136681,0.659847,3],[4,25004215,1.826087,3],[4,25004215,1.764706,3],[4,25004215,1.703325,3],[4,25004215,1.488491,3],[4,26456742,0.87468,3],[4,23136681,1.242967,3],[4,25004215,1.42711,3],[4,25004215,1.304348,3],[4,8196403,1.826087,3],[4,8196403,1.856777,3],[4,8196403,1.918159,3],[4,8196403,2.163683,3],[4,8196403,2.194373,3],[4,8196403,2.409207,3],[4,8196403,2.439898,3],[4,8196403,2.470588,3],[4,726264,1.212276,3],[4,8196403,2.56266,3],[4,8196403,2.961637,3],[4,8196403,2.992327,3],[4,8196403,3.053708,3],[4,16496557,2.624041,3],[4,16496557,2.378517,3],[4,16496557,2.286445,3],[4,16496557,1.703325,3],[4,16496557,1.641944,3],[4,16496557,1.611253,3],[4,7573891,4.158568,3],[4,7573891,4.219949,3],[4,17119069,2.624041,3],[4,17119069,2.501279,3],[4,17119069,2.071611,3],[4,17119069,2.040921,3],[4,17119069,2.01023,3],[4,26249238,1.335038,3],[4,17119069,1.641944,3],[4,17119069,1.549872,3],[4,17119069,1.519182,3],[4,26249238,1.488491,3],[4,17119069,1.242967,3],[4,26249238,1.764706,3],[4,26249238,1.918159,3],[4,26249238,2.132992,3],[4,26249238,2.716113,3],[4,7781395,0.690537,3],[4,7573891,1.365729,3],[4,7573891,1.611253,3],[4,7573891,1.795396,3],[4,17326572,2.317136,3],[4,7573891,1.918159,3],[4,7573891,1.97954,3],[4,7573891,2.01023,3],[4,17326572,1.672634,3],[4,17326572,1.273657,3],[4,26249238,0.84399,3],[4,7573891,2.194373,3],[4,7573891,2.347826,3],[4,7573891,3.023018,3],[4,7573891,3.053708,3],[4,26249238,1.058824,3],[4,7573891,3.667519,3],[4,7573891,4.005115,3],[4,7573891,4.066496,3],[4,7573891,4.097187,3],[4,1763783,0.598465,3],[4,1763783,0.659847,3],[4,1763783,0.84399,3],[4,1763783,0.936061,3],[4,1763783,1.028133,3],[4,22929177,0.506394,3],[4,1763783,1.335038,3],[4,7781395,3.790281,3],[4,22929177,1.058824,3],[4,22929177,1.335038,3],[4,7781395,4.588235,3],[4,22929177,1.519182,3],[4,1763783,1.887468,3],[4,16911565,1.549872,3],[4,16911565,1.488491,3],[4,16911565,1.335038,3],[4,16911565,1.304348,3],[4,16911565,0.997442,3],[4,7781395,1.120205,3],[4,7781395,1.150895,3],[4,3423814,2.225064,3],[4,7781395,1.304348,3],[4,7781395,1.335038,3],[4,7781395,1.42711,3],[4,7781395,1.457801,3],[4,3423814,1.918159,3],[4,7781395,1.549872,3],[4,3423814,1.641944,3],[4,3423814,1.549872,3],[4,7781395,1.795396,3],[4,3423814,1.457801,3],[4,7781395,2.071611,3],[4,3423814,1.181586,3],[4,3423814,1.089514,3],[4,7781395,2.439898,3],[4,1763783,0.322251,3],[4,1763783,0.445013,3],[4,8403906,2.347826,3],[4,8403906,2.501279,3],[4,8403906,2.930946,3],[4,8403906,3.207161,3],[4,3216310,1.273657,3],[4,8403906,3.483376,3],[4,25004215,0.936061,3],[4,3216310,1.519182,3],[4,3216310,1.611253,3],[4,16289053,2.040921,3],[4,16081549,1.396419,3],[4,3216310,1.856777,3],[4,3216310,2.102302,3],[4,26456742,1.948849,3],[4,16289053,2.654731,3],[4,16081549,1.242967,3],[4,16081549,1.058824,3],[4,16081549,0.997442,3],[4,25004215,1.028133,3],[4,8611410,0.445013,3],[4,26456742,1.611253,3],[4,25004215,1.089514,3],[4,26456742,1.488491,3],[4,16289053,1.150895,3],[4,16289053,1.212276,3],[4,16289053,1.365729,3],[4,16289053,1.058824,3],[4,3216310,0.598465,3],[4,16289053,0.997442,3],[4,26456742,2.132992,3],[4,16289053,0.813299,3],[4,26456742,2.808184,3],[4,16289053,1.519182,3],[4,25004215,0.414322,3],[4,25004215,0.475703,3],[4,8403906,1.549872,3],[4,25004215,0.506394,3],[4,8403906,1.672634,3],[4,8403906,1.734015,3],[4,8403906,1.764706,3],[4,8403906,1.918159,3],[4,8403906,2.071611,3],[4,8403906,2.102302,3],[4,16289053,1.611253,3],[4,8403906,2.132992,3],[4,8403906,2.194373,3],[4,3216310,1.150895,3],[4,26456742,1.396419,3],[4,8611410,1.273657,3],[4,8611410,1.734015,3],[4,8611410,1.856777,3],[4,8611410,2.102302,3],[4,26456742,1.365729,3],[4,26456742,1.335038,3],[4,26456742,1.212276,3],[4,8611410,2.132992,3],[4,8611410,2.317136,3],[4,8611410,2.409207,3],[4,23136681,1.457801,3],[4,8611410,2.501279,3],[4,8611410,2.531969,3],[4,8611410,2.59335,3],[4,8611410,2.654731,3],[4,8611410,2.746803,3],[4,8611410,2.900256,3],[4,8611410,3.023018,3],[4,8611410,3.053708,3],[4,8611410,3.759591,3],[4,15874045,2.501279,3],[4,23136681,2.071611,3],[4,8611410,1.242967,3],[4,8611410,1.181586,3],[4,23136681,2.225064,3],[4,23136681,2.255754,3],[4,1763783,0.690537,4],[4,25834231,1.120205,4],[4,1556279,0.26087,4],[4,1556279,0.199488,4],[4,26871750,3.237852,4],[4,26249238,0.567775,4],[4,311256,1.948849,4],[4,26871750,3.329923,4],[4,933767,1.457801,4],[4,26249238,0.690537,4],[4,24796711,0.782609,4],[4,26249238,0.813299,4],[4,1971287,0.475703,4],[4,1971287,0.629156,4],[4,26249238,1.273657,4],[4,1556279,0.751918,4],[4,26456742,2.746803,4],[4,1556279,0.997442,4],[4,933767,0.905371,4],[4,1763783,1.120205,4],[4,933767,0.537084,4],[4,25211719,1.120205,4],[4,24796711,0.997442,4],[4,1556279,1.396419,4],[4,25419223,0.997442,4],[4,25419223,0.966752,4],[4,311256,1.672634,4],[4,25419223,0.84399,4],[4,25211719,0.690537,4],[4,24796711,0.015345,4],[4,25419223,1.918159,4],[4,24796711,0.076726,4],[4,25834231,1.42711,4],[4,25834231,1.028133,4],[4,26871750,4.588235,4],[4,25834231,1.519182,4],[4,933767,1.826087,4],[4,24796711,0.230179,4],[4,26871750,4.066496,4],[4,25211719,0.29156,4],[4,25834231,1.304348,4],[4,24796711,0.383632,4],[4,25419223,0.414322,4],[4,24796711,0.445013,4],[4,25211719,0.230179,4],[4,26871750,5.754476,4],[4,24796711,0.506394,4],[4,25419223,1.304348,4],[4,103752,0.659847,4],[4,25834231,0.782609,4],[4,1971287,0.168798,4],[4,311256,2.531969,4],[4,25419223,2.624041,4],[4,25419223,3.084399,4],[4,933767,2.102302,4],[4,933767,1.641944,4],[4,26249238,0.905371,4],[4,25211719,1.549872,4],[4,25419223,1.242967,4],[4,25419223,0.690537,4],[4,26664246,3.360614,4],[4,26664246,3.329923,4],[4,26664246,3.14578,4],[4,518760,1.948849,4],[4,26664246,2.777494,4],[4,26456742,1.42711,4],[4,518760,2.102302,4],[4,25004215,1.181586,4],[4,726264,0.751918,4],[4,726264,0.997442,4],[4,726264,1.058824,4],[4,1348775,1.826087,4],[4,518760,0.87468,4],[4,726264,1.120205,4],[4,726264,1.181586,4],[4,726264,1.242967,4],[4,25626727,2.225064,4],[4,26456742,1.641944,4],[4,311256,0.721228,4],[4,726264,1.335038,4],[4,26456742,1.826087,4],[4,26664246,1.826087,4],[4,311256,0.905371,4],[4,311256,0.936061,4],[4,311256,0.966752,4],[4,25626727,1.120205,4],[4,25626727,1.335038,4],[4,26456742,0.966752,4],[4,25626727,0.905371,4],[4,25004215,1.396419,4],[4,25626727,0.782609,4],[4,25626727,0.751918,4],[4,25626727,0.629156,4],[4,25626727,0.199488,4],[4,518760,1.672634,4],[4,25626727,1.519182,4],[4,25626727,1.549872,4],[4,1348775,0.629156,4],[4,1348775,0.751918,4],[4,26664246,4.31202,4],[4,518760,1.611253,4],[4,518760,1.703325,4],[4,1348775,1.028133,4],[4,25004215,1.273657,4],[4,25004215,1.549872,4],[4,26456742,0.997442,4],[4,26664246,3.69821,4],[4,26456742,1.058824,4],[4,1348775,1.42711,4],[4,25626727,1.918159,4],[4,26664246,3.421995,4],[4,1971287,1.242967,4],[4,1141271,0.87468,4],[4,518760,2.378517,4],[4,26041735,0.997442,4],[4,25004215,0.537084,4],[4,26871750,0.230179,4],[4,1556279,2.071611,4],[4,26871750,0.26087,4],[4,26041735,1.120205,4],[4,26871750,0.567775,4],[4,24796711,1.212276,4],[4,24796711,1.120205,4],[4,26871750,0.936061,4],[4,1971287,1.028133,4],[4,26871750,1.089514,4],[4,26041735,1.580563,4],[4,1556279,1.856777,4],[4,26041735,1.641944,4],[4,26871750,1.611253,4],[4,26871750,1.887468,4],[4,1971287,0.997442,4],[4,103752,1.304348,4],[4,1141271,1.672634,4],[4,1763783,1.918159,4],[4,25834231,1.97954,4],[4,103752,1.150895,4],[4,25626727,2.531969,4],[4,26664246,1.764706,4],[4,726264,1.42711,4],[4,726264,1.488491,4],[4,26664246,1.672634,4],[4,726264,1.580563,4],[4,26664246,1.365729,4],[4,26041735,0.230179,4],[4,24796711,1.611253,4],[4,26664246,1.304348,4],[4,726264,1.887468,4],[4,26664246,1.120205,4],[4,26041735,0.537084,4],[4,25004215,0.87468,4],[4,1141271,0.659847,4],[4,26664246,0.84399,4],[4,25004215,0.84399,4],[4,26664246,0.659847,4],[4,26041735,0.598465,4],[4,25004215,0.782609,4],[4,25004215,0.751918,4],[4,26664246,0.322251,4],[4,26664246,0.29156,4],[4,26664246,0.230179,4],[4,24796711,1.365729,4],[4,25004215,0.567775,4],[4,12138976,1.457801,4],[4,7988899,0.199488,4],[4,12761487,0.076726,4],[4,12138976,0.475703,4],[4,12138976,0.414322,4],[4,13176495,0.199488,4],[4,12138976,0.352941,4],[4,5706356,1.672634,4],[4,5706356,1.734015,4],[4,11308960,0.352941,4],[4,9233922,1.304348,4],[4,20854138,0.475703,4],[4,19609115,1.948849,4],[4,12346480,0.445013,4],[4,3631318,0.629156,4],[4,12138976,0.29156,4],[4,10478945,0.905371,4],[4,9233922,1.641944,4],[4,9233922,1.856777,4],[4,3631318,0.813299,4],[4,3631318,0.87468,4],[4,3631318,0.997442,4],[4,12346480,0.659847,4],[4,3631318,1.058824,4],[4,3631318,1.089514,4],[4,3631318,1.242967,4],[4,12346480,0.84399,4],[4,3631318,1.856777,4],[4,20854138,0.751918,4],[4,3631318,2.716113,4],[4,3423814,2.501279,4],[4,7988899,1.089514,4],[4,18156588,1.672634,4],[4,22721673,1.058824,4],[4,5083845,0.506394,4],[4,5083845,0.445013,4],[4,7988899,1.028133,4],[4,18156588,1.549872,4],[4,22721673,0.84399,4],[4,5083845,0.352941,4],[4,7988899,0.936061,4],[4,18156588,1.212276,4],[4,18156588,1.150895,4],[4,7988899,0.813299,4],[4,18156588,1.089514,4],[4,22721673,0.537084,4],[4,5083845,0.230179,4],[4,5083845,0.138107,4],[4,22721673,0.322251,4],[4,18156588,0.87468,4],[4,19609115,1.457801,4],[4,18156588,0.84399,4],[4,6328868,2.716113,4],[4,12761487,0.107417,4],[4,19609115,1.703325,4],[4,13591503,1.641944,4],[4,10478945,1.549872,4],[4,13176495,0.352941,4],[4,10478945,1.335038,4],[4,11723968,0.29156,4],[4,19816619,3.421995,4],[4,6951379,1.396419,4],[4,4876341,0.782609,4],[4,11723968,0.138107,4],[4,4876341,0.721228,4],[4,4876341,0.690537,4],[4,3838821,0.352941,4],[4,6951379,1.488491,4],[4,6328868,0.29156,4],[4,15044030,1.580563,4],[4,15044030,1.304348,4],[4,4876341,0.629156,4],[4,13176495,0.905371,4],[4,19609115,3.14578,4],[4,4876341,0.352941,4],[4,11308960,0.782609,4],[4,11308960,0.936061,4],[4,13176495,1.488491,4],[4,3838821,0.936061,4],[4,3838821,0.966752,4],[4,11308960,1.304348,4],[4,3838821,1.120205,4],[4,19816619,1.672634,4],[4,11308960,1.42711,4],[4,3838821,1.795396,4],[4,4876341,0.26087,4],[4,3838821,2.132992,4],[4,3838821,3.851662,4],[4,22306665,2.501279,4],[4,11308960,1.549872,4],[4,3631318,3.176471,4],[4,3631318,3.268542,4],[4,20854138,0.782609,4],[4,22514169,1.304348,4],[4,22514169,1.089514,4],[4,20854138,0.936061,4],[4,16911565,0.782609,4],[4,19609115,2.378517,4],[4,22514169,0.936061,4],[4,20854138,1.120205,4],[4,16911565,1.120205,4],[4,16911565,1.273657,4],[4,20854138,1.273657,4],[4,20854138,1.611253,4],[4,22514169,0.475703,4],[4,16911565,2.040921,4],[4,19609115,2.439898,4],[4,4876341,1.519182,4],[4,19609115,2.470588,4],[4,10478945,0.813299,4],[4,7781395,1.826087,4],[4,7781395,1.734015,4],[4,7781395,1.365729,4],[4,7781395,1.058824,4],[4,15044030,1.734015,4],[4,10478945,0.598465,4],[4,6951379,1.181586,4],[4,4876341,1.028133,4],[4,9856433,0.905371,4],[4,6951379,1.212276,4],[4,19194107,0.936061,4],[4,9648930,1.181586,4],[4,12138976,2.01023,4],[4,9648930,0.84399,4],[4,8196403,1.028133,4],[4,8196403,0.936061,4],[4,8196403,0.721228,4],[4,12138976,1.488491,4],[4,11931472,0.015345,4],[4,19609115,0.905371,4],[4,8196403,0.537084,4],[4,11723968,2.439898,4],[4,22929177,1.97954,4],[4,8196403,0.506394,4],[4,13591503,1.150895,4],[4,19609115,0.936061,4],[4,8196403,0.352941,4],[4,11516464,0.138107,4],[4,9648930,0.721228,4],[4,22929177,1.580563,4],[4,22929177,1.549872,4],[4,19194107,0.629156,4],[4,22929177,1.365729,4],[4,22929177,1.242967,4],[4,9856433,1.335038,4],[4,8196403,0.046036,4],[4,12761487,1.365729,4],[4,12761487,0.966752,4],[4,5706356,0.751918,4],[4,20646634,0.26087,4],[4,23136681,2.194373,4],[4,18364092,2.071611,4],[4,18364092,1.97954,4],[4,23136681,1.396419,4],[4,18364092,1.856777,4],[4,18364092,1.457801,4],[4,23136681,1.304348,4],[4,23136681,1.273657,4],[4,23136681,1.181586,4],[4,23136681,1.089514,4],[4,23136681,1.058824,4],[4,5706356,0.598465,4],[4,23136681,0.997442,4],[4,8196403,2.808184,4],[4,5291348,0.598465,4],[4,23136681,0.84399,4],[4,23136681,0.813299,4],[4,5291348,0.567775,4],[4,8196403,2.501279,4],[4,19194107,1.089514,4],[4,18364092,1.273657,4],[4,19609115,0.629156,4],[4,5291348,0.506394,4],[4,8196403,1.887468,4],[4,9648930,1.611253,4],[4,8196403,1.641944,4],[4,8196403,1.519182,4],[4,23136681,0.352941,4],[4,5291348,0.352941,4],[4,9648930,1.42711,4],[4,13591503,1.519182,4],[4,16704061,1.273657,4],[4,16704061,1.42711,4],[4,16704061,1.549872,4],[4,16704061,2.163683,4],[4,7988899,3.084399,4],[4,7988899,2.531969,4],[4,5083845,0.905371,4],[4,7988899,2.225064,4],[4,3423814,0.84399,4],[4,6951379,0.782609,4],[4,7988899,1.764706,4],[4,3423814,0.966752,4],[4,7988899,1.580563,4],[4,3423814,1.028133,4],[4,7988899,1.488491,4],[4,7988899,1.457801,4],[4,3423814,1.150895,4],[4,5083845,0.87468,4],[4,3423814,1.242967,4],[4,3423814,1.273657,4],[4,3423814,1.304348,4],[4,3423814,1.335038,4],[4,5706356,0.997442,4],[4,6951379,0.936061,4],[4,5706356,1.028133,4],[4,3423814,1.519182,4],[4,7988899,1.273657,4],[4,5083845,0.690537,4],[4,3423814,2.102302,4],[4,12761487,0.87468,4],[4,12761487,0.782609,4],[4,6743876,4.31202,4],[4,12761487,0.322251,4],[4,22929177,0.659847,4],[4,12761487,0.29156,4],[4,22929177,0.598465,4],[4,22929177,0.567775,4],[4,22929177,0.537084,4],[4,22929177,0.475703,4],[4,5706356,0.84399,4],[4,12761487,0.26087,4],[4,20646634,0.445013,4],[4,20646634,0.475703,4],[4,12346480,0.199488,4],[4,20646634,0.537084,4],[4,12761487,0.199488,4],[4,20646634,0.813299,4],[4,20646634,0.936061,4],[4,16704061,0.690537,4],[4,18986603,0.506394,4],[4,5083845,2.59335,4],[4,5083845,2.225064,4],[4,13591503,1.396419,4],[4,5083845,1.242967,4],[4,13591503,1.42711,4],[4,19609115,1.150895,4],[4,9233922,0.87468,4],[4,16704061,0.905371,4],[4,16704061,1.212276,4],[4,19194107,0.352941,4],[4,7158883,1.795396,4],[4,21684154,2.439898,4],[4,10271441,0.84399,4],[4,7158883,2.59335,4],[4,21684154,1.273657,4],[4,17741580,1.764706,4],[4,21684154,1.212276,4],[4,10893953,0.629156,4],[4,21684154,1.150895,4],[4,12553984,0.168798,4],[4,21684154,0.997442,4],[4,21684154,0.905371,4],[4,21684154,0.84399,4],[4,21684154,0.782609,4],[4,17741580,1.304348,4],[4,17741580,1.273657,4],[4,17741580,1.212276,4],[4,18986603,1.396419,4],[4,18986603,1.335038,4],[4,17741580,1.181586,4],[4,9441426,1.856777,4],[4,21684154,0.29156,4],[4,17534076,0.997442,4],[4,21684154,0.230179,4],[4,14214015,2.071611,4],[4,9441426,1.672634,4],[4,21684154,0.015345,4],[4,18986603,1.212276,4],[4,18986603,1.181586,4],[4,19816619,1.058824,4],[4,7573891,1.028133,4],[4,4668837,1.273657,4],[4,7573891,0.936061,4],[4,4668837,1.212276,4],[4,4668837,0.936061,4],[4,7573891,0.813299,4],[4,7158883,1.028133,4],[4,18986603,4.005115,4],[4,4668837,0.537084,4],[4,7158883,1.365729,4],[4,4668837,0.475703,4],[4,18986603,1.641944,4],[4,7158883,1.457801,4],[4,4668837,0.414322,4],[4,4668837,0.322251,4],[4,4668837,0.29156,4],[4,4253829,0.445013,4],[4,7158883,1.611253,4],[4,10063937,1.150895,4],[4,12553984,0.506394,4],[4,4668837,0.199488,4],[4,12553984,0.29156,4],[4,4253829,1.028133,4],[4,4253829,1.120205,4],[4,7158883,1.641944,4],[4,4253829,1.304348,4],[4,4253829,1.396419,4],[4,4253829,1.549872,4],[4,4253829,1.734015,4],[4,4253829,3.207161,4],[4,13799007,1.028133,4],[4,21269146,1.672634,4],[4,19816619,0.629156,4],[4,17534076,1.457801,4],[4,21269146,2.255754,4],[4,17534076,1.488491,4],[4,17534076,1.549872,4],[4,21269146,2.347826,4],[4,12346480,1.826087,4],[4,17534076,1.611253,4],[4,13799007,1.335038,4],[4,12346480,2.071611,4],[4,17534076,2.071611,4],[4,13799007,2.378517,4],[4,17534076,2.163683,4],[4,12346480,3.69821,4],[4,7366387,2.347826,4],[4,7366387,0.506394,4],[4,21476650,0.414322,4],[4,7366387,0.629156,4],[4,7366387,0.721228,4],[4,7366387,1.887468,4],[4,7366387,0.782609,4],[4,7366387,0.966752,4],[4,13799007,1.580563,4],[4,7366387,1.611253,4],[4,21476650,0.629156,4],[4,13799007,1.734015,4],[4,7366387,1.212276,4],[4,7366387,1.181586,4],[4,9441426,1.549872,4],[4,9441426,1.519182,4],[4,12346480,1.672634,4],[4,10271441,1.058824,4],[4,21269146,0.721228,4],[4,9441426,1.488491,4],[4,10271441,1.212276,4],[4,4461333,0.537084,4],[4,4461333,0.598465,4],[4,4461333,0.629156,4],[4,4461333,0.659847,4],[4,4461333,0.84399,4],[4,4461333,1.181586,4],[4,4461333,1.396419,4],[4,4461333,1.549872,4],[4,4461333,1.764706,4],[4,4461333,1.795396,4],[4,4461333,2.102302,4],[4,4461333,2.317136,4],[4,21476650,2.838875,4],[4,21269146,1.150895,4],[4,21476650,2.163683,4],[4,21476650,2.040921,4],[4,21476650,1.97954,4],[4,21476650,1.948849,4],[4,21476650,1.764706,4],[4,21476650,1.734015,4],[4,21269146,1.335038,4],[4,21476650,1.42711,4],[4,21269146,1.396419,4],[4,21269146,1.457801,4],[4,7573891,3.329923,4],[4,7573891,2.716113,4],[4,14836526,1.304348,4],[4,7573891,2.531969,4],[4,14836526,1.42711,4],[4,10271441,0.567775,4],[4,10271441,0.598465,4],[4,12346480,1.641944,4],[4,12553984,2.071611,4],[4,14836526,1.703325,4],[4,6328868,1.058824,4],[4,19816619,1.365729,4],[4,12553984,1.734015,4],[4,19816619,1.335038,4],[4,4046325,0.26087,4],[4,6328868,1.089514,4],[4,19816619,1.242967,4],[4,21061642,0.629156,4],[4,12553984,1.611253,4],[4,9441426,2.501279,4],[4,12553984,0.966752,4],[4,12553984,0.936061,4],[4,10063937,0.936061,4],[4,10271441,0.659847,4],[4,4046325,0.721228,4],[4,4046325,0.813299,4],[4,12553984,0.84399,4],[4,4046325,0.966752,4],[4,4046325,1.028133,4],[4,4046325,1.089514,4],[4,6951379,2.654731,4],[4,22306665,1.856777,4],[4,22306665,1.764706,4],[4,6951379,6.644501,4],[4,19816619,1.611253,4],[4,22306665,1.42711,4],[4,17949084,2.163683,4],[4,15044030,0.966752,4],[4,22306665,1.120205,4],[4,17949084,1.97954,4],[4,22306665,1.028133,4],[4,19816619,1.580563,4],[4,17949084,1.396419,4],[4,22306665,0.87468,4],[4,22306665,0.813299,4],[4,13176495,1.365729,4],[4,6328868,0.936061,4],[4,12138976,0.168798,4],[4,10271441,0.383632,4],[4,17119069,1.335038,4],[4,19816619,1.549872,4],[4,17119069,1.457801,4],[4,17949084,1.089514,4],[4,17119069,1.734015,4],[4,17119069,1.826087,4],[4,22099161,4.83376,4],[4,14836526,0.87468,4],[4,7573891,3.851662,4],[4,19609115,3.759591,4],[4,14836526,1.058824,4],[4,21061642,2.071611,4],[4,13799007,0.537084,4],[4,21061642,2.102302,4],[4,4046325,2.194373,4],[4,19816619,1.181586,4],[4,4046325,3.759591,4],[4,21891657,2.286445,4],[4,4668837,2.194373,4],[4,21891657,2.102302,4],[4,4668837,2.163683,4],[4,7573891,1.856777,4],[4,21891657,1.273657,4],[4,21891657,1.212276,4],[4,21891657,1.150895,4],[4,7573891,1.826087,4],[4,4668837,2.132992,4],[4,4668837,1.734015,4],[4,7158883,0.997442,4],[4,21891657,0.87468,4],[4,21891657,0.751918,4],[4,4668837,1.549872,4],[4,21891657,0.690537,4],[4,7573891,1.580563,4],[4,11516464,0.997442,4],[4,21891657,0.537084,4],[4,7573891,1.457801,4],[4,4668837,1.396419,4],[4,7573891,1.150895,4],[4,21891657,0.352941,4],[4,7573891,1.089514,4],[4,19609115,4.31202,4],[4,12553984,0.813299,4],[4,10271441,0.721228,4],[4,4046325,1.549872,4],[4,7158883,0.659847,4],[4,22099161,1.457801,4],[4,22099161,1.365729,4],[4,7158883,0.690537,4],[4,22099161,1.273657,4],[4,9441426,2.286445,4],[4,22099161,1.181586,4],[4,22099161,1.150895,4],[4,22099161,1.089514,4],[4,22099161,1.058824,4],[4,12553984,0.721228,4],[4,22099161,0.813299,4],[4,22099161,0.690537,4],[4,7158883,0.87468,4],[4,21061642,1.242967,4],[4,6328868,1.42711,4],[4,21061642,1.304348,4],[4,21061642,1.335038,4],[4,12553984,0.537084,4],[4,17326572,1.120205,4],[4,21061642,1.396419,4],[4,17326572,1.396419,4],[4,21061642,1.488491,4],[4,17326572,1.580563,4],[4,17326572,1.703325,4],[4,17326572,1.826087,4],[4,17326572,1.918159,4],[4,11101457,0.199488,4],[4,10686449,0.751918,4],[4,2178791,0.629156,4],[4,18571596,0.997442,4],[4,10686449,0.659847,4],[4,12968991,1.856777,4],[4,6121364,0.629156,4],[4,10686449,0.567775,4],[4,6536372,1.42711,4],[4,6536372,1.335038,4],[4,14006511,2.869565,4],[4,6536372,1.242967,4],[4,6536372,1.212276,4],[4,2178791,0.506394,4],[4,12968991,2.501279,4],[4,2178791,0.475703,4],[4,18779099,0.997442,4],[4,2178791,0.352941,4],[4,10893953,2.225064,4],[4,19401611,0.168798,4],[4,2593798,3.421995,4],[4,2593798,3.820972,4],[4,2593798,4.618926,4],[4,23759192,1.365729,4],[4,23759192,1.335038,4],[4,6536372,2.071611,4],[4,13383999,0.445013,4],[4,2178791,1.181586,4],[4,18571596,1.488491,4],[4,2178791,1.089514,4],[4,18779099,1.641944,4],[4,8611410,1.120205,4],[4,23966696,1.212276,4],[4,8611410,1.058824,4],[4,23966696,0.966752,4],[4,6536372,1.611253,4],[4,10686449,1.181586,4],[4,8611410,0.997442,4],[4,8611410,0.936061,4],[4,14421518,0.537084,4],[4,8611410,0.84399,4],[4,8611410,0.721228,4],[4,15666542,0.997442,4],[4,18571596,1.058824,4],[4,10686449,1.089514,4],[4,19401611,2.347826,4],[4,10686449,0.87468,4],[4,18571596,1.028133,4],[4,12968991,1.641944,4],[4,12968991,1.734015,4],[4,11101457,0.138107,4],[4,12968991,1.058824,4],[4,12968991,1.611253,4],[4,16081549,1.488491,4],[4,16081549,1.641944,4],[4,16081549,1.918159,4],[4,8403906,2.531969,4],[4,18571596,0.629156,4],[4,13591503,0.506394,4],[4,8403906,2.255754,4],[4,8403906,1.887468,4],[4,8403906,1.856777,4],[4,6121364,0.813299,4],[4,8403906,1.703325,4],[4,14006511,1.918159,4],[4,8403906,1.641944,4],[4,11516464,1.212276,4],[4,5913860,1.304348,4],[4,10063937,1.335038,4],[4,2801302,0.352941,4],[4,8403906,1.457801,4],[4,2801302,0.475703,4],[4,13383999,0.322251,4],[4,2801302,0.598465,4],[4,14006511,1.795396,4],[4,2801302,1.181586,4],[4,14006511,2.501279,4],[4,11516464,2.132992,4],[4,10893953,1.580563,4],[4,14006511,2.102302,4],[4,10893953,1.488491,4],[4,10893953,1.396419,4],[4,15459038,1.058824,4],[4,12968991,0.629156,4],[4,23759192,0.690537,4],[4,14006511,2.01023,4],[4,5913860,1.764706,4],[4,13176495,0.629156,4],[4,12968991,0.659847,4],[4,6121364,0.659847,4],[4,16081549,0.84399,4],[4,18779099,1.795396,4],[4,2178791,0.138107,4],[4,16081549,0.966752,4],[4,16081549,1.028133,4],[4,16081549,1.089514,4],[4,12968991,0.721228,4],[4,12138976,2.255754,4],[4,16081549,1.212276,4],[4,13176495,2.132992,4],[4,6536372,1.058824,4],[4,16081549,1.304348,4],[4,24381704,1.150895,4],[4,2386294,0.87468,4],[4,2386294,0.936061,4],[4,2386294,1.519182,4],[4,2386294,2.01023,4],[4,2386294,2.040921,4],[4,18571596,2.961637,4],[4,2386294,2.56266,4],[4,2386294,2.59335,4],[4,24381704,1.181586,4],[4,2386294,3.023018,4],[4,8818914,1.519182,4],[4,2386294,3.11509,4],[4,20024123,0.936061,4],[4,24174200,3.268542,4],[4,5498852,1.611253,4],[4,24381704,1.580563,4],[4,2178791,6.828645,4],[4,24174200,1.580563,4],[4,24174200,1.549872,4],[4,18779099,1.273657,4],[4,24381704,2.01023,4],[4,24174200,1.396419,4],[4,24174200,1.365729,4],[4,19401611,2.01023,4],[4,24381704,0.598465,4],[4,8818914,1.028133,4],[4,8818914,0.936061,4],[4,24381704,0.475703,4],[4,6536372,3.11509,4],[4,19401611,1.488491,4],[4,24381704,0.383632,4],[4,20024123,1.181586,4],[4,6536372,2.654731,4],[4,15459038,0.966752,4],[4,19401611,1.734015,4],[4,20024123,1.549872,4],[4,8818914,1.335038,4],[4,20024123,2.01023,4],[4,18571596,3.084399,4],[4,12968991,0.230179,4],[4,12968991,0.046036,4],[4,2386294,0.076726,4],[4,20024123,0.966752,4],[4,5498852,1.918159,4],[4,8818914,1.457801,4],[4,24381704,1.028133,4],[4,5498852,1.764706,4],[4,24381704,1.089514,4],[4,2386294,0.751918,4],[4,2386294,0.84399,4],[4,13383999,1.089514,4],[4,10686449,1.948849,4],[4,18571596,2.102302,4],[4,2178791,1.641944,4],[4,10686449,1.365729,4],[4,18571596,2.071611,4],[4,2386294,8.2711,4],[4,10063937,2.255754,4],[4,2593798,0.168798,4],[4,2178791,1.519182,4],[4,2593798,0.230179,4],[4,2593798,0.26087,4],[4,2593798,0.383632,4],[4,5498852,0.751918,4],[4,18779099,1.181586,4],[4,2178791,1.457801,4],[4,8611410,1.795396,4],[4,2178791,1.42711,4],[4,15666542,1.764706,4],[4,2593798,0.905371,4],[4,2178791,1.335038,4],[4,8611410,1.703325,4],[4,10063937,1.42711,4],[4,2593798,1.120205,4],[4,2593798,1.181586,4],[4,2593798,1.273657,4],[4,24174200,1.150895,4],[4,15874045,0.813299,4],[4,24174200,0.997442,4],[4,18779099,1.580563,4],[4,6536372,2.409207,4],[4,15874045,0.87468,4],[4,19401611,2.225064,4],[4,24174200,0.690537,4],[4,15874045,1.028133,4],[4,2178791,2.716113,4],[4,15874045,1.212276,4],[4,15874045,1.335038,4],[4,24174200,0.567775,4],[4,15874045,1.42711,4],[4,2178791,2.624041,4],[4,8611410,4.250639,4],[4,2178791,2.071611,4],[4,13383999,0.721228,4],[4,2178791,1.97954,4],[4,13383999,0.751918,4],[4,20024123,0.782609,4],[4,18779099,1.212276,4],[4,8611410,2.286445,4],[4,8611410,2.040921,4],[4,20024123,0.751918,4],[4,8611410,1.918159,4],[4,23344184,0.475703,4],[4,6743876,0.87468,4],[4,6743876,0.966752,4],[4,23344184,0.352941,4],[4,14006511,1.150895,4],[4,20439130,0.690537,4],[4,23344184,0.168798,4],[4,5291348,1.549872,4],[4,11101457,0.997442,4],[4,24589208,0.782609,4],[4,20439130,0.84399,4],[4,10893953,1.150895,4],[4,11101457,1.273657,4],[4,11101457,1.856777,4],[4,9026418,2.01023,4],[4,12761487,2.869565,4],[4,6743876,1.457801,4],[4,10893953,1.089514,4],[4,12761487,2.470588,4],[4,14214015,0.721228,4],[4,15459038,1.826087,4],[4,18779099,0.659847,4],[4,10893953,1.058824,4],[4,10893953,1.028133,4],[4,14214015,0.659847,4],[4,23344184,1.549872,4],[4,24589208,0.352941,4],[4,23344184,1.488491,4],[4,18779099,1.948849,4],[4,14629022,1.611253,4],[4,14629022,1.672634,4],[4,9026418,1.519182,4],[4,14629022,1.734015,4],[4,23344184,0.997442,4],[4,23344184,0.936061,4],[4,9026418,1.580563,4],[4,9648930,2.59335,4],[4,9648930,2.071611,4],[4,9026418,1.641944,4],[4,24589208,0.475703,4],[4,6121364,1.150895,4],[4,9026418,1.734015,4],[4,9648930,1.918159,4],[4,9026418,1.826087,4],[4,23344184,0.629156,4],[4,24589208,0.659847,4],[4,6121364,1.304348,4],[4,6743876,0.690537,4],[4,9026418,1.97954,4],[4,19194107,1.335038,4],[4,20439130,2.317136,4],[4,3216310,0.87468,4],[4,24589208,1.672634,4],[4,3216310,0.936061,4],[4,5291348,1.181586,4],[4,5291348,1.150895,4],[4,8196403,3.391304,4],[4,3216310,0.966752,4],[4,3216310,0.997442,4],[4,24589208,1.918159,4],[4,3216310,1.028133,4],[4,6743876,2.163683,4],[4,19194107,1.304348,4],[4,6743876,2.716113,4],[4,3216310,1.242967,4],[4,8196403,3.14578,4],[4,5291348,1.028133,4],[4,5291348,0.997442,4],[4,3216310,2.255754,4],[4,23136681,2.654731,4],[4,6743876,2.777494,4],[4,23136681,2.470588,4],[4,23136681,2.378517,4],[4,23136681,2.347826,4],[4,3216310,0.383632,4],[4,6121364,2.01023,4],[4,18986603,0.138107,4],[4,6743876,1.703325,4],[4,16496557,0.659847,4],[4,19609115,0.29156,4],[4,20439130,1.089514,4],[4,20439130,1.120205,4],[4,20439130,1.150895,4],[4,3216310,0.721228,4],[4,20439130,1.304348,4],[4,16496557,1.028133,4],[4,19194107,2.317136,4],[4,12761487,2.286445,4],[4,15459038,1.304348,4],[4,16496557,1.365729,4],[4,19194107,2.194373,4],[4,19609115,0.475703,4],[4,8196403,3.514066,4],[4,12761487,1.948849,4],[4,24589208,1.42711,4],[4,5291348,1.396419,4],[4,12761487,1.795396,4],[4,24589208,1.641944,4],[4,10893953,0.997442,4],[4,20231627,0.87468,4],[4,23551688,0.445013,4],[4,15251534,1.242967,4],[4,9026418,0.84399,4],[4,24589208,0.076726,4],[4,5913860,1.181586,4],[4,9026418,0.905371,4],[4,5913860,1.120205,4],[4,23551688,0.230179,4],[4,15251534,1.150895,4],[4,5913860,1.089514,4],[4,14629022,1.396419,4],[4,20231627,1.519182,4],[4,15251534,1.120205,4],[4,13383999,0.199488,4],[4,5913860,1.028133,4],[4,16289053,1.120205,4],[4,20231627,1.549872,4],[4,16289053,1.396419,4],[4,9026418,1.089514,4],[4,8403906,0.966752,4],[4,16289053,1.97954,4],[4,5291348,2.685422,4],[4,14629022,1.089514,4],[4,9026418,0.475703,4],[4,14006511,1.672634,4],[4,14006511,1.519182,4],[4,20231627,0.598465,4],[4,20231627,0.629156,4],[4,14629022,1.150895,4],[4,2801302,2.869565,4],[4,2801302,3.790281,4],[4,2801302,4.219949,4],[4,2801302,5.048593,4],[4,11516464,1.273657,4],[4,2801302,5.232737,4],[4,14006511,1.42711,4],[4,23551688,2.654731,4],[4,23551688,2.470588,4],[4,8403906,1.150895,4],[4,5913860,1.242967,4],[4,8403906,1.058824,4],[4,10893953,1.181586,4],[4,23551688,0.721228,4],[4,20231627,0.813299,4],[4,23551688,0.629156,4],[4,18779099,0.721228,4],[4,5291348,1.856777,4],[4,24589208,0.322251,4],[4,14629022,1.457801,4],[4,9026418,1.365729,4],[4,3008806,0.936061,4],[4,8403906,0.567775,4],[4,11516464,0.383632,4],[4,3008806,0.506394,4],[4,9856433,1.396419,4],[4,15251534,0.997442,4],[4,15251534,0.87468,4],[4,8403906,0.690537,4],[4,3008806,1.089514,4],[4,5913860,0.905371,4],[4,8403906,0.813299,4],[4,3008806,1.120205,4],[4,3008806,0.813299,4],[4,9026418,1.396419,4],[4,3008806,0.29156,4],[4,14006511,1.335038,4],[4,3008806,1.580563,4],[4,8403906,0.383632,4],[4,3008806,1.611253,4],[4,9441426,1.457801,5],[4,20024123,0.26087,5],[4,25626727,0.445013,5],[4,7158883,2.102302,5],[4,1348775,0.659847,5],[4,26871750,0.751918,5],[4,7158883,2.194373,5],[4,7366387,1.028133,5],[4,10271441,1.150895,5],[4,1348775,0.138107,5],[4,6536372,2.01023,5],[4,18779099,0.414322,5],[4,10271441,1.028133,5],[4,21269146,1.641944,5],[4,25626727,0.537084,5],[4,6536372,0.721228,5],[4,19816619,1.089514,5],[4,1141271,0.782609,5],[4,1348775,0.475703,5],[4,1141271,0.751918,5],[4,20024123,1.028133,5],[4,21269146,0.936061,5],[4,1348775,1.242967,5],[4,6536372,0.87468,5],[4,20024123,0.997442,5],[4,17741580,1.519182,5],[4,6536372,1.948849,5],[4,19816619,0.84399,5],[4,21269146,1.058824,5],[4,1141271,0.629156,5],[4,6536372,0.629156,5],[4,6536372,0.598465,5],[4,21269146,1.97954,5],[4,21476650,0.230179,5],[4,11516464,1.089514,5],[4,25626727,1.028133,5],[4,4668837,0.383632,5],[4,6536372,1.150895,5],[4,21269146,0.475703,5],[4,25626727,0.721228,5],[4,17741580,0.936061,5],[4,6536372,0.383632,5],[4,10271441,2.746803,5],[4,4668837,0.168798,5],[4,9441426,1.089514,5],[4,14214015,0.537084,5],[4,20024123,0.690537,5],[4,17741580,0.138107,5],[4,26871750,0.29156,5],[4,12346480,1.887468,5],[4,21269146,1.304348,5],[4,18779099,0.966752,5],[4,11516464,0.567775,5],[4,4668837,0.230179,5],[4,7158883,1.97954,5],[4,14629022,0.322251,5],[4,21269146,1.089514,5],[4,11516464,1.519182,5],[4,20024123,0.537084,5],[4,1348775,0.199488,5],[4,7366387,0.598465,5],[4,25626727,0.352941,5],[4,1141271,0.537084,5],[4,25626727,0.29156,5],[4,6536372,0.506394,5],[4,7366387,0.445013,5],[4,4668837,0.076726,5],[4,18986603,0.966752,5],[4,9441426,1.365729,5],[4,4668837,0.751918,5],[4,7158883,1.273657,5],[4,14629022,0.567775,5],[4,6536372,2.225064,5],[4,6536372,1.120205,5],[4,19816619,1.028133,5],[4,11516464,0.598465,5],[4,12138976,1.396419,5],[4,20231627,0.84399,5],[4,11516464,0.414322,5],[4,20231627,1.058824,5],[4,18156588,0.905371,5],[4,5706356,1.304348,5],[4,14006511,0.598465,5],[4,18156588,1.028133,5],[4,20231627,1.150895,5],[4,18156588,1.488491,5],[4,20231627,1.764706,5],[4,20231627,1.97954,5],[4,14629022,1.42711,5],[4,18986603,0.659847,5],[4,18156588,1.795396,5],[4,5291348,2.808184,5],[4,5291348,2.654731,5],[4,5291348,1.887468,5],[4,11516464,0.322251,5],[4,14006511,1.365729,5],[4,14006511,1.948849,5],[4,11516464,2.624041,5],[4,4876341,1.703325,5],[4,4876341,2.225064,5],[4,6951379,1.120205,5],[4,6951379,1.089514,5],[4,14214015,1.519182,5],[4,13176495,0.813299,5],[4,20854138,1.058824,5],[4,6951379,1.058824,5],[4,5706356,1.764706,5],[4,12346480,0.690537,5],[4,20854138,0.659847,5],[4,12346480,0.598465,5],[4,12346480,0.567775,5],[4,14629022,1.120205,5],[4,14629022,1.181586,5],[4,12138976,0.383632,5],[4,103752,1.42711,5],[4,13176495,0.230179,5],[4,25626727,1.365729,5],[4,20439130,0.966752,5],[4,14006511,0.690537,5],[4,18986603,0.352941,5],[4,14006511,0.782609,5],[4,14006511,0.813299,5],[4,5291348,1.519182,5],[4,20439130,1.396419,5],[4,11516464,0.199488,5],[4,5291348,1.488491,5],[4,14006511,0.905371,5],[4,12138976,1.856777,5],[4,14006511,0.997442,5],[4,9648930,1.304348,5],[4,6743876,2.040921,5],[4,14006511,1.028133,5],[4,18364092,1.028133,5],[4,18364092,1.089514,5],[4,5291348,1.273657,5],[4,5291348,0.629156,5],[4,18364092,1.396419,5],[4,5291348,0.87468,5],[4,11516464,0.26087,5],[4,6951379,0.751918,5],[4,6951379,0.659847,5],[4,5083845,1.028133,5],[4,18986603,0.567775,5],[4,9648930,0.567775,5],[4,5083845,1.335038,5],[4,5083845,1.764706,5],[4,5083845,2.194373,5],[4,14006511,1.242967,5],[4,18779099,7.780051,5],[4,6743876,0.659847,5],[4,5706356,0.87468,5],[4,25626727,1.457801,5],[4,6743876,1.028133,5],[4,20439130,0.751918,5],[4,20439130,0.813299,5],[4,12346480,0.138107,5],[4,9648930,1.734015,5],[4,11516464,0.046036,5],[4,20439130,0.936061,5],[4,7158883,0.629156,5],[4,21061642,0.751918,5],[4,7158883,0.567775,5],[4,5498852,1.028133,5],[4,14214015,1.150895,5],[4,26041735,2.746803,5],[4,21061642,0.537084,5],[4,18571596,2.163683,5],[4,9441426,3.421995,5],[4,7158883,0.230179,5],[4,5498852,0.87468,5],[4,14836526,1.120205,5],[4,18571596,1.826087,5],[4,14836526,0.997442,5],[4,18571596,1.703325,5],[4,5498852,0.690537,5],[4,14836526,0.84399,5],[4,17949084,0.598465,5],[4,19816619,1.488491,5],[4,17949084,0.905371,5],[4,6536372,2.685422,5],[4,20024123,1.150895,5],[4,10063937,1.488491,5],[4,20024123,1.365729,5],[4,20024123,1.396419,5],[4,20024123,1.580563,5],[4,11516464,1.058824,5],[4,21061642,1.641944,5],[4,21061642,1.580563,5],[4,5498852,1.856777,5],[4,21061642,1.42711,5],[4,21061642,1.365729,5],[4,21061642,1.150895,5],[4,21061642,1.089514,5],[4,7158883,0.782609,5],[4,6536372,6.429668,5],[4,5498852,1.273657,5],[4,21061642,0.905371,5],[4,21061642,0.813299,5],[4,5498852,1.089514,5],[4,5498852,1.058824,5],[4,18571596,1.089514,5],[4,25834231,0.87468,5],[4,26041735,0.445013,5],[4,26041735,0.322251,5],[4,5498852,0.230179,5],[4,4876341,0.322251,5],[4,26871750,0.015345,5],[4,19816619,1.703325,5],[4,18571596,0.936061,5],[4,26041735,0.138107,5],[4,6951379,2.01023,5],[4,6951379,1.580563,5],[4,6951379,1.519182,5],[4,18571596,0.84399,5],[4,14006511,2.56266,5],[4,18779099,1.703325,5],[4,11516464,1.826087,5],[4,4876341,0.997442,5],[4,14006511,2.040921,5],[4,4876341,1.242967,5],[4,6951379,1.150895,5],[4,26041735,1.212276,5],[4,17949084,1.150895,5],[4,17949084,1.273657,5],[4,25419223,0.659847,5],[4,17949084,1.304348,5],[4,5498852,0.659847,5],[4,17949084,1.335038,5],[4,18571596,1.519182,5],[4,26041735,1.028133,5],[4,21061642,0.168798,5],[4,21061642,0.138107,5],[4,18571596,1.212276,5],[4,26041735,0.966752,5],[4,5498852,0.475703,5],[4,26041735,0.87468,5],[4,5498852,0.352941,5],[4,26041735,0.813299,5],[4,17949084,2.01023,5],[4,26041735,0.721228,5],[4,26041735,0.690537,5],[4,13176495,1.028133,5],[4,11101457,0.659847,5],[4,15251534,0.751918,5],[4,6121364,1.242967,5],[4,23344184,0.537084,5],[4,23344184,0.506394,5],[4,23344184,0.414322,5],[4,26456742,0.659847,5],[4,26456742,0.598465,5],[4,6121364,1.580563,5],[4,19609115,0.107417,5],[4,311256,0.322251,5],[4,26664246,3.023018,5],[4,311256,0.537084,5],[4,3216310,0.26087,5],[4,19609115,0.199488,5],[4,6121364,2.255754,5],[4,16496557,0.598465,5],[4,3216310,0.567775,5],[4,16496557,0.87468,5],[4,6121364,2.716113,5],[4,3216310,0.751918,5],[4,3216310,0.782609,5],[4,16496557,0.966752,5],[4,16496557,1.304348,5],[4,12761487,2.040921,5],[4,12761487,1.826087,5],[4,518760,1.795396,5],[4,12761487,1.580563,5],[4,726264,0.475703,5],[4,25004215,0.629156,5],[4,726264,0.813299,5],[4,726264,0.87468,5],[4,2801302,2.716113,5],[4,2801302,3.299233,5],[4,8403906,1.304348,5],[4,5913860,1.273657,5],[4,15251534,1.365729,5],[4,11101457,0.537084,5],[4,26664246,1.918159,5],[4,6121364,0.84399,5],[4,16289053,0.506394,5],[4,16289053,0.690537,5],[4,16289053,0.936061,5],[4,6121364,0.966752,5],[4,16289053,1.242967,5],[4,16289053,1.273657,5],[4,16289053,1.488491,5],[4,8403906,0.905371,5],[4,8403906,0.87468,5],[4,8403906,0.84399,5],[4,3008806,0.567775,5],[4,3008806,0.659847,5],[4,8403906,0.414322,5],[4,8403906,0.352941,5],[4,8403906,0.29156,5],[4,26456742,1.304348,5],[4,23344184,1.795396,5],[4,6121364,1.058824,5],[4,23344184,1.181586,5],[4,23344184,1.150895,5],[4,23344184,1.058824,5],[4,5913860,0.782609,5],[4,5913860,0.751918,5],[4,26456742,1.028133,5],[4,311256,0.997442,5],[4,8196403,0.322251,5],[4,3423814,0.537084,5],[4,19194107,0.598465,5],[4,22929177,0.87468,5],[4,22929177,0.84399,5],[4,9856433,1.273657,5],[4,22929177,0.721228,5],[4,26664246,3.913043,5],[4,9233922,0.567775,5],[4,1763783,0.966752,5],[4,12761487,0.230179,5],[4,13591503,1.335038,5],[4,9233922,0.629156,5],[4,518760,1.641944,5],[4,9233922,0.721228,5],[4,22929177,0.168798,5],[4,103752,0.751918,5],[4,311256,1.150895,5],[4,311256,1.212276,5],[4,1763783,0.629156,5],[4,19609115,1.120205,5],[4,1763783,0.567775,5],[4,1763783,0.506394,5],[4,9856433,1.242967,5],[4,16704061,1.150895,5],[4,16704061,1.365729,5],[4,13591503,1.549872,5],[4,11723968,0.383632,5],[4,7988899,2.102302,5],[4,3423814,1.212276,5],[4,3423814,1.365729,5],[4,726264,1.028133,5],[4,25004215,0.966752,5],[4,8196403,3.11509,5],[4,23136681,1.856777,5],[4,25004215,1.242967,5],[4,23136681,1.42711,5],[4,23136681,1.335038,5],[4,25004215,1.365729,5],[4,23136681,1.028133,5],[4,23136681,0.936061,5],[4,23136681,0.905371,5],[4,726264,1.150895,5],[4,19609115,0.567775,5],[4,8196403,2.225064,5],[4,23136681,0.598465,5],[4,23136681,0.537084,5],[4,23136681,0.506394,5],[4,9856433,1.365729,5],[4,8196403,1.488491,5],[4,23136681,0.322251,5],[4,23136681,0.29156,5],[4,8196403,1.42711,5],[4,8196403,1.212276,5],[4,726264,1.672634,5],[4,8196403,1.150895,5],[4,8196403,1.089514,5],[4,8196403,1.058824,5],[4,8196403,0.905371,5],[4,19194107,0.690537,5],[4,311256,0.84399,5],[4,311256,0.87468,5],[4,13591503,1.181586,5],[4,24796711,0.629156,5],[4,2178791,0.537084,5],[4,14421518,0.199488,5],[4,19401611,1.335038,5],[4,24796711,0.813299,5],[4,2178791,0.751918,5],[4,24796711,0.905371,5],[4,15666542,1.242967,5],[4,2178791,0.782609,5],[4,2178791,0.87468,5],[4,2178791,0.997442,5],[4,2178791,1.120205,5],[4,24796711,1.150895,5],[4,15666542,1.396419,5],[4,24796711,1.242967,5],[4,24796711,1.273657,5],[4,24796711,1.42711,5],[4,24796711,1.457801,5],[4,15666542,2.040921,5],[4,24796711,1.580563,5],[4,2178791,1.703325,5],[4,8818914,1.826087,5],[4,2178791,2.869565,5],[4,24381704,1.549872,5],[4,8818914,1.396419,5],[4,24381704,0.905371,5],[4,24381704,0.813299,5],[4,8818914,1.212276,5],[4,24381704,0.721228,5],[4,24381704,0.659847,5],[4,24381704,0.445013,5],[4,19401611,1.580563,5],[4,1971287,1.918159,5],[4,24589208,1.519182,5],[4,15459038,1.181586,5],[4,24589208,1.150895,5],[4,1971287,1.273657,5],[4,15459038,1.335038,5],[4,19401611,0.813299,5],[4,19401611,0.84399,5],[4,1971287,1.150895,5],[4,15459038,2.685422,5],[4,24589208,0.506394,5],[4,1971287,0.690537,5],[4,9026418,1.242967,5],[4,19401611,0.690537,5],[4,1971287,0.506394,5],[4,518760,2.255754,5],[4,13383999,0.26087,5],[4,9026418,0.813299,5],[4,9026418,0.721228,5],[4,9026418,0.659847,5],[4,13176495,0.721228,5],[4,13383999,0.29156,5],[4,19401611,0.997442,5],[4,15459038,1.089514,5],[4,2178791,0.107417,5],[4,19401611,0.29156,5],[4,24796711,0.168798,5],[4,2178791,0.199488,5],[4,26664246,0.26087,5],[4,19401611,1.150895,5],[4,26664246,0.352941,5],[4,24796711,0.598465,5],[4,8611410,1.028133,5],[4,8611410,0.629156,5],[4,8611410,0.567775,5],[4,8611410,0.383632,5],[4,10686449,0.721228,5],[4,10686449,0.690537,5],[4,11101457,0.230179,5],[4,103752,0.230179,5],[4,11101457,0.322251,5],[4,10686449,0.445013,5],[4,10893953,1.887468,5],[4,23759192,1.120205,5],[4,16081549,0.322251,5],[4,23759192,0.997442,5],[4,23759192,0.936061,5],[4,23759192,0.87468,5],[4,23759192,0.721228,5],[4,19401611,3.820972,5],[4,16081549,0.751918,5],[4,16081549,0.782609,5],[4,16081549,0.905371,5],[4,16081549,1.120205,5],[4,5913860,1.42711,5],[4,13591503,0.659847,5],[4,2801302,0.322251,5],[4,2801302,0.659847,5],[4,2801302,1.856777,5],[4,2801302,1.918159,5],[4,2801302,2.102302,5],[4,15251534,1.457801,5],[4,2801302,2.59335,5],[4,2801302,2.685422,5],[4,26871750,3.084399,5],[4,26664246,0.475703,5],[4,6121364,0.230179,5],[4,12968991,0.537084,5],[4,12968991,0.475703,5],[4,12968991,0.352941,5],[4,26664246,0.751918,5],[4,2386294,0.26087,5],[4,26664246,0.813299,5],[4,2386294,2.409207,5],[4,26664246,0.905371,5],[4,11101457,0.107417,5],[4,24174200,2.194373,5],[4,26664246,1.058824,5],[4,24174200,0.966752,5],[4,24174200,0.936061,5],[4,23966696,1.089514,5],[4,8611410,1.365729,5],[4,8611410,1.396419,5],[4,2593798,1.457801,5],[4,2593798,1.396419,5],[4,2593798,0.721228,5],[4,10686449,1.242967,5],[4,2593798,0.445013,5],[4,2593798,0.414322,5],[4,2593798,0.107417,5],[4,10686449,1.304348,5],[4,10686449,1.519182,5],[4,8611410,1.887468,5],[4,8611410,2.378517,5],[4,8611410,3.14578,5],[4,24174200,0.414322,5],[4,15874045,0.997442,5],[4,12553984,0.598465,5],[4,518760,0.751918,5],[4,17326572,1.150895,5],[4,17326572,1.212276,5],[4,22099161,0.322251,5],[4,17326572,1.519182,5],[4,17326572,1.611253,5],[4,19609115,5.355499,5],[4,17326572,2.194373,5],[4,11723968,0.015345,5],[4,4046325,3.360614,5],[4,21891657,2.163683,5],[4,21891657,1.734015,5],[4,7573891,1.734015,5],[4,19609115,5.601023,5],[4,21891657,0.905371,5],[4,21891657,0.721228,5],[4,7573891,1.42711,5],[4,21891657,0.26087,5],[4,7573891,0.905371,5],[4,7573891,0.87468,5],[4,7573891,0.782609,5],[4,7573891,0.506394,5],[4,7573891,0.445013,5],[4,10063937,1.028133,5],[4,7573891,0.322251,5],[4,7573891,0.199488,5],[4,103752,1.212276,5],[4,4253829,0.26087,5],[4,4253829,0.352941,5],[4,4253829,0.383632,5],[4,4253829,0.475703,5],[4,7573891,3.360614,5],[4,26249238,0.997442,5],[4,7573891,2.624041,5],[4,7573891,2.071611,5],[4,25211719,0.199488,5],[4,12553984,3.084399,5],[4,26249238,0.782609,5],[4,26249238,0.721228,5],[4,26249238,0.659847,5],[4,26249238,0.629156,5],[4,26249238,0.322251,5],[4,10063937,0.87468,5],[4,26249238,0.168798,5],[4,25211719,0.629156,5],[4,25211719,0.659847,5],[4,11516464,0.905371,5],[4,12553984,1.549872,5],[4,12553984,1.457801,5],[4,4046325,0.475703,5],[4,4046325,0.506394,5],[4,4046325,0.751918,5],[4,4046325,1.150895,5],[4,25211719,1.273657,5],[4,4046325,1.795396,5],[4,25211719,1.42711,5],[4,22099161,1.335038,5],[4,22099161,1.242967,5],[4,22099161,1.028133,5],[4,518760,0.905371,5],[4,25211719,1.795396,5],[4,518760,0.84399,5],[4,22099161,0.629156,5],[4,21476650,2.746803,5],[4,1556279,1.795396,5],[4,21476650,2.194373,5],[4,21476650,1.488491,5],[4,19816619,0.598465,5],[4,21476650,1.365729,5],[4,21476650,1.304348,5],[4,13799007,1.120205,5],[4,14214015,1.856777,5],[4,21476650,1.120205,5],[4,1556279,1.120205,5],[4,1556279,1.089514,5],[4,933767,1.611253,5],[4,9856433,0.598465,5],[4,25834231,0.475703,5],[4,17534076,2.01023,5],[4,17534076,2.040921,5],[4,17534076,2.102302,5],[4,25834231,0.537084,5],[4,1556279,0.721228,5],[4,1556279,0.659847,5],[4,1556279,0.629156,5],[4,933767,1.918159,5],[4,1556279,0.567775,5],[4,1556279,0.537084,5],[4,1556279,0.506394,5],[4,7366387,1.948849,5],[4,1556279,0.414322,5],[4,7366387,1.856777,5],[4,7366387,1.703325,5],[4,19816619,0.782609,5],[4,21476650,0.598465,5],[4,14214015,2.102302,5],[4,12553984,0.352941,5],[4,18986603,1.611253,5],[4,518760,0.567775,5],[4,10893953,0.721228,5],[4,21684154,2.992327,5],[4,21684154,2.132992,5],[4,21684154,1.948849,5],[4,21684154,1.457801,5],[4,21684154,1.396419,5],[4,21684154,1.335038,5],[4,19816619,0.26087,5],[4,21684154,1.181586,5],[4,933767,0.230179,5],[4,21684154,0.813299,5],[4,21684154,0.751918,5],[4,4461333,1.918159,5],[4,4461333,1.242967,5],[4,17534076,1.181586,5],[4,4461333,0.506394,5],[4,4461333,0.414322,5],[4,13799007,0.997442,5],[4,933767,1.212276,5],[4,13799007,0.966752,5],[4,933767,1.150895,5],[4,17534076,1.120205,5],[4,933767,1.058824,5],[4,9856433,0.751918,5],[4,933767,0.936061,5],[4,933767,0.813299,5],[4,933767,0.690537,5],[4,21684154,0.445013,5],[4,21684154,0.659847,5],[4,3631318,0.537084,5],[4,10478945,0.936061,5],[4,9233922,1.488491,5],[4,3631318,0.751918,5],[4,3631318,0.936061,5],[4,3631318,1.028133,5],[4,9233922,2.409207,5],[4,3631318,1.273657,5],[4,9856433,1.028133,5],[4,3631318,2.347826,5],[4,22514169,1.457801,5],[4,22514169,1.120205,5],[4,11308960,0.445013,5],[4,15044030,1.856777,5],[4,22514169,0.84399,5],[4,16911565,1.028133,5],[4,22514169,0.782609,5],[4,16911565,1.181586,5],[4,16911565,1.42711,5],[4,16911565,1.519182,5],[4,16911565,1.641944,5],[4,22514169,0.506394,5],[4,7781395,2.961637,5],[4,7781395,2.102302,5],[4,7781395,1.488491,5],[4,311256,2.01023,5],[4,311256,2.040921,5],[4,7781395,0.659847,5],[4,7781395,0.629156,5],[4,7781395,0.598465,5],[4,7781395,0.567775,5],[4,3423814,1.396419,5],[4,7988899,1.120205,5],[4,22721673,1.242967,5],[4,22721673,1.181586,5],[4,7988899,1.058824,5],[4,22721673,0.966752,5],[4,22721673,0.905371,5],[4,7988899,0.997442,5],[4,22721673,0.782609,5],[4,7988899,0.87468,5],[4,7988899,0.84399,5],[4,22721673,0.567775,5],[4,311256,1.396419,5],[4,22721673,0.475703,5],[4,19609115,1.365729,5],[4,22721673,0.414322,5],[4,7988899,0.690537,5],[4,9856433,1.120205,5],[4,9233922,0.997442,5],[4,19194107,0.015345,5],[4,19609115,1.641944,5],[4,10478945,1.150895,5],[4,9233922,1.120205,5],[4,10478945,1.058824,5],[4,10478945,0.997442,5],[4,12761487,0.046036,5],[4,11723968,0.230179,5],[4,11308960,0.26087,5],[4,9233922,1.150895,5],[4,518760,1.549872,5],[4,11308960,0.322251,5],[4,9233922,1.181586,5],[4,22306665,1.948849,5],[4,10063937,0.690537,5],[4,22306665,1.672634,5],[4,22306665,1.611253,5],[4,22306665,1.519182,5],[4,22306665,1.457801,5],[4,11308960,1.641944,5],[4,518760,1.181586,5],[4,19609115,3.360614,5],[4,17119069,0.813299,5],[4,17119069,0.84399,5],[4,17119069,0.87468,5],[4,22306665,0.751918,5],[4,26249238,1.703325,5],[4,6328868,0.87468,5],[4,22306665,0.567775,5],[4,22306665,0.537084,5],[4,17119069,1.212276,5],[4,22306665,0.445013,5],[4,22306665,0.414322,5],[4,17119069,1.304348,5],[4,10063937,0.813299,5],[4,26249238,1.42711,5],[4,103752,0.966752,5],[4,13176495,1.181586,5],[4,17119069,1.488491,5],[4,13176495,1.089514,5],[4,26249238,1.304348,5],[4,103752,1.028133,5],[4,6328868,1.028133,5],[4,103752,1.058824,5],[4,11308960,0.629156,5],[4,11308960,0.84399,5],[4,3838821,1.212276,5],[4,3838821,1.519182,5],[4,15044030,1.242967,5],[4,3838821,1.856777,5],[4,11308960,0.506394,5],[4,5913860,0.567775,5],[4,15044030,1.641944,5],[4,3838821,0.659847,5],[4,3838821,0.629156,5],[4,15044030,1.672634,5],[4,22306665,2.102302,5],[4,6328868,0.598465,5],[4,7781395,0.537084,5],[4,19401611,0.414322,6],[4,6121364,1.028133,6],[4,6121364,0.29156,6],[4,6328868,0.383632,6],[4,6328868,0.414322,6],[4,18986603,0.199488,6],[4,9856433,0.997442,6],[4,25834231,0.629156,6],[4,18779099,0.690537,6],[4,6121364,0.567775,6],[4,25834231,0.567775,6],[4,18986603,0.813299,6],[4,18779099,0.537084,6],[4,18986603,2.255754,6],[4,6121364,0.87468,6],[4,9856433,1.181586,6],[4,19401611,0.721228,6],[4,9856433,1.212276,6],[4,6121364,1.734015,6],[4,18986603,1.304348,6],[4,19194107,0.782609,6],[4,18779099,1.028133,6],[4,18986603,0.29156,6],[4,18986603,1.580563,6],[4,9856433,1.948849,6],[4,6121364,1.396419,6],[4,11516464,0.721228,6],[4,6328868,0.690537,6],[4,6121364,1.887468,6],[4,13176495,0.537084,6],[4,18779099,1.672634,6],[4,6121364,0.598465,6],[4,6328868,0.721228,6],[4,9856433,0.659847,6],[4,6328868,0.751918,6],[4,25834231,1.089514,6],[4,18986603,0.751918,6],[4,9856433,1.089514,6],[4,6121364,0.721228,6],[4,9856433,1.703325,6],[4,19401611,0.322251,6],[4,25834231,0.813299,6],[4,9233922,0.84399,6],[4,9233922,0.782609,6],[4,12761487,0.352941,6],[4,8196403,0.076726,6],[4,8196403,0.230179,6],[4,8196403,0.26087,6],[4,8196403,0.445013,6],[4,8196403,0.659847,6],[4,8196403,0.690537,6],[4,8196403,1.242967,6],[4,8196403,1.335038,6],[4,8196403,1.611253,6],[4,726264,1.365729,6],[4,726264,1.304348,6],[4,8196403,2.777494,6],[4,518760,1.734015,6],[4,10893953,0.905371,6],[4,8196403,3.606138,6],[4,16496557,1.457801,6],[4,16496557,1.058824,6],[4,16496557,0.936061,6],[4,16496557,0.84399,6],[4,16496557,0.414322,6],[4,12761487,2.409207,6],[4,16496557,0.199488,6],[4,518760,1.97954,6],[4,15251534,0.598465,6],[4,26456742,0.506394,6],[4,17119069,0.782609,6],[4,17119069,0.629156,6],[4,518760,1.242967,6],[4,15044030,0.997442,6],[4,15044030,1.150895,6],[4,15044030,1.212276,6],[4,26249238,2.930946,6],[4,7781395,0.199488,6],[4,518760,1.42711,6],[4,7781395,0.414322,6],[4,7781395,0.751918,6],[4,7781395,0.782609,6],[4,7781395,1.948849,6],[4,7781395,3.053708,6],[4,16911565,0.87468,6],[4,15044030,1.948849,6],[4,9233922,1.365729,6],[4,7988899,0.29156,6],[4,9233922,1.089514,6],[4,9233922,1.058824,6],[4,9233922,1.028133,6],[4,7988899,0.475703,6],[4,9233922,0.966752,6],[4,7988899,0.721228,6],[4,7988899,1.181586,6],[4,7988899,1.335038,6],[4,16704061,1.242967,6],[4,16704061,1.120205,6],[4,8611410,0.506394,6],[4,8611410,1.212276,6],[4,15874045,0.936061,6],[4,15874045,0.659847,6],[4,12968991,0.015345,6],[4,12968991,0.414322,6],[4,8818914,0.29156,6],[4,15459038,0.936061,6],[4,26664246,0.445013,6],[4,8818914,0.690537,6],[4,26664246,0.383632,6],[4,8818914,1.181586,6],[4,8818914,1.641944,6],[4,15666542,1.181586,6],[4,15666542,0.813299,6],[4,15666542,0.659847,6],[4,15666542,0.598465,6],[4,15666542,0.352941,6],[4,15666542,0.168798,6],[4,12968991,0.936061,6],[4,9026418,0.383632,6],[4,9026418,0.567775,6],[4,9026418,0.598465,6],[4,9026418,1.028133,6],[4,9026418,1.120205,6],[4,15459038,1.672634,6],[4,15459038,1.519182,6],[4,15459038,1.120205,6],[4,11101457,0.936061,6],[4,15251534,0.659847,6],[4,26456742,0.813299,6],[4,26456742,0.936061,6],[4,15251534,0.782609,6],[4,26456742,1.181586,6],[4,26456742,1.242967,6],[4,15251534,0.813299,6],[4,15251534,0.905371,6],[4,15251534,0.966752,6],[4,8403906,0.751918,6],[4,26664246,2.194373,6],[4,16289053,1.089514,6],[4,16289053,0.966752,6],[4,16289053,0.87468,6],[4,15251534,1.181586,6],[4,16289053,0.629156,6],[4,26664246,1.97954,6],[4,8403906,1.089514,6],[4,8403906,1.273657,6],[4,15251534,1.611253,6],[4,8403906,1.795396,6],[4,8403906,2.439898,6],[4,16081549,1.42711,6],[4,16081549,0.813299,6],[4,16081549,0.659847,6],[4,16081549,0.598465,6],[4,12968991,2.102302,6],[4,6743876,0.506394,6],[4,6743876,0.751918,6],[4,6743876,0.813299,6],[4,6743876,1.672634,6],[4,6743876,1.918159,6],[4,18364092,1.42711,6],[4,9648930,1.089514,6],[4,11516464,0.168798,6],[4,11516464,0.015345,6],[4,12346480,0.015345,6],[4,12346480,0.168798,6],[4,9648930,0.629156,6],[4,9648930,0.598465,6],[4,13176495,0.475703,6],[4,6951379,0.87468,6],[4,18156588,1.887468,6],[4,18156588,1.734015,6],[4,18156588,0.936061,6],[4,18156588,0.782609,6],[4,18156588,0.629156,6],[4,12346480,0.322251,6],[4,12346480,0.383632,6],[4,12346480,0.87468,6],[4,6951379,1.242967,6],[4,6951379,2.286445,6],[4,26041735,0.26087,6],[4,6951379,5.263427,6],[4,26041735,0.659847,6],[4,26871750,0.782609,6],[4,14629022,0.445013,6],[4,14629022,0.475703,6],[4,14629022,0.659847,6],[4,26871750,0.383632,6],[4,6536372,0.445013,6],[4,6536372,0.537084,6],[4,6536372,0.690537,6],[4,6536372,0.905371,6],[4,6536372,1.181586,6],[4,1141271,0.936061,6],[4,1141271,0.26087,6],[4,26871750,0.199488,6],[4,14629022,0.751918,6],[4,26871750,0.138107,6],[4,14629022,0.782609,6],[4,6536372,5.294118,6],[4,18571596,2.470588,6],[4,18571596,2.409207,6],[4,18571596,2.286445,6],[4,18571596,1.181586,6],[4,18571596,1.120205,6],[4,14629022,0.84399,6],[4,14629022,0.936061,6],[4,18571596,0.659847,6],[4,14629022,0.997442,6],[4,14629022,1.242967,6],[4,14629022,1.549872,6],[4,933767,0.567775,6],[4,17534076,0.966752,6],[4,13176495,0.015345,6],[4,10893953,0.506394,6],[4,17534076,0.84399,6],[4,12553984,0.26087,6],[4,7573891,0.046036,6],[4,7573891,0.076726,6],[4,7573891,0.26087,6],[4,7573891,0.352941,6],[4,7573891,0.383632,6],[4,7573891,0.751918,6],[4,7573891,1.519182,6],[4,7573891,1.641944,6],[4,17326572,1.764706,6],[4,12553984,0.659847,6],[4,518760,0.997442,6],[4,12553984,0.905371,6],[4,26249238,0.015345,6],[4,15044030,0.721228,6],[4,26249238,0.230179,6],[4,12553984,1.97954,6],[4,7573891,3.544757,6],[4,17119069,2.102302,6],[4,17119069,1.42711,6],[4,17119069,1.089514,6],[4,17119069,1.058824,6],[4,17119069,0.936061,6],[4,17949084,1.856777,6],[4,17949084,1.212276,6],[4,17949084,0.813299,6],[4,7158883,0.168798,6],[4,7158883,0.322251,6],[4,9441426,2.808184,6],[4,7158883,0.905371,6],[4,7158883,1.181586,6],[4,7158883,1.826087,6],[4,17741580,1.365729,6],[4,9441426,1.611253,6],[4,9441426,1.304348,6],[4,12553984,0.046036,6],[4,7366387,0.475703,6],[4,7366387,0.567775,6],[4,7366387,1.150895,6],[4,7366387,1.488491,6],[4,17534076,2.624041,6],[4,17534076,1.887468,6],[4,17534076,1.826087,6],[4,17534076,1.365729,6],[4,933767,1.335038,6],[4,17534076,1.212276,6],[4,933767,1.273657,6],[4,17534076,1.150895,6],[4,933767,1.028133,6],[4,933767,0.997442,6],[4,933767,0.966752,6],[4,9441426,0.383632,6],[4,22514169,1.028133,6],[4,14006511,1.488491,6],[4,3631318,1.150895,6],[4,3631318,0.782609,6],[4,14006511,1.703325,6],[4,10478945,0.84399,6],[4,3631318,0.445013,6],[4,20231627,0.322251,6],[4,3631318,0.322251,6],[4,14006511,2.531969,6],[4,10063937,2.531969,6],[4,5498852,0.414322,6],[4,22721673,0.721228,6],[4,22721673,0.813299,6],[4,22721673,0.936061,6],[4,3423814,2.746803,6],[4,5498852,0.905371,6],[4,3423814,1.672634,6],[4,5498852,0.997442,6],[4,5498852,1.212276,6],[4,5498852,1.242967,6],[4,5498852,1.580563,6],[4,3423814,1.488491,6],[4,5498852,2.01023,6],[4,5291348,0.966752,6],[4,5291348,1.089514,6],[4,5291348,1.457801,6],[4,3838821,0.721228,6],[4,20439130,1.058824,6],[4,3838821,0.567775,6],[4,20439130,0.905371,6],[4,20439130,0.87468,6],[4,3838821,0.506394,6],[4,3838821,0.475703,6],[4,20439130,0.598465,6],[4,14006511,1.181586,6],[4,3838821,0.29156,6],[4,20439130,0.414322,6],[4,14006511,1.212276,6],[4,11723968,0.199488,6],[4,14006511,1.273657,6],[4,14006511,1.304348,6],[4,22514169,0.690537,6],[4,22514169,0.721228,6],[4,5291348,1.734015,6],[4,5291348,3.483376,6],[4,22514169,0.87468,6],[4,22514169,0.966752,6],[4,20231627,0.966752,6],[4,14214015,0.352941,6],[4,3423814,0.506394,6],[4,103752,0.690537,6],[4,20024123,0.322251,6],[4,103752,0.537084,6],[4,23136681,0.138107,6],[4,103752,0.506394,6],[4,23136681,0.26087,6],[4,23136681,0.414322,6],[4,23136681,0.721228,6],[4,23136681,0.966752,6],[4,3216310,1.488491,6],[4,25004215,0.905371,6],[4,3216310,1.089514,6],[4,3216310,0.84399,6],[4,3216310,0.813299,6],[4,14214015,0.782609,6],[4,25004215,0.322251,6],[4,25004215,0.29156,6],[4,25626727,0.659847,6],[4,3216310,0.445013,6],[4,11516464,1.150895,6],[4,14214015,0.936061,6],[4,23344184,0.046036,6],[4,14214015,1.212276,6],[4,20024123,1.764706,6],[4,20024123,1.120205,6],[4,20024123,1.089514,6],[4,20024123,0.87468,6],[4,3423814,0.905371,6],[4,1763783,0.107417,6],[4,1763783,0.230179,6],[4,1763783,0.26087,6],[4,20024123,0.721228,6],[4,3423814,0.782609,6],[4,1763783,0.352941,6],[4,1763783,0.383632,6],[4,103752,0.782609,6],[4,22929177,0.230179,6],[4,20024123,0.567775,6],[4,1763783,0.87468,6],[4,20024123,0.475703,6],[4,311256,1.120205,6],[4,20024123,0.445013,6],[4,1348775,0.414322,6],[4,22929177,0.751918,6],[4,22929177,0.813299,6],[4,22929177,0.997442,6],[4,311256,1.028133,6],[4,22929177,1.396419,6],[4,1556279,0.138107,6],[4,1556279,0.352941,6],[4,1556279,0.383632,6],[4,4876341,0.506394,6],[4,1556279,0.445013,6],[4,1556279,0.475703,6],[4,1556279,0.813299,6],[4,1556279,0.87468,6],[4,1556279,0.936061,6],[4,13799007,1.396419,6],[4,20854138,0.87468,6],[4,21476650,1.396419,6],[4,4461333,0.966752,6],[4,4461333,0.322251,6],[4,4461333,0.26087,6],[4,13799007,0.87468,6],[4,21684154,0.076726,6],[4,21684154,0.107417,6],[4,21684154,0.199488,6],[4,21684154,0.26087,6],[4,21684154,0.506394,6],[4,21684154,0.537084,6],[4,21684154,1.028133,6],[4,25211719,4.741688,6],[4,14006511,0.475703,6],[4,10271441,0.475703,6],[4,25419223,0.26087,6],[4,10271441,0.751918,6],[4,4668837,1.641944,6],[4,4668837,0.84399,6],[4,4668837,0.690537,6],[4,4668837,0.629156,6],[4,4668837,0.445013,6],[4,10271441,0.782609,6],[4,21269146,0.383632,6],[4,25419223,0.567775,6],[4,10271441,0.414322,6],[4,21269146,0.506394,6],[4,21269146,0.598465,6],[4,25419223,0.936061,6],[4,10271441,0.199488,6],[4,25419223,1.058824,6],[4,25419223,1.212276,6],[4,21476650,0.383632,6],[4,4876341,0.199488,6],[4,21476650,0.537084,6],[4,13799007,2.163683,6],[4,13176495,0.936061,6],[4,13799007,1.795396,6],[4,13799007,1.672634,6],[4,20646634,0.721228,6],[4,22099161,0.84399,6],[4,20646634,0.383632,6],[4,22099161,0.936061,6],[4,4046325,0.445013,6],[4,4046325,0.414322,6],[4,25211719,0.598465,6],[4,25211719,0.506394,6],[4,20646634,0.138107,6],[4,13799007,0.230179,6],[4,14006511,0.84399,6],[4,13176495,1.058824,6],[4,11723968,0.076726,6],[4,14006511,0.936061,6],[4,311256,2.624041,6],[4,22306665,0.598465,6],[4,14006511,0.966752,6],[4,5291348,0.29156,6],[4,22306665,0.966752,6],[4,5291348,0.414322,6],[4,5291348,0.445013,6],[4,5291348,0.690537,6],[4,22306665,1.549872,6],[4,5291348,0.751918,6],[4,22306665,2.347826,6],[4,4253829,2.746803,6],[4,4253829,0.782609,6],[4,4253829,0.659847,6],[4,4253829,0.567775,6],[4,5083845,0.199488,6],[4,13799007,0.782609,6],[4,5083845,0.322251,6],[4,4253829,0.076726,6],[4,13799007,0.721228,6],[4,13799007,0.659847,6],[4,13799007,0.598465,6],[4,21891657,0.230179,6],[4,21891657,0.414322,6],[4,21891657,0.567775,6],[4,21891657,0.966752,6],[4,21891657,1.396419,6],[4,13799007,0.445013,6],[4,22099161,0.26087,6],[4,22099161,0.29156,6],[4,22099161,0.445013,6],[4,13799007,0.383632,6],[4,22099161,0.537084,6],[4,5083845,1.150895,6],[4,22099161,0.567775,6],[4,13799007,0.352941,6],[4,2593798,1.089514,6],[4,2593798,0.751918,6],[4,13383999,0.782609,6],[4,24174200,0.26087,6],[4,13383999,0.629156,6],[4,24174200,0.659847,6],[4,24174200,0.751918,6],[4,19609115,1.488491,6],[4,19609115,1.42711,6],[4,19609115,1.304348,6],[4,19609115,1.212276,6],[4,2386294,0.721228,6],[4,19609115,1.058824,6],[4,2386294,0.015345,6],[4,19609115,0.87468,6],[4,24381704,0.322251,6],[4,19609115,0.659847,6],[4,24381704,0.352941,6],[4,19609115,0.506394,6],[4,23551688,0.537084,6],[4,23551688,0.567775,6],[4,23551688,0.659847,6],[4,19816619,0.690537,6],[4,23551688,1.028133,6],[4,23551688,2.071611,6],[4,13591503,0.383632,6],[4,23759192,0.383632,6],[4,23759192,0.475703,6],[4,19816619,0.230179,6],[4,10063937,1.120205,6],[4,11516464,1.028133,6],[4,23759192,0.629156,6],[4,23759192,0.813299,6],[4,11516464,0.813299,6],[4,11516464,0.782609,6],[4,23759192,1.089514,6],[4,23966696,1.273657,6],[4,23966696,1.365729,6],[4,23966696,1.826087,6],[4,24796711,0.107417,6],[4,2178791,0.015345,6],[4,19401611,1.795396,6],[4,1971287,0.076726,6],[4,19401611,1.641944,6],[4,1971287,0.138107,6],[4,1971287,0.199488,6],[4,19401611,1.396419,6],[4,19401611,1.365729,6],[4,19401611,1.181586,6],[4,24589208,0.26087,6],[4,24589208,0.414322,6],[4,24589208,0.629156,6],[4,24589208,0.721228,6],[4,1971287,1.089514,6],[4,24589208,0.966752,6],[4,24589208,1.089514,6],[4,1971287,1.304348,6],[4,19401611,0.782609,6],[4,19401611,0.751918,6],[4,24381704,0.537084,6],[4,24381704,0.84399,6],[4,24381704,0.966752,6],[4,19609115,0.168798,6],[4,2178791,1.672634,6],[4,2178791,1.365729,6],[4,5913860,0.721228,6],[4,24796711,0.84399,6],[4,5913860,0.84399,6],[4,5913860,0.87468,6],[4,2178791,0.598465,6],[4,5913860,1.058824,6],[4,5913860,1.365729,6],[4,2178791,0.29156,6],[4,5913860,1.457801,6],[4,2178791,0.26087,6],[4,19401611,3.14578,6],[4,19401611,2.286445,6],[4,19401611,1.918159,6],[4,24796711,0.322251,6],[4,23344184,0.230179,6],[4,23344184,0.322251,6],[4,23344184,0.598465,6],[4,23344184,0.659847,6],[4,5706356,0.537084,6],[4,23344184,1.396419,6],[4,3008806,1.488491,6],[4,3008806,0.84399,6],[4,5706356,0.936061,6],[4,5706356,1.181586,6],[4,5706356,1.42711,6],[4,13591503,0.905371,6],[4,19816619,1.120205,6],[4,23551688,0.015345,6],[4,23551688,0.076726,6],[4,23551688,0.168798,6],[4,19816619,0.966752,6],[4,15044030,0.322251,7],[4,15459038,0.997442,7],[4,25004215,0.26087,7],[4,21684154,1.242967,7],[4,16289053,0.567775,7],[4,518760,0.138107,7],[4,17534076,0.659847,7],[4,15666542,0.751918,7],[4,518760,0.29156,7],[4,518760,0.475703,7],[4,17534076,0.352941,7],[4,518760,0.629156,7],[4,26456742,1.089514,7],[4,4253829,0.690537,7],[4,26456742,1.120205,7],[4,2178791,0.690537,7],[4,23344184,0.782609,7],[4,7573891,0.138107,7],[4,21476650,0.997442,7],[4,17534076,1.304348,7],[4,17534076,1.273657,7],[4,17534076,1.242967,7],[4,24796711,0.26087,7],[4,2178791,0.230179,7],[4,21476650,1.549872,7],[4,16496557,0.537084,7],[4,3216310,0.475703,7],[4,16496557,0.782609,7],[4,4461333,0.168798,7],[4,23344184,0.721228,7],[4,17534076,1.028133,7],[4,15666542,0.230179,7],[4,3216310,0.629156,7],[4,25004215,0.046036,7],[4,16496557,1.150895,7],[4,15666542,0.475703,7],[4,25004215,0.199488,7],[4,21684154,0.87468,7],[4,22099161,0.168798,7],[4,24381704,0.690537,7],[4,3216310,1.181586,7],[4,17326572,1.549872,7],[4,8818914,0.782609,7],[4,17326572,1.457801,7],[4,22099161,0.352941,7],[4,17326572,1.335038,7],[4,17326572,1.304348,7],[4,17326572,1.242967,7],[4,13799007,0.414322,7],[4,3216310,1.212276,7],[4,17326572,1.089514,7],[4,8818914,0.751918,7],[4,726264,0.905371,7],[4,12553984,0.567775,7],[4,726264,0.966752,7],[4,518760,0.813299,7],[4,8818914,0.629156,7],[4,7573891,0.230179,7],[4,518760,1.826087,7],[4,24796711,0.936061,7],[4,7573891,0.29156,7],[4,2178791,1.212276,7],[4,4253829,0.046036,7],[4,23344184,0.905371,7],[4,7573891,0.537084,7],[4,7573891,0.629156,7],[4,3216310,0.905371,7],[4,2178791,1.734015,7],[4,13799007,0.567775,7],[4,24381704,1.212276,7],[4,726264,0.629156,7],[4,7573891,1.212276,7],[4,8818914,1.42711,7],[4,25004215,0.659847,7],[4,16289053,0.537084,7],[4,13799007,0.506394,7],[4,13799007,0.475703,7],[4,103752,1.273657,7],[4,12138976,0.138107,7],[4,23344184,0.567775,7],[4,17741580,1.549872,7],[4,21269146,0.29156,7],[4,21269146,0.352941,7],[4,24589208,0.813299,7],[4,17741580,1.150895,7],[4,15251534,0.567775,7],[4,9441426,1.887468,7],[4,17741580,0.87468,7],[4,15251534,0.383632,7],[4,9026418,1.764706,7],[4,24589208,0.567775,7],[4,17741580,0.721228,7],[4,21269146,0.782609,7],[4,26456742,0.905371,7],[4,17741580,0.598465,7],[4,21269146,1.120205,7],[4,22929177,0.690537,7],[4,14836526,1.089514,7],[4,26456742,0.567775,7],[4,14836526,1.212276,7],[4,12346480,1.365729,7],[4,14836526,1.611253,7],[4,21061642,0.475703,7],[4,21061642,0.659847,7],[4,21061642,0.690537,7],[4,7158883,0.598465,7],[4,21061642,0.936061,7],[4,21061642,0.997442,7],[4,21061642,1.028133,7],[4,7158883,0.813299,7],[4,1971287,1.396419,7],[4,23344184,0.199488,7],[4,22929177,0.445013,7],[4,24589208,0.997442,7],[4,26456742,0.414322,7],[4,24589208,0.905371,7],[4,1971287,0.26087,7],[4,22929177,0.352941,7],[4,3216310,0.29156,7],[4,21476650,0.659847,7],[4,7366387,1.672634,7],[4,3216310,0.322251,7],[4,9441426,0.475703,7],[4,311256,0.659847,7],[4,16496557,0.383632,7],[4,9233922,0.598465,7],[4,9026418,0.352941,7],[4,21476650,0.751918,7],[4,21476650,0.782609,7],[4,1556279,0.782609,7],[4,2178791,0.076726,7],[4,26664246,0.138107,7],[4,16496557,0.475703,7],[4,21476650,0.87468,7],[4,26664246,0.199488,7],[4,518760,2.040921,7],[4,9026418,1.212276,7],[4,21269146,1.212276,7],[4,9441426,1.150895,7],[4,21476650,0.046036,7],[4,9441426,0.905371,7],[4,9026418,1.150895,7],[4,10271441,1.396419,7],[4,21476650,0.29156,7],[4,12553984,0.138107,7],[4,7366387,0.322251,7],[4,7366387,0.352941,7],[4,311256,0.414322,7],[4,24589208,0.168798,7],[4,21476650,0.445013,7],[4,21476650,0.506394,7],[4,9026418,0.936061,7],[4,7366387,0.751918,7],[4,311256,0.506394,7],[4,311256,0.567775,7],[4,16081549,0.352941,7],[4,9233922,1.764706,7],[4,23759192,0.905371,7],[4,16081549,0.414322,7],[4,3631318,0.506394,7],[4,3631318,0.475703,7],[4,8196403,0.567775,7],[4,311256,0.076726,7],[4,3631318,0.414322,7],[4,23551688,0.352941,7],[4,16081549,0.537084,7],[4,11308960,0.168798,7],[4,3631318,0.26087,7],[4,7988899,0.076726,7],[4,518760,1.580563,7],[4,7988899,0.230179,7],[4,16081549,0.629156,7],[4,22721673,0.230179,7],[4,22721673,0.383632,7],[4,22514169,0.352941,7],[4,22514169,0.445013,7],[4,22514169,0.567775,7],[4,23966696,0.782609,7],[4,22514169,0.598465,7],[4,8611410,0.813299,7],[4,10686449,0.905371,7],[4,8611410,0.29156,7],[4,16911565,1.058824,7],[4,22514169,0.813299,7],[4,8611410,0.26087,7],[4,10686449,0.84399,7],[4,15459038,0.29156,7],[4,10686449,0.629156,7],[4,16911565,0.84399,7],[4,22514169,0.997442,7],[4,10686449,0.598465,7],[4,103752,0.383632,7],[4,3631318,1.335038,7],[4,8196403,0.629156,7],[4,13591503,0.475703,7],[4,13591503,0.537084,7],[4,2801302,0.107417,7],[4,2801302,0.445013,7],[4,3423814,1.058824,7],[4,23551688,3.237852,7],[4,3423814,0.936061,7],[4,13591503,0.751918,7],[4,3423814,0.629156,7],[4,1763783,0.199488,7],[4,8403906,1.120205,7],[4,11101457,0.475703,7],[4,1763783,0.475703,7],[4,8403906,1.028133,7],[4,16704061,1.181586,7],[4,11101457,0.352941,7],[4,22929177,0.782609,7],[4,16704061,1.028133,7],[4,16704061,0.936061,7],[4,22721673,0.445013,7],[4,7988899,0.751918,7],[4,8196403,0.383632,7],[4,7988899,0.782609,7],[4,22721673,0.659847,7],[4,3423814,0.445013,7],[4,22721673,0.751918,7],[4,23759192,0.598465,7],[4,23759192,0.506394,7],[4,22721673,1.028133,7],[4,103752,0.414322,7],[4,3423814,1.795396,7],[4,7988899,1.212276,7],[4,9233922,0.751918,7],[4,11723968,0.506394,7],[4,23759192,0.414322,7],[4,3423814,0.567775,7],[4,10686449,0.29156,7],[4,10893953,0.322251,7],[4,23551688,0.046036,7],[4,26249238,0.506394,7],[4,25211719,0.445013,7],[4,23136681,0.87468,7],[4,25211719,0.138107,7],[4,4046325,0.138107,7],[4,8196403,2.531969,7],[4,103752,1.089514,7],[4,17119069,2.470588,7],[4,2386294,3.759591,7],[4,23136681,0.751918,7],[4,15874045,0.352941,7],[4,22306665,0.84399,7],[4,17119069,0.905371,7],[4,2386294,3.913043,7],[4,15251534,0.936061,7],[4,22306665,0.905371,7],[4,26664246,0.936061,7],[4,26664246,0.966752,7],[4,22306665,1.242967,7],[4,16289053,0.414322,7],[4,13383999,0.537084,7],[4,13383999,0.567775,7],[4,26664246,0.567775,7],[4,24381704,0.168798,7],[4,4046325,1.519182,7],[4,518760,0.966752,7],[4,15459038,0.87468,7],[4,15251534,1.273657,7],[4,4046325,0.352941,7],[4,4046325,0.29156,7],[4,26664246,0.721228,7],[4,26249238,0.199488,7],[4,24381704,0.107417,7],[4,26249238,0.26087,7],[4,26456742,1.580563,7],[4,15044030,0.751918,7],[4,2386294,0.29156,7],[4,11101457,0.046036,7],[4,26249238,0.383632,7],[4,23136681,0.107417,7],[4,311256,0.690537,7],[4,8611410,1.580563,7],[4,10478945,0.475703,7],[4,7781395,0.445013,7],[4,2593798,1.488491,7],[4,3838821,0.322251,7],[4,8196403,0.966752,7],[4,9233922,0.690537,7],[4,3838821,0.230179,7],[4,7781395,0.721228,7],[4,7781395,0.813299,7],[4,7781395,0.905371,7],[4,8196403,0.813299,7],[4,23966696,1.028133,7],[4,7781395,1.028133,7],[4,8611410,0.87468,7],[4,7781395,1.181586,7],[4,10478945,0.721228,7],[4,15874045,0.598465,7],[4,17119069,0.567775,7],[4,15044030,0.813299,7],[4,15044030,0.87468,7],[4,22306665,1.335038,7],[4,24174200,1.212276,7],[4,15874045,0.782609,7],[4,24174200,1.028133,7],[4,22306665,1.826087,7],[4,23136681,0.629156,7],[4,15874045,0.84399,7],[4,23136681,0.475703,7],[4,518760,1.335038,7],[4,23136681,0.445013,7],[4,3838821,0.751918,7],[4,22929177,0.26087,7],[4,11101457,0.629156,7],[4,3838821,0.598465,7],[4,10893953,0.352941,7],[4,13383999,0.936061,7],[4,14214015,0.84399,7],[4,26041735,0.506394,7],[4,5913860,1.519182,7],[4,26871750,2.56266,7],[4,1348775,0.997442,7],[4,20024123,0.659847,7],[4,9856433,1.457801,7],[4,26041735,0.414322,7],[4,9856433,1.42711,7],[4,6743876,0.26087,7],[4,26041735,0.352941,7],[4,25626727,0.26087,7],[4,26871750,0.506394,7],[4,14629022,0.629156,7],[4,4876341,0.383632,7],[4,5083845,0.997442,7],[4,19609115,1.089514,7],[4,25626727,0.138107,7],[4,1141271,0.322251,7],[4,19194107,0.322251,7],[4,5706356,0.107417,7],[4,6743876,1.519182,7],[4,18779099,1.120205,7],[4,18571596,0.905371,7],[4,5913860,0.352941,7],[4,9648930,0.475703,7],[4,9648930,0.445013,7],[4,6743876,1.120205,7],[4,18779099,0.936061,7],[4,18779099,0.905371,7],[4,19194107,0.107417,7],[4,26041735,0.629156,7],[4,18779099,0.87468,7],[4,4876341,0.138107,7],[4,18779099,0.84399,7],[4,6328868,0.659847,7],[4,18779099,0.751918,7],[4,6743876,0.905371,7],[4,20439130,0.567775,7],[4,14629022,0.29156,7],[4,9648930,0.383632,7],[4,6951379,0.905371,7],[4,20024123,0.29156,7],[4,11516464,0.29156,7],[4,20854138,1.212276,7],[4,1141271,0.506394,7],[4,14214015,0.414322,7],[4,1348775,0.046036,7],[4,20854138,0.721228,7],[4,6536372,0.782609,7],[4,11516464,0.352941,7],[4,19194107,0.230179,7],[4,10063937,0.537084,7],[4,20231627,1.212276,7],[4,9856433,0.84399,7],[4,20231627,0.751918,7],[4,20024123,0.352941,7],[4,1348775,0.352941,7],[4,6121364,0.352941,7],[4,13176495,0.076726,7],[4,20231627,0.659847,7],[4,12346480,0.414322,7],[4,5083845,0.936061,7],[4,26871750,0.322251,7],[4,6536372,0.29156,7],[4,11516464,0.751918,7],[4,14214015,0.598465,7],[4,4876341,0.537084,7],[4,6951379,1.549872,7],[4,19609115,1.335038,7],[4,13176495,0.414322,7],[4,6536372,0.414322,7],[4,4876341,0.84399,7],[4,19401611,1.826087,7],[4,5083845,0.383632,7],[4,19609115,2.531969,7],[4,1141271,0.445013,7],[4,4876341,0.936061,7],[4,20024123,0.168798,7],[4,4876341,1.335038,7],[4,14629022,0.690537,7],[4,26871750,4.680307,7],[4,5083845,0.414322,7],[4,18571596,1.549872,7],[4,14836526,0.782609,7],[4,20646634,0.076726,7],[4,25834231,0.690537,7],[4,6121364,0.782609,7],[4,18986603,0.997442,7],[4,5291348,0.322251,7],[4,18986603,0.87468,7],[4,17949084,0.659847,7],[4,19816619,1.641944,7],[4,14006511,0.506394,7],[4,9856433,0.322251,7],[4,5706356,1.365729,7],[4,17949084,0.782609,7],[4,5498852,0.782609,7],[4,18364092,1.150895,7],[4,19609115,0.966752,7],[4,5706356,0.966752,7],[4,5083845,0.26087,7],[4,14006511,0.659847,7],[4,5706356,0.782609,7],[4,5913860,0.966752,7],[4,5083845,0.046036,7],[4,25834231,0.076726,7],[4,19401611,0.659847,7],[4,19194107,0.905371,7],[4,9856433,0.690537,7],[4,13176495,0.782609,7],[4,9648930,0.87468,7],[4,11516464,0.690537,7],[4,5498852,0.29156,7],[4,9648930,1.028133,7],[4,5498852,0.506394,7],[4,19194107,0.84399,7],[4,19194107,0.813299,7],[4,18156588,0.813299,7],[4,10063937,0.475703,7],[4,19609115,2.225064,7],[4,5913860,0.813299,7],[4,5498852,0.629156,7],[4,5498852,0.199488,7],[4,9648930,1.120205,7],[4,19609115,0.598465,7],[4,17949084,1.120205,7],[4,6121364,0.751918,7],[4,5498852,1.641944,7],[4,25419223,0.598465,7],[4,13176495,0.29156,7],[4,14006511,1.089514,7],[4,20646634,0.322251,7],[4,6743876,1.764706,7],[4,20646634,0.352941,7],[4,20646634,0.506394,7],[4,1348775,1.273657,7],[4,6328868,0.997442,7],[4,12346480,0.230179,7],[4,14214015,1.242967,7],[4,5913860,0.26087,7],[4,18779099,1.519182,7],[4,10063937,0.782609,7],[4,6328868,0.84399,7],[4,10271441,0.230179,7],[4,20646634,0.997442,7],[4,25419223,0.475703,7],[4,18986603,0.475703,7],[4,19194107,1.580563,7],[4,5291348,0.721228,7],[4,14836526,0.690537,7],[4,6328868,1.948849,7],[4,12346480,0.046036,7],[4,5291348,0.813299,7],[4,19609115,0.997442,7],[4,19401611,0.107417,7],[4,17949084,1.058824,7],[4,14214015,1.703325,7],[4,5291348,0.84399,7],[4,12761487,0.015345,8],[4,24174200,0.813299,8],[4,3631318,0.352941,8],[4,22721673,0.138107,8],[4,7988899,0.506394,8],[4,311256,1.580563,8],[4,24174200,1.519182,8],[4,3631318,0.567775,8],[4,19194107,0.046036,8],[4,7988899,0.168798,8],[4,15459038,0.659847,8],[4,18571596,0.813299,8],[4,10478945,1.120205,8],[4,19194107,0.138107,8],[4,20231627,0.352941,8],[4,7988899,0.26087,8],[4,19194107,0.567775,8],[4,15044030,1.058824,8],[4,3838821,0.87468,8],[4,5291348,1.120205,8],[4,15044030,1.028133,8],[4,24381704,0.076726,8],[4,5291348,0.659847,8],[4,18364092,1.058824,8],[4,19194107,0.721228,8],[4,22306665,1.089514,8],[4,22306665,1.058824,8],[4,24381704,0.138107,8],[4,17119069,0.997442,8],[4,22306665,0.721228,8],[4,22306665,0.629156,8],[4,17119069,1.150895,8],[4,22306665,0.475703,8],[4,22306665,0.383632,8],[4,22306665,0.322251,8],[4,22306665,0.29156,8],[4,24381704,0.199488,8],[4,103752,0.997442,8],[4,7573891,6.337596,8],[4,25211719,0.015345,8],[4,26664246,0.414322,8],[4,26249238,0.966752,8],[4,14629022,1.058824,8],[4,15874045,0.567775,8],[4,18571596,0.352941,8],[4,15459038,0.690537,8],[4,14629022,1.335038,8],[4,16911565,0.936061,8],[4,22514169,0.751918,8],[4,20439130,0.168798,8],[4,22514169,0.537084,8],[4,6743876,0.168798,8],[4,22514169,0.414322,8],[4,19609115,1.242967,8],[4,7781395,1.089514,8],[4,10478945,0.659847,8],[4,6743876,0.352941,8],[4,7781395,0.966752,8],[4,15874045,0.29156,8],[4,15459038,0.813299,8],[4,10478945,0.629156,8],[4,10478945,0.567775,8],[4,10478945,0.506394,8],[4,20439130,0.475703,8],[4,3838821,0.383632,8],[4,26664246,0.782609,8],[4,2386294,0.046036,8],[4,3838821,0.537084,8],[4,20439130,0.997442,8],[4,3008806,0.629156,8],[4,3008806,0.782609,8],[4,6328868,1.641944,8],[4,3008806,0.997442,8],[4,18986603,0.414322,8],[4,26664246,2.439898,8],[4,10063937,0.966752,8],[4,5706356,0.567775,8],[4,9856433,0.29156,8],[4,13176495,0.598465,8],[4,23344184,0.690537,8],[4,16081549,0.506394,8],[4,11516464,0.87468,8],[4,5706356,0.475703,8],[4,26456742,0.782609,8],[4,26456742,0.751918,8],[4,23344184,0.383632,8],[4,5706356,0.322251,8],[4,26664246,2.685422,8],[4,10686449,0.322251,8],[4,10686449,0.475703,8],[4,5706356,0.046036,8],[4,16496557,0.107417,8],[4,311256,0.629156,8],[4,16496557,0.168798,8],[4,23966696,0.445013,8],[4,10686449,0.782609,8],[4,14214015,0.905371,8],[4,16496557,0.905371,8],[4,3216310,0.659847,8],[4,25004215,0.107417,8],[4,2801302,0.015345,8],[4,9856433,0.721228,8],[4,13591503,0.690537,8],[4,19816619,0.506394,8],[4,2801302,2.225064,8],[4,19816619,0.567775,8],[4,23551688,0.87468,8],[4,19816619,0.475703,8],[4,13591503,0.813299,8],[4,19816619,0.445013,8],[4,23759192,0.26087,8],[4,19816619,0.383632,8],[4,16289053,0.445013,8],[4,15251534,1.212276,8],[4,13591503,0.84399,8],[4,19816619,0.87468,8],[4,19816619,0.29156,8],[4,23551688,0.322251,8],[4,23551688,0.26087,8],[4,23551688,0.199488,8],[4,16289053,0.782609,8],[4,16289053,0.905371,8],[4,23551688,0.138107,8],[4,19816619,0.997442,8],[4,3008806,0.046036,8],[4,103752,0.445013,8],[4,16081549,0.721228,8],[4,8403906,0.721228,8],[4,3008806,0.414322,8],[4,3008806,0.445013,8],[4,8403906,0.598465,8],[4,16081549,0.690537,8],[4,22929177,0.966752,8],[4,22929177,0.414322,8],[4,13591503,1.304348,8],[4,8611410,1.150895,8],[4,1348775,0.598465,8],[4,20024123,0.506394,8],[4,16704061,0.537084,8],[4,1141271,0.352941,8],[4,16704061,0.966752,8],[4,16704061,1.058824,8],[4,3423814,0.751918,8],[4,11516464,0.537084,8],[4,20024123,0.813299,8],[4,13591503,1.611253,8],[4,26871750,0.076726,8],[4,1763783,0.046036,8],[4,3423814,0.813299,8],[4,26871750,0.046036,8],[4,3423814,0.997442,8],[4,3423814,1.120205,8],[4,5498852,0.936061,8],[4,10063937,0.506394,8],[4,7988899,1.150895,8],[4,18571596,1.734015,8],[4,5498852,0.721228,8],[4,15874045,1.120205,8],[4,5498852,0.567775,8],[4,5498852,0.26087,8],[4,22721673,0.352941,8],[4,12761487,0.138107,8],[4,22721673,0.29156,8],[4,25626727,0.598465,8],[4,25004215,0.230179,8],[4,18779099,0.475703,8],[4,8611410,0.168798,8],[4,25004215,0.352941,8],[4,25004215,0.445013,8],[4,10893953,0.84399,8],[4,25004215,0.598465,8],[4,10893953,0.813299,8],[4,726264,0.537084,8],[4,25626727,0.322251,8],[4,25004215,1.058824,8],[4,14214015,0.690537,8],[4,726264,1.273657,8],[4,6536372,0.168798,8],[4,8611410,0.537084,8],[4,23136681,0.383632,8],[4,23136681,0.199488,8],[4,23966696,0.721228,8],[4,8196403,1.120205,8],[4,8611410,0.659847,8],[4,8611410,0.690537,8],[4,311256,0.751918,8],[4,23966696,0.751918,8],[4,311256,0.813299,8],[4,8611410,0.905371,8],[4,23966696,0.813299,8],[4,8611410,0.966752,8],[4,23966696,0.84399,8],[4,8196403,0.138107,8],[4,5913860,0.475703,8],[4,1348775,0.26087,8],[4,6121364,0.076726,8],[4,21269146,0.84399,8],[4,17741580,0.567775,8],[4,4253829,0.015345,8],[4,18156588,1.42711,8],[4,18156588,1.365729,8],[4,6951379,0.997442,8],[4,19609115,0.046036,8],[4,5083845,0.29156,8],[4,4253829,0.537084,8],[4,9441426,1.212276,8],[4,4461333,3.207161,8],[4,6121364,1.120205,8],[4,9026418,0.751918,8],[4,24796711,0.751918,8],[4,21476650,0.015345,8],[4,9441426,0.997442,8],[4,12346480,1.97954,8],[4,15044030,0.598465,8],[4,9441426,0.936061,8],[4,4253829,1.150895,8],[4,4876341,0.076726,8],[4,15666542,0.690537,8],[4,6121364,0.936061,8],[4,2178791,0.414322,8],[4,11723968,0.046036,8],[4,21891657,0.936061,8],[4,21269146,0.322251,8],[4,25419223,0.506394,8],[4,24589208,0.230179,8],[4,21891657,0.506394,8],[4,17741580,1.120205,8],[4,21891657,0.475703,8],[4,5083845,0.782609,8],[4,6951379,0.966752,8],[4,21891657,0.322251,8],[4,21891657,0.29156,8],[4,5083845,0.721228,8],[4,21269146,0.414322,8],[4,19401611,0.046036,8],[4,17741580,0.905371,8],[4,5083845,0.598465,8],[4,7573891,0.84399,8],[4,9026418,0.966752,8],[4,10271441,0.322251,8],[4,5083845,0.567775,8],[4,1971287,0.352941,8],[4,18156588,1.457801,8],[4,17949084,1.365729,8],[4,9026418,0.87468,8],[4,21476650,0.475703,8],[4,4876341,0.230179,8],[4,12346480,0.506394,8],[4,4461333,0.076726,8],[4,26664246,0.076726,8],[4,4876341,0.29156,8],[4,933767,1.089514,8],[4,21476650,0.567775,8],[4,14836526,0.322251,8],[4,20854138,0.629156,8],[4,20854138,0.690537,8],[4,933767,1.304348,8],[4,6121364,0.322251,8],[4,21476650,1.212276,8],[4,26041735,0.168798,8],[4,4876341,3.207161,8],[4,21476650,1.181586,8],[4,9026418,0.230179,8],[4,4876341,0.414322,8],[4,21476650,1.150895,8],[4,13799007,1.242967,8],[4,21476650,1.028133,8],[4,4876341,0.659847,8],[4,21476650,0.813299,8],[4,6951379,1.764706,8],[4,9441426,0.87468,8],[4,17534076,0.506394,8],[4,518760,0.414322,8],[4,9441426,0.813299,8],[4,10271441,0.046036,8],[4,10893953,0.690537,8],[4,9441426,0.690537,8],[4,933767,0.076726,8],[4,6121364,0.690537,8],[4,24796711,0.352941,8],[4,10893953,0.567775,8],[4,6121364,0.506394,8],[4,10893953,0.414322,8],[4,9026418,0.506394,8],[4,933767,0.414322,8],[4,7366387,0.383632,8],[4,13176495,0.138107,8],[4,933767,0.506394,8],[4,21476650,0.322251,8],[4,21476650,0.352941,8],[4,6121364,0.445013,8],[4,13383999,0.383632,8],[4,933767,0.659847,8],[4,26664246,0.168798,8],[4,6121364,0.414322,8],[4,933767,0.87468,8],[4,20646634,0.199488,8],[4,7158883,0.29156,8],[4,25419223,0.383632,8],[4,19401611,0.936061,8],[4,7158883,0.383632,8],[4,20646634,0.230179,8],[4,13799007,0.29156,8],[4,10271441,0.629156,8],[4,4046325,0.84399,8],[4,4046325,1.304348,8],[4,17949084,0.506394,8],[4,518760,0.936061,8],[4,12553984,0.782609,8],[4,21061642,0.87468,8],[4,22099161,0.598465,8],[4,19609115,0.352941,8],[4,13176495,0.659847,8],[4,8818914,1.365729,8],[4,26249238,0.87468,8],[4,14836526,1.273657,8],[4,25211719,0.168798,8],[4,25211719,0.26087,8],[4,4046325,0.199488,8],[4,25211719,0.322251,8],[4,19609115,0.813299,8],[4,25211719,0.383632,8],[4,10271441,0.537084,8],[4,25419223,0.352941,8],[4,18364092,0.506394,8],[4,26249238,0.475703,8],[4,518760,1.120205,8],[4,19401611,0.445013,8],[4,19401611,0.905371,8],[4,9441426,5.539642,8],[4,25419223,0.015345,8],[4,11516464,0.107417,8],[4,25211719,0.567775,8],[4,5083845,1.089514,8],[4,21269146,0.168798,8],[4,22099161,0.230179,8],[4,19401611,1.120205,8],[4,21061642,0.383632,8],[4,21269146,0.138107,8],[4,19401611,0.138107,8],[4,17326572,1.365729,8],[4,19609115,0.230179,8],[4,9648930,0.352941,8],[4,19401611,1.058824,8],[4,24589208,0.383632,8],[4,6951379,0.690537,8],[4,9026418,1.457801,8],[4,518760,0.659847,8],[4,9026418,1.273657,8],[4,1971287,0.659847,8],[4,7158883,1.120205,8],[4,6951379,0.721228,8],[4,10893953,0.782609,9],[4,726264,0.567775,9],[4,25834231,0.230179,9],[4,7366387,0.690537,9],[4,17949084,0.936061,9],[4,9233922,0.29156,9],[4,15459038,0.629156,9],[4,7158883,0.076726,9],[4,8403906,0.138107,9],[4,25626727,0.414322,9],[4,26041735,0.475703,9],[4,25834231,0.352941,9],[4,13591503,0.29156,9],[4,10893953,0.87468,9],[4,7158883,0.26087,9],[4,6328868,0.567775,9],[4,14629022,0.414322,9],[4,726264,0.29156,9],[4,15459038,0.598465,9],[4,25626727,0.475703,9],[4,25004215,0.383632,9],[4,19816619,0.352941,9],[4,9441426,0.537084,9],[4,17949084,0.29156,9],[4,14836526,0.414322,9],[4,25419223,0.322251,9],[4,6536372,0.26087,9],[4,6536372,0.230179,9],[4,26041735,0.076726,9],[4,14836526,0.567775,9],[4,17741580,1.396419,9],[4,8403906,1.611253,9],[4,21269146,0.230179,9],[4,1556279,0.230179,9],[4,25419223,0.230179,9],[4,26871750,0.352941,9],[4,1556279,0.168798,9],[4,5706356,0.659847,9],[4,23136681,0.782609,9],[4,2801302,0.29156,9],[4,6536372,0.046036,9],[4,19816619,0.537084,9],[4,726264,1.089514,9],[4,311256,0.29156,9],[4,25626727,0.230179,9],[4,11516464,0.629156,9],[4,14836526,0.659847,9],[4,8611410,0.414322,9],[4,7158883,0.046036,9],[4,8403906,1.242967,9],[4,8403906,1.181586,9],[4,8403906,0.445013,9],[4,726264,0.782609,9],[4,21061642,0.567775,9],[4,21476650,0.076726,9],[4,7158883,0.537084,9],[4,21269146,0.537084,9],[4,16289053,0.84399,9],[4,13176495,0.690537,9],[4,26456742,0.721228,9],[4,10271441,0.690537,9],[4,5706356,0.445013,9],[4,23551688,0.107417,9],[4,16496557,0.015345,9],[4,25626727,0.936061,9],[4,14214015,1.304348,9],[4,19401611,0.966752,9],[4,21061642,0.414322,9],[4,9026418,0.782609,9],[4,17949084,0.629156,9],[4,17741580,0.475703,9],[4,6328868,0.813299,9],[4,14214015,0.966752,9],[4,19816619,1.150895,9],[4,21061642,1.212276,9],[4,19401611,0.26087,9],[4,3008806,0.138107,9],[4,17741580,0.537084,9],[4,8403906,0.936061,9],[4,3008806,0.352941,9],[4,1971287,0.230179,9],[4,14214015,0.997442,9],[4,311256,0.352941,9],[4,15251534,0.629156,9],[4,18986603,2.961637,9],[4,4668837,0.015345,9],[4,19816619,0.322251,9],[4,18779099,0.445013,9],[4,16289053,0.29156,9],[4,23551688,0.506394,9],[4,16289053,0.352941,9],[4,9026418,0.537084,9],[4,23551688,0.414322,9],[4,25004215,0.168798,9],[4,15459038,0.506394,9],[4,3008806,0.598465,9],[4,1971287,0.107417,9],[4,23759192,0.445013,9],[4,5706356,0.506394,9],[4,311256,0.26087,9],[4,25004215,0.076726,9],[4,7366387,0.199488,9],[4,15251534,0.721228,9],[4,15459038,0.475703,9],[4,16081549,0.445013,9],[4,23966696,0.537084,9],[4,3216310,0.537084,9],[4,25626727,0.690537,9],[4,3216310,0.506394,9],[4,9441426,0.782609,9],[4,16496557,0.506394,9],[4,12553984,0.107417,9],[4,18779099,0.813299,9],[4,7158883,0.414322,9],[4,16496557,0.352941,9],[4,16289053,0.598465,9],[4,16289053,0.659847,9],[4,5083845,0.659847,9],[4,15459038,0.721228,9],[4,16911565,1.150895,9],[4,20439130,0.046036,9],[4,20439130,0.107417,9],[4,21891657,0.629156,9],[4,8818914,1.549872,9],[4,21891657,1.120205,9],[4,20439130,0.199488,9],[4,7781395,1.764706,9],[4,10478945,0.751918,9],[4,10478945,0.690537,9],[4,6951379,0.567775,9],[4,13383999,0.475703,9],[4,20439130,0.29156,9],[4,6951379,0.506394,9],[4,6743876,0.414322,9],[4,7781395,0.87468,9],[4,6951379,0.445013,9],[4,20439130,0.383632,9],[4,19194107,0.506394,9],[4,3838821,0.138107,9],[4,24174200,0.84399,9],[4,15044030,0.629156,9],[4,19609115,0.015345,9],[4,7988899,0.015345,9],[4,18571596,0.782609,9],[4,18571596,0.721228,9],[4,7573891,0.414322,9],[4,3631318,0.383632,9],[4,13799007,0.751918,9],[4,9233922,1.212276,9],[4,6121364,1.549872,9],[4,15874045,0.690537,9],[4,19194107,0.168798,9],[4,3631318,0.659847,9],[4,19609115,0.076726,9],[4,8818914,1.703325,9],[4,24796711,1.795396,9],[4,18571596,0.383632,9],[4,15874045,0.506394,9],[4,16911565,0.721228,9],[4,11516464,0.475703,9],[4,11516464,0.445013,9],[4,16911565,0.813299,9],[4,17119069,0.659847,9],[4,19609115,0.537084,9],[4,17119069,0.751918,9],[4,518760,1.089514,9],[4,11516464,0.076726,9],[4,26664246,0.629156,9],[4,19194107,0.751918,9],[4,15459038,0.905371,9],[4,9648930,0.659847,9],[4,19609115,0.84399,9],[4,14006511,0.721228,9],[4,24381704,0.414322,9],[4,17119069,1.120205,9],[4,26249238,0.445013,9],[4,8818914,0.659847,9],[4,26249238,0.537084,9],[4,26249238,0.598465,9],[4,18364092,0.537084,9],[4,18364092,0.751918,9],[4,4046325,0.015345,9],[4,13799007,0.168798,9],[4,18364092,0.567775,9],[4,25211719,0.107417,9],[4,6743876,0.567775,9],[4,22099161,0.414322,9],[4,10063937,0.383632,9],[4,24381704,0.782609,9],[4,17326572,0.966752,9],[4,7781395,0.230179,9],[4,12346480,0.29156,9],[4,12346480,0.26087,9],[4,24381704,0.015345,9],[4,15044030,1.089514,9],[4,19609115,0.445013,9],[4,3838821,0.782609,9],[4,12346480,0.107417,9],[4,3838821,0.997442,9],[4,15044030,0.690537,9],[4,8818914,0.84399,9],[4,518760,1.058824,9],[4,25211719,0.813299,9],[4,14006511,1.058824,9],[4,15044030,0.84399,9],[4,26249238,0.046036,9],[4,5291348,0.475703,9],[4,22306665,1.212276,9],[4,14214015,0.168798,9],[4,4461333,0.015345,9],[4,20024123,0.414322,9],[4,933767,0.751918,9],[4,6328868,0.230179,9],[4,16704061,0.629156,9],[4,16704061,0.659847,9],[4,21684154,0.352941,9],[4,1141271,0.383632,9],[4,21684154,0.475703,9],[4,103752,0.046036,9],[4,9856433,0.936061,9],[4,6328868,0.138107,9],[4,3423814,0.721228,9],[4,9856433,0.966752,9],[4,1348775,0.813299,9],[4,1141271,0.230179,9],[4,10893953,0.445013,9],[4,1141271,0.168798,9],[4,13176495,0.168798,9],[4,8611410,0.598465,9],[4,4876341,0.598465,9],[4,23136681,0.168798,9],[4,6951379,1.273657,9],[4,9026418,0.26087,9],[4,20024123,0.230179,9],[4,103752,0.567775,9],[4,8611410,0.751918,9],[4,6536372,0.659847,9],[4,13591503,1.212276,9],[4,8196403,0.199488,9],[4,8196403,0.168798,9],[4,26664246,0.015345,9],[4,23966696,0.905371,9],[4,20854138,0.567775,9],[4,14214015,0.199488,9],[4,24796711,0.046036,9],[4,8611410,1.089514,9],[4,5913860,0.506394,9],[4,22929177,0.629156,9],[4,18156588,0.690537,9],[4,12553984,0.230179,9],[4,22721673,0.26087,9],[4,4253829,0.629156,9],[4,15459038,1.028133,9],[4,22721673,1.335038,9],[4,15666542,0.383632,9],[4,22721673,0.199488,9],[4,17534076,0.782609,9],[4,15666542,0.445013,9],[4,15874045,0.966752,9],[4,15666542,0.506394,9],[4,15874045,0.905371,9],[4,15666542,0.567775,9],[4,14006511,0.414322,9],[4,5498852,0.322251,9],[4,14006511,0.445013,9],[4,18156588,0.997442,9],[4,518760,0.598465,9],[4,12553984,0.199488,9],[4,17534076,0.936061,9],[4,5913860,1.212276,9],[4,15666542,0.721228,10],[4,15874045,0.751918,10],[4,6328868,0.537084,10],[4,6121364,0.107417,10],[4,9026418,0.414322,10],[4,8611410,0.475703,10],[4,23759192,0.322251,10],[4,23966696,0.567775,10],[4,19401611,0.87468,10],[4,10686449,0.506394,10],[4,8818914,0.567775,10],[4,8818914,0.506394,10],[4,6121364,0.26087,10],[4,10063937,0.29156,10],[4,2178791,0.046036,10],[4,23966696,0.690537,10],[4,9026418,0.29156,10],[4,8818914,0.383632,10],[4,23966696,0.199488,10],[4,10063937,0.751918,10],[4,13591503,0.445013,10],[4,19401611,0.537084,10],[4,9856433,0.782609,10],[4,6328868,0.445013,10],[4,9026418,0.168798,10],[4,23759192,0.567775,10],[4,10063937,0.629156,10],[4,11101457,0.015345,10],[4,15459038,0.537084,10],[4,15666542,0.322251,10],[4,9856433,1.304348,10],[4,24589208,0.199488,10],[4,19609115,0.26087,10],[4,24589208,0.29156,10],[4,15459038,0.782609,10],[4,23759192,0.782609,10],[4,24174200,0.29156,10],[4,9026418,0.629156,10],[4,24174200,0.445013,10],[4,23759192,0.659847,10],[4,6121364,0.138107,10],[4,24174200,0.352941,10],[4,15459038,0.84399,10],[4,8611410,0.352941,10],[4,24589208,0.015345,10],[4,10063937,0.997442,10],[4,8818914,0.813299,10],[4,19401611,0.015345,10],[4,9856433,1.150895,10],[4,24381704,0.046036,10],[4,9026418,0.445013,10],[4,26664246,0.107417,10],[4,6328868,0.352941,10],[4,24174200,0.629156,10],[4,24381704,0.567775,10],[4,8818914,1.150895,10],[4,19401611,1.028133,10],[4,24589208,0.138107,10],[4,19194107,0.537084,10],[4,23759192,0.537084,10],[4,13799007,0.107417,10],[4,13799007,0.138107,10],[4,25211719,0.352941,10],[4,9648930,0.751918,10],[4,26249238,0.352941,10],[4,26249238,0.107417,10],[4,13799007,0.322251,10],[4,12346480,0.076726,10],[4,17326572,0.352941,10],[4,15044030,0.659847,10],[4,518760,0.782609,10],[4,17326572,0.936061,10],[4,17326572,1.058824,10],[4,9648930,0.414322,10],[4,6951379,0.383632,10],[4,9648930,0.26087,10],[4,14006511,0.629156,10],[4,5083845,0.84399,10],[4,13799007,0.629156,10],[4,7573891,0.659847,10],[4,7573891,0.475703,10],[4,18156588,1.181586,10],[4,4253829,0.199488,10],[4,7573891,0.168798,10],[4,7573891,0.015345,10],[4,12553984,0.383632,10],[4,5083845,0.076726,10],[4,5083845,0.015345,10],[4,16911565,0.966752,10],[4,14006511,1.396419,10],[4,22514169,0.383632,10],[4,22514169,0.322251,10],[4,22514169,0.26087,10],[4,20439130,0.230179,10],[4,7781395,0.936061,10],[4,7781395,0.84399,10],[4,11516464,0.230179,10],[4,3838821,0.076726,10],[4,20439130,0.445013,10],[4,7781395,0.352941,10],[4,20439130,0.721228,10],[4,7781395,0.138107,10],[4,10478945,0.383632,10],[4,3838821,0.813299,10],[4,3838821,1.488491,10],[4,518760,1.273657,10],[4,22306665,1.304348,10],[4,15044030,0.936061,10],[4,518760,1.150895,10],[4,9648930,1.335038,10],[4,18364092,0.84399,10],[4,18364092,0.813299,10],[4,15044030,0.782609,10],[4,17119069,1.028133,10],[4,22306665,0.352941,10],[4,22306665,0.26087,10],[4,22306665,0.168798,10],[4,21061642,0.107417,10],[4,25419223,0.905371,10],[4,21269146,0.629156,10],[4,10271441,0.26087,10],[4,21269146,0.567775,10],[4,10271441,0.445013,10],[4,21269146,0.445013,10],[4,17741580,0.966752,10],[4,17741580,1.028133,10],[4,25419223,0.537084,10],[4,17741580,1.335038,10],[4,17741580,1.488491,10],[4,21269146,0.199488,10],[4,4668837,0.046036,10],[4,4668837,0.138107,10],[4,4668837,0.26087,10],[4,17949084,0.84399,10],[4,4668837,0.506394,10],[4,17949084,0.751918,10],[4,17949084,0.721228,10],[4,17949084,0.567775,10],[4,17949084,0.537084,10],[4,21061642,0.506394,10],[4,25419223,0.046036,10],[4,25419223,0.076726,10],[4,25419223,0.107417,10],[4,14836526,0.966752,10],[4,17949084,0.26087,10],[4,14006511,0.567775,10],[4,17534076,0.414322,10],[4,14006511,0.537084,10],[4,18156588,0.721228,10],[4,17534076,0.751918,10],[4,18156588,0.598465,10],[4,10893953,0.537084,10],[4,18156588,0.445013,10],[4,933767,0.598465,10],[4,20854138,0.445013,10],[4,9441426,0.352941,10],[4,4461333,0.107417,10],[4,4461333,0.138107,10],[4,13799007,0.936061,10],[4,14006511,0.29156,10],[4,9441426,0.445013,10],[4,4876341,1.150895,10],[4,14006511,0.138107,10],[4,21476650,0.84399,10],[4,1556279,0.84399,10],[4,14836526,0.445013,10],[4,14836526,0.629156,10],[4,7366387,0.659847,10],[4,9441426,0.506394,10],[4,6951379,3.851662,10],[4,9441426,0.567775,10],[4,9441426,0.659847,10],[4,21476650,0.199488,10],[4,10271441,0.168798,10],[4,26456742,0.230179,10],[4,15251534,0.352941,10],[4,23344184,0.015345,10],[4,311256,0.445013,10],[4,311256,0.475703,10],[4,16496557,0.076726,10],[4,16496557,0.26087,10],[4,3216310,0.352941,10],[4,18779099,0.782609,10],[4,25004215,0.015345,10],[4,25004215,0.138107,10],[4,10893953,0.936061,10],[4,726264,0.230179,10],[4,726264,0.352941,10],[4,726264,0.690537,10],[4,726264,0.721228,10],[4,14629022,0.537084,10],[4,11516464,0.659847,10],[4,9233922,0.414322,10],[4,23136681,0.690537,10],[4,23136681,0.567775,10],[4,25626727,0.046036,10],[4,20024123,0.138107,10],[4,23136681,0.076726,10],[4,23136681,0.046036,10],[4,103752,0.629156,10],[4,6536372,0.567775,10],[4,13591503,0.567775,10],[4,8403906,1.580563,10],[4,9856433,0.629156,10],[4,25834231,0.383632,10],[4,9856433,0.506394,10],[4,25834231,0.445013,10],[4,19816619,0.721228,10],[4,9856433,0.414322,10],[4,16289053,0.230179,10],[4,16289053,0.26087,10],[4,19816619,0.751918,10],[4,25834231,0.659847,10],[4,13591503,0.966752,10],[4,3008806,0.26087,10],[4,3008806,0.383632,10],[4,8403906,0.537084,10],[4,18986603,0.445013,10],[4,3008806,0.87468,10],[4,15251534,0.84399,10],[4,18986603,0.26087,10],[4,23344184,0.751918,10],[4,14629022,0.107417,10],[4,26456742,0.84399,10],[4,15251534,0.690537,10],[4,23344184,0.138107,10],[4,18779099,1.457801,10],[4,15251534,0.537084,10],[4,16704061,0.414322,10],[4,20231627,0.26087,10],[4,3631318,0.168798,10],[4,9233922,0.659847,10],[4,5498852,0.076726,10],[4,5498852,0.107417,10],[4,22721673,0.015345,10],[4,7988899,0.322251,10],[4,22721673,0.168798,10],[4,7988899,0.598465,10],[4,22721673,0.598465,10],[4,5498852,0.537084,10],[4,1141271,0.475703,10],[4,9233922,0.936061,10],[4,18571596,1.795396,10],[4,16704061,0.782609,10],[4,5498852,0.84399,10],[4,16704061,0.813299,10],[4,3423814,0.690537,10],[4,16704061,0.997442,10],[4,1141271,0.29156,10],[4,311256,1.365729,10],[4,20024123,0.84399,10],[4,16911565,0.690537,10],[4,8196403,0.475703,10],[4,8196403,0.414322,10],[4,8196403,0.29156,10],[4,16911565,0.659847,10],[4,16911565,0.567775,10],[4,14214015,0.26087,10],[4,20231627,0.506394,10],[4,8196403,0.107417,10],[4,14214015,0.230179,10],[4,16911565,0.445013,10],[4,1348775,0.383632,10],[4,18571596,0.567775,10],[4,6536372,1.488491,10],[4,16911565,0.383632,10],[4,1348775,0.445013,10],[4,20231627,0.414322,10],[4,9441426,0.751918,11],[4,10893953,0.076726,11],[4,13591503,0.629156,11],[4,14836526,0.905371,11],[4,13383999,0.138107,11],[4,10478945,0.537084,11],[4,10271441,0.107417,11],[4,10271441,0.138107,11],[4,13383999,0.598465,11],[4,14629022,0.168798,11],[4,9856433,0.352941,11],[4,9856433,0.537084,11],[4,14836526,0.721228,11],[4,14836526,0.751918,11],[4,13591503,0.26087,11],[4,311256,0.015345,11],[4,10478945,0.445013,11],[4,10893953,0.598465,11],[4,15044030,0.29156,11],[4,14629022,0.721228,11],[4,518760,0.046036,11],[4,15044030,0.506394,11],[4,518760,0.26087,11],[4,13176495,0.383632,11],[4,518760,0.506394,11],[4,13383999,0.414322,11],[4,15044030,0.567775,11],[4,518760,0.537084,11],[4,26871750,0.445013,11],[4,518760,0.721228,11],[4,518760,0.690537,11],[4,14214015,0.322251,11],[4,13591503,1.089514,11],[4,13799007,0.690537,11],[4,9648930,0.322251,11],[4,9856433,0.813299,11],[4,9441426,0.598465,11],[4,311256,0.383632,11],[4,13799007,0.046036,11],[4,9648930,0.936061,11],[4,14006511,0.87468,11],[4,10063937,0.721228,11],[4,14006511,0.26087,11],[4,14214015,0.046036,11],[4,14629022,0.26087,11],[4,15459038,0.445013,11],[4,14006511,0.352941,11],[4,9856433,0.87468,11],[4,9441426,0.322251,11],[4,9648930,0.782609,11],[4,14006511,0.383632,11],[4,14214015,0.813299,11],[4,9441426,0.138107,11],[4,10893953,0.475703,11],[4,14629022,0.383632,11],[4,20231627,0.383632,11],[4,103752,0.26087,11],[4,1556279,0.076726,11],[4,25626727,0.076726,11],[4,16496557,0.29156,11],[4,6328868,0.506394,11],[4,20854138,1.089514,11],[4,5706356,0.383632,11],[4,20854138,0.598465,11],[4,22514169,0.29156,11],[4,726264,0.383632,11],[4,726264,0.414322,11],[4,20024123,0.629156,11],[4,26249238,0.414322,11],[4,17119069,0.966752,11],[4,726264,0.598465,11],[4,23759192,0.352941,11],[4,7158883,0.199488,11],[4,17119069,0.598465,11],[4,8403906,0.26087,11],[4,6743876,0.107417,11],[4,23966696,0.598465,11],[4,4046325,0.322251,11],[4,26041735,0.199488,11],[4,26456742,0.690537,11],[4,17949084,1.028133,11],[4,5913860,0.046036,11],[4,26456742,0.383632,11],[4,26456742,0.352941,11],[4,17949084,0.87468,11],[4,25419223,1.457801,11],[4,4046325,0.383632,11],[4,17949084,0.690537,11],[4,20231627,0.445013,11],[4,17949084,0.414322,11],[4,6743876,0.046036,11],[4,103752,0.168798,11],[4,6328868,0.475703,11],[4,26456742,0.107417,11],[4,17741580,0.414322,11],[4,19816619,0.414322,11],[4,21684154,0.046036,11],[4,22721673,0.046036,11],[4,20646634,0.107417,11],[4,18571596,0.966752,11],[4,6536372,2.378517,11],[4,20646634,0.015345,11],[4,16911565,0.322251,11],[4,5291348,0.26087,11],[4,11516464,2.439898,11],[4,12553984,0.076726,11],[4,1141271,0.015345,11],[4,7366387,0.230179,11],[4,7366387,0.414322,11],[4,7781395,0.997442,11],[4,7781395,0.168798,11],[4,6536372,0.199488,11],[4,21476650,1.242967,11],[4,7158883,0.475703,11],[4,17119069,0.506394,11],[4,726264,0.936061,11],[4,20024123,1.273657,11],[4,22099161,0.475703,11],[4,16704061,0.199488,11],[4,5706356,0.414322,11],[4,5291348,0.537084,11],[4,22514169,0.046036,11],[4,21476650,0.721228,11],[4,3008806,0.721228,11],[4,3631318,0.015345,11],[4,16704061,0.567775,11],[4,17741580,0.506394,11],[4,16704061,0.721228,11],[4,5083845,0.107417,11],[4,16704061,0.84399,11],[4,7988899,0.966752,11],[4,7988899,0.659847,11],[4,19816619,0.199488,11],[4,5706356,0.230179,11],[4,3631318,0.138107,11],[4,6951379,0.352941,11],[4,19401611,0.352941,11],[4,22099161,0.138107,11],[4,3423814,0.230179,11],[4,25626727,0.015345,11],[4,18986603,0.015345,11],[4,21891657,0.107417,11],[4,1348775,0.015345,11],[4,24589208,0.046036,11],[4,18364092,0.966752,11],[4,17534076,0.813299,11],[4,20439130,0.138107,11],[4,18364092,1.120205,11],[4,24796711,0.138107,11],[4,2178791,0.322251,11],[4,6743876,0.383632,11],[4,8611410,0.199488,11],[4,20439130,0.26087,11],[4,20231627,0.567775,11],[4,17534076,0.629156,11],[4,18779099,0.506394,11],[4,18779099,0.598465,11],[4,18364092,0.690537,11],[4,5706356,0.26087,11],[4,21061642,0.84399,11],[4,15666542,0.107417,11],[4,3423814,0.352941,11],[4,15666542,0.29156,11],[4,15666542,0.414322,11],[4,17534076,0.690537,11],[4,21061642,0.598465,11],[4,24589208,0.445013,11],[4,25419223,0.138107,11],[4,19401611,1.611253,11],[4,8818914,0.445013,11],[4,3423814,0.475703,11],[4,19401611,0.629156,11],[4,19401611,0.383632,11],[4,8818914,0.26087,11],[4,1348775,0.29156,11],[4,8403906,1.42711,11],[4,24174200,0.199488,11],[4,21061642,0.046036,11],[4,933767,0.107417,11],[4,18986603,0.076726,11],[4,16289053,0.199488,11],[4,3631318,0.598465,11],[4,17326572,0.659847,11],[4,16289053,0.721228,11],[4,5913860,0.230179,11],[4,6743876,0.138107,11],[4,3008806,0.076726,11],[4,2593798,0.659847,11],[4,8403906,0.659847,11],[4,26456742,1.703325,11],[4,23966696,0.87468,11],[4,8403906,0.475703,11],[4,4876341,0.168798,11],[4,21476650,0.168798,11],[4,6121364,0.168798,11],[4,6121364,0.199488,11],[4,24381704,0.230179,11],[4,24174200,0.598465,11],[4,22929177,0.383632,11],[4,4461333,0.383632,11],[4,23551688,0.782609,11],[4,7573891,0.107417,11],[4,19194107,0.966752,11],[4,19194107,0.475703,11],[4,18779099,0.26087,11],[4,5706356,0.168798,11],[4,3216310,0.414322,11],[4,14629022,0.352941,12],[4,9441426,0.26087,12],[4,22099161,0.107417,12],[4,6536372,0.107417,12],[4,3008806,0.322251,12],[4,18779099,0.168798,12],[4,933767,0.352941,12],[4,20231627,0.475703,12],[4,18779099,0.383632,12],[4,933767,0.138107,12],[4,18779099,0.199488,12],[4,15044030,0.199488,12],[4,18779099,0.076726,12],[4,933767,0.383632,12],[4,25626727,0.997442,12],[4,10893953,0.659847,12],[4,23551688,0.383632,12],[4,22929177,0.322251,12],[4,14836526,0.475703,12],[4,6743876,0.230179,12],[4,14214015,0.138107,12],[4,20024123,0.383632,12],[4,3216310,0.138107,12],[4,3216310,0.199488,12],[4,311256,0.598465,12],[4,18156588,0.414322,12],[4,4253829,0.138107,12],[4,21891657,0.015345,12],[4,13176495,0.26087,12],[4,18156588,0.567775,12],[4,1348775,0.076726,12],[4,3423814,0.598465,12],[4,6951379,0.537084,12],[4,6951379,0.414322,12],[4,6951379,0.322251,12],[4,3423814,0.29156,12],[4,6951379,0.199488,12],[4,14214015,0.475703,12],[4,18364092,0.721228,12],[4,9648930,0.997442,12],[4,3423814,0.414322,12],[4,18364092,0.598465,12],[4,18364092,0.629156,12],[4,18364092,0.659847,12],[4,5498852,0.015345,12],[4,6536372,0.352941,12],[4,13176495,0.046036,12],[4,7366387,0.537084,12],[4,7366387,0.26087,12],[4,12553984,0.015345,12],[4,5498852,0.138107,12],[4,311256,0.230179,12],[4,3008806,0.475703,12],[4,25626727,0.506394,12],[4,14629022,0.87468,12],[4,23344184,0.107417,12],[4,18571596,0.690537,12],[4,17741580,1.058824,12],[4,11516464,0.506394,12],[4,7158883,0.352941,12],[4,23344184,0.076726,12],[4,18571596,0.445013,12],[4,14214015,0.751918,12],[4,20024123,0.107417,12],[4,21891657,0.199488,12],[4,17949084,0.168798,12],[4,14214015,0.015345,12],[4,20024123,0.598465,12],[4,14214015,0.076726,12],[4,14629022,1.519182,12],[4,26041735,0.29156,12],[4,26041735,0.107417,12],[4,16289053,0.383632,12],[4,4876341,0.107417,12],[4,15251534,1.028133,12],[4,10271441,0.015345,12],[4,6328868,0.015345,12],[4,23966696,0.475703,12],[4,26456742,0.629156,12],[4,6328868,0.168798,12],[4,4876341,0.445013,12],[4,1556279,0.046036,12],[4,19816619,0.076726,12],[4,6328868,0.26087,12],[4,14006511,0.168798,12],[4,15251534,0.199488,12],[4,20854138,0.997442,12],[4,14006511,0.322251,12],[4,9233922,0.107417,12],[4,726264,0.506394,12],[4,10686449,0.383632,12],[4,10478945,0.414322,12],[4,726264,0.659847,12],[4,9233922,0.322251,12],[4,3838821,0.445013,12],[4,25834231,0.199488,12],[4,9233922,0.383632,12],[4,10686449,0.199488,12],[4,25834231,0.29156,12],[4,25834231,0.414322,12],[4,16704061,0.475703,12],[4,9026418,1.058824,12],[4,4046325,0.230179,12],[4,26664246,0.046036,12],[4,9026418,0.107417,12],[4,21269146,0.690537,12],[4,13383999,0.076726,12],[4,5913860,0.629156,12],[4,8818914,0.414322,12],[4,8818914,0.199488,12],[4,5913860,0.598465,12],[4,8818914,0.138107,12],[4,15874045,0.199488,12],[4,13799007,0.076726,12],[4,22306665,0.076726,12],[4,15874045,0.414322,12],[4,1971287,0.015345,12],[4,19401611,0.199488,12],[4,15874045,0.721228,12],[4,10063937,0.567775,12],[4,8611410,0.107417,12],[4,15459038,0.414322,12],[4,24174200,0.475703,12],[4,5913860,0.445013,12],[4,16081549,0.383632,12],[4,22306665,0.782609,12],[4,16081549,0.567775,12],[4,8403906,1.519182,12],[4,5913860,0.29156,12],[4,4876341,0.015345,12],[4,19194107,0.29156,12],[4,7781395,0.383632,12],[4,7781395,0.322251,12],[4,21476650,1.273657,12],[4,13591503,0.230179,12],[4,5291348,0.230179,12],[4,22514169,0.230179,12],[4,17119069,0.168798,12],[4,17119069,0.29156,12],[4,23759192,0.168798,12],[4,13176495,0.567775,12],[4,5291348,0.383632,12],[4,17119069,0.537084,12],[4,3631318,0.690537,12],[4,13591503,0.414322,12],[4,17326572,0.383632,12],[4,23759192,0.107417,12],[4,17326572,0.475703,12],[4,17326572,0.506394,12],[4,17326572,0.629156,12],[4,17326572,0.690537,12],[4,22099161,0.199488,12],[4,20439130,0.506394,12],[4,17326572,1.028133,12],[4,20439130,0.352941,12],[4,23759192,0.046036,12],[4,3631318,0.230179,12],[4,5706356,0.29156,12],[4,5291348,2.255754,12],[4,2801302,0.199488,12],[4,518760,0.352941,12],[4,20231627,0.690537,12],[4,16911565,0.506394,12],[4,21476650,1.089514,12],[4,16911565,0.475703,12],[4,20854138,0.015345,12],[4,16911565,0.414322,12],[4,10686449,0.046036,12],[4,16911565,0.629156,12],[4,16911565,0.230179,12],[4,21476650,0.936061,12],[4,13591503,0.168798,12],[4,13591503,0.138107,12],[4,5913860,0.537084,13],[4,19816619,0.659847,13],[4,18779099,0.230179,13],[4,25211719,0.046036,13],[4,22514169,0.138107,13],[4,25834231,0.598465,13],[4,18571596,0.506394,13],[4,22514169,0.076726,13],[4,18571596,0.537084,13],[4,4046325,0.168798,13],[4,25211719,0.475703,13],[4,14629022,0.230179,13],[4,3838821,0.046036,13],[4,10063937,0.414322,13],[4,22099161,0.383632,13],[4,18986603,0.107417,13],[4,6328868,0.076726,13],[4,22099161,0.046036,13],[4,19194107,0.26087,13],[4,1141271,0.567775,13],[4,5706356,0.629156,13],[4,22721673,0.107417,13],[4,25626727,0.567775,13],[4,22929177,0.29156,13],[4,22099161,0.659847,13],[4,5913860,0.414322,13],[4,1141271,0.138107,13],[4,9856433,0.107417,13],[4,25834231,0.015345,13],[4,22306665,0.199488,13],[4,1141271,0.107417,13],[4,6743876,0.322251,13],[4,19401611,0.076726,13],[4,6743876,1.273657,13],[4,1141271,0.046036,13],[4,9856433,5.969309,13],[4,14006511,0.107417,13],[4,26456742,0.199488,13],[4,103752,0.199488,13],[4,103752,0.322251,13],[4,10893953,0.966752,13],[4,20854138,0.506394,13],[4,20854138,0.414322,13],[4,726264,0.84399,13],[4,9233922,0.475703,13],[4,10893953,0.168798,13],[4,23759192,0.29156,13],[4,20854138,0.076726,13],[4,7988899,0.567775,13],[4,7988899,0.352941,13],[4,20646634,0.168798,13],[4,23759192,0.230179,13],[4,5291348,0.046036,13],[4,7781395,0.475703,13],[4,7781395,0.046036,13],[4,17119069,0.352941,13],[4,17119069,0.475703,13],[4,20439130,1.212276,13],[4,26249238,0.29156,13],[4,20439130,0.659847,13],[4,23759192,0.138107,13],[4,17326572,0.782609,13],[4,17326572,0.84399,13],[4,17326572,0.87468,13],[4,17534076,0.26087,13],[4,4461333,0.230179,13],[4,518760,0.445013,13],[4,10893953,0.138107,13],[4,9026418,0.138107,13],[4,9026418,0.015345,13],[4,21061642,0.782609,13],[4,21476650,0.107417,13],[4,8818914,0.475703,13],[4,8818914,0.352941,13],[4,13383999,0.168798,13],[4,24589208,0.107417,13],[4,21061642,0.445013,13],[4,15874045,0.230179,13],[4,15874045,0.26087,13],[4,21061642,0.352941,13],[4,15874045,0.537084,13],[4,21061642,0.322251,13],[4,24796711,1.181586,13],[4,10271441,0.352941,13],[4,10271441,0.29156,13],[4,21061642,0.199488,13],[4,24174200,0.383632,13],[4,16081549,0.26087,13],[4,16081549,0.29156,13],[4,24174200,0.322251,13],[4,21061642,0.015345,13],[4,16289053,0.322251,13],[4,103752,0.107417,13],[4,8403906,0.168798,13],[4,8403906,0.076726,13],[4,23966696,0.414322,13],[4,26456742,0.322251,13],[4,15251534,0.506394,13],[4,23966696,0.352941,13],[4,7366387,0.138107,13],[4,311256,0.168798,13],[4,5498852,0.168798,13],[4,17741580,0.29156,13],[4,17741580,0.629156,13],[4,17741580,0.659847,13],[4,17741580,0.813299,13],[4,17741580,0.997442,13],[4,7158883,0.721228,13],[4,7158883,0.506394,13],[4,7158883,0.015345,13],[4,103752,0.475703,13],[4,17949084,0.107417,13],[4,3216310,0.046036,13],[4,17949084,0.199488,13],[4,17949084,0.352941,13],[4,17949084,0.383632,13],[4,14836526,0.598465,13],[4,14836526,0.537084,13],[4,14836526,0.506394,13],[4,26041735,0.046036,13],[4,18156588,0.506394,13],[4,18156588,0.659847,13],[4,21891657,0.046036,13],[4,1348775,0.107417,13],[4,6951379,0.813299,13],[4,6951379,0.598465,13],[4,21891657,0.076726,13],[4,9648930,0.29156,13],[4,18364092,0.29156,13],[4,14214015,0.506394,13],[4,18364092,0.445013,13],[4,17534076,0.537084,13],[4,15044030,0.537084,13],[4,13591503,0.721228,13],[4,518760,0.168798,13],[4,23551688,2.716113,13],[4,17534076,0.721228,13],[4,17534076,0.87468,13],[4,15044030,0.445013,13],[4,13591503,0.87468,13],[4,933767,0.199488,13],[4,933767,0.29156,13],[4,933767,0.322251,13],[4,9441426,0.015345,13],[4,20231627,0.199488,13],[4,311256,0.138107,13],[4,9441426,0.629156,13],[4,5498852,0.046036,13],[4,7366387,1.826087,13],[4,17534076,1.396419,13],[4,933767,0.84399,13],[4,933767,0.782609,13],[4,9441426,0.168798,13],[4,20646634,0.29156,14],[4,20439130,0.015345,14],[4,20231627,0.721228,14],[4,21891657,0.138107,14],[4,4876341,0.905371,14],[4,14214015,0.567775,14],[4,5913860,0.383632,14],[4,20231627,0.168798,14],[4,25419223,0.199488,14],[4,25626727,0.107417,14],[4,4461333,0.199488,14],[4,20646634,0.046036,14],[4,1556279,0.107417,14],[4,21061642,0.076726,14],[4,20854138,0.107417,14],[4,20231627,0.015345,14],[4,21061642,0.29156,14],[4,20231627,0.107417,14],[4,14214015,0.107417,14],[4,4876341,0.046036,14],[4,10063937,0.598465,14],[4,17326572,0.997442,14],[4,26249238,0.138107,14],[4,17119069,0.721228,14],[4,17119069,0.445013,14],[4,13591503,0.352941,14],[4,17119069,0.199488,14],[4,23759192,0.199488,14],[4,7781395,0.26087,14],[4,13591503,0.199488,14],[4,7781395,0.506394,14],[4,16911565,0.905371,14],[4,16911565,0.138107,14],[4,7988899,0.107417,14],[4,7988899,0.138107,14],[4,7988899,0.414322,14],[4,16704061,0.751918,14],[4,16704061,0.598465,14],[4,9441426,0.230179,14],[4,9441426,0.199488,14],[4,933767,0.445013,14],[4,3008806,0.230179,14],[4,311256,0.046036,14],[4,3008806,0.199488,14],[4,3008806,0.168798,14],[4,15044030,0.230179,14],[4,518760,0.076726,14],[4,518760,0.199488,14],[4,17534076,0.567775,14],[4,518760,0.322251,14],[4,17534076,0.475703,14],[4,17534076,0.445013,14],[4,17534076,0.383632,14],[4,2801302,0.076726,14],[4,23759192,0.076726,14],[4,16289053,0.168798,14],[4,24174200,0.138107,14],[4,16289053,0.015345,14],[4,15459038,0.168798,14],[4,15459038,0.322251,14],[4,8611410,0.046036,14],[4,8611410,0.076726,14],[4,15874045,0.629156,14],[4,15874045,0.322251,14],[4,13383999,0.230179,14],[4,8818914,0.168798,14],[4,8818914,0.537084,14],[4,8818914,0.721228,14],[4,15666542,0.629156,14],[4,15666542,0.26087,14],[4,13383999,0.046036,14],[4,9026418,0.046036,14],[4,16704061,0.506394,14],[4,16704061,0.445013,14],[4,16704061,0.352941,14],[4,10686449,0.230179,14],[4,726264,0.322251,14],[4,726264,0.26087,14],[4,10686449,0.414322,14],[4,726264,0.168798,14],[4,103752,0.29156,14],[4,26456742,0.015345,14],[4,26456742,0.138107,14],[4,26456742,0.26087,14],[4,15251534,0.414322,14],[4,23966696,0.322251,14],[4,8403906,0.230179,14],[4,16289053,1.028133,14],[4,103752,0.076726,14],[4,18571596,0.138107,14],[4,13799007,0.015345,14],[4,22306665,0.138107,14],[4,6121364,0.475703,14],[4,18571596,0.230179,14],[4,22929177,0.046036,14],[4,3423814,0.659847,14],[4,18571596,0.751918,14],[4,1141271,0.199488,14],[4,6121364,0.537084,14],[4,1763783,0.168798,14],[4,14629022,0.506394,14],[4,10478945,0.138107,14],[4,18779099,0.322251,14],[4,18779099,0.352941,14],[4,19194107,0.383632,14],[4,10893953,0.383632,14],[4,13176495,0.506394,14],[4,3838821,0.905371,14],[4,22514169,0.168798,14],[4,18986603,0.168798,14],[4,25834231,0.506394,14],[4,10478945,0.26087,14],[4,9856433,0.445013,14],[4,6328868,0.107417,14],[4,9856433,0.475703,14],[4,3838821,0.414322,14],[4,3838821,0.690537,14],[4,933767,0.721228,14],[4,7366387,0.29156,14],[4,311256,0.199488,14],[4,17741580,0.199488,14],[4,17741580,0.352941,14],[4,17741580,0.84399,14],[4,17949084,0.076726,14],[4,3216310,0.107417,14],[4,17949084,0.322251,14],[4,17949084,0.445013,14],[4,17949084,0.475703,14],[4,26041735,0.015345,14],[4,14836526,0.383632,14],[4,3216310,0.168798,14],[4,3216310,0.230179,14],[4,18364092,0.936061,14],[4,18364092,0.87468,14],[4,25211719,0.076726,14],[4,6951379,0.168798,14],[4,6951379,0.26087,14],[4,9648930,0.230179,14],[4,9648930,0.199488,14],[4,3423814,0.199488,14],[4,9648930,0.107417,14],[4,3423814,0.046036,14],[4,5913860,0.659847,14],[4,10063937,0.352941,14],[4,18156588,0.537084,14],[4,24381704,0.26087,15],[4,21476650,0.138107,15],[4,10478945,0.076726,15],[4,21269146,0.26087,15],[4,24381704,0.997442,15],[4,13799007,0.26087,15],[4,13591503,0.997442,15],[4,13591503,0.598465,15],[4,2801302,0.046036,15],[4,3423814,0.383632,15],[4,21891657,0.168798,15],[4,10893953,0.26087,15],[4,10893953,0.199488,15],[4,22929177,0.107417,15],[4,21476650,0.905371,15],[4,22721673,0.506394,15],[4,10686449,0.168798,15],[4,3631318,0.076726,15],[4,103752,0.352941,15],[4,3631318,0.107417,15],[4,3631318,0.199488,15],[4,3631318,0.721228,15],[4,10478945,0.782609,15],[4,23966696,0.383632,15],[4,23966696,0.629156,15],[4,10478945,0.352941,15],[4,16911565,0.168798,15],[4,7988899,0.445013,15],[4,25834231,0.107417,15],[4,16704061,0.26087,15],[4,9233922,0.506394,15],[4,6328868,0.046036,15],[4,19194107,0.076726,15],[4,9233922,0.26087,15],[4,9233922,0.199488,15],[4,19194107,0.414322,15],[4,6121364,0.997442,15],[4,6121364,0.046036,15],[4,6121364,0.015345,15],[4,19401611,0.230179,15],[4,16496557,0.046036,15],[4,15251534,0.445013,15],[4,15251534,0.475703,15],[4,26456742,0.475703,15],[4,8403906,0.199488,15],[4,18156588,0.751918,15],[4,18156588,0.475703,15],[4,17949084,0.138107,15],[4,18364092,0.782609,15],[4,7158883,0.138107,15],[4,6743876,0.199488,15],[4,18571596,0.168798,15],[4,7366387,0.076726,15],[4,9441426,0.107417,15],[4,6536372,0.475703,15],[4,933767,0.26087,15],[4,17534076,0.905371,15],[4,15044030,0.475703,15],[4,18779099,0.138107,15],[4,17534076,0.322251,15],[4,18986603,0.046036,15],[4,17326572,0.29156,15],[4,9856433,0.199488,15],[4,18986603,0.782609,15],[4,9856433,0.567775,15],[4,9233922,0.015345,15],[4,1348775,0.168798,15],[4,5498852,0.813299,15],[4,16081549,0.230179,15],[4,20439130,0.322251,15],[4,8611410,0.230179,15],[4,25419223,4.035806,15],[4,20854138,0.046036,15],[4,8611410,0.322251,15],[4,15874045,0.475703,15],[4,14006511,0.199488,15],[4,15874045,0.107417,15],[4,8818914,0.322251,15],[4,25419223,0.168798,15],[4,21061642,0.721228,15],[4,15666542,0.537084,15],[4,15666542,0.046036,15],[4,21269146,0.076726,15],[4,21269146,0.107417,15],[4,20024123,0.046036,15],[4,5706356,0.199488,15],[4,16289053,0.751918,15],[4,5706356,0.352941,15],[4,16289053,1.181586,15],[4,19816619,0.107417,15],[4,14214015,0.629156,15],[4,5913860,0.138107,15],[4,14214015,0.383632,15],[4,14214015,0.445013,15],[4,8403906,0.322251,15],[4,16289053,0.076726,15],[4,17949084,0.230179,16],[4,15044030,0.414322,16],[4,726264,0.138107,16],[4,23136681,0.015345,16],[4,3216310,0.076726,16],[4,9441426,0.076726,16],[4,16496557,0.230179,16],[4,8818914,0.015345,16],[4,933767,0.475703,16],[4,7366387,0.168798,16],[4,9026418,0.322251,16],[4,23966696,0.26087,16],[4,17741580,0.322251,16],[4,26456742,0.168798,16],[4,23966696,0.659847,16],[4,17949084,0.046036,16],[4,14836526,0.26087,16],[4,9233922,0.352941,16],[4,10686449,0.138107,16],[4,16704061,0.322251,16],[4,16081549,0.475703,16],[4,16911565,0.26087,16],[4,16081549,0.138107,16],[4,10893953,0.29156,16],[4,16911565,0.352941,16],[4,7781395,0.29156,16],[4,7781395,0.076726,16],[4,24174200,0.046036,16],[4,17119069,0.322251,16],[4,17119069,0.414322,16],[4,16081549,0.107417,16],[4,16081549,0.046036,16],[4,17326572,1.181586,16],[4,17534076,0.199488,16],[4,23759192,0.015345,16],[4,17534076,0.230179,16],[4,726264,0.199488,16],[4,17534076,0.598465,16],[4,518760,0.107417,16],[4,13591503,0.782609,16],[4,1763783,0.138107,16],[4,3838821,0.199488,16],[4,5291348,0.107417,16],[4,5291348,0.199488,16],[4,6536372,0.138107,16],[4,20439130,0.076726,16],[4,18779099,0.015345,16],[4,18779099,0.29156,16],[4,20231627,0.537084,16],[4,14629022,0.199488,16],[4,1348775,0.230179,16],[4,10063937,0.199488,16],[4,10063937,0.322251,16],[4,19609115,0.322251,16],[4,22514169,0.015345,16],[4,9856433,0.015345,16],[4,25626727,0.168798,16],[4,20024123,0.076726,16],[4,9856433,0.138107,16],[4,22514169,0.199488,16],[4,19816619,0.138107,16],[4,5913860,0.322251,16],[4,19194107,0.445013,16],[4,3423814,0.107417,16],[4,9648930,0.168798,16],[4,22306665,0.107417,16],[4,10478945,0.199488,16],[4,6951379,0.29156,16],[4,10478945,0.29156,16],[4,21061642,0.26087,16],[4,6951379,0.076726,16],[4,1556279,0.015345,16],[4,18364092,0.475703,16],[4,14006511,0.076726,16],[4,6743876,0.29156,16],[4,10063937,0.138107,16],[4,20854138,0.230179,16],[4,6328868,0.322251,16],[4,25834231,0.046036,16],[4,18571596,0.322251,16],[4,25834231,0.26087,16],[4,1763783,0.29156,16],[4,10063937,0.107417,17],[4,15251534,0.322251,17],[4,10063937,0.076726,17],[4,26456742,0.29156,17],[4,10063937,0.445013,17],[4,8403906,0.046036,17],[4,24589208,1.212276,17],[4,21269146,0.659847,17],[4,4668837,3.207161,17],[4,21269146,0.813299,17],[4,8818914,0.598465,17],[4,15874045,0.445013,17],[4,1971287,0.046036,17],[4,20854138,0.29156,17],[4,5291348,0.076726,17],[4,15459038,0.567775,17],[4,8611410,0.138107,17],[4,8611410,0.015345,17],[4,24174200,0.230179,17],[4,14214015,0.29156,17],[4,20024123,0.199488,17],[4,16289053,0.475703,17],[4,19816619,0.168798,17],[4,8403906,0.506394,17],[4,5913860,0.015345,17],[4,23966696,0.506394,17],[4,14629022,0.138107,17],[4,2801302,0.168798,17],[4,518760,0.383632,17],[4,18779099,0.629156,17],[4,6536372,0.015345,17],[4,933767,0.168798,17],[4,15044030,0.168798,17],[4,1763783,0.076726,17],[4,18571596,0.414322,17],[4,22929177,0.076726,17],[4,17741580,0.168798,17],[4,18571596,0.107417,17],[4,17741580,0.445013,17],[4,17741580,0.751918,17],[4,17741580,0.782609,17],[4,18364092,0.997442,17],[4,18364092,0.322251,17],[4,14836526,0.352941,17],[4,18156588,0.168798,17],[4,18156588,0.322251,17],[4,6951379,0.475703,17],[4,14836526,0.076726,17],[4,9648930,0.046036,17],[4,9233922,0.168798,17],[4,10686449,0.352941,17],[4,19194107,0.199488,17],[4,10686449,0.26087,17],[4,9233922,0.445013,17],[4,10478945,0.322251,17],[4,6328868,0.199488,17],[4,10893953,0.230179,17],[4,3838821,0.107417,17],[4,3838821,0.015345,17],[4,16911565,0.537084,17],[4,16911565,0.598465,17],[4,25834231,0.322251,17],[4,7781395,0.107417,17],[4,9856433,0.383632,17],[4,9856433,0.26087,17],[4,13591503,0.322251,17],[4,26249238,0.076726,17],[4,17326572,0.445013,17],[4,9856433,0.076726,17],[4,9856433,0.046036,17],[4,14629022,0.015345,17],[4,17534076,0.29156,17],[4,103752,0.015345,18],[4,20854138,0.537084,18],[4,21061642,0.230179,18],[4,15251534,0.138107,18],[4,19609115,0.138107,18],[4,4046325,0.107417,18],[4,4046325,0.076726,18],[4,17741580,0.690537,18],[4,8196403,0.015345,18],[4,22306665,0.015345,18],[4,18779099,0.107417,18],[4,6536372,0.076726,18],[4,6536372,0.322251,18],[4,7988899,0.629156,18],[4,22514169,0.107417,18],[4,1763783,0.015345,18],[4,14836526,0.29156,18],[4,14836526,0.199488,18],[4,3423814,0.322251,18],[4,8818914,0.046036,18],[4,15874045,0.076726,18],[4,5291348,0.168798,18],[4,15874045,0.138107,18],[4,15666542,0.199488,18],[4,15666542,0.076726,18],[4,16081549,0.076726,18],[4,9026418,0.076726,18],[4,9026418,0.199488,18],[4,16081549,0.168798,18],[4,15459038,0.352941,18],[4,20854138,0.138107,18],[4,20854138,0.199488,18],[4,20854138,0.26087,18],[4,20854138,0.352941,18],[4,20854138,0.383632,18],[4,5706356,0.076726,18],[4,17741580,0.26087,18],[4,10063937,0.168798,18],[4,17326572,0.322251,18],[4,10063937,0.26087,18],[4,17326572,0.414322,18],[4,14006511,0.046036,18],[4,14006511,0.015345,18],[4,17326572,0.721228,18],[4,13799007,0.199488,18],[4,17326572,0.751918,18],[4,3008806,0.107417,18],[4,311256,0.107417,18],[4,13591503,0.107417,18],[4,17534076,0.138107,18],[4,13591503,0.015345,18],[4,10686449,0.076726,18],[4,933767,0.046036,18],[4,24174200,0.107417,18],[4,18156588,0.383632,18],[4,17119069,0.383632,18],[4,9648930,0.015345,18],[4,9648930,0.138107,18],[4,18364092,0.383632,18],[4,9856433,0.230179,18],[4,14836526,0.046036,18],[4,10063937,0.046036,18],[4,7366387,0.046036,19],[4,17119069,0.076726,19],[4,15874045,0.168798,19],[4,6951379,0.138107,19],[4,17119069,0.230179,19],[4,933767,0.015345,19],[4,17119069,0.015345,19],[4,17534076,0.168798,19],[4,17119069,0.107417,19],[4,18571596,0.199488,19],[4,16289053,0.046036,19],[4,18156588,0.26087,19],[4,17534076,0.107417,19],[4,16911565,0.199488,19],[4,26456742,0.537084,19],[4,17326572,0.905371,19],[4,17326572,0.813299,19],[4,18571596,0.475703,19],[4,18571596,0.046036,19],[4,16496557,0.322251,19],[4,18364092,0.414322,19],[4,18779099,0.046036,19],[4,726264,0.076726,19],[4,726264,0.107417,19],[4,726264,0.445013,19],[4,25834231,0.168798,19],[4,18364092,0.352941,19],[4,3631318,0.29156,19],[4,3838821,0.26087,19],[4,22306665,0.230179,19],[4,9441426,0.046036,19],[4,15044030,0.26087,19],[4,9441426,0.414322,19],[4,22929177,0.138107,19],[4,14836526,0.107417,19],[4,3423814,0.26087,19],[4,9648930,0.076726,19],[4,10063937,0.230179,19],[4,14006511,0.230179,19],[4,10271441,0.076726,19],[4,15874045,0.015345,19],[4,10478945,0.107417,19],[4,24174200,0.076726,19],[4,10686449,0.107417,19],[4,23966696,0.168798,19],[4,23966696,0.29156,19],[4,15666542,0.015345,19],[4,6951379,0.230179,20],[4,16911565,0.046036,20],[4,16911565,0.076726,20],[4,16911565,0.107417,20],[4,103752,0.138107,20],[4,16911565,0.751918,20],[4,7366387,0.107417,20],[4,22929177,0.015345,20],[4,18571596,0.076726,20],[4,17119069,0.26087,20],[4,3008806,0.015345,20],[4,17326572,0.107417,20],[4,17326572,0.168798,20],[4,3423814,0.076726,20],[4,18364092,0.230179,20],[4,6951379,0.107417,20],[4,6951379,0.015345,20],[4,17326572,0.537084,20],[4,17326572,0.567775,20],[4,3423814,0.015345,20],[4,8818914,0.230179,20],[4,15666542,0.138107,20],[4,15874045,0.383632,20],[4,16081549,0.015345,20],[4,20024123,0.015345,20],[4,20854138,0.322251,20],[4,15251534,0.29156,20],[4,5913860,0.199488,20],[4,15251534,0.230179,20],[4,16496557,1.120205,20],[4,21269146,0.015345,20],[4,21269146,0.046036,20],[4,16704061,0.138107,20],[4,7988899,0.383632,20],[4,15044030,0.383632,20],[4,17741580,0.107417,21],[4,15459038,0.230179,21],[4,10478945,0.015345,21],[4,16704061,0.230179,21],[4,25626727,0.383632,21],[4,20231627,0.046036,21],[4,15459038,0.26087,21],[4,16081549,0.199488,21],[4,23966696,0.046036,21],[4,15459038,0.383632,21],[4,16704061,0.29156,21],[4,16704061,0.383632,21],[4,16911565,0.015345,21],[4,20231627,0.138107,21],[4,20231627,0.076726,21],[4,9233922,0.076726,21],[4,4253829,0.230179,21],[4,518760,0.230179,21],[4,25834231,0.138107,21],[4,17119069,0.046036,21],[4,3423814,0.138107,21],[4,6743876,0.015345,21],[4,6743876,0.475703,21],[4,14629022,0.046036,21],[4,15044030,0.352941,21],[4,9856433,0.168798,21],[4,22306665,0.046036,21],[4,8403906,0.015345,21],[4,18571596,0.29156,21],[4,9233922,0.046036,21],[4,18156588,0.352941,22],[4,18156588,0.29156,22],[4,18156588,0.199488,22],[4,18364092,0.168798,22],[4,18364092,0.199488,22],[4,5913860,0.168798,22],[4,19816619,0.015345,22],[4,5706356,0.015345,22],[4,4046325,0.046036,22],[4,24174200,0.168798,22],[4,10893953,0.046036,22],[4,13591503,0.046036,22],[4,14836526,0.168798,22],[4,15044030,0.046036,22],[4,15044030,0.138107,22],[4,15251534,0.076726,22],[4,15874045,0.046036,22],[4,16289053,0.107417,22],[4,16289053,0.138107,22],[4,7988899,0.046036,22],[4,17326572,0.230179,22],[4,17326572,0.26087,22],[4,17326572,0.598465,22],[4,16704061,0.076726,23],[4,15459038,0.107417,23],[4,16704061,0.168798,23],[4,1141271,0.076726,23],[4,17741580,0.230179,23],[4,16911565,0.29156,23],[4,15459038,0.138107,23],[4,20854138,0.168798,23],[4,26456742,0.046036,23],[4,13383999,0.015345,23],[4,5913860,0.076726,23],[4,6743876,0.076726,23],[4,18156588,0.107417,23],[4,15044030,0.076726,23],[4,3631318,0.046036,23],[4,14836526,0.230179,23],[4,20231627,0.230179,23],[4,17741580,0.015345,23],[4,22929177,0.199488,23],[4,14836526,0.138107,23],[4,26456742,0.445013,23],[4,25626727,0.84399,23],[4,10063937,0.015345,23],[4,8403906,0.629156,23],[4,17741580,0.383632,23],[4,23136681,0.230179,23],[4,7158883,0.107417,23],[4,23966696,0.230179,24],[4,16496557,0.138107,24],[4,8818914,0.076726,24],[4,10478945,0.168798,24],[4,6951379,0.046036,24],[4,18364092,0.015345,24],[4,14629022,0.076726,24],[4,3423814,0.168798,24],[4,17741580,0.046036,24],[4,9441426,0.29156,24],[4,518760,0.015345,24],[4,22099161,0.076726,24],[4,7781395,0.015345,24],[4,16704061,0.046036,24],[4,23966696,0.138107,25],[4,15459038,0.199488,25],[4,9233922,0.138107,25],[4,22099161,0.015345,25],[4,10478945,0.046036,25],[4,15251534,0.107417,25],[4,17326572,0.199488,25],[4,24174200,0.015345,25],[4,18364092,0.046036,25],[4,7366387,0.015345,25],[4,18156588,0.230179,25],[4,8818914,0.107417,26],[4,10893953,0.015345,26],[4,14836526,0.015345,26],[4,5913860,0.107417,26],[4,18156588,0.046036,26],[4,15459038,0.076726,26],[4,15044030,0.015345,26],[4,18156588,0.076726,26],[4,17326572,0.138107,26],[4,15251534,0.168798,26],[4,16704061,0.107417,26],[4,10478945,0.230179,27],[4,9233922,0.230179,27],[4,18156588,0.015345,27],[4,5291348,0.015345,27],[4,15251534,0.26087,27],[4,15459038,0.015345,27],[4,13591503,0.076726,27],[4,726264,0.015345,27],[4,23966696,0.076726,28],[4,18156588,0.138107,28],[4,17326572,0.046036,28],[4,18364092,0.138107,28],[4,16704061,0.015345,28],[4,726264,0.046036,28],[4,5706356,0.138107,29],[4,26456742,0.076726,29],[4,10893953,0.107417,29],[4,17741580,0.076726,29],[4,17326572,0.076726,29],[4,15251534,0.015345,29],[4,10686449,0.015345,30],[4,18364092,0.107417,30],[4,17119069,0.138107,30],[4,17534076,0.046036,30],[4,17534076,0.076726,30],[4,23966696,0.015345,30],[4,15044030,0.107417,31],[4,18571596,0.26087,31],[4,15251534,0.046036,31],[4,15459038,0.046036,32],[4,5291348,0.138107,32],[4,17534076,0.015345,32],[4,19816619,0.046036,33],[4,18364092,0.076726,33],[4,17949084,0.015345,33],[4,3216310,0.015345,34],[4,18571596,0.015345,34],[4,20231627,0.29156,35],[4,8403906,0.107417,35],[4,23966696,0.107417,36],[4,17326572,0.015345,36],[4,18364092,0.26087,36]]}\n';});

Iris.define('renderers/manhattan',[
    'jquery',
    'iris',
    'util/dragbox',
    'util/scale',
    'underscore',
    "text!examples/manhattan.json"
],
function ($, Iris, DragBox, Scale, _, ExampleData) {
    function createCanvas(container, options) {
        options = (options || {});
        var canvas = $("<canvas>")
            .attr("width", container.width())
            .attr("height", container.height())
            .css("position", "absolute")
            .css("z-index", options.z || 1);
        container.append(canvas);
        return canvas[0].getContext('2d');
    }

    function color(r, cc, c) { return cc.min[c] - Math.floor(r * cc.range[c]); }

    var PI2          = Math.PI * 2;
    var AXIS_COLOR   = '#CCC';
    var RADIUS       = 2;
    var DRAW_DISCS   = true;
    var XGUTTER      = 10;
    var PINTENSITY   = 0.4;
    var YAXIS_WIDTH  = 30;
    var XAXIS_HEIGHT = 80;
    
    var COLORS = [
        { max: [0, 0, 0],   min: [150, 150, 150], range: [150, 150, 150] },
        { max: [255, 0, 0], min: [255, 165, 0],   range: [0, 165, 0] }
    ];

    /**
     * @class Manhattan
     * Manhattan Plot
     * 
     * @extends Renderer
     */
    var Manhattan = Iris.Renderer.extend({
        about: {
            title: "Manhattan Plot",
            name: "ManhattanPlot",
            author: "Andrew Olson"
        },
        /**
         * @method initialize
         * @inheritdoc Renderer#initialize
         */
        initialize: function (options) {
            options = options || {};
            options.filterContig =
                (options.filterContig || function () { return false; });
            this.$element = $(options.element);

            this.yAxis = new Scale();
            this.xAxis = new Scale();
            this.canvasWidth = null;
            this.canvasHeight = null;
            this.ctx = null;
            this.genomeLength = 0;

            this.ctgOrder = [];
            this.ctgIndex = [];
            this.contigs = null;
            this.variations = null;
            this.maxscore = null;
            this.ctgXsize = null;
            this.options = options;
        },
        setData: function (data) {
            if (data === null || _.isEmpty(data)) return;
            this.contigs = {};
            for (var i = 0; i < data.contigs.length; i++) {
                var ctg = data.contigs[i];
                if (this.options.filterContig(ctg)) {
                    continue;
                }
                var key = ctg.id;
                this.contigs[key] = ctg;
                this.ctgIndex.push(key);
                this.ctgOrder.push(key);
                this.genomeLength += ctg.len;
            }
            this.variations  = data.variations;
            this.maxscore    = data.maxscore;
            if (!this.maxscore) {
                this.maxscore = _.max(_.map(this.variations, function (v) {
                    return v[2];
                }));
            }
        },
        getData: function () {
            return {
                contigs:    this.contigs,
                variations: this.variations,
                maxscore:   this.maxscore
            };
        },
        render: function (args) {
            var self = this;
            args = (args || {});
            self.$element.empty();

            // Fix height/width to prevent resizing artifacts
            self.$element.height(self.$element.height());
            self.$element.width(self.$element.width());

            var containerHeight = self.$element.height();
            var containerWidth  = self.$element.width();
            self.canvasHeight = containerHeight - XAXIS_HEIGHT;
            self.canvasWidth  = containerWidth  - YAXIS_WIDTH;
            self.$element.css("position", "relative");
            self.plotArea =
                $('<div>').css("position", "absolute").css("left", YAXIS_WIDTH);
            self.plotArea.width(self.canvasWidth).height(self.canvasHeight);
            self.ctx = createCanvas(self.plotArea, { z: 5 });
            self.$element.append(self.plotArea);
            self.drawManhattan();
        },
        highlight: function (loci) {
            var self = this;
            var ctx = self.hlCtx;
            if (ctx) {
                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
            } else {
                ctx = self.hlCtx = createCanvas(self.plotArea, { z: 1 });
            }
            ctx.strokeStyle = "rgba(31,120,180,0.7)";
            ctx.fillStyle = "rgba(166,206,227,0.7)";
            ctx.lineWidth = 0.5;
            loci.forEach(function (locus) {
                if (locus === null) return;
                var ctg = self.contigs[locus.contig];
                var x = ctg.scale.toRange(locus.pos);
                ctx.beginPath();
                ctx.arc(Math.floor(x), 10, RADIUS * 2, 0, PI2, true);
                ctx.closePath();
                ctx.fill();
                ctx.stroke();
            });
        },
        unhighlight: function () {
            var ctx = this.hlCtx;
            if (ctx) {
                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
            }
        },
        setRanges: function () {
            var yAxisMax = Math.ceil(this.maxscore) + 1;
            this.yAxis.domain([0, yAxisMax]);
            this.yAxis.range([this.canvasHeight, 0]);
            if (this.genomeLength === 0) {
                throw new Error("setRanges(): Contig data not set");
            }
            
            this.xAxis.domain([0, this.genomeLength]);
            this.xAxis.range([0, this.canvasWidth -
                (this.ctgOrder.length + 1) * XGUTTER]);
        },
        drawAxes: function () {
            var self = this;
            var offset = 0;
            var axisContext = createCanvas(self.$element, { z: 1 });
            
            function contigsAreWide() {
                var shortest = self.contigs[self.ctgOrder.slice(-1)[0]];
                return (self.xAxis.toRange(shortest.len) > 50);
            }
            axisContext.strokeStyle = AXIS_COLOR;
            axisContext.fillStyle = AXIS_COLOR;
            axisContext.beginPath();
            axisContext.moveTo(YAXIS_WIDTH - offset, 0);
            axisContext.lineTo(YAXIS_WIDTH - offset,
                self.canvasHeight + offset);
            axisContext.lineTo(self.$element.width(),    
                self.canvasHeight + offset);
            axisContext.stroke();
            axisContext.closePath();
            function verticalLabel(text, x, y, options) {
                options = (options || {});
                axisContext.save();
                if (options.callback) {
                    options.callback(axisContext);
                }
                axisContext.translate(x, y);
                axisContext.rotate(-Math.PI/2);
                axisContext.textAlign = options.align || "right";
                axisContext.textBaseline = options.baseline || "middle";
                axisContext.fillText(text, 0, 0);
                axisContext.restore();
            }
            function horizontalLabeler(text, x, y, options) {
                options = (options || {});
                axisContext.save();
                axisContext.textAlign = "center";
                axisContext.textBaseline = options.baseline || "top";
                axisContext.fillText(text, x, y);
                axisContext.restore();
            }
            var horizontalContigs = contigsAreWide();
            var labeler = horizontalContigs ? horizontalLabeler : verticalLabel;
            var labelOffset = YAXIS_WIDTH + XGUTTER;
            self.ctgOrder.forEach(function (key) {
                var ctg = self.contigs[key];
                var ctgWidth = self.xAxis.toRange(ctg.len);
                var origin = labelOffset + ctgWidth / 2;
                labeler(ctg.name, origin, self.canvasHeight + offset + 1);
                labelOffset += ctgWidth + XGUTTER;
            });
            horizontalLabeler("Contigs",
                YAXIS_WIDTH + self.canvasWidth / 2,
                horizontalContigs ?
                    self.canvasHeight + 40 :
                    XAXIS_HEIGHT + self.canvasHeight - 1,
                { baseline: "bottom" }
            );
            
            verticalLabel("Significance", 0, self.canvasHeight / 2,
                { align: "center", baseline: "top" }
            );
            verticalLabel("-log p", 12, self.canvasHeight / 2,
                { align: "center", baseline: "top",
                    callback: function (context) {
                        context.font = "italic 6pt sans-serif";
                    }
                }
            );
            axisContext.textAlign = "right";
            axisContext.textBaseline = "top";
            axisContext.fillText(self.yAxis.domain()[1], YAXIS_WIDTH - 1, 0);
            axisContext.textBaseline = "bottom";
            axisContext.fillText(self.yAxis.domain()[0], YAXIS_WIDTH - 1,
                self.canvasHeight);
        },
        drawManhattan: function () {
            var self = this;
            self.setRanges();
            self.drawAxes();

            var dragbox = new DragBox(self.plotArea, { z: 10 });
            dragbox.textHandler(function (x, y, w, h) {
                var pvals = [
                    self.yAxis.toDomain(y).toFixed(2),
                    self.yAxis.toDomain(y + h).toFixed(2)
                ].sort();
                return "-log p [" + pvals[0] + " " + pvals[1] + "]";
            });
            dragbox.pinpointHandler(function (x, y) {
                self.trigger("pinpoint", [
                    self.canvasToScore(y), self.canvasToCtg(x, x)
                ]);
            });
            dragbox.selectionHandler(function (x1, y1, x2, y2) {
                self.trigger("selection", [
                    self.canvasToScore(y1),
                    self.canvasToScore(y2),
                    self.canvasToCtg(x1, x2)
                ]);
            });
            
            var offset = XGUTTER;
            var ctg;
            // Per-contig scales and offsets
            for (var i = 0; i < self.ctgOrder.length; i++) {
                ctg = self.ctgOrder[i];
                var scale = self.contigs[ctg].scale = new Scale();
                var lenPx = self.xAxis.toRange(self.contigs[ctg].len);
                scale.domain([0, self.contigs[ctg].len]);
                scale.range([offset, offset + lenPx]);
                self.contigs[ctg].offset = offset + XGUTTER;
                offset += lenPx + XGUTTER;
            }
            self.scatterplot();
        },
        
        scatterplot: function () {
            function intensity(v) { return Math.pow(v + 1, PINTENSITY); }
            var normalized = intensity(this.maxscore);

            // create a 2D histogram
            var histogram = {};
            var x2color = {};
            var maxTally=1;
            for (var i = 0; i < this.variations.length; i++) {
                var ctgN   = this.variations[i][0];
                var xcoord = this.variations[i][1];
                var ycoord = this.variations[i][2];
                if (this.ctgIndex[ctgN] === null) continue;
                var ctg    = this.contigs[this.ctgIndex[ctgN]];
                var x      = ctg.scale.toRange(xcoord);
                var y      = this.yAxis.toRange(ycoord);
                var xbin   = 1.5*RADIUS * Math.floor(x/(1.5*RADIUS));
                var ybin   = 1.5*RADIUS * Math.floor(y/(1.5*RADIUS));
                x2color[xbin] = COLORS[ctgN % COLORS.length];
                if (histogram.hasOwnProperty(xbin)) {
                    if (histogram[xbin].hasOwnProperty(ybin)) {
                        histogram[xbin][ybin]++;
                    } else {
                        histogram[xbin][ybin]=1;
                    }
                } else {
                    histogram[xbin] = {};
                    histogram[xbin][ybin] = 1;
                }
                if (histogram[xbin][ybin] > maxTally) {
                    maxTally = histogram[xbin][ybin];
                }
            }

            for (var x in histogram) {
                var ctgcolor = x2color[x];
                for (var y in histogram[x]) {
                    var ratio = histogram[x][y]/maxTally;
                    var r = color(ratio, ctgcolor, 0);
                    var g = color(ratio, ctgcolor, 1);
                    var b = color(ratio, ctgcolor, 2);
                    
                    this.ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
                    
                    this.ctx.beginPath();
                    this.ctx.arc(Math.floor(x), Math.floor(y), RADIUS, 0, PI2, true);
                    this.ctx.closePath();
                    this.ctx.fill();
                }
            }
        },

        canvasToCtg: function (a, b) {
            // TODO: Major cleanup on Aisle 5!
            var ranges = [];
            var offset = XGUTTER;
            var aCtg = 0;
            var bCtg = 0;
            var gutters = (this.ctgIndex.length + 1) * XGUTTER;
            var nt2px = (this.canvasWidth - gutters) / this.genomeLength;
            var aPos, bPos;
            for (i = 0; i < this.ctgOrder.length; i++) {
                var ctg = this.ctgOrder[i];
                var len = this.contigs[ctg].len;
                var ctgXsize = nt2px * len;
                if (a >= offset - XGUTTER && a <= offset + ctgXsize) {
                    aCtg = i;
                    aPos = Math.floor(len * Math.max(a - offset, 0) / ctgXsize);
                }
                if (b >= offset && b <= offset + ctgXsize + XGUTTER) {
                    bCtg = i;
                    bPos = Math.ceil(len * Math.max(b - offset, 0) / ctgXsize);
                }
                offset += ctgXsize + XGUTTER;
            }
            if (aCtg <= bCtg) {
                if (aCtg === bCtg) {
                    ranges[0] = [this.ctgOrder[aCtg], aPos, bPos];
                } else if (aCtg === bCtg - 1) {
                    ranges[0] =
                        [this.ctgOrder[aCtg], aPos,
                            this.contigs[this.ctgOrder[aCtg]].len];
                    ranges[1] = [this.ctgOrder[bCtg], 0, bPos];
                } else {
                    ranges[0] =
                        [this.ctgOrder[aCtg], aPos,
                            this.contigs[this.ctgOrder[aCtg]].len];
                    for (i = 1; i < bCtg - aCtg; i++) {
                        ranges[i] =
                            [this.ctgOrder[aCtg + i], 0,
                                this.contigs[this.ctgOrder[aCtg + i]].len];
                    }
                    ranges[bCtg - aCtg] = [this.ctgOrder[bCtg], 0, bPos];
                }
            }
            return ranges;
        },
        canvasToScore: function (py) {
            return this.yAxis.toDomain(py);
        }
    });
    Manhattan.prototype.exampleData = function () {
        return JSON.parse(ExampleData);
    };
    return Manhattan;
});
Iris.define('util/hud',["jquery", "underscore"], function(JQ, _) {
    var defaults = {
        position: { top: 20, left: 20 },
        element: "body",
        width: 300,
        height: 50,
        close: true,
        draggable: false
    }
    function HUD(options) {
        var self = this;
        options = options ? _.clone(options) : {}; 
        _.defaults(options, defaults);
        var $hud = JQ("<div>").addClass("hud")
            .css("width", options.width)
            .css("min-height", options.height)
            .css("display", "none")
            .css("position", "absolute");
        if (options.z != undefined) { $hud.css("z-index", options.z) };
        var $content = JQ("<div>").addClass("hud-content");
        if (options.close) {
            function closeButton() {
                var button = JQ("<button>").addClass("close").html("&times;");
                button.on("click", function () { self.dismiss() });
                return button;
            }
            $hud.append(closeButton());
        }
        if (options.title) {
            $hud.append(JQ("<h4>", { id: "title" }).text(options.title));
        } else {
            $content.css("margin", "15px 0 0").css("padding", 0);
        }
        if (options.draggable) {
            $hud.draggable();
        }
        $hud.append($content);
        for (var prop in options.position) {
            $hud.css(prop, options.position[prop]);
        }
        JQ(options.element).append($hud);
        if (options.width) { $hud.width(options.width) }
        JQ.extend(this, $content);
        
        self.show = function () {
            $hud.fadeIn();
        }
        self.dismiss = function () {
            $hud.fadeOut()  ;
            self.trigger("dismiss", []);
        };
        return self;
    }
    return HUD;
});
Iris.define('util/dock',['jquery', 'd3', 'util/eventemitter', 'util/hud'],
function (JQ, d3, EventEmitter, HUD) {
    
    var DOCK_HEIGHT = 30;
    var Dock = function (parentElement) {  
        var self = this;

        var parent;
        var dock;
        var dockDims;
        var docked = {};
        var updateActions = [];
        if (parent) { setParent(parent) }
        var dockRenderPromise = JQ.Deferred();
        
        var dockHudContentCallback = function (nodes) {
            var dock = this;
            var list = JQ("<ul>");
            dock.hud.append(list);
            nodes.forEach(function (d) {
                list.append("<li>" + d.name + "</li>");
            });
        }
        
        function dockDragStart() {
            this._elemOffsets = [];
            this._yoffset = d3.event.sourceEvent.pageY - dockDims.y1;
            for (var key in docked) {
                this._elemOffsets[key] = docked[key][0].py - dockDims.y1;
            }
        }
        
        function dockDrag() {
            dock.attr("y", dockDims.y1 = d3.event.y - this._yoffset);
            for (var key in docked) {
                var el = docked[key];
                var y = dockDims.y1 + this._elemOffsets[key];
                el[1].attr("cy", y);
                el[0].py = el[0].y = y;
            }
        }
        
        function dockDragEnd() {
            for (var key in docked) {
                var el = docked[key];
                var y = dockDims.y1 + this._elemOffsets[key];
                el[1].attr("cy", y);
                el[0].py = el[0].y = y;
            }
            dockDims.y2 = dockDims.y1 + dockDims.h;
        }

        self.setParent = function (parentElement) {
            parent = parentElement;
            var w = parent.attr("width");
            var h = parent.attr("height");
            dockDims = { x1: w / 4, y1: h / 2, w: w / 2, h: DOCK_HEIGHT };
            dockDims.x2 = dockDims.x1 + dockDims.w; // For convenience
            dockDims.y2 = dockDims.y1 + dockDims.h; // For convenience
            dock = parent.append("rect")
                .attr("id", "networkDock")
                .attr("width",  dockDims.w)
                .attr("height", dockDims.h)
                .attr("rx", 5)
                .attr("ry", 5)
                .attr("x", dockDims.x1)
                .attr("y", dockDims.y1)
                .style("fill", "black")
                .style("opacity", "0.1")
                .call(d3.behavior.drag()
                    .on("dragstart", dockDragStart)
                    .on("drag", dockDrag)
                    .on("dragend", dockDragEnd)
                );
            
            dock
                .on("mouseover", function () { dock.style("opacity", 0.2); })
                .on("mouseout",  function () { dock.style("opacity", 0.1); })
                .on("click", dockhud);

            self.changedState = false;
            dockRenderPromise.resolve();
            return self;
        }
        
        var hud = self.hud = new HUD({
            width: 300,
            position: { top: 120, right: 20 },
            title: "Dock",
            draggable: true
        });
        
        self.updateHud = function () {
            hud.empty();
            var nodes = [];
            for (var key in docked) {
                nodes.push(docked[key][0]);
            }
            dockHudContentCallback.call(self, nodes);
            updateActions.forEach(function (callback) {
                callback.call(self, nodes);
            });
        }
        
        function dockhud() {
            self.updateHud();
            hud.show();
        }
        
        self.drag = function () {
            return d3.behavior.drag()
                .on("dragstart", nodeDragstart)
                .on("drag",      nodeDragmove)
                .on("dragend",   nodeDragend);
        }

        function nodeDragstart() {
            self.emit("dragstart.dock");
        }
        
        function nodeDragmove(d) {
            d.px += d3.event.dx;
            d.py += d3.event.dy;
            d.x += d3.event.dx;
            d.y += d3.event.dy; 
            self.emit("dragmove.dock", d);
        }
        
        function nodeDragend(d) {
            var draggedNode = this;
            var selected = d3.select(draggedNode);
            if (intersects(d)) {
                self.dockElement(d, selected);
            } else {
                self.undockElement(d, selected);
            }
            self.emit("dragend.dock", d);
        }
        
        function intersects(d, a) {
            a = (a || "");
            var x = a + "x";
            var y = a + "y";
            return d[x] >= dockDims.x1 &&
                   d[x] <= dockDims.x2 &&
                   d[y] >= dockDims.y1 &&
                   d[y] <= dockDims.y2
        }
        
        self.dockElement = function (d, element) {
            if (d == null) {
                throw Error("Cannot dock a null element");
            }
            d.fixed = true;
            docked[d.id] = [d, element];
            self.updateHud();
            self.emit("dock", [d, element]);             
        }
        
        self.undockElement = function (d, element) {
            if (d == null) {
                throw Error("Cannot undock a null element");
            }
            d.fixed = false;
            delete docked[d.id];
            self.updateHud();
            self.emit("undock", [d, element]);
        }
        
        self.reset = function () {
            hud.empty().dismiss();
            docked = {};
        }
        
        self.set = function (nodes) {
            self.reset();
            dockRenderPromise.then(function () {
                var interval = dock.attr('width') / (nodes.length + 1);
                for (var i = 0; i < nodes.length; i++) {
                    var element = parent.select("#" + nodes[i].elementId);
                    self.dockElement(nodes[i], element);
                    nodes[i].px = dockDims.x1 + (i+1) * interval
                    nodes[i].py = (dockDims.y1 + dockDims.y2) / 2;
                }
            })
        }
        self.get = function () {
            var nodes = [];
            for (var key in docked) {
                nodes.push(docked[key][0]);
            }
            return nodes;
        }
        self.addUpdateAction = function (callback) {
            updateActions.push(callback);
        }
        self.hudContent = function (callback) {
            dockHudContentCallback = callback;
        }
        self.showHUD = dockhud;
    };
    
    JQ.extend(Dock.prototype, EventEmitter);
    return Dock;
});
(function (exports) {
  exports.validate = validate;
  exports.mixin = mixin;

  //
  // ### function validate (object, schema, options)
  // #### {Object} object the object to validate.
  // #### {Object} schema (optional) the JSON Schema to validate against.
  // #### {Object} options (optional) options controlling the validation
  //      process. See {@link #validate.defaults) for details.
  // Validate <code>object</code> against a JSON Schema.
  // If <code>object</code> is self-describing (i.e. has a
  // <code>$schema</code> property), it will also be validated
  // against the referenced schema. [TODO]: This behaviour bay be
  // suppressed by setting the {@link #validate.options.???}
  // option to <code>???</code>.[/TODO]
  //
  // If <code>schema</code> is not specified, and <code>object</code>
  // is not self-describing, validation always passes.
  //
  // <strong>Note:</strong> in order to pass options but no schema,
  // <code>schema</code> <em>must</em> be specified in the call to
  // <code>validate()</code>; otherwise, <code>options</code> will
  // be interpreted as the schema. <code>schema</code> may be passed
  // as <code>null</code>, <code>undefinded</code>, or the empty object
  // (<code>{}</code>) in this case.
  //
  function validate(object, schema, options) {
    options = mixin({}, options, validate.defaults);
    var errors = [];

    validateObject(object, schema, options, errors);

    //
    // TODO: self-described validation
    // if (! options.selfDescribing) { ... }
    //

    return {
      valid: !(errors.length),
      errors: errors
    };
  };

  /**
   * Default validation options. Defaults can be overridden by
   * passing an 'options' hash to {@link #validate}. They can
   * also be set globally be changing the values in
   * <code>validate.defaults</code> directly.
   */
  validate.defaults = {
      /**
       * <p>
       * Enforce 'format' constraints.
       * </p><p>
       * <em>Default: <code>true</code></em>
       * </p>
       */
      validateFormats: true,
      /**
       * <p>
       * When {@link #validateFormats} is <code>true</code>,
       * treat unrecognized formats as validation errors.
       * </p><p>
       * <em>Default: <code>false</code></em>
       * </p>
       *
       * @see validation.formats for default supported formats.
       */
      validateFormatsStrict: false,
      /**
       * <p>
       * When {@link #validateFormats} is <code>true</code>,
       * also validate formats defined in {@link #validate.formatExtensions}.
       * </p><p>
       * <em>Default: <code>true</code></em>
       * </p>
       */
      validateFormatExtensions: true
  };

  /**
   * Default messages to include with validation errors.
   */
  validate.messages = {
      required:         "is required",
      minLength:        "is too short (minimum is %{expected} characters)",
      maxLength:        "is too long (maximum is %{expected} characters)",
      pattern:          "invalid input",
      minimum:          "must be greater than or equal to %{expected}",
      maximum:          "must be less than or equal to %{expected}",
      exclusiveMinimum: "must be greater than %{expected}",
      exclusiveMaximum: "must be less than %{expected}",
      divisibleBy:      "must be divisible by %{expected}",
      minItems:         "must contain more than %{expected} items",
      maxItems:         "must contain less than %{expected} items",
      uniqueItems:      "must hold a unique set of values",
      format:           "is not a valid %{expected}",
      conform:          "must conform to given constraint",
      type:             "must be of %{expected} type"
  };
  validate.messages['enum'] = "must be present in given enumerator";

  /**
   *
   */
  validate.formats = {
    'email':          /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i,
    'ip-address':     /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i,
    'ipv6':           /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/,
    'date-time':      /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:.\d{1,3})?Z$/,
    'date':           /^\d{4}-\d{2}-\d{2}$/,
    'time':           /^\d{2}:\d{2}:\d{2}$/,
    'color':          /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\(\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|and yellow$/i,
    //'style':        (not supported)
    //'phone':        (not supported)
    //'uri':          (not supported)
    'host-name':      /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])/,
    'utc-millisec':   {
      test: function (value) {
        return typeof(value) === 'number' && value >= 0;
      }
    },
    'regex':          {
      test: function (value) {
        try { new RegExp(value) }
        catch (e) { return false }

        return true;
      }
    }
  };

  /**
   *
   */
  validate.formatExtensions = {
    'url': /^(https?|ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i
  };

  function mixin(obj) {
    var sources = Array.prototype.slice.call(arguments, 1);
    while (sources.length) {
      var source = sources.shift();
      if (!source) { continue }

      if (typeof(source) !== 'object') {
        throw new TypeError('mixin non-object');
      }

      for (var p in source) {
        if (source.hasOwnProperty(p)) {
          obj[p] = source[p];
        }
      }
    }

    return obj;
  };

  function validateObject(object, schema, options, errors) {
    var props, allProps = Object.keys(object),
        visitedProps = [];

    // see 5.2
    if (schema.properties) {
      props = schema.properties;
      for (var p in props) {
        if (props.hasOwnProperty(p)) {
          visitedProps.push(p);
          validateProperty(object, object[p], p, props[p], options, errors);
        }
      }
    }

    // see 5.3
    if (schema.patternProperties) {
      props = schema.patternProperties;
      for (var p in props) {
        if (props.hasOwnProperty(p)) {
          var re = new RegExp(p);

          // Find all object properties that are matching `re`
          for (var k in object) {
            if (object.hasOwnProperty(k)) {
              visitedProps.push(k);
              if (re.exec(k) !== null) {
                validateProperty(object, object[k], p, props[p], options, errors);
              }
            }
          }
        }
      }
    }

    // see 5.4
    if (undefined !== schema.additionalProperties) {
      var i, l;

      var unvisitedProps = allProps.filter(function(k){
        return -1 === visitedProps.indexOf(k);
      });

      // Prevent additional properties; each unvisited property is therefore an error
      if (schema.additionalProperties === false && unvisitedProps.length > 0) {
        for (i = 0, l = unvisitedProps.length; i < l; i++) {
          error("additionalProperties", unvisitedProps[i], object[unvisitedProps[i]], false, errors);
        }
      }
      // additionalProperties is a schema and validate unvisited properties against that schema
      else if (typeof schema.additionalProperties == "object" && unvisitedProps.length > 0) {
        for (i = 0, l = unvisitedProps.length; i < l; i++) {
          validateProperty(object, object[unvisitedProps[i]], unvisitedProps[i], schema.unvisitedProperties, options, errors);
        }
      }
    }

  };

  function validateProperty(object, value, property, schema, options, errors) {
    var format,
        valid,
        spec,
        type;

    function constrain(name, value, assert) {
      if (schema[name] !== undefined && !assert(value, schema[name])) {
        error(name, property, value, schema, errors);
      }
    }

    if (value === undefined) {
      if (schema.required && schema.type !== 'any') {
        return error('required', property, undefined, schema, errors);
      } else {
        return;
      }
    }

    if (options.cast) {
      if (('integer' === schema.type || 'number' === schema.type) && value == +value) {
        value = +value;
      }

      if ('boolean' === schema.type) {
        if ('true' === value || '1' === value || 1 === value) {
          value = true;
        }

        if ('false' === value || '0' === value || 0 === value) {
          value = false;
        }
      }
    }

    if (schema.format && options.validateFormats) {
      format = schema.format;

      if (options.validateFormatExtensions) { spec = validate.formatExtensions[format] }
      if (!spec) { spec = validate.formats[format] }
      if (!spec) {
        if (options.validateFormatsStrict) {
          return error('format', property, value, schema, errors);
        }
      }
      else {
        if (!spec.test(value)) {
          return error('format', property, value, schema, errors);
        }
      }
    }

    if (schema['enum'] && schema['enum'].indexOf(value) === -1) {
      error('enum', property, value, schema, errors);
    }

    // Dependencies (see 5.8)
    if (typeof schema.dependencies === 'string' &&
        object[schema.dependencies] === undefined) {
      error('dependencies', property, null, schema, errors);
    }

    if (isArray(schema.dependencies)) {
      for (var i = 0, l = schema.dependencies.length; i < l; i++) {
        if (object[schema.dependencies[i]] === undefined) {
          error('dependencies', property, null, schema, errors);
        }
      }
    }

    if (typeof schema.dependencies === 'object') {
      validateObject(object, schema.dependencies, options, errors);
    }

    checkType(value, schema.type, function(err, type) {
      if (err) return error('type', property, typeof value, schema, errors);

      constrain('conform', value, function (a, e) { return e(a) });

      switch (type || (isArray(value) ? 'array' : typeof value)) {
        case 'string':
          constrain('minLength', value.length, function (a, e) { return a >= e });
          constrain('maxLength', value.length, function (a, e) { return a <= e });
          constrain('pattern',   value,        function (a, e) {
            e = typeof e === 'string'
              ? e = new RegExp(e)
              : e;
            return e.test(a)
          });
          break;
        case 'integer':
        case 'number':
          constrain('minimum',     value, function (a, e) { return a >= e });
          constrain('maximum',     value, function (a, e) { return a <= e });
          constrain('exclusiveMinimum', value, function (a, e) { return a > e });
          constrain('exclusiveMaximum', value, function (a, e) { return a < e });
          constrain('divisibleBy', value, function (a, e) {
            var multiplier = Math.max((a - Math.floor(a)).toString().length - 2, (e - Math.floor(e)).toString().length - 2);
            multiplier = multiplier > 0 ? Math.pow(10, multiplier) : 1;
            return (a * multiplier) % (e * multiplier) === 0
          });
          break;
        case 'array':
          constrain('items', value, function (a, e) {
            for (var i = 0, l = a.length; i < l; i++) {
              validateProperty(object, a[i], property, e, options, errors);
            }
            return true;
          });
          constrain('minItems', value, function (a, e) { return a.length >= e });
          constrain('maxItems', value, function (a, e) { return a.length <= e });
          constrain('uniqueItems', value, function (a) {
            var h = {};

            for (var i = 0, l = a.length; i < l; i++) {
              var key = JSON.stringify(a[i]);
              if (h[key]) return false;
              h[key] = true;
            }

            return true;
          });
          break;
        case 'object':
          // Recursive validation
          if (schema.properties || schema.patternProperties || schema.additionalProperties) {
            validateObject(value, schema, options, errors);
          }
          break;
      }
    });
  };

  function checkType(val, type, callback) {
    var result = false,
        types = isArray(type) ? type : [type];

    // No type - no check
    if (type === undefined) return callback(null, type);

    // Go through available types
    // And fine first matching
    for (var i = 0, l = types.length; i < l; i++) {
      type = types[i].toLowerCase().trim();
      if (type === 'string' ? typeof val === 'string' :
          type === 'array' ? isArray(val) :
          type === 'object' ? val && typeof val === 'object' &&
                             !isArray(val) :
          type === 'number' ? typeof val === 'number' :
          type === 'integer' ? typeof val === 'number' && ~~val === val :
          type === 'null' ? val === null :
          type === 'boolean'? typeof val === 'boolean' :
          type === 'any' ? typeof val !== 'undefined' : false) {
        return callback(null, type);
      }
    };

    callback(true);
  };

  function error(attribute, property, actual, schema, errors) {
    var lookup = { expected: schema[attribute], attribute: attribute, property: property };
    var message = schema.messages && schema.messages[attribute] || schema.message || validate.messages[attribute] || "no default message";
    message = message.replace(/%\{([a-z]+)\}/ig, function (_, match) { return lookup[match.toLowerCase()] || ''; });
    errors.push({
      attribute: attribute,
      property:  property,
      expected:  schema[attribute],
      actual:    actual,
      message:   message
    });
  };

  function isArray(value) {
    var s = typeof value;
    if (s === 'object') {
      if (value) {
        if (typeof value.length === 'number' &&
           !(value.propertyIsEnumerable('length')) &&
           typeof value.splice === 'function') {
           return true;
        }
      }
    }
    return false;
  }


})(typeof(window) === 'undefined' ? module.exports : (window.json = window.json || {}));

Iris.define("revalidator", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.window.json;
    };
}(this)));

Iris.define('renderers/network',['jquery', 'd3', 'underscore',
    'util/dock', 'util/eventemitter', 'util/hud', 'revalidator'],
function (JQ, d3, _, Dock, EventEmitter, HUD, Revalidator) {
    
    var FIX_NODE_DELAY = 2000;
    var defaults = {
        dock: true,
        joinAttribute: "name",
        nodeLabel: {},
        highlightNeighbors: true,
        searchTerms: function (node, indexMe) { indexMe(node.name); },
        edgeStroke: function () { return 2; }
    };
    var visCounter = 1;
    var Schema = { properties: {
        nodes: {
            description: "List of nodes",
            type:        "array",
            required:    true
        },
        edges: {
            description: "A list of edges",
            type:        "array",
            items: {
                properties: {
                    source: {
                        description: "The source's index in 'nodes'",
                        type: "number",
                        required: true
                    },
                    target: {
                        description: "The target's index in 'nodes'",
                        type: "number",
                        required: true
                    }
                }
            }
        }
    }};
    
    var Physics = {
        GENE:    { charge: -70 },
        CLUSTER: { charge: -70 },
        "GENE:GENE": {
            linkDistance:  60,
            linkStrength:  0.6
        },
        "CLUSTER:GENE": {
            linkDistance:  80,
            linkStrength:  1,
        },
        "CLUSTER:CLUSTER": {
            linkDistance:   80,
            linkStrength:   1
        },
        default: {
            linkDistance:   80,
            linkStrength:    1,
            charge:        -70
        }
    };
    var GRAVITY = 0.1;
    var THETA   = 0.8;
    
    var NODE_SIZE  = { GENE: 8, CLUSTER: 12 };
    var HIGHLIGHT_COLOR = "rgba(255,255,70,0.9)";
    var EDGE_COLOR = "#999";
    var SELECT_FILL_COLOR    = "#444";
    var SELECT_STROKE_COLOR  = "#222";
    
    /**
     * @class Network
     * Renders a force-directed network.
     * 
     * @constructor
     * @param {Object} options A set of input options
     * @param {String} options.infoOn (all|click|hover)
     * @param {Object} options.nodeFilter { type: "CLUSTER" }
     * @param {Boolean} options.highlightNeighbors
     * @param {Function} options.nodeInfo
     * @param {Function} options.searchTerms searchTerms(node, indexMe) {
     *      indexMe(node.name)
     * }
     */
    var Network = function (options) {
        var self = this;
        options = options ? _.clone(options) : {};
        _.defaults(options, defaults);
        var $element = JQ(options.element);
        var _idSequence = 1;
        var _autoUpdate = false;
        var _initialized = false;
        var nodeFilter, edgeFilter, filterCache = {};

        var _linkCache = {};
        var _paused = false;
        var vis, dock;
        var svgNodes, svgLinks, svgLabels;
        var linkG, nodeG, labelG;
        var force, nodes, links;

        var groupColor = {};
        var hiddenNodes = {};
        var color;
        var visId = "network-vis-" + visCounter++;
        var width, height;
        var Delta = {
            charge: 0,
            distance: 0,
            strength: 0,
            gravity: 0,
            theta: 0
        };
        
        if (options.infoOn !== undefined) {
            var clickNode = function (event, node, element) {
                self.clickNode(node, element);
            };
            if (options.infoOn == "all" || options.infoOn == "click") {
                self.on("click-node", clickNode);
            }
            if (options.infoOn == "all" || options.infoOn == "hover") {
                self.on("mouseover-node", clickNode);
            }
        }
        
        if (options.nodeFilter !== undefined) {
            nodeFilter = function (d) {
                var passed = true;
                for (var key in options.nodeFilter) {
                    if (d[key] != options.nodeFilter[key])
                        passed = false;
                }
                return passed;
            };
            edgeFilter = function (edge) {
                return nodeFilter(edge.source) && nodeFilter(edge.target);
            };
        } else if (options.edgeFilter !== undefined) {
            edgeFilter = function (edge) {
                var filtered = options.edgeFilter(edge);
                if (filtered) {
                    if (typeof edge.source === "object")
                        filterCache[edge.source.id] =
                        filterCache[edge.target.id] = true;
                    else
                        filterCache[edge.source] =
                        filterCache[edge.target] = true; 
                }
                return filtered;
            };
            nodeFilter = function (d) { 
                return filterCache[parseInt(d.id, 0)] !== undefined;
            };
        } else {
            nodeFilter = function () { return true; };
            edgeFilter = function () { return true; };
        }
        
        var Foci = {
            CLUSTER: {
                x: Math.round($element.width() / 2),
                y: Math.round($element.height() * 5 / 6),
            },
            GENE:    {
                x: Math.round($element.width() / 2),
                y: Math.round($element.height() * 1 / 6),
            }
        };
        
        function setColor(node) {
            if (!node.hasOwnProperty("group")) {
                groupColor[node.id] = color(null);
            } else if (!groupColor.hasOwnProperty(node.id)) {
                groupColor[node.id] = color(node.group);
            }
        }
        
        self.findOrCreateNode = function (node, idKey) {
            var ret;
            var existing = self.findNode(node[idKey], idKey);
            if (existing) {
                var tmp = _.extend({}, node, existing);
                ret = _.extend(existing, tmp);
            } else {
                node.id = _idSequence++;
                nodes.push(node);
                ret = node;
                labelStatus(node);
                setColor(node);
            }
            return ret;
        };
        
        function labelStatus(node) {
            var label = true;
            for (var prop in options.nodeLabel) {
                if (!node.hasOwnProperty(prop) ||
                    node[prop] != options.nodeLabel[prop]) {
                    label = false;
                }
            }
            if (label) node.hasLabel = true;
        }
        
        self.addNode = self.findOrCreateNode;

        self.removeNode = function (id, splicedEdges) {
            splicedEdges = splicedEdges || [];
            var i = 0;
            var n = self.findNode(id);
            if (n === null) return;
            while (i < links.length) {
                if (links[i].source == n || links[i].target == n) {
                    var linkKey =
                        _hashKey([links[i].source.id, links[i].target.id]);
                    _linkCache[linkKey] = undefined;
                    splicedEdges.push.apply(splicedEdges, links.splice(i,1));
                }
                else i++;
            }
            nodes.splice(findNodeIndex(id), 1);
            for (var k in _nodeCache) {
                if (_nodeCache[k] == n) _nodeCache[k] = undefined;
            }
            if (_autoUpdate) update();
            return this;
        };
        
        self.setData  = function (data) {
            if (data !== null) {
                var validation = Revalidator.validate(data, Schema);
                if (!validation.valid) {
                    var errors = _.uniq(_.map(validation.errors, function (e) {
                        return [e.property, e.message].join(" ");
                    }));
                    throw {
                        message: "Data is not valid",
                        errors: errors
                    };
                }
                this.setNodes(data.nodes);
                this.setEdges(data.edges);
            }
            return this;
        };
        self.getData = function () {
            return {
                nodes: nodes,
                edges: links
            };
        };
        
        this.setNodes = function (input) {
            initialize();
            force.nodes(input);
            nodes = force.nodes();
            nodes.forEach(function (node) { setColor(node); });
            _idSequence = d3.max(nodes, function (n) { return n.id; }) + 1;
            return this;
        };
        
        this.setEdges = function (input) {
            initialize();
            force.links(input);
            links = force.links();
            return this;
        };

        this.addEdge = function (edge) {
            edge.source = this.findNode(edge.source);
            edge.target = this.findNode(edge.target);
            links.push(edge);
            if (_autoUpdate) update();
            return this;
        };
        
        self.addLink = function (sourceId, targetId, params) {
            var key = _hashKey([sourceId, targetId]);
            if (_linkCache[key] !== null) {
                return;
            }
            var edge = {
                source: this.findNode(sourceId),
                target: this.findNode(targetId),
            };
            if (edge.source === null || edge.target === null) {
                console.log("Cannot find edge for [%d %d]",
                    sourceId, targetId, edge.source, edge.target);
            }
            for (var p in params) {
                if (edge.hasOwnProperty(p))
                    edge[p] = params[p];
            }
            links.push(edge);
            _linkCache[key] = edge;
            if (_autoUpdate) update();
            return this;
        };
        
        function _highlight(element) {
            element
                .style("stroke", HIGHLIGHT_COLOR)
                .style("stroke-width", 3)
                .style("stroke-location", "outside");
        }
        
        function _unhighlight(element) {
            element
                .style("stroke", null)
                .style("stroke-width", null)
                .style("stroke-location", null);
        }
        
        self.highlight = function (name) {
            var node = self.findNode(name, "name");
            if (node) {
                _highlight(d3.select("#" + node.elementId));
            }
            return this;
        };

        self.updateSearch = function (searchTerm) {
            searchRegEx = new RegExp(searchTerm.toLowerCase());
            return svgNodes.each(function (d) {
                var element, match = -1;
                var searchContents = [];
                options.searchTerms(d, function (text) {
                    searchContents.push(text);
                });
                element = d3.select(this);
                _.each(searchContents, function (text) {
                    match =
                        _.max([match, text.toLowerCase().search(searchRegEx)]);
                });
                if (searchTerm.length > 0 && match >= 0) {
                    _highlight(element);
                    d.searched = true;
                    return d.searched;
                } else {
                    d.searched = false;
                    _unhighlight(element);
                }
            });
        };

        self.unhighlightAll = function () {
            _unhighlight(nodeG.selectAll(".node"));
            return this;
        };
        
        function _hashKey(arr) { return arr.join("-"); }
        
        self.render = function () {
            initialize();
            width =  $element.width();
            height = $element.height();
            $element.empty();
            if (width === 0 && height === 0) {
                return this;
            }
            force.size([width, height]);
            vis = this.vis = d3.select($element[0]).append("svg:svg")
                .attr("width", width).attr("height", height);
            if (options.dock) dock.setParent(vis);

            // This order matters (nodes painted on top of links)
            linkG =  vis.append("g").attr("id", "networkLinks");
            nodeG =  vis.append("g").attr("id", "networkNodes");
            labelG = vis.append("g").attr("id", "networkLabels");
            force.on("tick", tick);
            force.start();
            update();
            _autoUpdate = true;
            return this;
        };

        var _nodeCache = {};
        self.findNode = function(key, type) {
            type = (type || 'id');
            var equalToKey;
            if (typeof key === 'string') {
                key = key.toUpperCase();
                equalToKey = function (val) {
                    return val !== null &&
                        key === new String(val).toUpperCase();
                };
            } else {
                equalToKey = function (val) {
                    return val === key;
                };
            }
            var hash = _hashKey([key, type]);
            if (_nodeCache[hash] !== undefined) return _nodeCache[hash];
            for (var i in nodes) {
                if (equalToKey(nodes[i][type])) {
                    _nodeCache[hash] = nodes[i];
                    return nodes[i];
                }
            }
            for (var id in hiddenNodes) {
                var n = hiddenNodes[id].node;
                if (equalToKey(n[type])) {
                    _nodeCache[hash] = n;
                    return n;
                }
            }
            return null;
        };
        this.findEdge = function (source, target) {
            for (var i in links) {
                if ((links[i].source.id == source.id &&
                     links[i].target.id == target.id) ||
                    (links[i].source.id == target.id &&
                     links[i].target.id == source.id))
                    return links[i];
            }
            return null;
        };
        
        this.find = function (key, type) {
            type = (type || 'id');
            var result = [];
            for (var i in nodes) {
                if (nodes[i][type] === key) result.push(nodes[i]);
            }
            return result;
        };

        function findNodeIndex(id) {
            for (var i in nodes) { if (nodes[i].id === id) return i; }
        }
        
        var physics = function (key, prop) {
            if (!Physics.hasOwnProperty(key)) key = "default";
            var ret = Physics[key].hasOwnProperty(prop) ?
                Physics[key][prop] : Physics["default"][prop];
            return ret;
        };
        
        function nodePhysics(node, prop) {
            return physics(node.type || "default", prop);
        }
        
        function linkPhysics(link, prop) {
            var key =
                _.pluck([link.source, link.target], "type").sort().join(":");
            return physics(key, prop);
        }
        
        function nodeCharge(d)   {
            return Delta.charge + nodePhysics(d, "charge");
        }
        function linkDistance(d) {
            return Delta.distance + linkPhysics(d, "linkDistance");
        }
        function linkStrength(d) {
            return Delta.strength + linkPhysics(d, "linkStrength");
        }

        if (options.dock) { dock = new Dock(); }
            
        color = d3.scale.category20();
        
        function initialize() {
            if (_initialized) return;
            _initialized = true;
            force = d3.layout.force()
                .linkDistance(linkDistance)
                .linkStrength(linkStrength)
                .charge(nodeCharge)
                .size([width, height]);
            nodes = force.nodes();
            links = force.links();

            if (options.dock) {
                dock.on("dragstart.dock", function () { force.stop(); })
                    .on("dragmove.dock",  function () { tick(); })
                    .on("dragend.dock",   function (evt, d) {
                        if (!isDocked(d)) toggleFixed(d);
                        tick();
                        force.resume();
                    })
                    .on("dock", function (evt, d, element) {
                        element
                            .style("stroke", HIGHLIGHT_COLOR)
                            .style("stroke-width", 3)
                            .style("stroke-location", "outside");   
                    })
                    .on("undock", function (evt, d, element) {
                        element
                            .style("stroke", null)
                            .style("stroke-width", null)
                            .style("stroke-location", null);
                    });
            } else {
                force.drag().on("dragend", function (d) {
                    toggleFixed(d);
                });
            }
        }
            
        function tick (e) {
            if (e && options.dock) {
                var k = 1 * e.alpha;
                nodes.forEach(function (o, i) {
                    if (o.fixed) return;
                    var f = Foci[o.type];
                    if (!f) return;
                    o.y += (f.y - o.y) * k;
                });
            }
            svgLinks.attr("x1", function (d) { return d.source.x; })
                    .attr("y1", function (d) { return d.source.y; })
                    .attr("x2", function (d) { return d.target.x; })
                    .attr("y2", function (d) { return d.target.y; });
            svgNodes.attr("cx", function (d) { return d.x; })
                    .attr("cy", function (d) { return d.y; });
            svgLabels.attr("transform", function (d) {
                return "translate(" + d.x + "," + d.y + ")";
            });
        }
        
        function hasLabel(d) { return d.hasLabel; }
        function isDocked(d) {
            if (!dock) return false;
            var docked = dock.get();
            for (var id in docked) {
                if (docked.hasOwnProperty(id)) {
                    var n = docked[id];
                    if (d[options.joinAttribute] == n[options.joinAttribute]) {
                        return true;
                    }
                }
            }
            return false;
        }
        
        function update() {
            filterCache = {};
            var filteredEdges = _.filter(links, edgeFilter);
            var filteredNodes = _.filter(nodes, nodeFilter);
            if (svgLinks) svgLinks.remove();
            svgLinks = linkG.selectAll("line.link").data(filteredEdges);
            var linkEnter = svgLinks.enter()
                .append("line")
                .attr("class", "link")
                .style("stroke", function (d) { return EDGE_COLOR; })
                .style("stroke-width", options.edgeStroke);
            svgLinks.exit().remove();

            if (svgNodes) svgNodes.remove();
            svgNodes = nodeG.selectAll("circle.node").data(filteredNodes);
            var clickbuffer = false, fixNodeTimer = null;
            var nodeEnter = svgNodes.enter().append("circle")
                .attr("class", "node")
                .attr("id",     function (d) {
                    d.elementId = "node-" + d.id;
                    return d.elementId;
                })
                .attr("r",       function (d) { return nodeSize(d); })
                .style("fill",   function (d) { return groupColor[d.id]; })
                .style("stroke", function (d) {
                    return isDocked(d) ? HIGHLIGHT_COLOR : "#666";
                })
                .style("stroke-width", function (d) {
                    return isDocked(d) ? 3 : null;
                })
                
                .on("click",    function (d) {
                    var el = this;
                    d3.event.stopPropagation();
                    clickbuffer = true;
                    setTimeout(function () {
                        if (clickbuffer) {
                            clickbuffer = false;
                            self.emit("click-node", [d, el]);
                        }
                    }, 100);
                })
                .on("dblclick", function (d) {
                    clickbuffer = false;
                    d3.event.stopPropagation();
                    self.emit("dblclick-node", [d, this]);
                })
                .on("mouseover", function (d) {
                    self.emit("mouseover-node", [d, this]);
                })
                .on("mousedown", function (d) {
                    fixNodeTimer = {
                        time: new Date().getTime(),
                        node: d
                    };
                })
                .on("mouseup", function (d) {
                    if (fixNodeTimer) {
                        if (fixNodeTimer.node == d) {
                            var timenow = new Date().getTime();
                            if (timenow - fixNodeTimer.time > FIX_NODE_DELAY) {
                                if (!dock || !isDocked(d)) toggleFixed(d);
                            }
                        }
                    }
                    fixNodeTimer = null;
                });
            if (svgLabels) svgLabels.remove();
            svgLabels = labelG.selectAll("text")
                .data(_.filter(nodes, hasLabel));
            var labelEnter = svgLabels.enter().append("svg:text")
                .attr("y", ".35em")
                .attr("text-anchor", "middle")
                .style("fill", "white")
                .text(function (d) { return d.name.substring(0,6); });
            nodeEnter.call(options.dock ? dock.drag() : force.drag);
            svgLabels.exit().remove();
            svgNodes.exit().remove();

            if (!_paused) force.start();
        }
        
        function toggleFixed(d) {
            d.fixed = !d.fixed;
        }
        
        function nodeSize(d) {
            var size = NODE_SIZE[d.type] || 8;
            return size;
        }

        var originalFill,
            hud = new HUD({
                position: { bottom: 20, left: 20 },
                width: 300,
                title: "Node Properties",
                z: 2000
            });
        self.clickNode = function (d, element) {
            var neighborSelect = { nodes: {}, links: {} };

            if (options.highlightNeighbors) {
                var neighs = self.neighbors(d);
                _.each(neighs, function (n) {
                    neighborSelect.links[n[1].id] = true;
                    neighborSelect.nodes[n[0].id] = true;
                });
            }
            neighborSelect.nodes[d.id] = true;
            function updateStyle() {
                svgLinks.style("stroke", function (n) {
                    return neighborSelect.links[n.id] ?
                        SELECT_STROKE_COLOR : EDGE_COLOR;
                });
                svgNodes.style("fill", function (n) {
                    return neighborSelect.nodes[n.id] ?
                        SELECT_FILL_COLOR : groupColor[n.id];
                });
            }
            updateStyle();
        
            hud.empty().append(nodeInfo(d));
            hud.show();
            hud.on("dismiss", function () {
                neighborSelect = { nodes: {}, links: {} };
                updateStyle();
            });
        };

        function nodeInfo(d) {
            var $table =
                JQ("<table/>", {
                    id: "nodeInfo",
                    class: "table table-condensed"
                })
                .append(JQ("<tbody/>"));
            function row(key, val) {
                if (!val) return;
                $table.find("tbody").append(JQ("<tr>")
                    .append(JQ("<th>").text(key))
                    .append(JQ("<td>").html(val))
                );
            }
            if (options.nodeInfo === undefined) {
                row("Name", d.name);
                row("Type", d.type);
                row("KBase ID", d.entityId);
                row("Neighbors", self.neighbors(d).length);
            } else {
                options.nodeInfo(d, row);
            }
            return $table;
        }
        
        // Get neighbors for a given node.
        self.neighbors = function (node, args) {
            args = args || {};
            var neigh = [];
            
            function addNeighbor(link) {
                var n;
                if (link.source.id == node.id) {
                    n = link.target;
                    for (var prop in args) {
                        if (n[prop] != args[prop])
                            n = null;
                    }
                } else if (link.target.id == node.id) {
                    n = link.source;
                    for (var prop in args) {
                        if (n[prop] != args[prop])
                            n = null;
                    }
                }
                if (n !== undefined && n !== node)
                    neigh.push([ n, link ]);
            }
            _.each(links, addNeighbor);
            _.each(_.values(hiddenNodes), function (hidden) {
                _.each(hidden.edges, addNeighbor);
            });
            return neigh;
        };
                
        self.collapse = function (node) {
            var collapsed = node._collapsed = {};
            var neighbors = self.neighbors(node);
            // Create hash of primary neighbors
            var seen = {};
            for (var i = 0; i < neighbors.length; i++) {
                neighbor = neighbors[i];
                var n = neighbor[0];
                seen[n.id] = true;
            }
            for (var i = 0; i < neighbors.length; i++) {
                neighbor = neighbors[i];
                var n = neighbor[0];
                
                var seconds = self.neighbors(n);
                var secondEdges = [];
                var j = 0;
                
                // Handle neighbors to the collapsing nodes that
                // link with each other. Filter out all seen nodes.
                while (j < seconds.length) {
                    if (seen[seconds[j][0].id]) {
                        var edge = _.clone(seconds[j][1]);
                        edge.source = edge.source.id;
                        edge.target = edge.target.id;
                        secondEdges.push(edge);
                        seconds.splice(j, 1);
                    } else j++;
                }
                // Collapse nodes if not implicated with other nodes.
                if (seconds.length <= 1) {
                    var edge = _.clone(neighbor[1]);
                    edge.source = edge.source.id;
                    edge.target = edge.target.id;
                    collapsed[n.id] = {
                        node: n,
                        edges: _.flatten([edge, secondEdges])
                    };
                }
            }
            for (var id in collapsed) {
                if (collapsed.hasOwnProperty(id))
                    self.hideNode(collapsed[id].node);
            }
            return this;
        };
        
        self.uncollapse = function (node) {
            if (!node._collapsed) return this;
            var origAutoUpdate = _autoUpdate;
            _autoUpdate = false;
            for (var id in node._collapsed) {
                if (node._collapsed.hasOwnProperty(id)) {
                    var d = node._collapsed[id];
                    self.unhideNode(d.node);
                }
            }
            
            self.render();
            _autoUpdate = true;
            delete node._collapsed;
            return this;
        };
        
        self.merge = function (data, args) {
            args = args ? _.clone(args) : {};
            args.hidden = args.hidden !== null ? args.hidden : false;
            if (nodes.length === 0 && links.length === 0) {
                self.setData(data).render();
                return this;
            }
            var origAutoUpdate = _autoUpdate;
            _autoUpdate = false;
            var nodeMap = {};
            if (data.nodes === null) data.nodes = [];
            if (data.edges === null) data.edges = [];
            var addedNodes = [];
            for (var i = 0; i < data.nodes.length; i++) {
                var node = data.nodes[i];
                node = self.findOrCreateNode(node, options.joinAttribute);
                nodeMap[i] = node.id;
                if (args.hidden) addedNodes.push(node);
            }
            data.edges.forEach(function (e) {
                var sourceIndex = e.source;
                var targetIndex = e.target;
                delete e.source;
                delete e.target;
                self.addLink(
                    nodeMap[sourceIndex], nodeMap[targetIndex], e
                );
            });
            if (args.hidden) {
                addedNodes.forEach(function (node) {
                    self.hideNode(node);
                });
            }
            self.render();
            _autoUpdate = origAutoUpdate;
            return this;
        };
        self.reset = function () {
            if (nodes) nodes.length = 0;
            if (links) links.length = 0;
            _nodeCache = {};
            if (options.dock) { dock.reset(); }
            _initialized = false;
            initialize();
            self.render();
            return self;
        };
        self.dockNodes = function (names) {
            var nodes = [];
            for (var i = 0; i < names.length; i++) {
                var node = self.findNode(names[i], 'name');
                if (node) nodes.push(node);
            }
            dock.set(nodes);
        };
        self.dockedNodes = function () {
            return dock.get();
        };
        self.addDockAction = function (callback) {
            dock.addUpdateAction(callback);
        };
        self.dockHudContent = function (callback) {
            dock.hudContent(callback);
        };
        self.nodeProperty = function (node, prop) {
            var element = d3.select("#" + node.elementId);
            return element.style(prop);
        };
        self.isHidden = function (node) {
            return hiddenNodes[node.id] !== undefined;
        }
        self.hideNode = function (node) {
            var hNode = hiddenNodes[node.id];
            if (hNode !== undefined) {
                return node;
            } else {
                hNode = hiddenNodes[node.id] = { node: node, edges: [] };
            }
            var splicedEdges = [];
            self.removeNode(node.id, splicedEdges);
            splicedEdges.forEach(function (edge) {
                hNode.edges.push(edge);
            });
            if (_autoUpdate) update();
            return node;
        };
        self.unhideNode = function (node) {
            var hNode = hiddenNodes[node.id];
            if (hNode === undefined)
                return node;
            node = hNode.node;
            nodes.push(node);
            _.each(hNode.edges, function (edge) {
                // Only unhide edge if neighbor is unhidden
                var neighbor = edge.source.id == node.id ?
                    edge.target : edge.source;
                if (!self.isHidden(neighbor))
                    links.push(edge);
            });
            delete hiddenNodes[node.id];
            if (_autoUpdate) update();
            return node;
        };
        self.toggleHidden = function (node) {
            return self.findNode(node.id) !== null ?
                self.hideNode(node) : self.unhideNode(node);
        };
        self.setElement = function (element) {
            options.element = element;
            $element = JQ(options.element);
        };
        self.dock = dock;
        self.update = update;
        self.pause = function () {
            force.stop();
            _paused = true;
        }
        self.resume = function () {
            _paused = false;
            force.resume();
        }
        self.forceDelta = function (property, value) {
            if (Delta.hasOwnProperty(property)) {
                Delta[property] += value;
            }
            if (property === "gravity") {
                force.gravity(GRAVITY + value);
            }
            if (property === "theta") {
                force.theta(THETA + value);
            }
        };
        
        return self;
    };
    JQ.extend(Network.prototype, EventEmitter);
    return Network;
});
/**
 * @summary     DataTables
 * @description Paginate, search and sort HTML tables
 * @version     1.10.0-dev
 * @file        jquery.dataTables.js
 * @author      Allan Jardine (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 *
 * @copyright Copyright 2008-2013 Allan Jardine.
 *
 * This source file is free software, available under the following licenses:
 *   GPL v2 license        - http://datatables.net/license_gpl2
 *   BSD (3 point) license - http://datatables.net/license_bsd
 *   MIT license           - http://datatables.net/license_mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_fnExternApiFunc,_fnInitialise,_fnInitComplete,_fnLanguageCompat,_fnAddColumn,_fnColumnOptions,_fnAddData,_fnCreateTr,_fnGatherData,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAddOptionsHtml,_fnFeatureHtmlTable,_fnScrollDraw,_fnAdjustColumnSizing,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnBuildSearchArray,_fnBuildSearchRow,_fnFilterCreateSearch,_fnDataToSearch,_fnSort,_fnSortAttachListener,_fnSortingClasses,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnFeatureHtmlLength,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnNodeToDataIndex,_fnVisbleColumns,_fnCalculateEnd,_fnConvertToWidth,_fnCalculateColumnWidths,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnDetectType,_fnSettingsFromNode,_fnGetDataMaster,_fnGetTrNodes,_fnGetTdNodes,_fnEscapeRegex,_fnDeleteIndex,_fnColumnOrdering,_fnLog,_fnClearTable,_fnSaveState,_fnLoadState,_fnDetectHeader,_fnGetUniqueThs,_fnScrollBarWidth,_fnApplyToChildren,_fnMap,_fnGetRowData,_fnGetCellData,_fnSetCellData,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnApplyColumnDefs,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnNodeToColumnIndex,_fnInfoMacros,_fnBrowserDetect,_fnGetColumns,_fnHungarianMap,_fnCamelToHungarian,_fnBuildAjax,_fnAjaxDataSrc*/

(/** @lends <global> */function( window, document, undefined ) {

(function( factory ) {
	

	// Define as an AMD module if possible
	if ( typeof Iris.define === 'function' && Iris.define.amd )
	{
		Iris.define( 'datatables',['jquery'], factory );
	}
	/* Define using browser globals otherwise
	 * Prevent multiple instantiations if the script is loaded twice
	 */
	else if ( jQuery && !jQuery.fn.dataTable )
	{
		factory( jQuery );
	}
}
(/** @lends <global> */function( $ ) {
	

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.3+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable;

	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap )
		{
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				user[hungarianKey] = user[ key ];
	
				if ( hungarianKey.charAt(0) === 'o' )
				{
					_fnCamelToHungarian( src[hungarianKey], user[key] );
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( oLanguage )
	{
		var oDefaults = DataTable.defaults.oLanguage;
	
		/* Backwards compatibility - if there is no sEmptyTable given, then use the same as
		 * sZeroRecords - assuming that is given.
		 */
		if ( !oLanguage.sEmptyTable && oLanguage.sZeroRecords &&
			oDefaults.sEmptyTable === "No data available in table" )
		{
			_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sEmptyTable' );
		}
	
		/* Likewise with loading records */
		if ( !oLanguage.sLoadingRecords && oLanguage.sZeroRecords &&
			oDefaults.sLoadingRecords === "Loading..." )
		{
			_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sLoadingRecords' );
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( oSettings )
	{
		// Scrolling feature / quirks detection
		var n = $(
			'<div style="position:absolute; top:0; left:0; height:1px; width:1px; overflow:hidden">'+
				'<div style="position:absolute; top:1px; left:1px; width:100px; overflow:scroll;">'+
					'<div id="DT_BrowserTest" style="width:100%; height:10px;"></div>'+
				'</div>'+
			'</div>')[0];
	
		document.body.appendChild( n );
		// IE6/7 will oversize a width 100% element inside a scrolling element, to
		// include the width of the scrollbar, while other browsers ensure the inner
		// element is contained without forcing scrolling
		oSettings.oBrowser.bScrollOversize = $('#DT_BrowserTest', n)[0].offsetWidth === 100 ? true : false;
	
		// In rtl text layout, some browsers (most, but not all) will place the
		// scrollbar on the left, rather than the right.
		oSettings.oBrowser.bScrollbarLeft = $('#DT_BrowserTest', n).offset().left !== 1 ? true : false;
		document.body.removeChild( n );
	}
	
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"sSortingClass": oSettings.oClasses.sSortable,
			"sSortingClassJUI": oSettings.oClasses.sSortJUI,
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.oDefaults : iCol
		} );
		oSettings.aoColumns.push( oCol );
		
		/* Add a column specific filter */
		if ( oSettings.aoPreSearchCols[ iCol ] === undefined || oSettings.aoPreSearchCols[ iCol ] === null )
		{
			oSettings.aoPreSearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch );
		}
		else
		{
			var oPre = oSettings.aoPreSearchCols[ iCol ];
			
			/* Don't require that the user must specify bRegex, bSmart or bCaseInsensitive */
			if ( oPre.bRegex === undefined )
			{
				oPre.bRegex = true;
			}
			
			if ( oPre.bSmart === undefined )
			{
				oPre.bSmart = true;
			}
			
			if ( oPre.bCaseInsensitive === undefined )
			{
				oPre.bCaseInsensitive = true;
			}
		}
		
		/* Use the column options function to initialise classes etc */
		_fnColumnOptions( oSettings, iCol, null );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions );
			
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType !== undefined )
			{
				oCol.sType = oOptions.sType;
				oCol._bAutoType = false;
			}
			
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
		var mData = _fnGetObjectDataFn( oCol.mData );
	
		oCol.fnGetData = function (oData, sSpecific) {
			var innerData = mData( oData, sSpecific );
	
			if ( oCol.mRender && (sSpecific && sSpecific !== '') )
			{
				return mRender( innerData, sSpecific, oData );
			}
			return innerData;
		};
		oCol.fnSetData = _fnSetObjectDataFn( oCol.mData );
		
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
		}
		
		/* Check that the class assignment is correct for sorting */
		if ( !oCol.bSortable ||
			 ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1) )
		{
			oCol.sSortingClass = oSettings.oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1 )
		{
			oCol.sSortingClass = oSettings.oClasses.sSortable;
			oCol.sSortingClassJUI = oSettings.oClasses.sSortJUI;
		}
		else if ( $.inArray('asc', oCol.asSorting) != -1 && $.inArray('desc', oCol.asSorting) == -1 )
		{
			oCol.sSortingClass = oSettings.oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIAscAllowed;
		}
		else if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) != -1 )
		{
			oCol.sSortingClass = oSettings.oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oSettings.oClasses.sSortJUIDescAllowed;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( oSettings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( oSettings.oFeatures.bAutoWidth === false )
		{
			return false;
		}
		
		_fnCalculateColumnWidths( oSettings );
		for ( var i=0 , iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			oSettings.aoColumns[i].nTh.style.width = oSettings.aoColumns[i].sWidth;
		}
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		return _fnGetColumns( oSettings, 'bVisible' ).length;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Get the sort type based on an input string
	 *  @param {string} sData data we wish to know the type of
	 *  @returns {string} type (defaults to 'string' if no type can be detected)
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectType( sData )
	{
		var aTypes = DataTable.ext.aTypes;
		var iLen = aTypes.length;
		
		for ( var i=0 ; i<iLen ; i++ )
		{
			var sType = aTypes[i]( sData );
			if ( sType !== null )
			{
				return sType;
			}
		}
		
		return 'string';
	}
	
	
	/**
	 * Get the column ordering that DataTables expects
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {string} comma separated list of names
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOrdering ( oSettings )
	{
		var sNames = '';
		for ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			sNames += oSettings.aoColumns[i].sName+',';
		}
		if ( sNames.length == iLen )
		{
			return "";
		}
		return sNames.slice(0, -1);
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = aoColDefs[i].targets || aoColDefs[i].aTargets;
				if ( ! $.isArray( aTargets ) )
				{
					_fnLog( oSettings, 1, 'aTargets must be an array of targets, not a '+(typeof aTargets) );
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( oSettings.aoColumns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], aoColDefs[i] );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( oSettings.aoColumns.length+aTargets[j], aoColDefs[i] );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=oSettings.aoColumns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(oSettings.aoColumns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, aoColDefs[i] );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		var oCol;
		
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow );
		
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		for ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			oCol = oSettings.aoColumns[i];
	
			_fnSetCellData( oSettings, iRow, i, _fnGetCellData( oSettings, iRow, i ) );
			
			/* See if we should auto-detect the column type */
			if ( oCol._bAutoType && oCol.sType != 'string' )
			{
				/* Attempt to auto detect the type - same as _fnGatherData() */
				var sVarType = _fnGetCellData( oSettings, iRow, i, 'type' );
				if ( sVarType !== null && sVarType !== '' )
				{
					sThisType = _fnDetectType( sVarType );
					if ( oCol.sType === null )
					{
						oCol.sType = sThisType;
					}
					else if ( oCol.sType != sThisType && oCol.sType != "html" )
					{
						/* String is always the 'fallback' option */
						oCol.sType = 'string';
					}
				}
			}
		}
		
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		/* Create the DOM information */
		if ( !oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( oSettings, trs )
	{
		// Allow an individual node to be passed in
		if ( ! trs instanceof $ ) {
			trs = $(trs);
		}
	
		trs.each( function () {
			var
				d = [],
				tds = [],
				td = this.firstChild,
				name;
	
			while ( td )
			{
				name = td.nodeName.toUpperCase();
				if ( name == "TD" || name == "TH" )
				{
					d.push( $.trim(td.innerHTML) );
					tds.push( td );
				}
				td = td.nextSibling;
			}
	
			_fnAddData( oSettings, d, this, tds );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		var anCells = _fnGetTdNodes( oSettings, iRow );
	
		for ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			if ( anCells[i] === n )
			{
				return i;
			}
		}
		return -1;
	}
	
	
	/**
	 * Get an array of data for a given row from the internal data cache
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow aoData row id
	 *  @param {string} sSpecific data get type ('type' 'filter' 'sort')
	 *  @param {array} aiColumns Array of column indexes to get data from
	 *  @returns {array} Data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetRowData( oSettings, iRow, sSpecific, aiColumns )
	{
		var out = [];
		for ( var i=0, iLen=aiColumns.length ; i<iLen ; i++ )
		{
			out.push( _fnGetCellData( oSettings, iRow, aiColumns[i], sSpecific ) );
		}
		return out;
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow aoData row id
	 *  @param {int} iCol Column index
	 *  @param {string} sSpecific data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( oSettings, iRow, iCol, sSpecific )
	{
		var oCol = oSettings.aoColumns[iCol];
		var oData = oSettings.aoData[iRow]._aData;
		var sData = oCol.fnGetData( oData, sSpecific );
	
		if ( sData === undefined )
		{
			if ( oSettings.iDrawError != oSettings.iDraw && oCol.sDefaultContent === null )
			{
				_fnLog( oSettings, 0, "Requested unknown parameter "+
					(typeof oCol.mData=='function' ? '{mData function}' : "'"+oCol.mData+"'")+
					" from the data source for row "+iRow );
				oSettings.iDrawError = oSettings.iDraw;
			}
			return oCol.sDefaultContent;
		}
	
		/* When the data source is null, we can use default column data */
		if ( (sData === oData || sData === null) && oCol.sDefaultContent !== null )
		{
			sData = oCol.sDefaultContent;
		}
		else if ( typeof sData === 'function' )
		{
			// If the data source is a function, then we run it and use the return
			return sData();
		}
	
		if ( sData === null && sSpecific == 'display' )
		{
			return '';
		}
		return sData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow aoData row id
	 *  @param {int} iCol Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( oSettings, iRow, iCol, val )
	{
		var oCol = oSettings.aoColumns[iCol];
		var oData = oSettings.aoData[iRow]._aData;
	
		oCol.fnSetData( oData, val );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g), function ( s ) {
			return s.replace('\\.', '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				o[key] = _fnGetObjectDataFn( val );
			} );
	
			return function (data, type, extra) {
				return o[ o[type] !== undefined ? type : '_' ](data, type, extra);
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data, type) {
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, extra) {
				return mSource( data, type, extra );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var a = _fnSplitObjNotation( src );
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
							
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
								out.push( fetchData( data[j], type, innerSrc ) );
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) {
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) {
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function (data, val) {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val) {
				mSource( data, 'set', val );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
						
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						for ( var j=0, jLen=val.length ; j<jLen ; j++ )
						{
							o = {};
							setData( o, val[j], innerSrc );
							data[ a[i] ].push( o );
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) {
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) {
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( oSettings )
	{
		var aData = [];
		var iLen = oSettings.aoData.length;
		for ( var i=0 ; i<iLen; i++ )
		{
			aData.push( oSettings.aoData[i]._aData );
		}
		return aData;
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( oSettings )
	{
		oSettings.aoData.splice( 0, oSettings.aoData.length );
		oSettings.aiDisplayMaster.splice( 0, oSettings.aiDisplayMaster.length );
		oSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length );
		_fnCalculateEnd( oSettings );
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget )
	{
		var iTargetIndex = -1;
		
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
		
		if ( iTargetIndex != -1 )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			nTr, nTd, oCol,
			i, iLen;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			if ( rowData.DT_RowId )
			{
				nTr.id = rowData.DT_RowId;
			}
	
			if ( rowData.DT_RowClass )
			{
				nTr.className += ' '+rowData.DT_RowClass;
			}
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
	
				nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( !nTrIn || oCol.mRender || oCol.mData !== i )
				{
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
			
				/* Add user defined class */
				if ( oCol.sClass !== null )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				row._anHidden[i] = oCol.bVisible ? null : nTd;
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i, 'display' ), rowData, iRow, i
					);
				}
			}
	
			row.nTr = nTr;
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, nTh, iLen, j, jLen;
		var iThs = $('th, td', oSettings.nTHead).length;
		var iCorrector = 0;
		var jqChildren;
		
		/* If there is a header in place - then use it - otherwise it's going to get nuked... */
		if ( iThs !== 0 )
		{
			/* We've got a thead from the DOM, so remove hidden columns and apply width to vis cols */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				nTh = oSettings.aoColumns[i].nTh;
				nTh.setAttribute('role', 'columnheader');
				if ( oSettings.aoColumns[i].bSortable )
				{
					nTh.setAttribute('tabindex', oSettings.iTabIndex);
					nTh.setAttribute('aria-controls', oSettings.sTableId);
				}
	
				if ( oSettings.aoColumns[i].sClass !== null )
				{
					$(nTh).addClass( oSettings.aoColumns[i].sClass );
				}
				
				/* Set the title of the column if it is user defined (not what was auto detected) */
				if ( oSettings.aoColumns[i].sTitle != nTh.innerHTML )
				{
					nTh.innerHTML = oSettings.aoColumns[i].sTitle;
				}
			}
		}
		else
		{
			/* We don't have a header in the DOM - so we are going to have to create one */
			var nTr = document.createElement( "tr" );
			
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				nTh = oSettings.aoColumns[i].nTh;
				nTh.innerHTML = oSettings.aoColumns[i].sTitle;
				nTh.setAttribute('tabindex', '0');
				
				if ( oSettings.aoColumns[i].sClass !== null )
				{
					$(nTh).addClass( oSettings.aoColumns[i].sClass );
				}
				
				nTr.appendChild( nTh );
			}
			$(oSettings.nTHead).html( '' )[0].appendChild( nTr );
			_fnDetectHeader( oSettings.aoHeader, oSettings.nTHead );
		}
		
		/* ARIA role for the rows */
		$(oSettings.nTHead).children('tr').attr('role', 'row');
		
		/* Add the extra markup needed by jQuery UI's themes */
		if ( oSettings.bJUI )
		{
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				nTh = oSettings.aoColumns[i].nTh;
				
				var nDiv = document.createElement('div');
				nDiv.className = oSettings.oClasses.sSortJUIWrapper;
				$(nTh).contents().appendTo(nDiv);
				
				var nSpan = document.createElement('span');
				nSpan.className = oSettings.oClasses.sSortIcon;
				nDiv.appendChild( nSpan );
				nTh.appendChild( nDiv );
			}
		}
		
		if ( oSettings.oFeatures.bSort )
		{
			for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
			{
				if ( oSettings.aoColumns[i].bSortable !== false )
				{
					_fnSortAttachListener( oSettings, oSettings.aoColumns[i].nTh, i );
				}
				else
				{
					$(oSettings.aoColumns[i].nTh).addClass( oSettings.oClasses.sSortableNone );
				}
			}
		}
		
		/* Deal with the footer - add classes if required */
		if ( oSettings.oClasses.sFooterTH !== "" )
		{
			$(oSettings.nTFoot).children('tr').children('th').addClass( oSettings.oClasses.sFooterTH );
		}
		
		/* Cache the footer elements */
		if ( oSettings.nTFoot !== null )
		{
			var anCells = _fnGetUniqueThs( oSettings, null, oSettings.aoFooter );
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				if ( anCells[i] )
				{
					oSettings.aoColumns[i].nTf = anCells[i];
					if ( oSettings.aoColumns[i].sClass )
					{
						$(anCells[i]).addClass( oSettings.aoColumns[i].sClass );
					}
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
			
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					aoLocal[i][j].cell.rowSpan = iRowspan;
					aoLocal[i][j].cell.colSpan = iColspan;
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
		
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var iStripes = oSettings.asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		
		oSettings.bDrawing = true;
		
		/* Check and see if we have an initial draw position from state saving */
		if ( oSettings.iInitDisplayStart !== undefined && oSettings.iInitDisplayStart != -1 )
		{
			if ( oSettings.oFeatures.bServerSide )
			{
				oSettings._iDisplayStart = oSettings.iInitDisplayStart;
			}
			else
			{
				oSettings._iDisplayStart = (oSettings.iInitDisplayStart >= oSettings.fnRecordsDisplay()) ?
					0 : oSettings.iInitDisplayStart;
			}
			oSettings.iInitDisplayStart = -1;
			_fnCalculateEnd( oSettings );
		}
		
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
		}
		else if ( !oSettings.oFeatures.bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
		
		if ( oSettings.aiDisplay.length !== 0 )
		{
			var iStart = oSettings._iDisplayStart;
			var iEnd = oSettings._iDisplayEnd;
			
			if ( oSettings.oFeatures.bServerSide )
			{
				iStart = 0;
				iEnd = oSettings.aoData.length;
			}
			
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var aoData = oSettings.aoData[ oSettings.aiDisplay[j] ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, oSettings.aiDisplay[j] );
				}
	
				var nRow = aoData.nTr;
				
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = oSettings.asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
				
				/* Row callback functions - might want to manipulate the row */
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, oSettings.aoData[ oSettings.aiDisplay[j] ]._aData, iRowCount, j] );
				
				anRows.push( nRow );
				iRowCount++;
				
				/* If there is an open row - and it is attached to this parent - attach it on redraw */
				for ( var k=0 ; k<iOpenRows ; k++ )
				{
					if ( nRow == oSettings.aoOpenRows[k].nParent )
					{
						anRows.push( oSettings.aoOpenRows[k].nTr );
						break;
					}
				}
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			anRows[ 0 ] = document.createElement( 'tr' );
			
			if ( oSettings.asStripeClasses[0] )
			{
				anRows[ 0 ].className = oSettings.asStripeClasses[0];
			}
	
			var oLang = oSettings.oLanguage;
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 && oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			var nTd = document.createElement( 'td' );
			nTd.setAttribute( 'valign', "top" );
			nTd.colSpan = _fnVisbleColumns( oSettings );
			nTd.className = oSettings.oClasses.sRowEmpty;
			nTd.innerHTML = _fnInfoMacros( oSettings, sZero );
			
			anRows[ iRowCount ].appendChild( nTd );
		}
		
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );
		
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );
		
		/*
		 * Need to remove any old row from the display - note we can't just empty the tbody using
		 * $().html('') since this will unbind the jQuery event handlers (even although the node
		 * still exists!) - equally we can't use innerHTML, since IE throws an exception.
		 */
		var
			nAddFrag = document.createDocumentFragment(),
			nRemoveFrag = document.createDocumentFragment(),
			nBodyPar;
		
		if ( oSettings.nTBody )
		{
			nBodyPar = oSettings.nTBody.parentNode;
			nRemoveFrag.appendChild( oSettings.nTBody );
			
			/* When doing infinite scrolling, only remove child rows when sorting, filtering or start
			 * up. When not infinite scroll, always do it.
			 */
			if ( !oSettings.oScroll.bInfinite || !oSettings._bInitComplete ||
				oSettings.bSorted || oSettings.bFiltered )
			{
				while( (n = oSettings.nTBody.firstChild) )
				{
					oSettings.nTBody.removeChild( n );
				}
			}
			
			/* Put the draw table into the dom */
			for ( i=0, iLen=anRows.length ; i<iLen ; i++ )
			{
				nAddFrag.appendChild( anRows[i] );
			}
			
			oSettings.nTBody.appendChild( nAddFrag );
			if ( nBodyPar !== null )
			{
				nBodyPar.appendChild( oSettings.nTBody );
			}
		}
		
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
		
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		_fnCalculateEnd( settings );
		_fnDraw( settings );
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		/*
		 * Create a temporary, empty, div which we can later on replace with what we have generated
		 * we do it this way to rendering the 'options' html offline - speed :-)
		 */
		var nHolding = $('<div></div>')[0];
		oSettings.nTable.parentNode.insertBefore( nHolding, oSettings.nTable );
		
		/*
		 * All DataTables are wrapped in a div
		 */
		oSettings.nTableWrapper = $('<div id="'+oSettings.sTableId+'_wrapper" class="'+oSettings.oClasses.sWrapper+'" role="grid"></div>')[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Track where we want to insert the option */
		var nInsertNode = oSettings.nTableWrapper;
		
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var nTmp, iPushFeature, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			iPushFeature = 0;
			cOption = aDom[i];
			
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div></div>')[0];
				
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
					
					/* Replace jQuery UI constants */
					if ( sAttr == "H" )
					{
						sAttr = oSettings.oClasses.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = oSettings.oClasses.sJUIFooter;
					}
					
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
					
					i += j; /* Move along the position array */
				}
				
				nInsertNode.appendChild( nNewNode );
				nInsertNode = nNewNode;
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				nInsertNode = nInsertNode.parentNode;
			}
			else if ( cOption == 'l' && oSettings.oFeatures.bPaginate && oSettings.oFeatures.bLengthChange )
			{
				/* Length */
				nTmp = _fnFeatureHtmlLength( oSettings );
				iPushFeature = 1;
			}
			else if ( cOption == 'f' && oSettings.oFeatures.bFilter )
			{
				/* Filter */
				nTmp = _fnFeatureHtmlFilter( oSettings );
				iPushFeature = 1;
			}
			else if ( cOption == 'r' && oSettings.oFeatures.bProcessing )
			{
				/* pRocessing */
				nTmp = _fnFeatureHtmlProcessing( oSettings );
				iPushFeature = 1;
			}
			else if ( cOption == 't' )
			{
				/* Table */
				nTmp = _fnFeatureHtmlTable( oSettings );
				iPushFeature = 1;
			}
			else if ( cOption ==  'i' && oSettings.oFeatures.bInfo )
			{
				/* Info */
				nTmp = _fnFeatureHtmlInfo( oSettings );
				iPushFeature = 1;
			}
			else if ( cOption == 'p' && oSettings.oFeatures.bPaginate )
			{
				/* Pagination */
				nTmp = _fnFeatureHtmlPaginate( oSettings );
				iPushFeature = 1;
			}
			else if ( DataTable.ext.aoFeatures.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.aoFeatures;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						nTmp = aoFeatures[k].fnInit( oSettings );
						if ( nTmp )
						{
							iPushFeature = 1;
						}
						break;
					}
				}
			}
			
			/* Add to the 2D features array */
			if ( iPushFeature == 1 && nTmp !== null )
			{
				if ( typeof oSettings.aanFeatures[cOption] !== 'object' )
				{
					oSettings.aanFeatures[cOption] = [];
				}
				oSettings.aanFeatures[cOption].push( nTmp );
				nInsertNode.appendChild( nTmp );
			}
		}
		
		/* Built our DOM structure - replace the holding div with what we want */
		nHolding.parentNode.replaceChild( oSettings.nTableWrapper, nHolding );
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
		
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
		
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
			
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
					
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
					
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
		
		return aReturn;
	}
	
	
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		var ajaxData;
	
		if ( $.isPlainObject( oSettings.ajax ) && oSettings.ajax.data )
		{
			ajaxData = oSettings.ajax.data;
			var newData = $.isFunction( ajaxData ) ?
				ajaxData( data ) :  // fn can manipulate data or return an object or array
				ajaxData;           // object or array to merge
	
			if ( $.isArray( newData ) )
			{
				// name value pair objects in an array
				data = data.concat( newData );
			}
			else if ( $.isPlainObject( newData ) )
			{
				// aData is an array of name value pairs at this point - convert to
				// an object to easily merge data - jQuery will cope with the switch
				var oData = {};
				$.each( data, function (key, val) {
					oData[val.name] = val.value;
				} );
	
				data = $.extend( true, oData, newData );
			}
	
			// Remove the data property as we've resolved it already
			delete oSettings.ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				if ( json.sError ) {
					oSettings.oApi._fnLog( oSettings, 0, json.sError );
				}
				
				$(oSettings.oInstance).trigger('xhr', [oSettings, json]);
				fn( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				if ( error == "parsererror" ) {
					oSettings.oApi._fnLog( oSettings, 0, "DataTables: invalid JSON response" );
				}
			}
		};
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( oSettings.oInstance,
				oSettings.sAjaxSource, data, fn, oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof oSettings.ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: oSettings.ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( $.isFunction( oSettings.ajax ) )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = oSettings.ajax.call( oSettings.oInstance,
				data, fn, oSettings
			);
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, oSettings.ajax ) );
	
			// Restore for next time around
			oSettings.ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( oSettings )
	{
		if ( oSettings.bAjaxDataGet )
		{
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, true );
			var iColumns = oSettings.aoColumns.length;
			var aoData = _fnAjaxParameters( oSettings );
	
			_fnBuildAjax( oSettings, aoData, function(json) {
				_fnAjaxUpdateDraw( oSettings, json );
			}, oSettings );
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing request
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( oSettings )
	{
		var aoColumns = oSettings.aoColumns;
		var iColumns = aoColumns.length;
		var aoData = [], mDataProp, aaSort, aDataSort;
		var i, j;
		var param = function ( name, value ) {
			aoData.push( { 'name': name, 'value': value } );
		};
		
		param( 'sEcho',          oSettings.iDraw );
		param( 'iColumns',       iColumns );
		param( 'sColumns',       _fnColumnOrdering(oSettings) );
		param( 'iDisplayStart',  oSettings._iDisplayStart );
		param( 'iDisplayLength', oSettings.oFeatures.bPaginate !== false ?
			oSettings._iDisplayLength : -1
		);
			
		for ( i=0 ; i<iColumns ; i++ )
		{
			mDataProp = aoColumns[i].mData;
			param( "mDataProp_"+i, typeof(mDataProp)==="function" ? 'function' : mDataProp );
		}
		
		/* Filtering */
		if ( oSettings.oFeatures.bFilter !== false )
		{
			param( 'sSearch', oSettings.oPreviousSearch.sSearch );
			param( 'bRegex', oSettings.oPreviousSearch.bRegex );
			for ( i=0 ; i<iColumns ; i++ )
			{
				param( 'sSearch_'+i,     oSettings.aoPreSearchCols[i].sSearch );
				param( 'bRegex_'+i,      oSettings.aoPreSearchCols[i].bRegex );
				param( 'bSearchable_'+i, aoColumns[i].bSearchable );
			}
		}
		
		/* Sorting */
		if ( oSettings.oFeatures.bSort !== false )
		{
			var iCounter = 0;
	
			aaSort = ( oSettings.aaSortingFixed !== null ) ?
				oSettings.aaSortingFixed.concat( oSettings.aaSorting ) :
				oSettings.aaSorting.slice();
			
			for ( i=0 ; i<aaSort.length ; i++ )
			{
				aDataSort = aoColumns[ aaSort[i][0] ].aDataSort;
				
				for ( j=0 ; j<aDataSort.length ; j++ )
				{
					param( 'iSortCol_'+iCounter, aDataSort[j] );
					param( 'sSortDir_'+iCounter, aaSort[i][1] );
					iCounter++;
				}
			}
			param( 'iSortingCols', iCounter );
			
			for ( i=0 ; i<iColumns ; i++ )
			{
				param( 'bSortable_'+i, aoColumns[i].bSortable );
			}
		}
		
		return aoData;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( oSettings, json )
	{
		if ( json.sEcho !== undefined )
		{
			/* Protect against old returns over-writing a new one. Possible when you get
			 * very fast interaction, and later queries are completed much faster
			 */
			if ( json.sEcho*1 < oSettings.iDraw )
			{
				return;
			}
			oSettings.iDraw = json.sEcho * 1;
		}
		
		if ( !oSettings.oScroll.bInfinite || oSettings.bSorted || oSettings.bFiltered )
		{
			_fnClearTable( oSettings );
		}
		oSettings._iRecordsTotal = parseInt(json.iTotalRecords, 10);
		oSettings._iRecordsDisplay = parseInt(json.iTotalDisplayRecords, 10);
		
		var aData = _fnAjaxDataSrc( oSettings, json );
		for ( var i=0, iLen=aData.length ; i<iLen ; i++ )
		{
			_fnAddData( oSettings, aData[i] );
		}
		oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
		
		oSettings.bAjaxDataGet = false;
		_fnDraw( oSettings );
	
		if ( ! oSettings._bInitComplete )
		{
			_fnInitComplete( oSettings, json );
		}
		
		oSettings.bAjaxDataGet = true;
		_fnProcessingDisplay( oSettings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )(json) :
			json;
	}
	
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( oSettings )
	{
		var oPreviousSearch = oSettings.oPreviousSearch;
		
		var sSearchStr = oSettings.oLanguage.sSearch;
		sSearchStr = (sSearchStr.indexOf('_INPUT_') !== -1) ?
		  sSearchStr.replace('_INPUT_', '<input type="search" />') :
		  sSearchStr==="" ? '<input type="search" />' : sSearchStr+' <input type="search" />';
		
		var nFilter = document.createElement( 'div' );
		nFilter.className = oSettings.oClasses.sFilter;
		nFilter.innerHTML = '<label>'+sSearchStr+'</label>';
		if ( !oSettings.aanFeatures.f )
		{
			nFilter.id = oSettings.sTableId+'_filter';
		}
		
		var jqFilter = $('input[type="search"]', nFilter);
	
		// Store a reference to the input element, so other input elements could be
		// added to the filter wrapper if needed (submit button for example)
		nFilter._DT_Input = jqFilter[0];
	
		jqFilter.val( oPreviousSearch.sSearch.replace('"','&quot;') );
		jqFilter.bind( 'keyup.DT search.DT', function(e) {
			/* Update all other filter input elements for the new display */
			var n = oSettings.aanFeatures.f;
			var val = this.value==="" ? "" : this.value; // mental IE8 fix :-(
	
			for ( var i=0, iLen=n.length ; i<iLen ; i++ )
			{
				if ( n[i] != $(this).parents('div.dataTables_filter')[0] )
				{
					$(n[i]._DT_Input).val( val );
				}
			}
			
			/* Now do the filter */
			if ( val != oPreviousSearch.sSearch )
			{
				_fnFilterComplete( oSettings, {
					"sSearch": val,
					"bRegex": oPreviousSearch.bRegex,
					"bSmart": oPreviousSearch.bSmart ,
					"bCaseInsensitive": oPreviousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				oSettings._iDisplayStart = 0;
				_fnCalculateEnd( oSettings );
				_fnDraw( oSettings );
			}
		} );
	
		jqFilter
			.attr('aria-controls', oSettings.sTableId)
			.bind( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 )
				{
					return false;
				}
			}
		);
		
		return nFilter;
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( !oSettings.oFeatures.bServerSide )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, oInput.bRegex, oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<oSettings.aoPreSearchCols.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, aoPrevSearch[i].bRegex,
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
			
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
		
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		$(oSettings.oInstance).trigger('filter', oSettings);
	
		_fnBuildSearchArray( oSettings, 0 );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( oSettings )
	{
		var afnFilters = DataTable.ext.afnFiltering;
		var aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );
	
		for ( var i=0, iLen=afnFilters.length ; i<iLen ; i++ )
		{
			var iCorrector = 0;
			for ( var j=0, jLen=oSettings.aiDisplay.length ; j<jLen ; j++ )
			{
				var iDisIndex = oSettings.aiDisplay[j-iCorrector];
				var bTest = afnFilters[i](
					oSettings,
					_fnGetRowData( oSettings, iDisIndex, 'filter', aiFilterColumns ),
					iDisIndex
				);
				
				/* Check if we should use this row based on the filtering function */
				if ( !bTest )
				{
					oSettings.aiDisplay.splice( j-iCorrector, 1 );
					iCorrector++;
				}
			}
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( oSettings, sInput, iColumn, bRegex, bSmart, bCaseInsensitive )
	{
		if ( sInput === "" )
		{
			return;
		}
		
		var iIndexCorrector = 0;
		var rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );
		
		for ( var i=oSettings.aiDisplay.length-1 ; i>=0 ; i-- )
		{
			var sData = _fnDataToSearch( _fnGetCellData( oSettings, oSettings.aiDisplay[i], iColumn, 'filter' ),
				oSettings.aoColumns[iColumn].sType );
			if ( ! rpSearch.test( sData ) )
			{
				oSettings.aiDisplay.splice( i, 1 );
				iIndexCorrector++;
			}
		}
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iForce optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( oSettings, sInput, iForce, bRegex, bSmart, bCaseInsensitive )
	{
		var i;
		var rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );
		var oPrevSearch = oSettings.oPreviousSearch;
		
		/* Check if we are forcing or not - optional parameter */
		if ( !iForce )
		{
			iForce = 0;
		}
		
		/* Need to take account of custom filtering functions - always filter */
		if ( DataTable.ext.afnFiltering.length !== 0 )
		{
			iForce = 1;
		}
		
		/*
		 * If the input is blank - we want the full data set
		 */
		if ( sInput.length <= 0 )
		{
			oSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
		}
		else
		{
			/*
			 * We are starting a new search or the new search string is smaller
			 * then the old one (i.e. delete). Search from the master array
			 */
			if ( oSettings.aiDisplay.length == oSettings.aiDisplayMaster.length ||
				   oPrevSearch.sSearch.length > sInput.length || iForce == 1 ||
				   sInput.indexOf(oPrevSearch.sSearch) !== 0 )
			{
				/* Nuke the old display array - we are going to rebuild it */
				oSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);
				
				/* Force a rebuild of the search array */
				_fnBuildSearchArray( oSettings, 1 );
				
				/* Search through all records to populate the search array
				 * The the oSettings.aiDisplayMaster and asDataSearch arrays have 1 to 1
				 * mapping
				 */
				for ( i=0 ; i<oSettings.aiDisplayMaster.length ; i++ )
				{
					if ( rpSearch.test(oSettings.asDataSearch[i]) )
					{
						oSettings.aiDisplay.push( oSettings.aiDisplayMaster[i] );
					}
				}
			}
			else
			{
				/* Using old search array - refine it - do it this way for speed
				 * Don't have to search the whole master array again
				 */
				var iIndexCorrector = 0;
				
				/* Search the current results */
				for ( i=0 ; i<oSettings.asDataSearch.length ; i++ )
				{
					if ( ! rpSearch.test(oSettings.asDataSearch[i]) )
					{
						oSettings.aiDisplay.splice( i-iIndexCorrector, 1 );
						iIndexCorrector++;
					}
				}
			}
		}
	}
	
	
	/**
	 * Create an array which can be quickly search through
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMaster use the master data array - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildSearchArray ( oSettings, iMaster )
	{
		if ( !oSettings.oFeatures.bServerSide )
		{
			/* Clear out the old data */
			oSettings.asDataSearch = [];
	
			var aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );
			var aiIndex = (iMaster===1) ?
				oSettings.aiDisplayMaster :
				oSettings.aiDisplay;
			
			for ( var i=0, iLen=aiIndex.length ; i<iLen ; i++ )
			{
				oSettings.asDataSearch[i] = _fnBuildSearchRow(
					oSettings,
					_fnGetRowData( oSettings, aiIndex[i], 'filter', aiFilterColumns )
				);
			}
		}
	}
	
	
	/**
	 * Create a searchable string from a single data row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData Row data array to use for the data to search
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildSearchRow( oSettings, aData )
	{
		var
			idx = 0,
			aoColumns = oSettings.aoColumns;
	
		// aData is passed in without the columns which are not searchable, so
		// we need to be careful in getting the correct column type
		for ( var i=0, len=aoColumns.length ; i<len ; i++ ) {
			aData[idx] = _fnDataToSearch( aData[idx], aoColumns[i].sType );
	
			if ( aoColumns[i].bSearchable ) {
				idx++;
			}
		}
		
		var sSearch = aData.join('  ');
		
		/* If it looks like there is an HTML entity in the string, attempt to decode it */
		if ( sSearch.indexOf('&') !== -1 )
		{
			sSearch = $('<div>').html(sSearch).text();
		}
		
		// Strip newline characters
		return sSearch.replace( /[\n\r]/g, " " );
	}
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( sSearch, bRegex, bSmart, bCaseInsensitive )
	{
		var asSearch,
			sRegExpString = bRegex ? sSearch : _fnEscapeRegex( sSearch );
		
		if ( bSmart )
		{
			/* Generate the regular expression to use. Something along the lines of:
			 * ^(?=.*?\bone\b)(?=.*?\btwo\b)(?=.*?\bthree\b).*$
			 */
			asSearch = sRegExpString.split( ' ' );
			sRegExpString = '^(?=.*?'+asSearch.join( ')(?=.*?' )+').*$';
		}
		
		return new RegExp( sRegExpString, bCaseInsensitive ? "i" : "" );
	}
	
	
	/**
	 * Convert raw data into something that the user can search on
	 *  @param {string} sData data to be modified
	 *  @param {string} sType data type
	 *  @returns {string} search string
	 *  @memberof DataTable#oApi
	 */
	function _fnDataToSearch ( sData, sType )
	{
		if ( typeof DataTable.ext.ofnSearch[sType] === "function" )
		{
			return DataTable.ext.ofnSearch[sType]( sData );
		}
		else if ( sData === null )
		{
			return '';
		}
		else if ( sType == "html" )
		{
			return sData.replace(/[\r\n]/g," ").replace( /<.*?>/g, "" );
		}
		else if ( typeof sData === "string" )
		{
			return sData.replace(/[\r\n]/g," ");
		}
		return sData;
	}
	
	
	/**
	 * scape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	function _fnEscapeRegex ( sVal )
	{
		var acEscape = [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ];
		var reReplace = new RegExp( '(\\' + acEscape.join('|\\') + ')', 'g' );
		return sVal.replace(reReplace, '\\$1');
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( oSettings )
	{
		var nInfo = document.createElement( 'div' );
		nInfo.className = oSettings.oClasses.sInfo;
		
		/* Actions that are to be taken once only for this feature */
		if ( !oSettings.aanFeatures.i )
		{
			/* Add draw callback */
			oSettings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
			
			/* Add id */
			nInfo.id = oSettings.sTableId+'_info';
		}
		oSettings.nTable.setAttribute( 'aria-describedby', oSettings.sTableId+'_info' );
		
		return nInfo;
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( oSettings )
	{
		/* Show information about the table */
		if ( !oSettings.oFeatures.bInfo || oSettings.aanFeatures.i.length === 0 )
		{
			return;
		}
		
		var
			oLang = oSettings.oLanguage,
			iStart = oSettings._iDisplayStart+1,
			iEnd = oSettings.fnDisplayEnd(),
			iMax = oSettings.fnRecordsTotal(),
			iTotal = oSettings.fnRecordsDisplay(),
			sOut;
		
		if ( iTotal === 0 )
		{
			/* Empty record set */
			sOut = oLang.sInfoEmpty;
		}
		else {
			/* Normal record set */
			sOut = oLang.sInfo;
		}
	
		if ( iTotal != iMax )
		{
			/* Record set after filtering */
			sOut += ' ' + oLang.sInfoFiltered;
		}
	
		// Convert the macros
		sOut += oLang.sInfoPostFix;
		sOut = _fnInfoMacros( oSettings, sOut );
		
		if ( oLang.fnInfoCallback !== null )
		{
			sOut = oLang.fnInfoCallback.call( oSettings.oInstance,
				oSettings, iStart, iEnd, iMax, iTotal, sOut );
		}
		
		var n = oSettings.aanFeatures.i;
		for ( var i=0, iLen=n.length ; i<iLen ; i++ )
		{
			$(n[i]).html( sOut );
		}
	}
	
	
	function _fnInfoMacros ( oSettings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			iStart = oSettings.oScroll.bInfinite ? 1 : oSettings._iDisplayStart+1,
			sStart = oSettings.fnFormatNumber( iStart ),
			iEnd = oSettings.fnDisplayEnd(),
			sEnd = oSettings.fnFormatNumber( iEnd ),
			iTotal = oSettings.fnRecordsDisplay(),
			sTotal = oSettings.fnFormatNumber( iTotal ),
			iMax = oSettings.fnRecordsTotal(),
			sMax = oSettings.fnFormatNumber( iMax );
	
		return str.
			replace(/_START_/g, sStart).
			replace(/_END_/g,   sEnd).
			replace(/_TOTAL_/g, sTotal).
			replace(/_MAX_/g,   sMax);
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( oSettings )
	{
		var i, iLen, iAjaxStart=oSettings.iInitDisplayStart;
		
		/* Ensure that the table data is fully initialised */
		if ( oSettings.bInitialised === false )
		{
			setTimeout( function(){ _fnInitialise( oSettings ); }, 200 );
			return;
		}
		
		/* Show the display HTML options */
		_fnAddOptionsHtml( oSettings );
		
		/* Build and draw the header / footer for the table */
		_fnBuildHead( oSettings );
		_fnDrawHead( oSettings, oSettings.aoHeader );
		if ( oSettings.nTFoot )
		{
			_fnDrawHead( oSettings, oSettings.aoFooter );
		}
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( oSettings, true );
		
		/* Calculate sizes for columns */
		if ( oSettings.oFeatures.bAutoWidth )
		{
			_fnCalculateColumnWidths( oSettings );
		}
		
		for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			if ( oSettings.aoColumns[i].sWidth !== null )
			{
				oSettings.aoColumns[i].nTh.style.width = _fnStringToCss( oSettings.aoColumns[i].sWidth );
			}
		}
		
		/* If there is default sorting required - let's do it. The sort function will do the
		 * drawing for us. Otherwise we draw the table regardless of the Ajax source - this allows
		 * the table to look initialised for Ajax sourcing data (show 'loading' message possibly)
		 */
		_fnReDraw( oSettings );
		
		/* if there is an ajax source load the data */
		if ( (oSettings.sAjaxSource || oSettings.ajax) && !oSettings.oFeatures.bServerSide )
		{
			var aoData = [];
			_fnBuildAjax( oSettings, [], function(json) {
				var aData = _fnAjaxDataSrc( oSettings, json );
	
				/* Got the data - add it to the table */
				for ( i=0 ; i<aData.length ; i++ )
				{
					_fnAddData( oSettings, aData[i] );
				}
				
				/* Reset the init display for cookie saving. We've already done a filter, and
				 * therefore cleared it before. So we need to make it appear 'fresh'
				 */
				oSettings.iInitDisplayStart = iAjaxStart;
				
				_fnReDraw( oSettings );
				
				_fnProcessingDisplay( oSettings, false );
				_fnInitComplete( oSettings, json );
			}, oSettings );
			return;
		}
		
		/* Server-side processing init complete is done by _fnAjaxUpdateDraw */
		if ( !oSettings.oFeatures.bServerSide )
		{
			_fnProcessingDisplay( oSettings, false );
			_fnInitComplete( oSettings );
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( oSettings, json )
	{
		oSettings._bInitComplete = true;
		_fnCallbackFire( oSettings, 'aoInitComplete', 'init', [oSettings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var
			start = settings._iDisplayStart,
			records = settings.fnRecordsDisplay(),
			end,
			len = parseInt( val, 10 );
	
		/* Redraw the table */
		settings._iDisplayLength = len;
		_fnCalculateEnd( settings );
	
		end = settings.fnDisplayEnd();
		
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( end === records )
		{
			start = end - len;
		}
		
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	
		// Fire length change event
		$(settings.oInstance).trigger( 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		if ( settings.oScroll.bInfinite ) {
			return null;
		}
	
		var
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option( language[i], lengths[i] );
		}
	
		var div = $('<div><label/></div>').addClass( settings.oClasses.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		// This split doesn't matter where _MENU_ is, we get three items back from it
		var a = settings.oLanguage.sLengthMenu.split(/(_MENU_)/);
		div.children()
			.append( a[0] )
			.append( select )
			.append( a[2] );
	
		select
			.val( settings._iDisplayLength )
			.bind( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).bind( 'length', function (e, s, len) {
			select.val( len );
		} );
	
		return div[0];
	}
	
	
	/**
	 * Recalculate the end point based on the start point
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateEnd( settings )
	{
		var
			len     = settings._iDisplayLength,
			calc    = settings._iDisplayStart + len,
			records = settings.aiDisplay.length;
	
		settings._iDisplayEnd = ! settings.oFeatures.bPaginate || calc>records || len===-1 ?
			records :
			calc;
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.oPagination
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		if ( settings.oScroll.bInfinite )
		{
			return null;
		}
		
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.oPagination[ type ],
			redraw = function( settings ) {
				_fnCalculateEnd( settings );
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0];
	
		plugin.fnInit( settings, node, redraw );
		
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! settings.aanFeatures.p )
		{
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					plugin.fnUpdate( settings, redraw );
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		$(settings.oInstance).trigger('page', settings);
		
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( oSettings )
	{
		var nProcessing = document.createElement( 'div' );
		
		if ( !oSettings.aanFeatures.r )
		{
			nProcessing.id = oSettings.sTableId+'_processing';
		}
		nProcessing.innerHTML = oSettings.oLanguage.sProcessing;
		nProcessing.className = oSettings.oClasses.sProcessing;
		oSettings.nTable.parentNode.insertBefore( nProcessing, oSettings.nTable );
		
		return nProcessing;
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} oSettings dataTables settings object
	 *  @param {bool} bShow Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( oSettings, bShow )
	{
		if ( oSettings.oFeatures.bProcessing )
		{
			var an = oSettings.aanFeatures.r;
			for ( var i=0, iLen=an.length ; i<iLen ; i++ )
			{
				an[i].style.visibility = bShow ? "visible" : "hidden";
			}
		}
	
		$(oSettings.oInstance).trigger('processing', [oSettings, bShow]);
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( oSettings )
	{
		/* Check if scrolling is enabled or not - if not then leave the DOM unaltered */
		if ( oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "" )
		{
			return oSettings.nTable;
		}
		
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - nScroller
		 *    div - nScrollHead
		 *      div - nScrollHeadInner
		 *        table - nScrollHeadTable
		 *          thead - nThead
		 *    div - nScrollBody
		 *      table - oSettings.nTable
		 *        thead - nTheadSize
		 *        tbody - nTbody
		 *    div - nScrollFoot
		 *      div - nScrollFootInner
		 *        table - nScrollFootTable
		 *          tfoot - nTfoot
		 */
		var
		 	nScroller = document.createElement('div'),
		 	nScrollHead = document.createElement('div'),
		 	nScrollHeadInner = document.createElement('div'),
		 	nScrollBody = document.createElement('div'),
		 	nScrollFoot = document.createElement('div'),
		 	nScrollFootInner = document.createElement('div'),
		 	nScrollHeadTable = oSettings.nTable.cloneNode(false),
		 	nScrollFootTable = oSettings.nTable.cloneNode(false),
			nThead = oSettings.nTable.getElementsByTagName('thead')[0],
		 	nTfoot = oSettings.nTable.getElementsByTagName('tfoot').length === 0 ? null :
				oSettings.nTable.getElementsByTagName('tfoot')[0],
			oClasses = oSettings.oClasses;
		
		nScrollHead.appendChild( nScrollHeadInner );
		nScrollFoot.appendChild( nScrollFootInner );
		nScrollBody.appendChild( oSettings.nTable );
		nScroller.appendChild( nScrollHead );
		nScroller.appendChild( nScrollBody );
		nScrollHeadInner.appendChild( nScrollHeadTable );
		nScrollHeadTable.appendChild( nThead );
		if ( nTfoot !== null )
		{
			nScroller.appendChild( nScrollFoot );
			nScrollFootInner.appendChild( nScrollFootTable );
			nScrollFootTable.appendChild( nTfoot );
		}
		
		nScroller.className = oClasses.sScrollWrapper;
		nScrollHead.className = oClasses.sScrollHead;
		nScrollHeadInner.className = oClasses.sScrollHeadInner;
		nScrollBody.className = oClasses.sScrollBody;
		nScrollFoot.className = oClasses.sScrollFoot;
		nScrollFootInner.className = oClasses.sScrollFootInner;
		
		if ( oSettings.oScroll.bAutoCss )
		{
			nScrollHead.style.overflow = "hidden";
			nScrollHead.style.position = "relative";
			nScrollFoot.style.overflow = "hidden";
			nScrollBody.style.overflow = "auto";
		}
		
		nScrollHead.style.border = "0";
		nScrollHead.style.width = "100%";
		nScrollFoot.style.border = "0";
		nScrollHeadInner.style.width = oSettings.oScroll.sXInner !== "" ?
			oSettings.oScroll.sXInner : "100%"; /* will be overwritten */
		
		/* Modify attributes to respect the clones */
		nScrollHeadTable.removeAttribute('id');
		nScrollHeadTable.style.marginLeft = "0";
		oSettings.nTable.style.marginLeft = "0";
		if ( nTfoot !== null )
		{
			nScrollFootTable.removeAttribute('id');
			nScrollFootTable.style.marginLeft = "0";
		}
		
		/* Move caption elements from the body to the header, footer or leave where it is
		 * depending on the configuration. Note that the DTD says there can be only one caption */
		var nCaption = $(oSettings.nTable).children('caption');
		if ( nCaption.length > 0 )
		{
			nCaption = nCaption[0];
			if ( nCaption._captionSide === "top" )
			{
				nScrollHeadTable.appendChild( nCaption );
			}
			else if ( nCaption._captionSide === "bottom" && nTfoot )
			{
				nScrollFootTable.appendChild( nCaption );
			}
		}
		
		/*
		 * Sizing
		 */
		/* When x-scrolling add the width and a scroller to move the header with the body */
		if ( oSettings.oScroll.sX !== "" )
		{
			nScrollHead.style.width = _fnStringToCss( oSettings.oScroll.sX );
			nScrollBody.style.width = _fnStringToCss( oSettings.oScroll.sX );
			
			if ( nTfoot !== null )
			{
				nScrollFoot.style.width = _fnStringToCss( oSettings.oScroll.sX );	
			}
			
			/* When the body is scrolled, then we also want to scroll the headers */
			$(nScrollBody).scroll( function (e) {
				nScrollHead.scrollLeft = this.scrollLeft;
				
				if ( nTfoot !== null )
				{
					nScrollFoot.scrollLeft = this.scrollLeft;
				}
			} );
		}
		
		/* When yscrolling, add the height */
		if ( oSettings.oScroll.sY !== "" )
		{
			nScrollBody.style.height = _fnStringToCss( oSettings.oScroll.sY );
		}
		
		/* Redraw - align columns across the tables */
		oSettings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
		
		/* Infinite scrolling event handlers */
		if ( oSettings.oScroll.bInfinite )
		{
			$(nScrollBody).scroll( function() {
				/* Use a blocker to stop scrolling from loading more data while other data is still loading */
				if ( !oSettings.bDrawing && $(this).scrollTop() !== 0 )
				{
					/* Check if we should load the next data set */
					if ( $(this).scrollTop() + $(this).height() >
						$(oSettings.nTable).height() - oSettings.oScroll.iLoadGap )
					{
						/* Only do the redraw if we have to - we might be at the end of the data */
						if ( oSettings.fnDisplayEnd() < oSettings.fnRecordsDisplay() )
						{
							_fnPageChange( oSettings, 'next' );
							_fnCalculateEnd( oSettings );
							_fnDraw( oSettings );
						}
					}
				}
			} );
		}
		
		oSettings.nScrollHead = nScrollHead;
		oSettings.nScrollFoot = nScrollFoot;
		
		return nScroller;
	}
	
	
	/**
	 * Update the various tables for resizing. It's a bit of a pig this function, but
	 * basically the idea to:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements
	 *   4. Clean up
	 *  @param {object} o dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( o )
	{
		var
			nScrollHeadInner = o.nScrollHead.getElementsByTagName('div')[0],
			nScrollHeadTable = nScrollHeadInner.getElementsByTagName('table')[0],
			nScrollBody = o.nTable.parentNode,
			i, iLen, j, jLen, anHeadToSize, anHeadSizers, anFootSizers, anFootToSize, oStyle, iVis,
			nTheadSize, nTfootSize,
			iWidth, aApplied=[], aAppliedFooter=[], iSanityWidth,
			nScrollFootInner = (o.nTFoot !== null) ? o.nScrollFoot.getElementsByTagName('div')[0] : null,
			nScrollFootTable = (o.nTFoot !== null) ? nScrollFootInner.getElementsByTagName('table')[0] : null,
			ie67 = o.oBrowser.bScrollOversize,
			zeroOut = function(nSizer) {
				oStyle = nSizer.style;
				oStyle.paddingTop = "0";
				oStyle.paddingBottom = "0";
				oStyle.borderTopWidth = "0";
				oStyle.borderBottomWidth = "0";
				oStyle.height = 0;
			};
		
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
		
		/* Remove the old minimised thead and tfoot elements in the inner table */
		$(o.nTable).children('thead, tfoot').remove();
	
		/* Clone the current header and footer elements and then place it into the inner table */
		nTheadSize = $(o.nTHead).clone()[0];
		o.nTable.insertBefore( nTheadSize, o.nTable.childNodes[0] );
		anHeadToSize = o.nTHead.getElementsByTagName('tr');
		anHeadSizers = nTheadSize.getElementsByTagName('tr');
		$('th, td', nTheadSize).removeAttr('tabindex');
		
		if ( o.nTFoot !== null )
		{
			nTfootSize = $(o.nTFoot).clone()[0];
			o.nTable.insertBefore( nTfootSize, o.nTable.childNodes[1] );
			anFootToSize = o.nTFoot.getElementsByTagName('tr');
			anFootSizers = nTfootSize.getElementsByTagName('tr');
		}
		
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
		
		/* Remove old sizing and apply the calculated column widths
		 * Get the unique column headers in the newly created (cloned) header. We want to apply the
		 * calculated sizes to this header
		 */
		if ( o.oScroll.sX === "" )
		{
			nScrollBody.style.width = '100%';
			nScrollHeadInner.parentNode.style.width = '100%';
		}
		
		var nThs = _fnGetUniqueThs( o, nTheadSize );
		for ( i=0, iLen=nThs.length ; i<iLen ; i++ )
		{
			iVis = _fnVisibleToColumnIndex( o, i );
			nThs[i].style.width = o.aoColumns[iVis].sWidth;
		}
		
		if ( o.nTFoot !== null )
		{
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, anFootSizers );
		}
	
		// If scroll collapse is enabled, when we put the headers back into the body for sizing, we
		// will end up forcing the scrollbar to appear, making our measurements wrong for when we
		// then hide it (end of this function), so add the header height to the body scroller.
		if ( o.oScroll.bCollapse && o.oScroll.sY !== "" )
		{
			nScrollBody.style.height = (nScrollBody.offsetHeight + o.nTHead.offsetHeight)+"px";
		}
		
		/* Size the table as a whole */
		iSanityWidth = $(o.nTable).outerWidth();
		if ( o.oScroll.sX === "" )
		{
			/* No x scrolling */
			o.nTable.style.width = "100%";
			
			/* I know this is rubbish - but IE7 will make the width of the table when 100% include
			 * the scrollbar - which is shouldn't. When there is a scrollbar we need to take this
			 * into account.
			 */
			if ( ie67 && ($('tbody', nScrollBody).height() > nScrollBody.offsetHeight ||
				$(nScrollBody).css('overflow-y') == "scroll")  )
			{
				o.nTable.style.width = _fnStringToCss( $(o.nTable).outerWidth() - o.oScroll.iBarWidth);
			}
		}
		else
		{
			if ( o.oScroll.sXInner !== "" )
			{
				/* x scroll inner has been given - use it */
				o.nTable.style.width = _fnStringToCss(o.oScroll.sXInner);
			}
			else if ( iSanityWidth == $(nScrollBody).width() &&
			   $(nScrollBody).height() < $(o.nTable).height() )
			{
				/* There is y-scrolling - try to take account of the y scroll bar */
				o.nTable.style.width = _fnStringToCss( iSanityWidth-o.oScroll.iBarWidth );
				if ( $(o.nTable).outerWidth() > iSanityWidth-o.oScroll.iBarWidth )
				{
					/* Not possible to take account of it */
					o.nTable.style.width = _fnStringToCss( iSanityWidth );
				}
			}
			else
			{
				/* All else fails */
				o.nTable.style.width = _fnStringToCss( iSanityWidth );
			}
		}
		
		/* Recalculate the sanity width - now that we've applied the required width, before it was
		 * a temporary variable. This is required because the column width calculation is done
		 * before this table DOM is created.
		 */
		iSanityWidth = $(o.nTable).outerWidth();
		
		/* We want the hidden header to have zero height, so remove padding and borders. Then
		 * set the width based on the real headers
		 */
		
		// Apply all styles in one pass. Invalidates layout only once because we don't read any
		// DOM properties.
		_fnApplyToChildren( zeroOut, anHeadSizers );
	
		// Read all widths in next pass. Forces layout only once because we do not change
		// any DOM properties.
		_fnApplyToChildren( function(nSizer) {
			aApplied.push( _fnStringToCss( $(nSizer).width() ) );
		}, anHeadSizers );
	
		// Apply all widths in final pass. Invalidates layout only once because we do not
		// read any DOM properties.
		_fnApplyToChildren( function(nToSize, i) {
			nToSize.style.width = aApplied[i];
		}, anHeadToSize );
	
		$(anHeadSizers).height(0);
		
		/* Same again with the footer if we have one */
		if ( o.nTFoot !== null )
		{
			_fnApplyToChildren( zeroOut, anFootSizers );
	
			_fnApplyToChildren( function(nSizer) {
				aAppliedFooter.push( _fnStringToCss( $(nSizer).width() ) );
			}, anFootSizers );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = aAppliedFooter[i];
			}, anFootToSize );
	
			$(anFootSizers).height(0);
		}
		
		/*
		 * 3. Apply the measurements
		 */
		
		/* "Hide" the header and footer that we used for the sizing. We want to also fix their width
		 * to what they currently are
		 */
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = "";
			nSizer.style.width = aApplied[i];
		}, anHeadSizers );
		
		if ( o.nTFoot !== null )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = "";
				nSizer.style.width = aAppliedFooter[i];
			}, anFootSizers );
		}
		
		/* Sanity check that the table is of a sensible width. If not then we are going to get
		 * misalignment - try to prevent this by not allowing the table to shrink below its min width
		 */
		if ( $(o.nTable).outerWidth() < iSanityWidth )
		{
			/* The min width depends upon if we have a vertical scrollbar visible or not */
			var iCorrection = ((nScrollBody.scrollHeight > nScrollBody.offsetHeight ||
				$(nScrollBody).css('overflow-y') == "scroll")) ?
					iSanityWidth+o.oScroll.iBarWidth : iSanityWidth;
			
			/* IE6/7 are a law unto themselves... */
			if ( ie67 && (nScrollBody.scrollHeight >
				nScrollBody.offsetHeight || $(nScrollBody).css('overflow-y') == "scroll")  )
			{
				o.nTable.style.width = _fnStringToCss( iCorrection-o.oScroll.iBarWidth );
			}
			
			/* Apply the calculated minimum width to the table wrappers */
			nScrollBody.style.width = _fnStringToCss( iCorrection );
			o.nScrollHead.style.width = _fnStringToCss( iCorrection );
			
			if ( o.nTFoot !== null )
			{
				o.nScrollFoot.style.width = _fnStringToCss( iCorrection );
			}
			
			/* And give the user a warning that we've stopped the table getting too small */
			if ( o.oScroll.sX === "" )
			{
				_fnLog( o, 1, "The table cannot fit into the current element which will cause column"+
					" misalignment. The table has been drawn at its minimum possible width." );
			}
			else if ( o.oScroll.sXInner !== "" )
			{
				_fnLog( o, 1, "The table cannot fit into the current element which will cause column"+
					" misalignment. Increase the sScrollXInner value or remove it to allow automatic"+
					" calculation" );
			}
		}
		else
		{
			nScrollBody.style.width = _fnStringToCss( '100%' );
			o.nScrollHead.style.width = _fnStringToCss( '100%' );
			
			if ( o.nTFoot !== null )
			{
				o.nScrollFoot.style.width = _fnStringToCss( '100%' );
			}
		}
		
		
		/*
		 * 4. Clean up
		 */
		if ( o.oScroll.sY === "" )
		{
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 )
			{
				nScrollBody.style.height = _fnStringToCss( o.nTable.offsetHeight+o.oScroll.iBarWidth );
			}
		}
		
		if ( o.oScroll.sY !== "" && o.oScroll.bCollapse )
		{
			nScrollBody.style.height = _fnStringToCss( o.oScroll.sY );
			
			var iExtra = (o.oScroll.sX !== "" && o.nTable.offsetWidth > nScrollBody.offsetWidth) ?
			 	o.oScroll.iBarWidth : 0;
			if ( o.nTable.offsetHeight < nScrollBody.offsetHeight )
			{
				nScrollBody.style.height = _fnStringToCss( o.nTable.offsetHeight+iExtra );
			}
		}
		
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = $(o.nTable).outerWidth();
		nScrollHeadTable.style.width = _fnStringToCss( iOuterWidth );
		nScrollHeadInner.style.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = $(o.nTable).height() > nScrollBody.clientHeight || $(nScrollBody).css('overflow-y') == "scroll";
		var padding = o.oBrowser.bScrollbarLeft ? 'paddingLeft' : 'paddingRight';
		nScrollHeadInner.style[padding] = bScrolling ? o.oScroll.iBarWidth+"px" : "0px";
		
		if ( o.nTFoot !== null )
		{
			nScrollFootTable.style.width = _fnStringToCss( iOuterWidth );
			nScrollFootInner.style.width = _fnStringToCss( iOuterWidth );
			nScrollFootInner.style[padding] = bScrolling ? o.oScroll.iBarWidth+"px" : "0px";
		}
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		$(nScrollBody).scroll();
		
		/* If sorting or filtering has occurred, jump the scrolling back to the top */
		if ( o.bSorted || o.bFiltered )
		{
			nScrollBody.scrollTop = 0;
		}
	}
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen )
		{
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
			while ( nNode1 )
			{
				if ( nNode1.nodeType === 1 )
				{
					if ( an2 )
					{
						fn( nNode1, nNode2, index );
					}
					else
					{
						fn( nNode1, index );
					}
					index++;
				}
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
			i++;
		}
	}
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} sWidth width to be converted
	 *  @param {node} nParent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} iWidth width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( sWidth, nParent )
	{
		if ( ! sWidth )
		{
			return 0;
		}
		
		if ( ! nParent )
		{
			nParent = document.body;
		}
		
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( sWidth ) )
			.appendTo( nParent );
	
		var width = n[0].offsetWidth;
		n.remove();
		
		return width;
	}
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var iTableWidth = oSettings.nTable.offsetWidth;
		var iUserInputs = 0;
		var iTmpWidth;
		var iVisibleColumns = 0;
		var iColums = oSettings.aoColumns.length;
		var i, iIndex, iCorrector, iWidth;
		var oHeaders = $('th', oSettings.nTHead);
		var widthAttr = oSettings.nTable.getAttribute('width');
		var nWrapper = oSettings.nTable.parentNode;
		
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<iColums ; i++ )
		{
			if ( oSettings.aoColumns[i].bVisible )
			{
				iVisibleColumns++;
				
				if ( oSettings.aoColumns[i].sWidth !== null )
				{
					iTmpWidth = _fnConvertToWidth( oSettings.aoColumns[i].sWidthOrig,
						nWrapper );
					if ( iTmpWidth !== null )
					{
						oSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );
					}
						
					iUserInputs++;
				}
			}
		}
		
		/* If the number of columns in the DOM equals the number that we have to process in
		 * DataTables, then we can use the offsets that are created by the web-browser. No custom
		 * sizes can be set in order for this to happen, nor scrolling used
		 */
		if ( iColums == oHeaders.length && iUserInputs === 0 && iVisibleColumns == iColums &&
			oSettings.oScroll.sX === "" && oSettings.oScroll.sY === "" )
		{
			for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
			{
				iTmpWidth = $(oHeaders[i]).width();
				if ( iTmpWidth !== null )
				{
					oSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );
				}
			}
		}
		else
		{
			/* Otherwise we are going to have to do some calculations to get the width of each column.
			 * Construct a 1 row table with the widest node in the data, and any user defined widths,
			 * then insert it into the DOM and allow the browser to do all the hard work of
			 * calculating table widths.
			 */
			var
				nCalcTmp = oSettings.nTable.cloneNode( false ),
				nTheadClone = oSettings.nTHead.cloneNode(true),
				nBody = document.createElement( 'tbody' ),
				nTr = document.createElement( 'tr' ),
				nDivSizing;
			
			nCalcTmp.removeAttribute( "id" );
			nCalcTmp.appendChild( nTheadClone );
			if ( oSettings.nTFoot !== null )
			{
				nCalcTmp.appendChild( oSettings.nTFoot.cloneNode(true) );
				_fnApplyToChildren( function(n) {
					n.style.width = "";
				}, nCalcTmp.getElementsByTagName('tr') );
			}
			
			nCalcTmp.appendChild( nBody );
			nBody.appendChild( nTr );
			
			/* Remove any sizing that was previously applied by the styles */
			var jqColSizing = $('thead th', nCalcTmp);
			if ( jqColSizing.length === 0 )
			{
				jqColSizing = $('tbody tr:eq(0)>td', nCalcTmp);
			}
	
			/* Apply custom sizing to the cloned header */
			var nThs = _fnGetUniqueThs( oSettings, nTheadClone );
			iCorrector = 0;
			for ( i=0 ; i<iColums ; i++ )
			{
				var oColumn = oSettings.aoColumns[i];
				if ( oColumn.bVisible && oColumn.sWidthOrig !== null && oColumn.sWidthOrig !== "" )
				{
					nThs[i-iCorrector].style.width = _fnStringToCss( oColumn.sWidthOrig );
				}
				else if ( oColumn.bVisible )
				{
					nThs[i-iCorrector].style.width = "";
				}
				else
				{
					iCorrector++;
				}
			}
	
			/* Find the biggest td for each column and put it into the table */
			for ( i=0 ; i<iColums ; i++ )
			{
				if ( oSettings.aoColumns[i].bVisible )
				{
					var nTd = _fnGetWidestNode( oSettings, i );
					if ( nTd !== null )
					{
						nTd = nTd.cloneNode(true);
						if ( oSettings.aoColumns[i].sContentPadding !== "" )
						{
							nTd.innerHTML += oSettings.aoColumns[i].sContentPadding;
						}
						nTr.appendChild( nTd );
					}
				}
			}
			
			/* Build the table and 'display' it */
			nWrapper.appendChild( nCalcTmp );
			
			/* When scrolling (X or Y) we want to set the width of the table as appropriate. However,
			 * when not scrolling leave the table width as it is. This results in slightly different,
			 * but I think correct behaviour
			 */
			if ( oSettings.oScroll.sX !== "" && oSettings.oScroll.sXInner !== "" )
			{
				nCalcTmp.style.width = _fnStringToCss(oSettings.oScroll.sXInner);
			}
			else if ( oSettings.oScroll.sX !== "" )
			{
				nCalcTmp.style.width = "";
				if ( $(nCalcTmp).width() < nWrapper.offsetWidth )
				{
					nCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );
				}
			}
			else if ( oSettings.oScroll.sY !== "" )
			{
				nCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );
			}
			else if ( widthAttr )
			{
				nCalcTmp.style.width = _fnStringToCss( widthAttr );
			}
			nCalcTmp.style.visibility = "hidden";
			
			/* Scrolling considerations */
			_fnScrollingWidthAdjust( oSettings, nCalcTmp );
			
			/* Read the width's calculated by the browser and store them for use by the caller. We
			 * first of all try to use the elements in the body, but it is possible that there are
			 * no elements there, under which circumstances we use the header elements
			 */
			var oNodes = $("tbody tr:eq(0)", nCalcTmp).children();
			if ( oNodes.length === 0 )
			{
				oNodes = _fnGetUniqueThs( oSettings, $('thead', nCalcTmp)[0] );
			}
	
			/* Browsers need a bit of a hand when a width is assigned to any columns when
			 * x-scrolling as they tend to collapse the table to the min-width, even if
			 * we sent the column widths. So we need to keep track of what the table width
			 * should be by summing the user given values, and the automatic values
			 */
			if ( oSettings.oScroll.sX !== "" )
			{
				var iTotal = 0;
				iCorrector = 0;
				for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
				{
					if ( oSettings.aoColumns[i].bVisible )
					{
						if ( oSettings.aoColumns[i].sWidthOrig === null )
						{
							iTotal += $(oNodes[iCorrector]).outerWidth();
						}
						else
						{
							iTotal += parseInt(oSettings.aoColumns[i].sWidth.replace('px',''), 10) +
								($(oNodes[iCorrector]).outerWidth() - $(oNodes[iCorrector]).width());
						}
						iCorrector++;
					}
				}
				
				nCalcTmp.style.width = _fnStringToCss( iTotal );
				oSettings.nTable.style.width = _fnStringToCss( iTotal );
			}
	
			iCorrector = 0;
			for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
			{
				if ( oSettings.aoColumns[i].bVisible )
				{
					iWidth = $(oNodes[iCorrector]).width();
					if ( iWidth !== null && iWidth > 0 )
					{
						oSettings.aoColumns[i].sWidth = _fnStringToCss( iWidth );
					}
					iCorrector++;
				}
			}
	
			var cssWidth = $(nCalcTmp).css('width');
			oSettings.nTable.style.width = (cssWidth.indexOf('%') !== -1) ?
			    cssWidth : _fnStringToCss( $(nCalcTmp).outerWidth() );
			nCalcTmp.parentNode.removeChild( nCalcTmp );
		}
	
		if ( widthAttr )
		{
			oSettings.nTable.style.width = _fnStringToCss( widthAttr );
	
			if ( ! oSettings._attachedResizing &&
				(oSettings.oScroll.sY !== '' || oSettings.oScroll.sX !== '') )
			{
				$(window).bind('resize.DT-'+oSettings.sInstance, function () {
					_fnScrollDraw( oSettings );
				} );
				oSettings._attachedResizing = true;
			}
		}
	}
	
	
	/**
	 * Adjust a table's width to take account of scrolling
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n table node
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollingWidthAdjust ( oSettings, n )
	{
		if ( oSettings.oScroll.sX === "" && oSettings.oScroll.sY !== "" )
		{
			/* When y-scrolling only, we want to remove the width of the scroll bar so the table
			 * + scroll bar will fit into the area avaialble.
			 */
			var iOrigWidth = $(n).width();
			n.style.width = _fnStringToCss( $(n).outerWidth()-oSettings.oScroll.iBarWidth );
		}
		else if ( oSettings.oScroll.sX !== "" )
		{
			/* When x-scrolling both ways, fix the table at it's current size, without adjusting */
			n.style.width = _fnStringToCss( $(n).outerWidth() );
		}
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( oSettings, iCol )
	{
		var iMaxIndex = _fnGetMaxLenString( oSettings, iCol );
		if ( iMaxIndex < 0 )
		{
			return null;
		}
	
		if ( oSettings.aoData[iMaxIndex].nTr === null )
		{
			var n = document.createElement('td');
			n.innerHTML = _fnGetCellData( oSettings, iMaxIndex, iCol, '' );
			return n;
		}
		return _fnGetTdNodes(oSettings, iMaxIndex)[iCol];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( oSettings, iCol )
	{
		var iMax = -1;
		var iMaxIndex = -1;
		
		for ( var i=0 ; i<oSettings.aoData.length ; i++ )
		{
			var s = _fnGetCellData( oSettings, i, iCol, 'display' )+"";
			s = s.replace( /<.*?>/g, "" );
			if ( s.length > iMax )
			{
				iMax = s.length;
				iMaxIndex = i;
			}
		}
		
		return iMaxIndex;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {array} aArray1 first array
	 *  @param {array} aArray2 second array
	 *  @returns {int} 0 if match, 1 if length is different, 2 if no match
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null )
		{
			return "0px";
		}
		
		if ( typeof s == 'number' )
		{
			if ( s < 0 )
			{
				return "0px";
			}
			return s+"px";
		}
		
		/* Check if the last character is not 0-9 */
		var c = s.charCodeAt( s.length-1 );
		if (c < 0x30 || c > 0x39)
		{
			return s;
		}
		return s+"px";
	}
	
	
	/**
	 * Get the width of a scroll bar in this browser being used
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollBarWidth ()
	{
		if ( ! DataTable.__scrollbarWidth )
		{
			var inner = $('<p/>').css( {
				width: '100%',
				height: 200,
				padding: 0
			} )[0];
	
			var outer = $('<div/>')
				.css( {
					position: 'absolute',
					top: 0,
					left: 0,
					width: 200,
					height: 150,
					padding: 0,
					overflow: 'hidden',
					visibility: 'hidden'
				} )
				.append( inner )
				.appendTo( 'body' );
	
			var w1 = inner.offsetWidth;
			outer.css( 'overflow', 'scroll' );
			var w2 = inner.offsetWidth;
			if ( w1 === w2 )
			{
				w2 = outer[0].clientWidth;
			}
			
			outer.remove();
	
			DataTable.__scrollbarWidth = w1 - w2;
		}
	
		return DataTable.__scrollbarWidth;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {bool} bApplyClasses optional - should we apply classes or not
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings, bApplyClasses )
	{
		var
			i, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aSort = [],
			aiOrig = [],
			oExtSort = DataTable.ext.oSort,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			oAria = oSettings.oLanguage.oAria,
			fnFormatter, aDataSort, data, iCol, sType, oSort,
			iFormatters = 0,
			aaNestedSort = ( oSettings.aaSortingFixed !== null ) ?
				oSettings.aaSortingFixed.concat( oSettings.aaSorting ) :
				oSettings.aaSorting.slice();
	
		/* Flatten the aDataSort inner arrays into a single array, otherwise we have nested
		 * loops in multiple locations
		 */
		for ( i=0 ; i<aaNestedSort.length ; i++ )
		{
			aDataSort = aoColumns[ aaNestedSort[i][0] ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
				fnFormatter = oExtSort[ sType+"-pre" ];
	
				aSort.push( {
					col:    iCol,
					dir:    aaNestedSort[i][1],
					index:  aaNestedSort[i][2],
					type:   sType,
					format: fnFormatter
				} );
	
				// Track if we can use the formatter method
				if ( fnFormatter )
				{
					iFormatters++;
				}
			}
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( !oSettings.oFeatures.bServerSide && aSort.length !== 0 )
		{
			/* If there is a sorting data type, and a function belonging to it, then we need to
			 * get the data from the developer's function and apply it for this column
			 */
			for ( i=0 ; i<aSort.length ; i++ )
			{
				var iColumn = aSort[i].col;
				var iVisColumn = _fnColumnIndexToVisible( oSettings, iColumn );
	
				sDataType = oSettings.aoColumns[ iColumn ].sSortDataType;
				if ( DataTable.ext.afnSortData[sDataType] )
				{
					var aData = DataTable.ext.afnSortData[sDataType].call(
						oSettings.oInstance, oSettings, iColumn, iVisColumn
					);
					if ( aData.length === aoData.length )
					{
						for ( j=0, jLen=aoData.length ; j<jLen ; j++ )
						{
							_fnSetCellData( oSettings, j, iColumn, aData[j] );
						}
					}
					else
					{
						_fnLog( oSettings, 0, "Returned data sort array (col "+iColumn+") is the wrong length" );
					}
				}
			}
	
			
			/* Create a value - key array of the current row positions such that we can use their
			 * current position during the sort, if values match, in order to perform stable sorting
			 */
			for ( i=0, iLen=oSettings.aiDisplayMaster.length ; i<iLen ; i++ )
			{
				aiOrig[ oSettings.aiDisplayMaster[i] ] = i;
			}
	
			/* Build an internal data array which is specific to the sort, so we can get and prep
			 * the data to be sorted only once, rather than needing to do it every time the sorting
			 * function runs. This make the sorting function a very simple comparison
			 */
			for ( j=0 ; j<aSort.length ; j++ )
			{
				oSort = aSort[j];
	
				for ( i=0, iLen=aoData.length ; i<iLen ; i++ )
				{
					data = _fnGetCellData( oSettings, i, oSort.col, 'sort' );
	
					aoData[i]._aSortData[ oSort.col ] = oSort.format ?
						oSort.format( data ) :
						data;
				}
			}
			
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( iFormatters === aSort.length ) {
				// All sort types have formatting functions
				oSettings.aiDisplayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ )
					{
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 )
						{
							return sort.dir === 'asc' ? test : -test;
						}
					}
					
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				oSettings.aiDisplayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ )
					{
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = oExtSort[ sort.type+"-"+sort.dir ]( x, y );
						if ( test !== 0 )
						{
							return test;
						}
					}
					
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
		
		/* Alter the sorting classes to take account of the changes */
		if ( (bApplyClasses === undefined || bApplyClasses) && !oSettings.oFeatures.bDeferRender )
		{
			_fnSortingClasses( oSettings );
		}
	
		for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			var sTitle = aoColumns[i].sTitle.replace( /<.*?>/g, "" );
			nTh = aoColumns[i].nTh;
			nTh.removeAttribute('aria-sort');
			nTh.removeAttribute('aria-label');
			
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( aoColumns[i].bSortable )
			{
				if ( aSort.length > 0 && aSort[0].col == i )
				{
					nTh.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					
					var nextSort = (aoColumns[i].asSorting[ aSort[0].index+1 ]) ?
						aoColumns[i].asSorting[ aSort[0].index+1 ] : aoColumns[i].asSorting[0];
					nTh.setAttribute('aria-label', sTitle+
						(nextSort=="asc" ? oAria.sSortAscending : oAria.sSortDescending) );
				}
				else
				{
					nTh.setAttribute('aria-label', sTitle+
						(aoColumns[i].asSorting[0]=="asc" ? oAria.sSortAscending : oAria.sSortDescending) );
				}
			}
			else
			{
				nTh.setAttribute('aria-label', sTitle);
			}
		}
		
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
		$(oSettings.oInstance).trigger('sort', oSettings);
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nNode node to attach the handler to
	 *  @param {int} iDataIndex column sorting index
	 *  @param {function} [fnCallback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( oSettings, nNode, iDataIndex, fnCallback )
	{
		_fnBindAction( nNode, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( oSettings.aoColumns[iDataIndex].bSortable === false )
			{
				return;
			}
			
			/*
			 * This is a little bit odd I admit... I declare a temporary function inside the scope of
			 * _fnBuildHead and the click handler in order that the code presented here can be used
			 * twice - once for when bProcessing is enabled, and another time for when it is
			 * disabled, as we need to perform slightly different actions.
			 *   Basically the issue here is that the Javascript engine in modern browsers don't
			 * appear to allow the rendering engine to update the display while it is still executing
			 * it's thread (well - it does but only after long intervals). This means that the
			 * 'processing' display doesn't appear for a table sort. To break the js thread up a bit
			 * I force an execution break by using setTimeout - but this breaks the expected
			 * thread continuation for the end-developer's point of view (their code would execute
			 * too early), so we only do it when we absolutely have to.
			 */
			var fnInnerSorting = function () {
				var iColumn, iNextSort;
				
				/* If the shift key is pressed then we are multiple column sorting */
				if ( e.shiftKey )
				{
					/* Are we already doing some kind of sort on this column? */
					var bFound = false;
					for ( var i=0 ; i<oSettings.aaSorting.length ; i++ )
					{
						if ( oSettings.aaSorting[i][0] == iDataIndex )
						{
							bFound = true;
							iColumn = oSettings.aaSorting[i][0];
							iNextSort = oSettings.aaSorting[i][2]+1;
							
							if ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )
							{
								/* Reached the end of the sorting options, remove from multi-col sort */
								oSettings.aaSorting.splice( i, 1 );
							}
							else
							{
								/* Move onto next sorting direction */
								oSettings.aaSorting[i][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
								oSettings.aaSorting[i][2] = iNextSort;
							}
							break;
						}
					}
					
					/* No sort yet - add it in */
					if ( bFound === false )
					{
						oSettings.aaSorting.push( [ iDataIndex,
							oSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );
					}
				}
				else
				{
					/* If no shift key then single column sort */
					if ( oSettings.aaSorting.length == 1 && oSettings.aaSorting[0][0] == iDataIndex )
					{
						iColumn = oSettings.aaSorting[0][0];
						iNextSort = oSettings.aaSorting[0][2]+1;
						if ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )
						{
							iNextSort = 0;
						}
						oSettings.aaSorting[0][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];
						oSettings.aaSorting[0][2] = iNextSort;
					}
					else
					{
						oSettings.aaSorting.splice( 0, oSettings.aaSorting.length );
						oSettings.aaSorting.push( [ iDataIndex,
							oSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );
					}
				}
				
				/* Run the sort by calling a full redraw */
				_fnReDraw( oSettings );
			}; /* /fnInnerSorting */
			
			if ( !oSettings.oFeatures.bProcessing )
			{
				fnInnerSorting();
			}
			else
			{
				_fnProcessingDisplay( oSettings, true );
				setTimeout( function() {
					fnInnerSorting();
					if ( !oSettings.oFeatures.bServerSide )
					{
						_fnProcessingDisplay( oSettings, false );
					}
				}, 0 );
			}
			
			/* Call the user specified callback function - used for async user interaction */
			if ( typeof fnCallback == 'function' )
			{
				fnCallback( oSettings );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on the header, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( oSettings )
	{
		var i, iLen, j, jLen, iFound;
		var aaSort, sClass;
		var iColumns = oSettings.aoColumns.length;
		var oClasses = oSettings.oClasses;
		
		for ( i=0 ; i<iColumns ; i++ )
		{
			if ( oSettings.aoColumns[i].bSortable )
			{
				$(oSettings.aoColumns[i].nTh).removeClass( oClasses.sSortAsc +" "+ oClasses.sSortDesc +
					" "+ oSettings.aoColumns[i].sSortingClass );
			}
		}
		
		if ( oSettings.aaSortingFixed !== null )
		{
			aaSort = oSettings.aaSortingFixed.concat( oSettings.aaSorting );
		}
		else
		{
			aaSort = oSettings.aaSorting.slice();
		}
		
		/* Apply the required classes to the header */
		for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
		{
			if ( oSettings.aoColumns[i].bSortable )
			{
				sClass = oSettings.aoColumns[i].sSortingClass;
				iFound = -1;
				for ( j=0 ; j<aaSort.length ; j++ )
				{
					if ( aaSort[j][0] == i )
					{
						sClass = ( aaSort[j][1] == "asc" ) ?
							oClasses.sSortAsc : oClasses.sSortDesc;
						iFound = j;
						break;
					}
				}
				$(oSettings.aoColumns[i].nTh).addClass( sClass );
				
				if ( oSettings.bJUI )
				{
					/* jQuery UI uses extra markup */
					var jqSpan = $("span."+oClasses.sSortIcon,  oSettings.aoColumns[i].nTh);
					jqSpan.removeClass(oClasses.sSortJUIAsc +" "+ oClasses.sSortJUIDesc +" "+
						oClasses.sSortJUI +" "+ oClasses.sSortJUIAscAllowed +" "+ oClasses.sSortJUIDescAllowed );
					
					var sSpanClass;
					if ( iFound == -1 )
					{
						sSpanClass = oSettings.aoColumns[i].sSortingClassJUI;
					}
					else if ( aaSort[iFound][1] == "asc" )
					{
						sSpanClass = oClasses.sSortJUIAsc;
					}
					else
					{
						sSpanClass = oClasses.sSortJUIDesc;
					}
					
					jqSpan.addClass( sSpanClass );
				}
			}
			else
			{
				/* No sorting on this column, so add the base class. This will have been assigned by
				 * _fnAddColumn
				 */
				$(oSettings.aoColumns[i].nTh).addClass( oSettings.aoColumns[i].sSortingClass );
			}
		}
		
		/*
		 * Apply the required classes to the table body
		 * Note that this is given as a feature switch since it can significantly slow down a sort
		 * on large data sets (adding and removing of classes is always slow at the best of times..)
		 * Further to this, note that this code is admittedly fairly ugly. It could be made a lot
		 * simpler using jQuery selectors and add/removeClass, but that is significantly slower
		 * (on the order of 5 times slower) - hence the direct DOM manipulation here.
		 * Note that for deferred drawing we do use jQuery - the reason being that taking the first
		 * row found to see if the whole column needs processed can miss classes since the first
		 * column might be new.
		 */
		sClass = oClasses.sSortColumn;
		
		if ( oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses )
		{
			var nTds = _fnGetTdNodes( oSettings );
			
			/* Determine what the sorting class for each column should be */
			var iClass, iTargetCol;
			var asClasses = [];
			for (i = 0; i < iColumns; i++)
			{
				asClasses.push("");
			}
			for (i = 0, iClass = 1; i < aaSort.length; i++)
			{
				iTargetCol = parseInt( aaSort[i][0], 10 );
				asClasses[iTargetCol] = sClass + iClass;
				
				if ( iClass < 3 )
				{
					iClass++;
				}
			}
			
			/* Make changes to the classes for each cell as needed */
			var reClass = new RegExp(sClass + "[123]");
			var sTmpClass, sCurrentClass, sNewClass;
			for ( i=0, iLen=nTds.length; i<iLen; i++ )
			{
				/* Determine which column we're looking at */
				iTargetCol = i % iColumns;
				
				/* What is the full list of classes now */
				sCurrentClass = nTds[i].className;
				/* What sorting class should be applied? */
				sNewClass = asClasses[iTargetCol];
				/* What would the new full list be if we did a replacement? */
				sTmpClass = sCurrentClass.replace(reClass, sNewClass);
				
				if ( sTmpClass != sCurrentClass )
				{
					/* We changed something */
					nTds[i].className = $.trim( sTmpClass );
				}
				else if ( sNewClass.length > 0 && sCurrentClass.indexOf(sNewClass) == -1 )
				{
					/* We need to add a class */
					nTds[i].className = sCurrentClass + " " + sNewClass;
				}
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( oSettings )
	{
		if ( !oSettings.oFeatures.bStateSave || oSettings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var i, iLen, bInfinite=oSettings.oScroll.bInfinite;
		var oState = {
			"iCreate":      new Date().getTime(),
			"iStart":       (bInfinite ? 0 : oSettings._iDisplayStart),
			"iEnd":         (bInfinite ? oSettings._iDisplayLength : oSettings._iDisplayEnd),
			"iLength":      oSettings._iDisplayLength,
			"aaSorting":    $.extend( true, [], oSettings.aaSorting ),
			"oSearch":      $.extend( true, {}, oSettings.oPreviousSearch ),
			"aoSearchCols": $.extend( true, [], oSettings.aoPreSearchCols ),
			"abVisCols":    []
		};
	
		for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
		{
			oState.abVisCols.push( oSettings.aoColumns[i].bVisible );
		}
	
		_fnCallbackFire( oSettings, "aoStateSaveParams", 'stateSaveParams', [oSettings, oState] );
		
		oSettings.fnStateSaveCallback.call( oSettings.oInstance, oSettings, oState );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( oSettings, oInit )
	{
		if ( !oSettings.oFeatures.bStateSave )
		{
			return;
		}
	
		var oData = oSettings.fnStateLoadCallback.call( oSettings.oInstance, oSettings );
		if ( !oData )
		{
			return;
		}
		
		/* Allow custom and plug-in manipulation functions to alter the saved data set and
		 * cancelling of loading by returning false
		 */
		var abStateLoad = _fnCallbackFire( oSettings, 'aoStateLoadParams', 'stateLoadParams', [oSettings, oData] );
		if ( $.inArray( false, abStateLoad ) !== -1 )
		{
			return;
		}
	
		/* Reject old data */
		if ( oData.iCreate < new Date().getTime() - (oSettings.iStateDuration*1000) ) {
			return;
		}
		
		/* Store the saved state so it might be accessed at any time */
		oSettings.oLoadedState = $.extend( true, {}, oData );
		
		/* Restore key features */
		oSettings._iDisplayStart    = oData.iStart;
		oSettings.iInitDisplayStart = oData.iStart;
		oSettings._iDisplayEnd      = oData.iEnd;
		oSettings._iDisplayLength   = oData.iLength;
		oSettings.aaSorting         = oData.aaSorting.slice();
		oSettings.saved_aaSorting   = oData.aaSorting.slice();
		
		/* Search filtering  */
		$.extend( oSettings.oPreviousSearch, oData.oSearch );
		$.extend( true, oSettings.aoPreSearchCols, oData.aoSearchCols );
		
		/* Column visibility state
		 * Pass back visibility settings to the init handler, but to do not here override
		 * the init object that the user might have passed in
		 */
		oInit.saved_aoColumns = [];
		for ( var i=0 ; i<oData.abVisCols.length ; i++ )
		{
			oInit.saved_aoColumns[i] = {};
			oInit.saved_aoColumns[i].bVisible = oData.abVisCols[i];
		}
	
		_fnCallbackFire( oSettings, 'aoStateLoaded', 'stateLoaded', [oSettings, oData] );
	}
	
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} nTable table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( nTable )
	{
		for ( var i=0 ; i<DataTable.settings.length ; i++ )
		{
			if ( DataTable.settings[i].nTable === nTable )
			{
				return DataTable.settings[i];
			}
		}
		
		return null;
	}
	
	
	/**
	 * Return an array with the TR nodes for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {array} TR array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetTrNodes ( oSettings )
	{
		var aNodes = [];
		var aoData = oSettings.aoData;
		for ( var i=0, iLen=aoData.length ; i<iLen ; i++ )
		{
			if ( aoData[i].nTr !== null )
			{
				aNodes.push( aoData[i].nTr );
			}
		}
		return aNodes;
	}
	
	
	/**
	 * Return an flat array with all TD nodes for the table, or row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} [iIndividualRow] aoData index to get the nodes for - optional
	 *    if not given then the return array will contain all nodes for the table
	 *  @returns {array} TD array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetTdNodes ( oSettings, iIndividualRow )
	{
		var anReturn = [];
		var iCorrector;
		var anTds, nTd;
		var iRow, iRows=oSettings.aoData.length,
			iColumn, iColumns, oData, sNodeName, iStart=0, iEnd=iRows;
		
		/* Allow the collection to be limited to just one row */
		if ( iIndividualRow !== undefined )
		{
			iStart = iIndividualRow;
			iEnd = iIndividualRow+1;
		}
	
		for ( iRow=iStart ; iRow<iEnd ; iRow++ )
		{
			oData = oSettings.aoData[iRow];
			if ( oData.nTr !== null )
			{
				/* get the TD child nodes - taking into account text etc nodes */
				anTds = [];
				nTd = oData.nTr.firstChild;
				while ( nTd )
				{
					sNodeName = nTd.nodeName.toLowerCase();
					if ( sNodeName == 'td' || sNodeName == 'th' )
					{
						anTds.push( nTd );
					}
					nTd = nTd.nextSibling;
				}
	
				iCorrector = 0;
				for ( iColumn=0, iColumns=oSettings.aoColumns.length ; iColumn<iColumns ; iColumn++ )
				{
					if ( oSettings.aoColumns[iColumn].bVisible )
					{
						anReturn.push( anTds[iColumn-iCorrector] );
					}
					else
					{
						anReturn.push( oData._anHidden[iColumn] );
						iCorrector++;
					}
				}
			}
		}
	
		return anReturn;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iLevel log error messages, or display them to the user
	 *  @param {string} sMesg error message
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( oSettings, iLevel, sMesg )
	{
		var sAlert = (oSettings===null) ?
			"DataTables warning: "+sMesg :
			"DataTables warning (table id = '"+oSettings.sTableId+"'): "+sMesg;
		
		if ( iLevel === 0 )
		{
			if ( DataTable.ext.sErrMode == 'alert' )
			{
				alert( sAlert );
			}
			else
			{
				throw new Error(sAlert);
			}
			return;
		}
		else if ( window.console && console.log )
		{
			console.log( sAlert );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} oRet target object
	 *  @param {object} oSrc source object
	 *  @param {string} sName property
	 *  @param {string} [sMappedName] name to map too - optional, sName used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( oRet, oSrc, sName, sMappedName )
	{
		if ( sMappedName === undefined )
		{
			sMappedName = sName;
		}
		if ( oSrc[sName] !== undefined )
		{
			oRet[sMappedName] = oSrc[sName];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and shallow
	 * copy arrays. The reason we need to do this, is that we don't want to deep copy array
	 * init values (such as aaSorting) since the dev wouldn't be able to override them, but
	 * we do want to deep copy objects.
	 *  @param {object} oOut Object to extend
	 *  @param {object} oExtender Object from which the properties will be applied to oOut
	 *  @returns {object} oOut Reference, just for convenience - oOut === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( oOut, oExtender )
	{
		var val;
		
		for ( var prop in oExtender )
		{
			if ( oExtender.hasOwnProperty(prop) )
			{
				val = oExtender[prop];
	
				if ( $.isPlainObject( val ) )
				{
					if ( ! oOut[prop] )
					{
						oOut[prop] = {};
					}
					$.extend( true, oOut[prop], val );
				}
				else
				{
					oOut[prop] = val;
				}
			}
		}
	
		return oOut;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.bind( 'click.DT', oData, function (e) {
					n.blur(); // Remove focus outline for mouse users
					fn(e);
				} )
			.bind( 'keypress.DT', oData, function (e){
				if ( e.which === 13 ) {
					fn(e);
				} } )
			.bind( 'selectstart.DT', function () {
				/* Take the brutal approach to cancelling text selection */
				return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the callback
	 * array store is done backwards! Further note that you do not want to fire off triggers
	 * in time sensitive applications (for example cell creation) as its slow.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {string} sTrigger Name of the jQuery custom event to trigger. If null no trigger
	 *    is fired
	 *  @param {array} aArgs Array of arguments to pass to the callback function / trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( oSettings, sStore, sTrigger, aArgs )
	{
		var aoStore = oSettings[sStore];
		var aRet =[];
	
		for ( var i=aoStore.length-1 ; i>=0 ; i-- )
		{
			aRet.push( aoStore[i].fn.apply( oSettings.oInstance, aArgs ) );
		}
	
		if ( sTrigger !== null )
		{
			$(oSettings.oInstance).trigger(sTrigger, aArgs);
		}
	
		return aRet;
	}
	

	DataTable = function( oInit )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"filter": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			var i, iLen, a = [], tr;
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var aoData = oSettings.aoData;
			var aiDisplay = oSettings.aiDisplay;
			var aiDisplayMaster = oSettings.aiDisplayMaster;
		
			if ( !oOpts )
			{
				oOpts = {};
			}
		
			oOpts = $.extend( {}, {
				"filter": "none", // applied
				"order": "current", // "original"
				"page": "all" // current
			}, oOpts );
		
			// Current page implies that order=current and fitler=applied, since it is fairly
			// senseless otherwise
			if ( oOpts.page == 'current' )
			{
				for ( i=oSettings._iDisplayStart, iLen=oSettings.fnDisplayEnd() ; i<iLen ; i++ )
				{
					tr = aoData[ aiDisplay[i] ].nTr;
					if ( tr )
					{
						a.push( tr );
					}
				}
			}
			else if ( oOpts.order == "current" && oOpts.filter == "none" )
			{
				for ( i=0, iLen=aiDisplayMaster.length ; i<iLen ; i++ )
				{
					tr = aoData[ aiDisplayMaster[i] ].nTr;
					if ( tr )
					{
						a.push( tr );
					}
				}
			}
			else if ( oOpts.order == "current" && oOpts.filter == "applied" )
			{
				for ( i=0, iLen=aiDisplay.length ; i<iLen ; i++ )
				{
					tr = aoData[ aiDisplay[i] ].nTr;
					if ( tr )
					{
						a.push( tr );
					}
				}
			}
			else if ( oOpts.order == "original" && oOpts.filter == "none" )
			{
				for ( i=0, iLen=aoData.length ; i<iLen ; i++ )
				{
					tr = aoData[ i ].nTr ;
					if ( tr )
					{
						a.push( tr );
					}
				}
			}
			else if ( oOpts.order == "original" && oOpts.filter == "applied" )
			{
				for ( i=0, iLen=aoData.length ; i<iLen ; i++ )
				{
					tr = aoData[ i ].nTr;
					if ( $.inArray( i, aiDisplay ) !== -1 && tr )
					{
						a.push( tr );
					}
				}
			}
			else
			{
				_fnLog( oSettings, 1, "Unknown selection options" );
			}
		
			/* We need to filter on the TR elements and also 'find' in their descendants
			 * to make the selector act like it would in a full table - so we need
			 * to build both results and then combine them together
			 */
			var jqA = $(a);
			var jqTRs = jqA.filter( sSelector );
			var jqDescendants = jqA.find( sSelector );
		
			return $( [].concat($.makeArray(jqTRs), $.makeArray(jqDescendants)) );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"filter": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the filter" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			var aOut = [];
			var i, iLen, iIndex;
			var aTrs = this.$( sSelector, oOpts );
		
			for ( i=0, iLen=aTrs.length ; i<iLen ; i++ )
			{
				aOut.push( this.fnGetData(aTrs[i]) );
			}
		
			return aOut;
		};
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @return {DataTables.Api}
		 */
		this.api = function ()
		{
			return new DataTable.Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} mData The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( mData, bRedraw )
		{
			if ( mData.length === 0 )
			{
				return [];
			}
			
			var aiReturn = [];
			var iTest;
			
			/* Find settings from table node */
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			
			/* Check if we want to add multiple rows or not */
			if ( typeof mData[0] === "object" && mData[0] !== null )
			{
				for ( var i=0 ; i<mData.length ; i++ )
				{
					iTest = _fnAddData( oSettings, mData[i] );
					if ( iTest == -1 )
					{
						return aiReturn;
					}
					aiReturn.push( iTest );
				}
			}
			else
			{
				iTest = _fnAddData( oSettings, mData );
				if ( iTest == -1 )
				{
					return aiReturn;
				}
				aiReturn.push( iTest );
			}
			
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
			if ( bRedraw === undefined || bRedraw )
			{
				_fnReDraw( oSettings );
			}
			return aiReturn;
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).bind('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);
			_fnAdjustColumnSizing( oSettings );
			
			if ( bRedraw === undefined || bRedraw )
			{
				this.fnDraw( false );
			}
			else if ( oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "" )
			{
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				this.oApi._fnScrollDraw(oSettings);
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			/* Find settings from table node */
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			_fnClearTable( oSettings );
			
			if ( bRedraw === undefined || bRedraw )
			{
				_fnDraw( oSettings );
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			/* Find settings from table node */
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			
			for ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )
			{
				if ( oSettings.aoOpenRows[i].nParent == nTr )
				{
					var nTrParent = oSettings.aoOpenRows[i].nTr.parentNode;
					if ( nTrParent )
					{
						/* Remove it if it is currently on display */
						nTrParent.removeChild( oSettings.aoOpenRows[i].nTr );
					}
					oSettings.aoOpenRows.splice( i, 1 );
					return 0;
				}
			}
			return 1;
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} mTarget The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [fnCallBack] Callback function
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( mTarget, fnCallBack, bRedraw )
		{
			/* Find settings from table node */
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var i, iLen, iAODataIndex;
			
			iAODataIndex = (typeof mTarget === 'object') ?
				_fnNodeToDataIndex(oSettings, mTarget) : mTarget;
			
			/* Return the data array from this row */
			var oData = oSettings.aoData.splice( iAODataIndex, 1 );
		
			/* Update the _DT_RowIndex parameter */
			for ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )
			{
				if ( oSettings.aoData[i].nTr !== null )
				{
					oSettings.aoData[i].nTr._DT_RowIndex = i;
				}
			}
			
			/* Remove the target row from the search array */
			var iDisplayIndex = $.inArray( iAODataIndex, oSettings.aiDisplay );
			oSettings.asDataSearch.splice( iDisplayIndex, 1 );
			
			/* Delete from the display arrays */
			_fnDeleteIndex( oSettings.aiDisplayMaster, iAODataIndex );
			_fnDeleteIndex( oSettings.aiDisplay, iAODataIndex );
			
			/* If there is a user callback function - call it */
			if ( typeof fnCallBack === "function" )
			{
				fnCallBack.call( this, oSettings, oData );
			}
			
			/* Check for an 'overflow' they case for displaying the table */
			if ( oSettings._iDisplayStart >= oSettings.fnRecordsDisplay() )
			{
				oSettings._iDisplayStart -= oSettings._iDisplayLength;
				if ( oSettings._iDisplayStart < 0 )
				{
					oSettings._iDisplayStart = 0;
				}
			}
			
			if ( bRedraw === undefined || bRedraw )
			{
				_fnCalculateEnd( oSettings );
				_fnDraw( oSettings );
			}
			
			return oData;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [bRemove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( bRemove )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var nOrig = oSettings.nTableWrapper.parentNode;
			var nBody = oSettings.nTBody;
			var i, iLen;
		
			bRemove = (bRemove===undefined) ? false : bRemove;
			
			/* Flag to note that the table is currently being destroyed - no action should be taken */
			oSettings.bDestroying = true;
			
			/* Fire off the destroy callbacks for plug-ins etc */
			_fnCallbackFire( oSettings, "aoDestroyCallback", "destroy", [oSettings] );
		
			/* If the table is not being removed, restore the hidden columns */
			if ( !bRemove )
			{
				for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
				{
					if ( oSettings.aoColumns[i].bVisible === false )
					{
						this.fnSetColumnVis( i, true );
					}
				}
			}
			
			/* Blitz all DT events */
			$(oSettings.nTableWrapper).unbind('.DT').find('*').unbind('.DT');
			$(window).unbind('.DT-'+oSettings.sInstance);
			
			/* If there is an 'empty' indicator row, remove it */
			$('tbody>tr>td.'+oSettings.oClasses.sRowEmpty, oSettings.nTable).parent().remove();
			
			/* When scrolling we had to break the table up - restore it */
			if ( oSettings.nTable != oSettings.nTHead.parentNode )
			{
				$(oSettings.nTable).children('thead').remove();
				oSettings.nTable.appendChild( oSettings.nTHead );
			}
			
			if ( oSettings.nTFoot && oSettings.nTable != oSettings.nTFoot.parentNode )
			{
				$(oSettings.nTable).children('tfoot').remove();
				oSettings.nTable.appendChild( oSettings.nTFoot );
			}
			
			/* Remove the DataTables generated nodes, events and classes */
			oSettings.nTable.parentNode.removeChild( oSettings.nTable );
			$(oSettings.nTableWrapper).remove();
			
			oSettings.aaSorting = [];
			oSettings.aaSortingFixed = [];
			_fnSortingClasses( oSettings );
			
			$(_fnGetTrNodes( oSettings )).removeClass( oSettings.asStripeClasses.join(' ') );
			
			$('th, td', oSettings.nTHead).removeClass( [
				oSettings.oClasses.sSortable,
				oSettings.oClasses.sSortableAsc,
				oSettings.oClasses.sSortableDesc,
				oSettings.oClasses.sSortableNone ].join(' ')
			);
			if ( oSettings.bJUI )
			{
				$('th span.'+oSettings.oClasses.sSortIcon
					+ ', td span.'+oSettings.oClasses.sSortIcon, oSettings.nTHead).remove();
		
				$('th, td', oSettings.nTHead).each( function () {
					var jqWrapper = $('div.'+oSettings.oClasses.sSortJUIWrapper, this);
					var kids = jqWrapper.contents();
					$(this).append( kids );
					jqWrapper.remove();
				} );
			}
			
			/* Add the TR elements back into the table in their original order */
			if ( !bRemove && oSettings.nTableReinsertBefore )
			{
				nOrig.insertBefore( oSettings.nTable, oSettings.nTableReinsertBefore );
			}
			else if ( !bRemove )
			{
				nOrig.appendChild( oSettings.nTable );
			}
		
			for ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )
			{
				if ( oSettings.aoData[i].nTr !== null )
				{
					nBody.appendChild( oSettings.aoData[i].nTr );
				}
			}
			
			/* Restore the width of the original table - was read from the style property,
			 * so we can restore directly to that
			 */
			oSettings.nTable.style.width = oSettings.sDestroyWidth;
			
			/* If the were originally stripe classes - then we add them back here. Note
			 * this is not fool proof (for example if not all rows had stripe classes - but
			 * it's a good effort without getting carried away
			 */
			iLen = oSettings.asDestroyStripes.length;
			if (iLen)
			{
				var anRows = $(nBody).children('tr');
				for ( i=0 ; i<iLen ; i++ )
				{
					anRows.filter(':nth-child(' + iLen + 'n + ' + i + ')').addClass( oSettings.asDestroyStripes[i] );
				}
			}
			
			/* Remove the settings object from the settings array */
			for ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )
			{
				if ( DataTable.settings[i] == oSettings )
				{
					DataTable.settings.splice( i, 1 );
				}
			}
			
			/* End it all */
			oSettings = null;
			oInit = null;
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [bComplete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( bComplete )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			if ( bComplete === false )
			{
				// xxx - Note that this is no exact equivalent of this in the new API.
				// _fnReDraw can now do a static redraw, which is close, but it will
				// also re-sort and re-filter. Do we need this kind of draw at all
				// in the new API - I can't see why you'd want to do a draw which
				// doesn't take into account the latest data.
				_fnCalculateEnd( oSettings );
				_fnDraw( oSettings );
			}
			else
			{
				_fnReDraw( oSettings );
			}
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			
			if ( !oSettings.oFeatures.bFilter )
			{
				return;
			}
			
			if ( bRegex === undefined || bRegex === null )
			{
				bRegex = false;
			}
			
			if ( bSmart === undefined || bSmart === null )
			{
				bSmart = true;
			}
			
			if ( bShowGlobal === undefined || bShowGlobal === null )
			{
				bShowGlobal = true;
			}
			
			if ( bCaseInsensitive === undefined || bCaseInsensitive === null )
			{
				bCaseInsensitive = true;
			}
			
			if ( iColumn === undefined || iColumn === null )
			{
				/* Global filter */
				_fnFilterComplete( oSettings, {
					"sSearch":sInput+"",
					"bRegex": bRegex,
					"bSmart": bSmart,
					"bCaseInsensitive": bCaseInsensitive
				}, 1 );
				
				if ( bShowGlobal && oSettings.aanFeatures.f )
				{
					var n = oSettings.aanFeatures.f;
					for ( var i=0, iLen=n.length ; i<iLen ; i++ )
					{
						// IE9 throws an 'unknown error' if document.activeElement is used
						// inside an iframe or frame...
						try {
							if ( n[i]._DT_Input != document.activeElement )
							{
								$(n[i]._DT_Input).val( sInput );
							}
						}
						catch ( e ) {
							$(n[i]._DT_Input).val( sInput );
						}
					}
				}
			}
			else
			{
				/* Single column filter */
				$.extend( oSettings.aoPreSearchCols[ iColumn ], {
					"sSearch": sInput+"",
					"bRegex": bRegex,
					"bSmart": bSmart,
					"bCaseInsensitive": bCaseInsensitive
				} );
				_fnFilterComplete( oSettings, oSettings.oPreviousSearch, 1 );
			}
		
			// tmp hack during transition to new API
			oSettings._iDisplayStart = 0;
			_fnCalculateEnd( oSettings );
			_fnDraw( oSettings );
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [mRow] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [iCol] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( mRow, iCol )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			
			if ( mRow !== undefined )
			{
				var iRow = mRow;
				if ( typeof mRow === 'object' )
				{
					var sNode = mRow.nodeName.toLowerCase();
					if (sNode === "tr" )
					{
						iRow = _fnNodeToDataIndex(oSettings, mRow);
					}
					else if ( sNode === "td" )
					{
						iRow = _fnNodeToDataIndex(oSettings, mRow.parentNode);
						iCol = _fnNodeToColumnIndex( oSettings, iRow, mRow );
					}
				}
		
				if ( iCol !== undefined )
				{
					return _fnGetCellData( oSettings, iRow, iCol, '' );
				}
				return (oSettings.aoData[iRow]!==undefined) ?
					oSettings.aoData[iRow]._aData : null;
			}
			return _fnGetDataMaster( oSettings );
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			
			if ( iRow !== undefined ) {
				return (oSettings.aoData[iRow]!==undefined) ?
					oSettings.aoData[iRow].nTr : null;
			}
			return _fnGetTrNodes( oSettings );
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} nNode this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( nNode )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var sNodeName = nNode.nodeName.toUpperCase();
			
			if ( sNodeName == "TR" )
			{
				return _fnNodeToDataIndex(oSettings, nNode);
			}
			else if ( sNodeName == "TD" || sNodeName == "TH" )
			{
				var iDataIndex = _fnNodeToDataIndex( oSettings, nNode.parentNode );
				var iColumnIndex = _fnNodeToColumnIndex( oSettings, iDataIndex, nNode );
				return [ iDataIndex, _fnColumnIndexToVisible(oSettings, iColumnIndex ), iColumnIndex ];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var aoOpenRows = oSettings.aoOpenRows;
			
			for ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )
			{
				if ( oSettings.aoOpenRows[i].nParent == nTr )
				{
					return true;
				}
			}
			return false;
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			/* Find settings from table node */
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
		
			/* Check that the row given is in the table */
			var nTableRows = _fnGetTrNodes( oSettings );
			if ( $.inArray(nTr, nTableRows) === -1 )
			{
				return;
			}
			
			/* the old open one if there is one */
			this.fnClose( nTr );
			
			var nNewRow = document.createElement("tr");
			var nNewCell = document.createElement("td");
			nNewRow.appendChild( nNewCell );
			nNewCell.className = sClass;
			nNewCell.colSpan = _fnVisbleColumns( oSettings );
		
			if (typeof mHtml === "string")
			{
				nNewCell.innerHTML = mHtml;
			}
			else
			{
				$(nNewCell).html( mHtml );
			}
		
			/* If the nTr isn't on the page at the moment - then we don't insert at the moment */
			var nTrs = $('tr', oSettings.nTBody);
			if ( $.inArray(nTr, nTrs) != -1  )
			{
				$(nNewRow).insertAfter(nTr);
			}
			
			oSettings.aoOpenRows.push( {
				"nTr": nNewRow,
				"nParent": nTr
			} );
			
			return nNewRow;
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			_fnPageChange( oSettings, mAction );
			_fnCalculateEnd( oSettings );
			
			if ( bRedraw === undefined || bRedraw )
			{
				_fnDraw( oSettings );
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var i, iLen;
			var aoColumns = oSettings.aoColumns;
			var aoData = oSettings.aoData;
			var nTd, bAppend, iBefore;
			
			/* No point in doing anything if we are requesting what is already true */
			if ( aoColumns[iCol].bVisible == bShow )
			{
				return;
			}
			
			/* Show the column */
			if ( bShow )
			{
				var iInsert = 0;
				for ( i=0 ; i<iCol ; i++ )
				{
					if ( aoColumns[i].bVisible )
					{
						iInsert++;
					}
				}
				
				/* Need to decide if we should use appendChild or insertBefore */
				bAppend = (iInsert >= _fnVisbleColumns( oSettings ));
		
				/* Which coloumn should we be inserting before? */
				if ( !bAppend )
				{
					for ( i=iCol ; i<aoColumns.length ; i++ )
					{
						if ( aoColumns[i].bVisible )
						{
							iBefore = i;
							break;
						}
					}
				}
		
				for ( i=0, iLen=aoData.length ; i<iLen ; i++ )
				{
					if ( aoData[i].nTr !== null )
					{
						if ( bAppend )
						{
							aoData[i].nTr.appendChild(
								aoData[i]._anHidden[iCol]
							);
						}
						else
						{
							aoData[i].nTr.insertBefore(
								aoData[i]._anHidden[iCol],
								_fnGetTdNodes( oSettings, i )[iBefore] );
						}
					}
				}
			}
			else
			{
				/* Remove a column from display */
				for ( i=0, iLen=aoData.length ; i<iLen ; i++ )
				{
					if ( aoData[i].nTr !== null )
					{
						nTd = _fnGetTdNodes( oSettings, i )[iCol];
						aoData[i]._anHidden[iCol] = nTd;
						nTd.parentNode.removeChild( nTd );
					}
				}
			}
		
			/* Clear to set the visible flag */
			aoColumns[iCol].bVisible = bShow;
		
			/* Redraw the header and footer based on the new column visibility */
			_fnDrawHead( oSettings, oSettings.aoHeader );
			if ( oSettings.nTFoot )
			{
				_fnDrawHead( oSettings, oSettings.aoFooter );
			}
			
			/* If there are any 'open' rows, then we need to alter the colspan for this col change */
			for ( i=0, iLen=oSettings.aoOpenRows.length ; i<iLen ; i++ )
			{
				oSettings.aoOpenRows[i].nTr.colSpan = _fnVisbleColumns( oSettings );
			}
			
			/* Do a redraw incase anything depending on the table columns needs it
			 * (built-in: scrolling)
			 */
			if ( bRedraw === undefined || bRedraw )
			{
				_fnAdjustColumnSizing( oSettings );
				_fnDraw( oSettings );
			}
			
			_fnSaveState( oSettings );
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			oSettings.aaSorting = aaSort;
			_fnReDraw( oSettings );
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			_fnSortAttachListener( _fnSettingsFromNode( this[DataTable.ext.iApiIndex] ), nNode, iColumn,
			 	fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );
			var i, sDisplay;
			var iRow = (typeof mRow === 'object') ?
				_fnNodeToDataIndex(oSettings, mRow) : mRow;
		
			if ( iColumn === undefined || iColumn === null )
			{
				/* Update the whole row */
				oSettings.aoData[iRow]._aData = mData;
		
				for ( i=0 ; i<oSettings.aoColumns.length ; i++ )
				{
					this.fnUpdate( _fnGetCellData( oSettings, iRow, i ), iRow, i, false, false );
				}
			}
			else
			{
				/* Individual cell update */
				_fnSetCellData( oSettings, iRow, iColumn, mData );
				sDisplay = _fnGetCellData( oSettings, iRow, iColumn, 'display' );
				
				var oCol = oSettings.aoColumns[iColumn];
				if ( oSettings.aoData[iRow].nTr !== null )
				{
					/* Do the actual HTML update */
					_fnGetTdNodes( oSettings, iRow )[iColumn].innerHTML = sDisplay;
				}
			}
			
			/* Modify the search index for this row (strictly this is likely not needed, since fnReDraw
			 * will rebuild the search array - however, the redraw might be disabled by the user)
			 */
			var iDisplayIndex = $.inArray( iRow, oSettings.aiDisplay );
			oSettings.asDataSearch[iDisplayIndex] = _fnBuildSearchRow(
				oSettings,
				_fnGetRowData( oSettings, iRow, 'filter', _fnGetColumns( oSettings, 'bSearchable' ) )
			);
			
			/* Perform pre-draw actions */
			if ( bAction === undefined || bAction )
			{
				_fnAdjustColumnSizing( oSettings );
			}
			
			/* Redraw the table */
			if ( bRedraw === undefined || bRedraw )
			{
				_fnReDraw( oSettings );
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = DataTable.ext.fnVersionCheck;
		
		
		/*
		 * This is really a good bit rubbish this method of exposing the internal methods
		 * publicly... - To be fixed in 2.0 using methods on the prototype
		 */
		
		
		/**
		 * Create a wrapper function for exporting an internal functions to an external API.
		 *  @param {string} sFunc API function name
		 *  @returns {function} wrapped function
		 *  @memberof DataTable#oApi
		 */
		function _fnExternApiFunc (sFunc)
		{
			return function() {
				var aArgs = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(
					Array.prototype.slice.call(arguments) );
				return DataTable.ext.oApi[sFunc].apply( this, aArgs );
			};
		}
		
		
		/**
		 * Reference to internal functions for use by plug-in developers. Note that these
		 * methods are references to internal functions and are considered to be private.
		 * If you use these methods, be aware that they are liable to change between versions
		 * (check the upgrade notes).
		 *  @namespace
		 */
		this.oApi = {
			"_fnExternApiFunc": _fnExternApiFunc,
			"_fnInitialise": _fnInitialise,
			"_fnInitComplete": _fnInitComplete,
			"_fnLanguageCompat": _fnLanguageCompat,
			"_fnAddColumn": _fnAddColumn,
			"_fnColumnOptions": _fnColumnOptions,
			"_fnAddData": _fnAddData,
			"_fnCreateTr": _fnCreateTr,
			"_fnAddTr": _fnAddTr,
			"_fnBuildHead": _fnBuildHead,
			"_fnDrawHead": _fnDrawHead,
			"_fnDraw": _fnDraw,
			"_fnReDraw": _fnReDraw,
			"_fnAjaxUpdate": _fnAjaxUpdate,
			"_fnAjaxParameters": _fnAjaxParameters,
			"_fnAjaxUpdateDraw": _fnAjaxUpdateDraw,
			"_fnAddOptionsHtml": _fnAddOptionsHtml,
			"_fnFeatureHtmlTable": _fnFeatureHtmlTable,
			"_fnScrollDraw": _fnScrollDraw,
			"_fnAdjustColumnSizing": _fnAdjustColumnSizing,
			"_fnFeatureHtmlFilter": _fnFeatureHtmlFilter,
			"_fnFilterComplete": _fnFilterComplete,
			"_fnFilterCustom": _fnFilterCustom,
			"_fnFilterColumn": _fnFilterColumn,
			"_fnFilter": _fnFilter,
			"_fnBuildSearchArray": _fnBuildSearchArray,
			"_fnBuildSearchRow": _fnBuildSearchRow,
			"_fnFilterCreateSearch": _fnFilterCreateSearch,
			"_fnDataToSearch": _fnDataToSearch,
			"_fnSort": _fnSort,
			"_fnSortAttachListener": _fnSortAttachListener,
			"_fnSortingClasses": _fnSortingClasses,
			"_fnFeatureHtmlPaginate": _fnFeatureHtmlPaginate,
			"_fnPageChange": _fnPageChange,
			"_fnFeatureHtmlInfo": _fnFeatureHtmlInfo,
			"_fnUpdateInfo": _fnUpdateInfo,
			"_fnFeatureHtmlLength": _fnFeatureHtmlLength,
			"_fnFeatureHtmlProcessing": _fnFeatureHtmlProcessing,
			"_fnProcessingDisplay": _fnProcessingDisplay,
			"_fnVisibleToColumnIndex": _fnVisibleToColumnIndex,
			"_fnColumnIndexToVisible": _fnColumnIndexToVisible,
			"_fnNodeToDataIndex": _fnNodeToDataIndex,
			"_fnVisbleColumns": _fnVisbleColumns,
			"_fnCalculateEnd": _fnCalculateEnd,
			"_fnConvertToWidth": _fnConvertToWidth,
			"_fnCalculateColumnWidths": _fnCalculateColumnWidths,
			"_fnScrollingWidthAdjust": _fnScrollingWidthAdjust,
			"_fnGetWidestNode": _fnGetWidestNode,
			"_fnGetMaxLenString": _fnGetMaxLenString,
			"_fnStringToCss": _fnStringToCss,
			"_fnDetectType": _fnDetectType,
			"_fnSettingsFromNode": _fnSettingsFromNode,
			"_fnGetDataMaster": _fnGetDataMaster,
			"_fnGetTrNodes": _fnGetTrNodes,
			"_fnGetTdNodes": _fnGetTdNodes,
			"_fnEscapeRegex": _fnEscapeRegex,
			"_fnDeleteIndex": _fnDeleteIndex,
			"_fnColumnOrdering": _fnColumnOrdering,
			"_fnLog": _fnLog,
			"_fnClearTable": _fnClearTable,
			"_fnSaveState": _fnSaveState,
			"_fnLoadState": _fnLoadState,
			"_fnDetectHeader": _fnDetectHeader,
			"_fnGetUniqueThs": _fnGetUniqueThs,
			"_fnScrollBarWidth": _fnScrollBarWidth,
			"_fnApplyToChildren": _fnApplyToChildren,
			"_fnMap": _fnMap,
			"_fnGetRowData": _fnGetRowData,
			"_fnGetCellData": _fnGetCellData,
			"_fnSetCellData": _fnSetCellData,
			"_fnGetObjectDataFn": _fnGetObjectDataFn,
			"_fnSetObjectDataFn": _fnSetObjectDataFn,
			"_fnApplyColumnDefs": _fnApplyColumnDefs,
			"_fnBindAction": _fnBindAction,
			"_fnExtend": _fnExtend,
			"_fnCallbackReg": _fnCallbackReg,
			"_fnCallbackFire": _fnCallbackFire,
			"_fnNodeToColumnIndex": _fnNodeToColumnIndex,
			"_fnInfoMacros": _fnInfoMacros,
			"_fnBrowserDetect": _fnBrowserDetect,
			"_fnGetColumns": _fnGetColumns,
			"_fnHungarianMap": _fnHungarianMap,
			"_fnCamelToHungarian": _fnCamelToHungarian,
			"_fnBuildAjax": _fnBuildAjax,
			"_fnAjaxDataSrc": _fnAjaxDataSrc
		};
		
		$.extend( DataTable.ext.oApi, this.oApi );
		
		for ( var sFunc in DataTable.ext.oApi )
		{
			if ( sFunc )
			{
				this[sFunc] = _fnExternApiFunc(sFunc);
			}
		}
		
		
		var _that = this;
		this.each(function() {
			/*global oInit,_that*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var bUsePassedData = false;
			var oInitEmpty = oInit === undefined ? true : false;
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, "Attempted to initialise DataTables on a node which is not a "+
					"table: "+this.nodeName );
				return;
			}
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( DataTable.defaults, DataTable.defaults, true );
			_fnCamelToHungarian( DataTable.defaults.column, DataTable.defaults.column, true );
			
			/* Setting up the initialisation object */
			if ( !oInit )
			{
				oInit = {};
			}
			_fnCamelToHungarian( DataTable.defaults, oInit );
			
			/* Check to see if we are re-initialising a table */
			for ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )
			{
				/* Base check on table node */
				if ( DataTable.settings[i].nTable == this )
				{
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : DataTable.defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : DataTable.defaults.bDestroy;
			
					if ( oInitEmpty || bRetrieve )
					{
						return DataTable.settings[i].oInstance;
					}
					else if ( bDestroy )
					{
						DataTable.settings[i].oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( DataTable.settings[i], 0, "Cannot reinitialise DataTable.\n\n"+
							"To retrieve the DataTables object for this table, pass no arguments or see "+
							"the docs for bRetrieve and bDestroy" );
						return;
					}
				}
				
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( DataTable.settings[i].sTableId == this.id )
				{
					DataTable.settings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._oExternConfig.iNextUnique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"nTable":        this,
				"oApi":          _that.oApi,
				"oInit":         oInit,
				"sDestroyWidth": $(this)[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			DataTable.settings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $(this).dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			if ( oInit.oLanguage )
			{
				_fnLanguageCompat( oInit.oLanguage );
			}
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			oInit = _fnExtend( $.extend(true, {}, DataTable.defaults), oInit );
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, "bPaginate" );
			_fnMap( oSettings.oFeatures, oInit, "bLengthChange" );
			_fnMap( oSettings.oFeatures, oInit, "bFilter" );
			_fnMap( oSettings.oFeatures, oInit, "bSort" );
			_fnMap( oSettings.oFeatures, oInit, "bInfo" );
			_fnMap( oSettings.oFeatures, oInit, "bProcessing" );
			_fnMap( oSettings.oFeatures, oInit, "bAutoWidth" );
			_fnMap( oSettings.oFeatures, oInit, "bSortClasses" );
			_fnMap( oSettings.oFeatures, oInit, "bServerSide" );
			_fnMap( oSettings.oFeatures, oInit, "bDeferRender" );
			_fnMap( oSettings.oScroll, oInit, "sScrollX", "sX" );
			_fnMap( oSettings.oScroll, oInit, "sScrollXInner", "sXInner" );
			_fnMap( oSettings.oScroll, oInit, "sScrollY", "sY" );
			_fnMap( oSettings.oScroll, oInit, "bScrollCollapse", "bCollapse" );
			_fnMap( oSettings.oScroll, oInit, "bScrollInfinite", "bInfinite" );
			_fnMap( oSettings.oScroll, oInit, "iScrollLoadGap", "iLoadGap" );
			_fnMap( oSettings.oScroll, oInit, "bScrollAutoCss", "bAutoCss" );
			_fnMap( oSettings, oInit, "asStripeClasses" );
			_fnMap( oSettings, oInit, "ajax" );
			_fnMap( oSettings, oInit, "fnServerData" );
			_fnMap( oSettings, oInit, "fnFormatNumber" );
			_fnMap( oSettings, oInit, "sServerMethod" );
			_fnMap( oSettings, oInit, "aaSorting" );
			_fnMap( oSettings, oInit, "aaSortingFixed" );
			_fnMap( oSettings, oInit, "aLengthMenu" );
			_fnMap( oSettings, oInit, "sPaginationType" );
			_fnMap( oSettings, oInit, "sAjaxSource" );
			_fnMap( oSettings, oInit, "sAjaxDataProp" );
			_fnMap( oSettings, oInit, "iCookieDuration", "iStateDuration" ); // backwards compat
			_fnMap( oSettings, oInit, "iStateDuration" );
			_fnMap( oSettings, oInit, "sDom" );
			_fnMap( oSettings, oInit, "bSortCellsTop" );
			_fnMap( oSettings, oInit, "iTabIndex" );
			_fnMap( oSettings, oInit, "oSearch", "oPreviousSearch" );
			_fnMap( oSettings, oInit, "aoSearchCols", "aoPreSearchCols" );
			_fnMap( oSettings, oInit, "iDisplayLength", "_iDisplayLength" );
			_fnMap( oSettings, oInit, "bJQueryUI", "bJUI" );
			_fnMap( oSettings, oInit, "fnStateLoadCallback" );
			_fnMap( oSettings, oInit, "fnStateSaveCallback" );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			if ( oSettings.oFeatures.bServerSide && oSettings.oFeatures.bSort &&
				   oSettings.oFeatures.bSortClasses )
			{
				/* Enable sort classes for server-side processing. Safe to do it here, since server-side
				 * processing must be enabled by the developer
				 */
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'server_side_sort_classes' );
			}
			else if ( oSettings.oFeatures.bDeferRender )
			{
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'defer_sort_classes' );
			}
			
			if ( oInit.bJQueryUI )
			{
				/* Use the JUI classes object for display. You could clone the oStdClasses object if
				 * you want to have multiple tables with multiple independent classes
				 */
				$.extend( oSettings.oClasses, DataTable.ext.oJUIClasses );
				
				if ( oInit.sDom === DataTable.defaults.sDom && DataTable.defaults.sDom === "lfrtip" )
				{
					/* Set the DOM to use a layout suitable for jQuery UI's theming */
					oSettings.sDom = '<"H"lfr>t<"F"ip>';
				}
			}
			else
			{
				$.extend( oSettings.oClasses, DataTable.ext.oStdClasses );
			}
			$(this).addClass( oSettings.oClasses.sTable );
			
			/* Calculate the scroll bar width and cache it for use later on */
			if ( oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "" )
			{
				oSettings.oScroll.iBarWidth = _fnScrollBarWidth();
			}
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				oSettings.oFeatures.bStateSave = true;
				_fnLoadState( oSettings, oInit );
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			if ( oInit.aaData !== null )
			{
				bUsePassedData = true;
			}
			
			/* Language definitions */
			if ( oInit.oLanguage.sUrl !== "" )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				oSettings.oLanguage.sUrl = oInit.oLanguage.sUrl;
				$.getJSON( oSettings.oLanguage.sUrl, null, function( json ) {
					_fnLanguageCompat( json );
					_fnCamelToHungarian( DataTable.defaults.oLanguage, json );
					$.extend( true, oSettings.oLanguage, oInit.oLanguage, json );
					_fnInitialise( oSettings );
				} );
				bInitHandedOff = true;
			}
			else
			{
				$.extend( true, oSettings.oLanguage, oInit.oLanguage );
			}
			
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oSettings.oClasses.sStripeOdd,
					oSettings.oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return $('tbody tr:eq(0)', this).hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				/* Short cut - use the loop to check if we have column visibility state to restore */
				if ( oInit.saved_aoColumns !== undefined && oInit.saved_aoColumns.length == iLen )
				{
					if ( aoColumnsInit[i] === null )
					{
						aoColumnsInit[i] = {};
					}
					aoColumnsInit[i].bVisible = oInit.saved_aoColumns[i].bVisible;
				}
				
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			
			/*
			 * Sorting
			 * Check the aaSorting array
			 */
			for ( i=0, iLen=oSettings.aaSorting.length ; i<iLen ; i++ )
			{
				if ( oSettings.aaSorting[i][0] >= oSettings.aoColumns.length )
				{
					oSettings.aaSorting[i][0] = 0;
				}
				var oColumn = oSettings.aoColumns[ oSettings.aaSorting[i][0] ];
				
				/* Add a default sorting index */
				if ( oSettings.aaSorting[i][2] === undefined )
				{
					oSettings.aaSorting[i][2] = 0;
				}
				
				/* If aaSorting is not defined, then we use the first indicator in asSorting */
				if ( oInit.aaSorting === undefined && oSettings.saved_aaSorting === undefined )
				{
					oSettings.aaSorting[i][1] = oColumn.asSorting[0];
				}
				
				/* Set the current sorting index based on aoColumns.asSorting */
				for ( j=0, jLen=oColumn.asSorting.length ; j<jLen ; j++ )
				{
					if ( oSettings.aaSorting[i][1] == oColumn.asSorting[j] )
					{
						oSettings.aaSorting[i][2] = j;
						break;
					}
				}
			}
				
			/* Do a first pass on the sorting classes (allows any size changes to be taken into
			 * account, and also will apply sorting disabled classes if disabled
			 */
			_fnSortingClasses( oSettings );
			
			
			/*
			 * Final init
			 * Cache the header, body and footer as required, creating them if needed
			 */
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			// Work around for Webkit bug 83867 - store the caption-side before removing from doc
			var captions = $(this).children('caption').each( function () {
				this._captionSide = $(this).css('caption-side');
			} );
			
			var thead = $(this).children('thead');
			if ( thead.length === 0 )
			{
				thead = [ document.createElement( 'thead' ) ];
				this.appendChild( thead[0] );
			}
			oSettings.nTHead = thead[0];
			
			var tbody = $(this).children('tbody');
			if ( tbody.length === 0 )
			{
				tbody = [ document.createElement( 'tbody' ) ];
				this.appendChild( tbody[0] );
			}
			oSettings.nTBody = tbody[0];
			oSettings.nTBody.setAttribute( "role", "alert" );
			oSettings.nTBody.setAttribute( "aria-live", "polite" );
			oSettings.nTBody.setAttribute( "aria-relevant", "all" );
			
			var tfoot = $(this).children('tfoot');
			if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") )
			{
				// If we are a scrolling table, and no footer has been given, then we need to create
				// a tfoot element for the caption element to be appended to
				tfoot = [ document.createElement( 'tfoot' ) ];
				this.appendChild( tfoot[0] );
			}
			
			if ( tfoot.length > 0 )
			{
				oSettings.nTFoot = tfoot[0];
				_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
			}
			
			/* Check if there is data passing into the constructor */
			if ( bUsePassedData )
			{
				for ( i=0 ; i<oInit.aaData.length ; i++ )
				{
					_fnAddData( oSettings, oInit.aaData[ i ] );
				}
			}
			else if ( oSettings.bDeferLoading || (oSettings.sAjaxSource === null && oSettings.ajax === null) )
			{
				/* Grab the data from the page - only do this when deferred loading or no Ajax
				 * source since there is no point in reading the DOM data if we are then going
				 * to replace it with Ajax data
				 */
				_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
			}
			
			/* Copy the data index array */
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
			/* Initialisation complete - table can be drawn */
			oSettings.bInitialised = true;
			
			/* Check if we need to initialise the table (it might not have been handed off to the
			 * language processor)
			 */
			if ( bInitHandedOff === false )
			{
				_fnInitialise( oSettings );
			}
		} );
		_that = null;
		return this;
	};

	
	
	(/** @lends <global> */function() {
	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var _apiStruct = [];
	
	
	/**
	 * Api object reference.
	 *
	 * @type object
	 * @ignore
	 */
	var _Api;
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var _arrayProto = Array.prototype;
	
	
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} );
		}
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	DataTable.Api = _Api = function ( context, data )
	{
		if ( ! this instanceof _Api ) {
			throw 'DT API must be constructed as a new object';
			// or should it do the 'new' for the caller
			// return new _Api.apply( this, arguments );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings.push.apply( settings, a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			this.push.apply( this, data );
		}
	
		_Api.extend( this, this, _apiStruct );
	};
	
	
	_Api.prototype = /** @lends DataTables.Api */{
		/**
		 * Return a new Api instance, comprised of the data held in the current
		 * instance, join with the other array(s) and/or value(s).
		 *
		 * An alias for `Array.prototype.concat`.
		 *
		 * @type method
		 * @param {*} value1 Arrays and/or values to concatenate.
		 * @param {*} [...] Additional arrays and/or values to concatenate.
		 * @returns {DataTables.Api} New API instance, comprising of the combined
		 *   array.
		 */
		concat:  _arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		each: function ( fn )
		{
			if ( _arrayProto.forEach ) {
				// Where possible, use the built-in forEach
				_arrayProto.forEach.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien; i++ ) {
					// In strict mode the execution scope is the passed value
					fn.call( this, this[i], i, this );
				}
			}
		
			return this;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( _arrayProto.filter ) {
				a = _arrayProto.filter( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		indexOf: _arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
	
		lastIndexOf: _arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( _arrayProto.map ) {
				a = _arrayProto.map( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el, i ) {
				return el[ prop ];
			} );
		},
	
		pop:     _arrayProto.pop,
	
	
		push:    _arrayProto.push,
	
	
		reduce: _arrayProto.reduce || function ( fn, init )
		{
			var
				value,
				isSet = false;
	
			if ( arguments.length > 1 ) {
				value = init;
				isSet = true;
			}
	
			for ( var i=0, ien=this.length ; i<ien ; i++ ) {
				if ( ! this.hasOwnProperty(i) ) {
					continue;
				}
	
				value = isSet ?
					fn( value, this[i], i, this ) :
					this[i];
	
				isSet = true;
			}
	
			return value;
		},
	
	
		reduceRight: _arrayProto.reduceRight || function ( fn, init )
		{
			var
				value,
				isSet = false;
	
			if ( arguments.length > 1 ) {
				value = init;
				isSet = true;
			}
	
			for ( var i=this.length-1 ; i>=0 ; i-- ) {
				if ( ! this.hasOwnProperty(i) ) {
					continue;
				}
	
				value = isSet ?
					fn( value, this[i], i, this ) :
					this[i];
	
				isSet = true;
			}
	
			return value;
		},
	
		reverse: _arrayProto.reverse,
	
	
		shift:   _arrayProto.shift,
	
	
		sort:    _arrayProto.sort, // ? name - order?
	
	
		splice:  _arrayProto.splice,
	
	
		toArray: function ()
		{
			return _arrayProto.slice.call( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: _arrayProto.unshift
	};
	
	
	
	
	 _Api.extend = function ( scope, obj, ext )
	{
		if ( ! obj instanceof _Api ) {
			return;
		}
	
		var
			i, ien,
			j, jen,
			struct,
			methodScoping = function ( fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			if ( typeof struct.val === 'function' ) {
				obj[ struct.name ] = methodScoping( struct.val, struct );
			}
			else {
				obj[ struct.name ] = struct.val;
			}
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	_Api.register = function ( name, val )
	{
		var
			i, ien,
			heir = name.split('.'),
			struct = _apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
			
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   []
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	
		// Rebuild the API with the new construct
		if ( _Api.ready ) {
			DataTable.api.build();
		}
	};
	
	
	}());
	
	
	
	(/** @lends <global> */function() {
	
	var _Api = DataTable.Api;
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var _table_selector = function ( selector, a )
	{
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	/**
	 * Context selector and iterator for the API's context (i.e. the tables the
	 * API instance refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @param {function} [fn] Iterator function. Will be called for every table in
	 *   the current context (once the selector has been applied, if one is given).
	 *   The function is passed two parameters: 1. the DataTables settings object
	 *   for the table in question and 2. the index of that table in the current
	 *   context. The execution scope of the function is the API instance.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given,
	 *   or the callback function returns information from each loop. The
	 *   information, if returned, is assigned to the API instance. Otherwise the
	 *   original API instance is returned for chaining.
	 */
	_Api.register( 'tables()', function ( selector, fn ) {
		// Argument shifting
		if ( typeof selector === 'function' ) {
			fn = selector;
			selector = undefined;
		}
	
		var a = [];
		var context = selector ?
			_table_selector( selector, this.context ) :
			this.context;
	
		if ( fn ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				var ret = fn.call( this, context[i], i );
				if ( ret !== undefined ) {
					a.push( ret );
				}
			}
		}
	
		// A new instance is created if there was a selector specified, or if
		// data was returned from the callback
		var api = selector || a.length ?
			new _Api( context, a ) :
			this;
	
		return api;
	} );
	
	
	/**
	 * Get the DOM nodes for the `table` elements from the current API context.
	 * @return {DataTable.Api} New Api instance containing the DOM nodes for the
	 *   tables.
	 */
	_Api.register( 'tables().nodes()', function () {
		return this.tables( function ( settings, i ) {
			return settings.nTable;
		} );
	} );
	
	
	}());
	
	
	
	(/** @lends <global> */function() {
	
	var _api = DataTable.Api;
	
	
	/**
	 * Redraw the tables in the current context.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api.register( 'draw()', function ( resetPaging ) {
		return this.tables( function ( settings ) {
			_fnReDraw( settings, resetPaging===false );
		} );
	} );
	
	
	}());
	
	
	
	(/** @lends <global> */function() {
	
	var _Api = DataTable.Api;
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.tables( function ( settings ) {
			_fnPageChange( settings, action );
			_fnCalculateEnd( settings );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 * 
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_Api.register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings._iDisplayLength,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.ceil( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.tables( function ( settings ) {
			_fnLengthChange( settings, len );
			_fnCalculateEnd( settings );
		} );
	} );
	
	
	}());
	
	
	
	(/** @lends <global> */function() {
	
	var _Api = DataTable.Api;
	
	var _reload = function ( settings, holdPosition ) {
		if ( settings.oFeatures.bServerSide ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				// xxx can this be reduced?
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_Api.register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			var xhr = ctx[0].jqXHR;
	
			if ( xhr ) {
				return $.parseJSON( xhr.responseText );
			}
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'ajax.reload()', function ( resetPaging ) {
		return this.tables( function (settings) {
			_reload( settings, resetPaging===false );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.tables( function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'ajax.url().load()', function () {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.tables( _reload );
	} );
	
	
	}());
	
	
	
	(/** @lends <global> */function() {
	
	var _Api = DataTable.Api;
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.tables( function ( settings ) {
			settings.aaSorting = order;
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_Api.register( 'order.listener()', function ( node, column, callback ) {
		return this.tables( function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	}());
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being used, in order
	 * to ensure compatibility.
	 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
	 *    formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
	 *    version, or false if this version of DataTales is not suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.fnVersionCheck( '1.9.0' ) );
	 */
	DataTable.fnVersionCheck = function( sVersion )
	{
		var aThis = DataTable.ext.sVersion.split('.');
		var aThat = sVersion.split('.');
		var iThis, iThat;
		
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ){
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
			
			// Parts are the same, keep comparing
			if (iThis === iThat)
			{
				continue;
			}
			
			// Parts are different, return immediately
			return iThis > iThat;
		}
		return true;
	};
	
	
	/**
	 * Check if a TABLE node is a DataTable table already or not.
	 *  @param {node} nTable The TABLE node to check if it is a DataTable or not (note that other
	 *    node types can be passed in, but will always return false).
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    var ex = document.getElementById('example');
	 *    if ( ! $.fn.DataTable.fnIsDataTable( ex ) ) {
	 *      $(ex).dataTable();
	 *    }
	 */
	DataTable.fnIsDataTable = function ( nTable )
	{
		var o = DataTable.settings;
	
		for ( var i=0 ; i<o.length ; i++ )
		{
			if ( o[i].nTable === nTable || o[i].nScrollHead === nTable || o[i].nScrollFoot === nTable )
			{
				return true;
			}
		}
	
		return false;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can select to
	 * get only currently visible tables.
	 *  @param {boolean} [bVisible=false] Flag to indicate if you want all (default) or
	 *    visible tables only.
	 *  @returns {array} Array of TABLE nodes (not DataTable instances) which are DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    var table = $.fn.dataTable.fnTables(true);
	 *    if ( table.length > 0 ) {
	 *      $(table).dataTable().fnAdjustColumnSizing();
	 *    }
	 */
	DataTable.fnTables = function ( bVisible )
	{
		var out = [];
	
		jQuery.each( DataTable.settings, function (i, o) {
			if ( !bVisible || (bVisible === true && $(o.nTable).is(':visible')) )
			{
				out.push( o.nTable );
			}
		} );
	
		return out;
	};
	

	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.0-dev";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	/**
	 * DataTables extension options and plug-ins. This namespace acts as a collection "area"
	 * for plug-ins that can be used to extend the default DataTables behaviour - indeed many
	 * of the build in methods use this method to provide their own capabilities (sorting methods
	 * for example).
	 *
	 * Note that this namespace is aliased to jQuery.fn.dataTableExt so it can be readily accessed
	 * and modified by plug-ins.
	 *  @namespace
	 */
	DataTable.models.ext = {
		/**
		 * Plug-in filtering functions - this method of filtering is complimentary to the default
		 * type based filtering, and a lot more comprehensive as it allows you complete control
		 * over the filtering logic. Each element in this array is a function (parameters
		 * described below) that is called for every row in the table, and your logic decides if
		 * it should be included in the filtered data set or not.
		 *   <ul>
		 *     <li>
		 *       Function input parameters:
		 *       <ul>
		 *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
		 *         <li>{array|object} Data for the row to be processed (same as the original format
		 *           that was passed in as the data source, or an array from a DOM data source</li>
		 *         <li>{int} Row index in aoData ({@link DataTable.models.oSettings.aoData}), which can
		 *           be useful to retrieve the TR element if you need DOM interaction.</li>
		 *       </ul>
		 *     </li>
		 *     <li>
		 *       Function return:
		 *       <ul>
		 *         <li>{boolean} Include the row in the filtered result set (true) or not (false)</li>
		 *       </ul>
		 *     </il>
		 *   </ul>
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom filtering being applied to the fourth column (i.e.
		 *    // the aData[3] index) based on two input values from the end-user, matching the data in
		 *    // a certain range.
		 *    $.fn.dataTableExt.afnFiltering.push(
		 *      function( oSettings, aData, iDataIndex ) {
		 *        var iMin = document.getElementById('min').value * 1;
		 *        var iMax = document.getElementById('max').value * 1;
		 *        var iVersion = aData[3] == "-" ? 0 : aData[3]*1;
		 *        if ( iMin == "" && iMax == "" ) {
		 *          return true;
		 *        }
		 *        else if ( iMin == "" && iVersion < iMax ) {
		 *          return true;
		 *        }
		 *        else if ( iMin < iVersion && "" == iMax ) {
		 *          return true;
		 *        }
		 *        else if ( iMin < iVersion && iVersion < iMax ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		"afnFiltering": [],
	
	
		/**
		 * Plug-in sorting functions - this method of sorting is complimentary to the default type
		 * based sorting that DataTables does automatically, allowing much greater control over the
		 * the data that is being used to sort a column. This is useful if you want to do sorting
		 * based on live data (for example the contents of an 'input' element) rather than just the
		 * static string that DataTables knows of. The way these plug-ins work is that you create
		 * an array of the values you wish to be sorted for the column in question and then return
		 * that array. Which pre-sorting function is run here depends on the sSortDataType parameter
		 * that is used for the column (if any). This is the corollary of <i>ofnSearch</i> for sort
		 * data.
		 *   <ul>
	     *     <li>
	     *       Function input parameters:
	     *       <ul>
		 *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
	     *         <li>{int} Target column index</li>
	     *       </ul>
	     *     </li>
		 *     <li>
		 *       Function return:
		 *       <ul>
		 *         <li>{array} Data for the column to be sorted upon</li>
		 *       </ul>
		 *     </il>
		 *   </ul>
		 *
		 * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for
		 * the different uses that DataTables can put the data to. Specifically <i>mData</i> when
		 * used as a function will give you a 'type' (sorting, filtering etc) that you can use to
		 * prepare the data as required for the different types. As such, this method is deprecated.
		 *  @type array
		 *  @default []
		 *  @deprecated
		 *
		 *  @example
		 *    // Updating the cached sorting information with user entered values in HTML input elements
		 *    jQuery.fn.dataTableExt.afnSortData['dom-text'] = function ( oSettings, iColumn )
		 *    {
		 *      var aData = [];
		 *      $( 'td:eq('+iColumn+') input', oSettings.oApi._fnGetTrNodes(oSettings) ).each( function () {
		 *        aData.push( this.value );
		 *      } );
		 *      return aData;
		 *    }
		 */
		"afnSortData": [],
	
	
		/**
		 * Feature plug-ins - This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are accessible through the sDom initialisation
		 * option. As such, each feature plug-in must describe a function that is used to initialise
		 * itself (fnInit), a character so the feature can be enabled by sDom (cFeature) and the name
		 * of the feature (sFeature). Thus the objects attached to this method must provide:
		 *   <ul>
		 *     <li>{function} fnInit Initialisation of the plug-in
		 *       <ul>
	     *         <li>
	     *           Function input parameters:
	     *           <ul>
		 *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
	     *           </ul>
	     *         </li>
		 *         <li>
		 *           Function return:
		 *           <ul>
		 *             <li>{node|null} The element which contains your feature. Note that the return
		 *                may also be void if your plug-in does not require to inject any DOM elements
		 *                into DataTables control (sDom) - for example this might be useful when
		 *                developing a plug-in which allows table control via keyboard entry.</li>
		 *           </ul>
		 *         </il>
		 *       </ul>
		 *     </li>
		 *     <li>{character} cFeature Character that will be matched in sDom - case sensitive</li>
		 *     <li>{string} sFeature Feature name</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // How TableTools initialises itself.
		 *    $.fn.dataTableExt.aoFeatures.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T",
		 *      "sFeature": "TableTools"
		 *    } );
		 */
		"aoFeatures": [],
	
	
		/**
		 * Type detection plug-in functions - DataTables utilises types to define how sorting and
		 * filtering behave, and types can be either  be defined by the developer (sType for the
		 * column) or they can be automatically detected by the methods in this array. The functions
		 * defined in the array are quite simple, taking a single parameter (the data to analyse)
		 * and returning the type if it is a known type, or null otherwise.
		 *
		 * * Function input parameters:
	     *    * {*} Data from the column cell to be analysed
	     * * Function return:
		 *    * {string|null} Data type detected, or null if unknown (and thus pass it
		 *           on to the other type detection functions.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // Currency type detection plug-in:
		 *    jQuery.fn.dataTableExt.aTypes.push(
		 *      function ( data ) {
		 *        // Check the numeric part
		 *        if ( ! $.isNumeric( data.substring(1) ) ) {
		 *          return null;
		 *        }
		 *
		 *        // Check prefixed by currency
		 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
		 *          return 'currency';
		 *        }
		 *        return null;
		 *      }
		 *    );
		 */
		"aTypes": [],
	
	
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used,
		 * in order to ensure compatibility.
		 *  @type function
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note
		 *    that the formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the
		 *    required version, or false if this version of DataTales is not suitable
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		"fnVersionCheck": DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @default 0
		 */
		"iApiIndex": 0,
	
	
		/**
		 * Pre-processing of filtering data plug-ins - When you assign the sType for a column
		 * (or have it automatically detected for you by DataTables or a type detection plug-in),
		 * you will typically be using this for custom sorting, but it can also be used to provide
		 * custom filtering by allowing you to pre-processing the data and returning the data in
		 * the format that should be filtered upon. This is done by adding functions this object
		 * with a parameter name which matches the sType for that target column. This is the
		 * corollary of <i>afnSortData</i> for filtering data.
		 *   <ul>
	     *     <li>
	     *       Function input parameters:
	     *       <ul>
		 *         <li>{*} Data from the column cell to be prepared for filtering</li>
	     *       </ul>
	     *     </li>
		 *     <li>
		 *       Function return:
		 *       <ul>
		 *         <li>{string|null} Formatted string that will be used for the filtering.</li>
		 *       </ul>
		 *     </il>
		 *   </ul>
		 *
		 * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for
		 * the different uses that DataTables can put the data to. Specifically <i>mData</i> when
		 * used as a function will give you a 'type' (sorting, filtering etc) that you can use to
		 * prepare the data as required for the different types. As such, this method is deprecated.
		 *  @type object
		 *  @default {}
		 *  @deprecated
		 *
		 *  @example
		 *    $.fn.dataTableExt.ofnSearch['title-numeric'] = function ( sData ) {
		 *      return sData.replace(/\n/g," ").replace( /<.*?>/g, "" );
		 *    }
		 */
		"ofnSearch": {},
	
	
		/**
		 * Container for all private functions in DataTables so they can be exposed externally
		 *  @type object
		 *  @default {}
		 */
		"oApi": {},
	
	
		/**
		 * Storage for the various classes that DataTables uses
		 *  @type object
		 *  @default {}
		 */
		"oStdClasses": {},
		
	
		/**
		 * Storage for the various classes that DataTables uses - jQuery UI suitable
		 *  @type object
		 *  @default {}
		 */
		"oJUIClasses": {},
	
	
		/**
		 * Pagination plug-in methods - The style and controls of the pagination can significantly
		 * impact on how the end user interacts with the data in your table, and DataTables allows
		 * the addition of pagination controls by extending this object, which can then be enabled
		 * through the <i>sPaginationType</i> initialisation parameter. Each pagination type that
		 * is added is an object (the property name of which is what <i>sPaginationType</i> refers
		 * to) that has two properties, both methods that are used by DataTables to update the
		 * control's state.
		 *   <ul>
		 *     <li>
		 *       fnInit -  Initialisation of the paging controls. Called only during initialisation
		 *         of the table. It is expected that this function will add the required DOM elements
		 *         to the page for the paging controls to work. The element pointer
		 *         'oSettings.aanFeatures.p' array is provided by DataTables to contain the paging
		 *         controls (note that this is a 2D array to allow for multiple instances of each
		 *         DataTables DOM element). It is suggested that you add the controls to this element
		 *         as children
		 *       <ul>
	     *         <li>
	     *           Function input parameters:
	     *           <ul>
		 *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
		 *             <li>{node} Container into which the pagination controls must be inserted</li>
		 *             <li>{function} Draw callback function - whenever the controls cause a page
		 *               change, this method must be called to redraw the table.</li>
	     *           </ul>
	     *         </li>
		 *         <li>
		 *           Function return:
		 *           <ul>
		 *             <li>No return required</li>
		 *           </ul>
		 *         </il>
		 *       </ul>
		 *     </il>
		 *     <li>
		 *       fnInit -  This function is called whenever the paging status of the table changes and is
		 *         typically used to update classes and/or text of the paging controls to reflex the new
		 *         status.
		 *       <ul>
	     *         <li>
	     *           Function input parameters:
	     *           <ul>
		 *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>
		 *             <li>{function} Draw callback function - in case you need to redraw the table again
		 *               or attach new event listeners</li>
	     *           </ul>
	     *         </li>
		 *         <li>
		 *           Function return:
		 *           <ul>
		 *             <li>No return required</li>
		 *           </ul>
		 *         </il>
		 *       </ul>
		 *     </il>
		 *   </ul>
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    $.fn.dataTableExt.oPagination.four_button = {
		 *      "fnInit": function ( oSettings, nPaging, fnCallbackDraw ) {
		 *        nFirst = document.createElement( 'span' );
		 *        nPrevious = document.createElement( 'span' );
		 *        nNext = document.createElement( 'span' );
		 *        nLast = document.createElement( 'span' );
		 *
		 *        nFirst.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sFirst ) );
		 *        nPrevious.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sPrevious ) );
		 *        nNext.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sNext ) );
		 *        nLast.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sLast ) );
		 *
		 *        nFirst.className = "paginate_button first";
		 *        nPrevious.className = "paginate_button previous";
		 *        nNext.className="paginate_button next";
		 *        nLast.className = "paginate_button last";
		 *
		 *        nPaging.appendChild( nFirst );
		 *        nPaging.appendChild( nPrevious );
		 *        nPaging.appendChild( nNext );
		 *        nPaging.appendChild( nLast );
		 *
		 *        $(nFirst).click( function () {
		 *          oSettings.oApi._fnPageChange( oSettings, "first" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *
		 *        $(nPrevious).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "previous" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *
		 *        $(nNext).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "next" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *
		 *        $(nLast).click( function() {
		 *          oSettings.oApi._fnPageChange( oSettings, "last" );
		 *          fnCallbackDraw( oSettings );
		 *        } );
		 *
		 *        $(nFirst).bind( 'selectstart', function () { return false; } );
		 *        $(nPrevious).bind( 'selectstart', function () { return false; } );
		 *        $(nNext).bind( 'selectstart', function () { return false; } );
		 *        $(nLast).bind( 'selectstart', function () { return false; } );
		 *      },
		 *
		 *      "fnUpdate": function ( oSettings, fnCallbackDraw ) {
		 *        if ( !oSettings.aanFeatures.p ) {
		 *          return;
		 *        }
		 *
		 *        // Loop over each instance of the pager
		 *        var an = oSettings.aanFeatures.p;
		 *        for ( var i=0, iLen=an.length ; i<iLen ; i++ ) {
		 *          var buttons = an[i].getElementsByTagName('span');
		 *          if ( oSettings._iDisplayStart === 0 ) {
		 *            buttons[0].className = "paginate_disabled_previous";
		 *            buttons[1].className = "paginate_disabled_previous";
		 *          }
		 *          else {
		 *            buttons[0].className = "paginate_enabled_previous";
		 *            buttons[1].className = "paginate_enabled_previous";
		 *          }
		 *
		 *          if ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) {
		 *            buttons[2].className = "paginate_disabled_next";
		 *            buttons[3].className = "paginate_disabled_next";
		 *          }
		 *          else {
		 *            buttons[2].className = "paginate_enabled_next";
		 *            buttons[3].className = "paginate_enabled_next";
		 *          }
		 *        }
		 *      }
		 *    };
		 */
		"oPagination": {},
	
	
		/**
		 * Sorting plug-in methods - Sorting in DataTables is based on the detected type of the
		 * data column (you can add your own type detection functions, or override automatic
		 * detection using sType). With this specific type given to the column, DataTables will
		 * apply the required sort from the functions in the object. Each sort type must provide
		 * two mandatory methods, one each for ascending and descending sorting, and can optionally
		 * provide a pre-formatting method that will help speed up sorting by allowing DataTables
		 * to pre-format the sort data only once (rather than every time the actual sort functions
		 * are run). The two sorting functions are typical Javascript sort methods:
		 *   <ul>
	     *     <li>
	     *       Function input parameters:
	     *       <ul>
		 *         <li>{*} Data to compare to the second parameter</li>
		 *         <li>{*} Data to compare to the first parameter</li>
	     *       </ul>
	     *     </li>
		 *     <li>
		 *       Function return:
		 *       <ul>
		 *         <li>{int} Sorting match: <0 if first parameter should be sorted lower than
		 *           the second parameter, ===0 if the two parameters are equal and >0 if
		 *           the first parameter should be sorted height than the second parameter.</li>
		 *       </ul>
		 *     </il>
		 *   </ul>
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Case-sensitive string sorting, with no pre-formatting method
		 *    $.extend( $.fn.dataTableExt.oSort, {
		 *      "string-case-asc": function(x,y) {
		 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		 *      },
		 *      "string-case-desc": function(x,y) {
		 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		 *      }
		 *    } );
		 *
		 *  @example
		 *    // Case-insensitive string sorting, with pre-formatting
		 *    $.extend( $.fn.dataTableExt.oSort, {
		 *      "string-pre": function(x) {
		 *        return x.toLowerCase();
		 *      },
		 *      "string-asc": function(x,y) {
		 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		 *      },
		 *      "string-desc": function(x,y) {
		 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		 *      }
		 *    } );
		 */
		"oSort": {},
	
	
		/**
		 * Version string for plug-ins to check compatibility. Allowed format is
		 * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and
		 * e are optional
		 *  @type string
		 *  @default Version number
		 */
		"sVersion": DataTable.version,
	
	
		/**
		 * How should DataTables report an error. Can take the value 'alert' or 'throw'
		 *  @type string
		 *  @default alert
		 */
		"sErrMode": "alert",
	
	
		/**
		 * Store information for DataTables to access globally about other instances
		 *  @namespace
		 *  @private
		 */
		"_oExternConfig": {
			/* int:iNextUnique - next unique number for an instance */
			"iNextUnique": 0
		}
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default []
		 *  @private
		 */
		"_aSortData": [],
	
		/**
		 * Array of TD elements that are cached for hidden rows, so they can be
		 * reinserted into the table if a column is made visible again (or to act
		 * as a store if a column is made hidden). Only hidden columns have a
		 * reference in the array. For non-hidden columns the value is either
		 * undefined or null.
		 *  @type array nodes
		 *  @default []
		 *  @private
		 */
		"_anHidden": [],
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": ""
	};
	
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
		
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
		
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
		
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
		
		/**
		 * Flag to indicate to the type detection method if the automatic type
		 * detection should be used, or if a column type (sType) has been specified
		 *  @type boolean
		 *  @default true
		 *  @private
		 */
		"_bAutoType": true,
		
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
		
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
		
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
		
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
		
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
		
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
		
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
		
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
		
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
		
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
		
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
		
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
		
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
		
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
		
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
		
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
		
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
		
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If sorting is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed upon,
		 * and the sorting direction, with this variable. The `sorting` array should
		 * contain an array for each column to be sorted initially containing the
		 * column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.sorting
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sorting": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sorting": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting will
		 * always be forced on first - any sorting after that (from the user) will
		 * then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.sortingFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sortingFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": null,
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object or array
		 *   of name/value pairs, but it can also be used as a function to
		 *   manipulate the data DataTables sends to the server. The function takes
		 *   a single parameter, an array of name/value pairs that DataTables has
		 *   readied for sending. An object or array can be returned which will be
		 *   merged into the DataTables defaults, or you can add the items to the
		 *   array passed in. This supersedes `fnServerParams` from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property 'aaData'
		 *   when obtaining data from an Ajax source or for server-side processing -
		 *   this parameter allows that property to be changed. You can use
		 *   Javascript dotted object notation to get a data source for multiple
		 *   levels of nesting, or it my be used as a function. As a function it
		 *   takes a single parameter, the JSON returned from the server, which can
		 *   be manipulated as required, with the returned value being that used by
		 *   DataTables as the data source for the table. This supersedes
		 *   `sAjaxDataProp` from DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate the data returned by the server use
		 *   `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ aaData: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `aaData` to `tableData` (i.e. `{ aaData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `displayLength` property will be automatically set to the
		 * first value given in this array, unless `displayLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.filter
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "filter": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
		 * slightly different and additional mark-up from what DataTables has
		 * traditionally used).
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.jQueryUI
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "jQueryUI": true
		 *      } );
		 *    } );
		 */
		"bJQueryUI": false,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paginate
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * Indicate if DataTables should be allowed to set the padding / margin
		 * etc for the scrolling header elements or not. Typically you will want
		 * this.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollAutoCss
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollAutoCss": false,
		 *        "scrollY": "200px"
		 *      } );
		 *    } );
		 */
		"bScrollAutoCss": true,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Enable infinite scrolling for DataTables (to be used in combination with
		 * `scrollY`). Infinite scrolling means that DataTables will continually load
		 * data as a user scrolls through a table, which is very useful for large
		 * dataset. This cannot be used with pagination, which is automatically
		 * disabled. *Note*: the Scroller extra for DataTables is recommended in
		 * in preference to this option.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollInfinite
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollInfinite": true,
		 *        "scrollCollapse": true,
		 *        "scrollY": "200px"
		 *      } );
		 *    } );
		 */
		"bScrollInfinite": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajaxSource` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.sort
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "sort": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.sortCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "sortCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.sortClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "sortClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fnDrawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' even.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( foot, data, start, end, display ) {
		 *          foot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          if ( toFormat &lt; 1000 ) {
		 *            return toFormat;
		 *          } else {
		 *            var
		 *              s=(toFormat+""),
		 *              a=s.split(""), out="",
		 *              iLen=s.length;
		 *
		 *            for ( var i=0 ; i&lt;iLen ; i++ ) {
		 *              if ( i%3 === 0 &amp;&amp; i !== 0 ) {
		 *                out = "'"+out;
		 *              }
		 *              out = a[iLen-i-1]+out;
		 *            }
		 *          }
		 *          return out;
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			if ( toFormat < 1000 )
			{
				// A small optimisation for what is likely to be the majority of use cases
				return toFormat;
			}
	
			var s=(toFormat+""), a=s.split(""), out="", iLen=s.length;
			
			for ( var i=0 ; i<iLen ; i++ )
			{
				if ( i%3 === 0 && i !== 0 )
				{
					out = this.oLanguage.sInfoThousands+out;
				}
				out = a[iLen-i-1]+out;
			}
			return out;
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, nax, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings) {
		 *          var o;
		 *
		 *          // Send an Ajax request to the server to get the data. Note that
		 *          // this is a synchronous request.
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "async": false,
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              o = json;
		 *            }
		 *          } );
		 *
		 *          return o;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					localStorage.getItem('DataTables_'+settings.sInstance+'_'+window.location.pathname)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				localStorage.setItem(
					'DataTables_'+settings.sInstance+'_'+window.location.pathname,
					JSON.stringify(data)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * The scroll gap is the amount of scrolling that is left to go before
		 * DataTables will load the next 'page' of data automatically when using
		 * `scrollInfinite`. You typically want a gap which is big enough that the
		 * scrolling will be smooth for the user, while not so large that it will
		 * load more data than need.
		 *  @type int
		 *  @default 100
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollLoadGap
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollInfinite": true,
		 *        "scrollCollapse": true,
		 *        "scrollY": "200px",
		 *        "scrollLoadGap": 50
		 *      } );
		 *    } );
		 */
		"iScrollLoadGap": 100,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the two built-in pagination
			 * control types ("two_button" and "full_numbers")
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
			
			
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
			
			
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
			
			
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
		
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
		
		
			/**
			 * This string gives information to the end user about the information that
			 * is current on display on the page. The _START_, _END_ and _TOTAL_
			 * variables are all dynamically replaced as the table display updates, and
			 * can be freely moved or removed as the language requirements change.
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Got a total of _TOTAL_ entries to show (_START_ to _END_)"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
		
		
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
		
		
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
		
		
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
		
		
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is used
			 * to format large numbers that are used in the table information. By
			 * default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoThousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoThousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoThousands": ",",
		
		
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
		
		
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
		
		
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
		
		
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
		
		
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
		
		
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property 'aaData' when obtaining
		 * data from an Ajax source or for server-side processing - this parameter
		 * allows that property to be changed. You can use Javascript dotted object
		 * notation to get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default aaData
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "aaData",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 * This object must include the parameter `aaData` which is the data source
		 * for the table.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * DataTables features two different built-in pagination interaction methods
		 * ('two_button' or 'full_numbers') which present different page controls to
		 * the end user. Further methods can be added using the API (see below).
		 *  @type string
		 *  @default two_button
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.paginationType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "paginationType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "two_button",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a certain
		 * layout, or you have a large number of columns in the table, you can enable
		 * x-scrolling to show the table in a viewport, which can be scrolled. This
		 * property can be any CSS unit, or a number (in which case it will be treated
		 * as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Allows a column's sorting to take multiple columns into account when
		 * doing a sort. For example first name / last name columns make sense to
		 * do a multi-column sort over the two columns.
		 *  @type array
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.dataSort
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "dataSort": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "dataSort": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "dataSort": [ 2, 3, 4 ], "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "dataSort": [ 0, 1 ] },
		 *          { "dataSort": [ 1, 0 ] },
		 *          { "dataSort": [ 2, 3, 4 ] },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
	
	
		/**
		 * You can control the default sorting direction, and even alter the behaviour
		 * of the sort handler (i.e. only allow ascending sorting etc) using this
		 * parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.sorting
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "sorting": [ "asc" ], "targets": [ 1 ] },
		 *          { "sorting": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "sorting": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "sorting": [ "asc" ] },
		 *          { "sorting": [ "desc", "asc", "asc" ] },
		 *          { "sorting": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable sorting on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.sortable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "sortable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "sortable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
		
		
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * The column index (starting from 0!) that you wish a sort to be performed
		 * upon when this column is selected for sorting. This can be used for sorting
		 * on hidden columns for example.
		 *  @type int
		 *  @default -1 <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.dataSort
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "dataSort": 1, "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "dataSort": 1 },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"iDataSort": -1,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "platform.details.0" },
		 *          { "data": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
		
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the sorting which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to sorting. This allows sorting to occur on user editable
		 * elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.sortDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "sortDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "sortDataType": "dom-select", "targets": [ 4 ] },
		 *          { "sortDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "sortDataType": "dom-text" },
		 *          { "sortDataType": "dom-text", "type": "numeric" },
		 *          { "sortDataType": "dom-select" },
		 *          { "sortDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be sorted.
		 * Four types (string, numeric, date and html (which will strip HTML tags
		 * before sorting)) are currently available. Note that only date formats
		 * understood by Javascript's Date() object will be accepted as type date. For
		 * example: "Mar 26, 2008 5:03 PM". May take the values: 'string', 'numeric',
		 * 'date' or 'html' (by default). Further types can be adding through
		 * plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
			
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
			
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
			
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
			
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
			
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
			
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
			
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
			
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
			
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
		
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * Indicate if DataTables should be allowed to set the padding / margin
			 * etc for the scrolling header elements or not. Typically you will want
			 * this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoCss": null,
			
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
			
			/**
			 * Infinite scrolling enablement flag. Now deprecated in favour of
			 * using the Scroller plug-in.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfinite": null,
			
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
			
			/**
			 * Space (in pixels) between the bottom of the scrolling container and
			 * the bottom of the scrolling viewport before the next page is loaded
			 * when using infinite scrolling.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type int
			 */
			"iLoadGap": null,
			
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
			
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
			
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
		
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
		
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false
		},
		
	
		"ajax": null,
	
		
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
		
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
		
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
		
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
		
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
		
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
		
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
		
		/**
		 * Search data array for regular expression searching
		 *  @type array
		 *  @default []
		 */
		"asDataSearch": [],
		
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
		
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
		
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 *   <li>Index 2 - index of asSorting for this column</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
		
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array|null
		 *  @default null
		 */
		"aaSortingFixed": null,
		
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
		
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
		
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
		
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
		
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
		
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
		
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
		
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
		
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
		
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
		
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
		
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
		
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
		
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
		
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
		
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
		
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
		
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
		
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
		
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
		
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
		
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
		
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
		
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
		
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
		
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
		
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
		
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
		
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
		
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
		
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
		
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
		
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
		
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
		
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
		
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
		
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
		
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
		
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
		
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
		
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Paging end point - aiDisplay index. Use fnDisplayEnd rather than
		 * this property to get the end point
		 *  @type int
		 *  @default 10
		 *  @private
		 */
		"_iDisplayEnd": 10,
		
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
		
		/**
		 * Flag to indicate if jQuery UI marking and classes should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bJUI": null,
		
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
		
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
		
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
		
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
		
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
		
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
		
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			if ( this.oFeatures.bServerSide ) {
				return parseInt(this._iRecordsTotal, 10);
			} else {
				return this.aiDisplayMaster.length;
			}
		},
		
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			if ( this.oFeatures.bServerSide ) {
				return parseInt(this._iRecordsDisplay, 10);
			} else {
				return this.aiDisplay.length;
			}
		},
		
		/**
		 * Set the display end point - aiDisplay index
		 *  @type function
		 *  @todo Should do away with _iDisplayEnd and calculate it on-the-fly here
		 */
		"fnDisplayEnd": function ()
		{
			if ( this.oFeatures.bServerSide ) {
				if ( this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ) {
					return this._iDisplayStart+this.aiDisplay.length;
				} else {
					return Math.min( this._iDisplayStart+this._iDisplayLength,
						this._iRecordsDisplay );
				}
			} else {
				return this._iDisplayEnd;
			}
		},
		
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
		
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	DataTable.ext = $.extend( true, {}, DataTable.models.ext );
	
	$.extend( DataTable.ext.oStdClasses, {
		"sTable": "dataTable",
	
		/* Two buttons buttons */
		"sPagePrevEnabled": "paginate_enabled_previous",
		"sPagePrevDisabled": "paginate_disabled_previous",
		"sPageNextEnabled": "paginate_enabled_next",
		"sPageNextDisabled": "paginate_disabled_next",
		"sPageJUINext": "",
		"sPageJUIPrev": "",
		
		/* Full numbers paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "paginate_active",
		"sPageButtonStaticDisabled": "paginate_button paginate_button_disabled",
		"sPageFirst": "first",
		"sPagePrevious": "previous",
		"sPageNext": "next",
		"sPageLast": "last",
		
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
		
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
		
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
		
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
		
		/* Misc */
		"sFooterTH": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	$.extend( DataTable.ext.oJUIClasses, DataTable.ext.oStdClasses, {
		/* Two buttons buttons */
		"sPagePrevEnabled": "fg-button ui-button ui-state-default ui-corner-left",
		"sPagePrevDisabled": "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
		"sPageNextEnabled": "fg-button ui-button ui-state-default ui-corner-right",
		"sPageNextDisabled": "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
		"sPageJUINext": "ui-icon ui-icon-circle-arrow-e",
		"sPageJUIPrev": "ui-icon ui-icon-circle-arrow-w",
		
		/* Full numbers paging buttons */
		"sPageButton": "fg-button ui-button ui-state-default",
		"sPageButtonActive": "fg-button ui-button ui-state-default ui-state-disabled",
		"sPageButtonStaticDisabled": "fg-button ui-button ui-state-default ui-state-disabled",
		"sPageFirst": "first ui-corner-tl ui-corner-bl",
		"sPageLast": "last ui-corner-tr ui-corner-br",
		
		/* Features */
		"sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi "+
			"ui-buttonset-multi paging_", /* Note that the type is postfixed */
		
		/* Sorting */
		"sSortAsc": "ui-state-default",
		"sSortDesc": "ui-state-default",
		"sSortable": "ui-state-default",
		"sSortableAsc": "ui-state-default",
		"sSortableDesc": "ui-state-default",
		"sSortableNone": "ui-state-default",
		"sSortJUIAsc": "css_right ui-icon ui-icon-triangle-1-n",
		"sSortJUIDesc": "css_right ui-icon ui-icon-triangle-1-s",
		"sSortJUI": "css_right ui-icon ui-icon-carat-2-n-s",
		"sSortJUIAscAllowed": "css_right ui-icon ui-icon-carat-1-n",
		"sSortJUIDescAllowed": "css_right ui-icon ui-icon-carat-1-s",
		"sSortJUIWrapper": "DataTables_sort_wrapper",
		"sSortIcon": "DataTables_sort_icon",
		
		/* Scrolling */
		"sScrollHead": "dataTables_scrollHead ui-state-default",
		"sScrollFoot": "dataTables_scrollFoot ui-state-default",
		
		/* Misc */
		"sFooterTH": "ui-state-default",
		"sJUIHeader": "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix",
		"sJUIFooter": "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"
	} );
	
	/*
	 * Variable: oPagination
	 * Purpose:
	 * Scope:    jQuery.fn.dataTableExt
	 */
	$.extend( DataTable.ext.oPagination, {
		/*
		 * Variable: two_button
		 * Purpose:  Standard two button (forward/back) pagination
		 * Scope:    jQuery.fn.dataTableExt.oPagination
		 */
		"two_button": {
			/*
			 * Function: oPagination.two_button.fnInit
			 * Purpose:  Initialise dom elements required for pagination with forward/back buttons only
			 * Returns:  -
			 * Inputs:   object:oSettings - dataTables settings object
			 *           node:nPaging - the DIV which contains this pagination control
			 *           function:fnCallbackDraw - draw function which must be called on update
			 */
			"fnInit": function ( oSettings, nPaging, fnCallbackDraw )
			{
				var oLang = oSettings.oLanguage.oPaginate;
				var oClasses = oSettings.oClasses;
				var fnClickHandler = function ( e ) {
					if ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )
					{
						fnCallbackDraw( oSettings );
					}
				};
	
				var sAppend = (!oSettings.bJUI) ?
					'<a class="'+oSettings.oClasses.sPagePrevDisabled+'" tabindex="'+oSettings.iTabIndex+'" role="button">'+oLang.sPrevious+'</a>'+
					'<a class="'+oSettings.oClasses.sPageNextDisabled+'" tabindex="'+oSettings.iTabIndex+'" role="button">'+oLang.sNext+'</a>'
					:
					'<a class="'+oSettings.oClasses.sPagePrevDisabled+'" tabindex="'+oSettings.iTabIndex+'" role="button"><span class="'+oSettings.oClasses.sPageJUIPrev+'"></span></a>'+
					'<a class="'+oSettings.oClasses.sPageNextDisabled+'" tabindex="'+oSettings.iTabIndex+'" role="button"><span class="'+oSettings.oClasses.sPageJUINext+'"></span></a>';
				$(nPaging).append( sAppend );
				
				var els = $('a', nPaging);
				var nPrevious = els[0],
					nNext = els[1];
				
				oSettings.oApi._fnBindAction( nPrevious, {action: "previous"}, fnClickHandler );
				oSettings.oApi._fnBindAction( nNext,     {action: "next"},     fnClickHandler );
				
				/* ID the first elements only */
				if ( !oSettings.aanFeatures.p )
				{
					nPaging.id = oSettings.sTableId+'_paginate';
					nPrevious.id = oSettings.sTableId+'_previous';
					nNext.id = oSettings.sTableId+'_next';
	
					nPrevious.setAttribute('aria-controls', oSettings.sTableId);
					nNext.setAttribute('aria-controls', oSettings.sTableId);
				}
			},
			
			/*
			 * Function: oPagination.two_button.fnUpdate
			 * Purpose:  Update the two button pagination at the end of the draw
			 * Returns:  -
			 * Inputs:   object:oSettings - dataTables settings object
			 *           function:fnCallbackDraw - draw function to call on page change
			 */
			"fnUpdate": function ( oSettings, fnCallbackDraw )
			{
				if ( !oSettings.aanFeatures.p )
				{
					return;
				}
				
				var oClasses = oSettings.oClasses;
				var an = oSettings.aanFeatures.p;
				var nNode;
	
				/* Loop over each instance of the pager */
				for ( var i=0, iLen=an.length ; i<iLen ; i++ )
				{
					nNode = an[i].firstChild;
					if ( nNode )
					{
						/* Previous page */
						nNode.className = ( oSettings._iDisplayStart === 0 ) ?
						    oClasses.sPagePrevDisabled : oClasses.sPagePrevEnabled;
	
						/* Next page */
						nNode = nNode.nextSibling;
						nNode.className = ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) ?
						    oClasses.sPageNextDisabled : oClasses.sPageNextEnabled;
					}
				}
			}
		},
		
		
		/*
		 * Variable: iFullNumbersShowPages
		 * Purpose:  Change the number of pages which can be seen
		 * Scope:    jQuery.fn.dataTableExt.oPagination
		 */
		"iFullNumbersShowPages": 5,
		
		/*
		 * Variable: full_numbers
		 * Purpose:  Full numbers pagination
		 * Scope:    jQuery.fn.dataTableExt.oPagination
		 */
		"full_numbers": {
			/*
			 * Function: oPagination.full_numbers.fnInit
			 * Purpose:  Initialise dom elements required for pagination with a list of the pages
			 * Returns:  -
			 * Inputs:   object:oSettings - dataTables settings object
			 *           node:nPaging - the DIV which contains this pagination control
			 *           function:fnCallbackDraw - draw function which must be called on update
			 */
			"fnInit": function ( oSettings, nPaging, fnCallbackDraw )
			{
				var oLang = oSettings.oLanguage.oPaginate;
				var oClasses = oSettings.oClasses;
				var fnClickHandler = function ( e ) {
					if ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )
					{
						fnCallbackDraw( oSettings );
					}
				};
	
				$(nPaging).append(
					'<a  tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButton+" "+oClasses.sPageFirst+'">'+oLang.sFirst+'</a>'+
					'<a  tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButton+" "+oClasses.sPagePrevious+'">'+oLang.sPrevious+'</a>'+
					'<span></span>'+
					'<a tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButton+" "+oClasses.sPageNext+'">'+oLang.sNext+'</a>'+
					'<a tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButton+" "+oClasses.sPageLast+'">'+oLang.sLast+'</a>'
				);
				var els = $('a', nPaging);
				var nFirst = els[0],
					nPrev = els[1],
					nNext = els[2],
					nLast = els[3];
				
				oSettings.oApi._fnBindAction( nFirst, {action: "first"},    fnClickHandler );
				oSettings.oApi._fnBindAction( nPrev,  {action: "previous"}, fnClickHandler );
				oSettings.oApi._fnBindAction( nNext,  {action: "next"},     fnClickHandler );
				oSettings.oApi._fnBindAction( nLast,  {action: "last"},     fnClickHandler );
				
				/* ID the first elements only */
				if ( !oSettings.aanFeatures.p )
				{
					nPaging.id = oSettings.sTableId+'_paginate';
					nFirst.id =oSettings.sTableId+'_first';
					nPrev.id =oSettings.sTableId+'_previous';
					nNext.id =oSettings.sTableId+'_next';
					nLast.id =oSettings.sTableId+'_last';
				}
			},
			
			/*
			 * Function: oPagination.full_numbers.fnUpdate
			 * Purpose:  Update the list of page buttons shows
			 * Returns:  -
			 * Inputs:   object:oSettings - dataTables settings object
			 *           function:fnCallbackDraw - draw function to call on page change
			 */
			"fnUpdate": function ( oSettings, fnCallbackDraw )
			{
				if ( !oSettings.aanFeatures.p )
				{
					return;
				}
				
				var iPageCount = DataTable.ext.oPagination.iFullNumbersShowPages;
				var iPageCountHalf = Math.floor(iPageCount / 2);
				var iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);
				var iCurrentPage = Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;
				var sList = "";
				var iStartButton, iEndButton, i, iLen;
				var oClasses = oSettings.oClasses;
				var anButtons, anStatic, nPaginateList, nNode;
				var an = oSettings.aanFeatures.p;
				var fnBind = function (j) {
					oSettings.oApi._fnBindAction( this, {"page": j+iStartButton-1}, function(e) {
						/* Use the information in the element to jump to the required page */
						oSettings.oApi._fnPageChange( oSettings, e.data.page );
						fnCallbackDraw( oSettings );
						e.preventDefault();
					} );
				};
				
				/* Pages calculation */
				if ( oSettings._iDisplayLength === -1 )
				{
					iStartButton = 1;
					iEndButton = 1;
					iCurrentPage = 1;
				}
				else if (iPages < iPageCount)
				{
					iStartButton = 1;
					iEndButton = iPages;
				}
				else if (iCurrentPage <= iPageCountHalf)
				{
					iStartButton = 1;
					iEndButton = iPageCount;
				}
				else if (iCurrentPage >= (iPages - iPageCountHalf))
				{
					iStartButton = iPages - iPageCount + 1;
					iEndButton = iPages;
				}
				else
				{
					iStartButton = iCurrentPage - Math.ceil(iPageCount / 2) + 1;
					iEndButton = iStartButton + iPageCount - 1;
				}
	
				
				/* Build the dynamic list */
				for ( i=iStartButton ; i<=iEndButton ; i++ )
				{
					sList += (iCurrentPage !== i) ?
						'<a tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButton+'">'+oSettings.fnFormatNumber(i)+'</a>' :
						'<a tabindex="'+oSettings.iTabIndex+'" class="'+oClasses.sPageButtonActive+'">'+oSettings.fnFormatNumber(i)+'</a>';
				}
				
				/* Loop over each instance of the pager */
				for ( i=0, iLen=an.length ; i<iLen ; i++ )
				{
					nNode = an[i];
					if ( !nNode.hasChildNodes() )
					{
						continue;
					}
					
					/* Build up the dynamic list first - html and listeners */
					$('span:eq(0)', nNode)
						.html( sList )
						.children('a').each( fnBind );
					
					/* Update the permanent button's classes */
					anButtons = nNode.getElementsByTagName('a');
					anStatic = [
						anButtons[0], anButtons[1],
						anButtons[anButtons.length-2], anButtons[anButtons.length-1]
					];
	
					$(anStatic).removeClass( oClasses.sPageButton+" "+oClasses.sPageButtonActive+" "+oClasses.sPageButtonStaticDisabled );
					$([anStatic[0], anStatic[1]]).addClass(
						(iCurrentPage==1) ?
							oClasses.sPageButtonStaticDisabled :
							oClasses.sPageButton
					);
					$([anStatic[2], anStatic[3]]).addClass(
						(iPages===0 || iCurrentPage===iPages || oSettings._iDisplayLength===-1) ?
							oClasses.sPageButtonStaticDisabled :
							oClasses.sPageButton
					);
				}
			}
		}
	} );
	$.extend( DataTable.ext.oSort, {
		/*
		 * text sorting
		 */
		"string-pre": function ( a )
		{
			if ( typeof a != 'string' )
			{
				if (a === null || a === undefined || !a.toString)
				{
					return '';
				}
				a = a.toString();
			}
			return a.toLowerCase();
		},
	
		// string-asc and -desc are retained only for compatibility with
		"string-asc": function ( x, y )
		{
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
		
		"string-desc": function ( x, y )
		{
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		},
		
		
		/*
		 * html sorting (ignore html tags)
		 */
		"html-pre": function ( a )
		{
			return a.replace( /<.*?>/g, "" ).toLowerCase();
		},
		
		
		/*
		 * date sorting
		 */
		"date-pre": function ( a )
		{
			var x = Date.parse( a );
			
			if ( isNaN(x) || x==="" )
			{
				x = Date.parse( "01/01/1970 00:00:00" );
			}
			return x;
		},
		
		
		/*
		 * numerical sorting
		 */
		"numeric-pre": function ( a )
		{
			return (a=="-" || a==="") ? -Infinity : a*1;
		}
	} );
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.aTypes, [
		// Numeric data type
		function ( data )
		{
			return data==='' || data==='-' || (!isNaN( parseFloat(data) ) && isFinite( data )) ?
				'numeric' : null;
		},
		
		// Dates (only those recognised by the browser's Date.parse)
		function ( data )
		{
			var parsed = Date.parse(data);
			return (parsed !== null && !isNaN(parsed)) || (typeof data==='string' && data.length===0) ?
				'date' : null;
		},
		
		// HTML
		function ( data )
		{
			return typeof data === 'string' && data.indexOf('<') != -1 && data.indexOf('>') != -1 ?
				'html' : null;
		}
	] );
	

	// jQuery aliases
	$.fn.dataTable = DataTable;
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Filter event, fired when the filtering applied to the table (using the
	 * build in global global filter, or column filters) is altered.
	 *  @name DataTable#filter
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Sort event, fired when the sorting applied to the table is altered.
	 *  @name DataTable#sort
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This method allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, sort, filter or anything else). Can be used to indicate to the
	 * end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr', function (settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr', function (settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */
}));

}(window, document));


/*
* File:        jquery.dataTables.columnFilter.js
* Version:     1.5.1.
* Author:      Jovan Popovic 
* 
* Copyright 2011-2012 Jovan Popovic, all rights reserved.
*
* This source file is free software, under either the GPL v2 license or a
* BSD style license, as supplied with this software.
* 
* This source file is distributed in the hope that it will be useful, but 
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
* or FITNESS FOR A PARTICULAR PURPOSE. 
* 
* Parameters:"
* @sPlaceHolder                 String      Place where inline filtering function should be placed ("tfoot", "thead:before", "thead:after"). Default is "tfoot"
* @sRangeSeparator              String      Separator that will be used when range values are sent to the server-side. Default value is "~".
* @sRangeFormat                 string      Default format of the From ... to ... range inputs. Default is From {from} to {to}
* @aoColumns                    Array       Array of the filter settings that will be applied on the columns
*/
(function ($) {


    $.fn.columnFilter = function (options) {

        var asInitVals, i, label, th;

        //var sTableId = "table";
        var sRangeFormat = "From {from} to {to}";
        //Array of the functions that will override sSearch_ parameters
        var afnSearch_ = new Array();
        var aiCustomSearch_Indexes = new Array();

        var oFunctionTimeout = null;

        var fnOnFiltered = function () { };

        function _fnGetColumnValues(oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty) {
            ///<summary>
            ///Return values in the column
            ///</summary>
            ///<param name="oSettings" type="Object">DataTables settings</param>
            ///<param name="iColumn" type="int">Id of the column</param>
            ///<param name="bUnique" type="bool">Return only distinct values</param>
            ///<param name="bFiltered" type="bool">Return values only from the filtered rows</param>
            ///<param name="bIgnoreEmpty" type="bool">Ignore empty cells</param>

            // check that we have a column id
            if (typeof iColumn == "undefined") return new Array();

            // by default we only wany unique data
            if (typeof bUnique == "undefined") bUnique = true;

            // by default we do want to only look at filtered data
            if (typeof bFiltered == "undefined") bFiltered = true;

            // by default we do not wany to include empty values
            if (typeof bIgnoreEmpty == "undefined") bIgnoreEmpty = true;

            // list of rows which we're going to loop through
            var aiRows;

            // use only filtered rows
            if (bFiltered == true) aiRows = oSettings.aiDisplay;
            // use all rows
            else aiRows = oSettings.aiDisplayMaster; // all row numbers

            // set up data array	
            var asResultData = new Array();

            for (var i = 0, c = aiRows.length; i < c; i++) {
                var iRow = aiRows[i];
                var aData = oTable.fnGetData(iRow);
                var sValue = aData[iColumn];

                // ignore empty values?
                if (bIgnoreEmpty == true && sValue.length == 0) continue;

                // ignore unique values?
                else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;

                // else push the value onto the result data array
                else asResultData.push(sValue);
            }

            return asResultData.sort();
        }

        function _fnColumnIndex(iColumnIndex) {
            if (properties.bUseColVis)
                return iColumnIndex;
            else
                return oTable.fnSettings().oApi._fnVisibleToColumnIndex(oTable.fnSettings(), iColumnIndex);
            //return iColumnIndex;
            //return oTable.fnSettings().oApi._fnColumnIndexToVisible(oTable.fnSettings(), iColumnIndex);
        }

        function fnCreateInput(oTable, regex, smart, bIsNumber, iFilterLength, iMaxLenght) {
            var sCSSClass = "text_filter";
            if (bIsNumber)
                sCSSClass = "number_filter";

            label = label.replace(/(^\s*)|(\s*$)/g, "");
            var currentFilter = oTable.fnSettings().aoPreSearchCols[i].sSearch;
            var search_init = 'search_init ';
            var inputvalue = label;
            if (currentFilter != '' && currentFilter != '^') {
                if (bIsNumber && currentFilter.charAt(0) == '^')
                    inputvalue = currentFilter.substr(1); //ignore trailing ^
                else
                    inputvalue = currentFilter;
                search_init = '';
            }

            var input = $('<input type="text" class="' + search_init + sCSSClass + '" value="' + inputvalue + '"/>');
            if (iMaxLenght != undefined && iMaxLenght != -1) {
                input.attr('maxlength', iMaxLenght);
            }
            th.html(input);
            if (bIsNumber)
                th.wrapInner('<span class="filter_column filter_number" />');
            else
                th.wrapInner('<span class="filter_column filter_text" />');

            asInitVals[i] = label;
            var index = i;

            if (bIsNumber && !oTable.fnSettings().oFeatures.bServerSide) {
                input.keyup(function () {
                    /* Filter on the column all numbers that starts with the entered value */
                    oTable.fnFilter('^' + this.value, _fnColumnIndex(index), true, false); //Issue 37
                    fnOnFiltered();
                });
            } else {
                input.keyup(function () {
                    if (oTable.fnSettings().oFeatures.bServerSide && iFilterLength != 0) {
                        //If filter length is set in the server-side processing mode
                        //Check has the user entered at least iFilterLength new characters

                        var currentFilter = oTable.fnSettings().aoPreSearchCols[index].sSearch;
                        var iLastFilterLength = $(this).data("dt-iLastFilterLength");
                        if (typeof iLastFilterLength == "undefined")
                            iLastFilterLength = 0;
                        var iCurrentFilterLength = this.value.length;
                        if (Math.abs(iCurrentFilterLength - iLastFilterLength) < iFilterLength
                        //&& currentFilter.length == 0 //Why this?
					        ) {
                            //Cancel the filtering
                            return;
                        }
                        else {
                            //Remember the current filter length
                            $(this).data("dt-iLastFilterLength", iCurrentFilterLength);
                        }
                    }
                    /* Filter on the column (the index) of this element */
                    oTable.fnFilter(this.value, _fnColumnIndex(index), regex, smart); //Issue 37
                    fnOnFiltered();
                });
            }

            input.focus(function () {
                if ($(this).hasClass("search_init")) {
                    $(this).removeClass("search_init");
                    this.value = "";
                }
            });
            input.blur(function () {
                if (this.value == "") {
                    $(this).addClass("search_init");
                    this.value = asInitVals[index];
                }
            });
        }

        function fnCreateRangeInput(oTable) {

			//var currentFilter = oTable.fnSettings().aoPreSearchCols[i].sSearch;
            th.html(_fnRangeLabelPart(0));
            var sFromId = oTable.attr("id") + '_range_from_' + i;
            var from = $('<input type="text" class="number_range_filter" id="' + sFromId + '" rel="' + i + '"/>');
            th.append(from);
            th.append(_fnRangeLabelPart(1));
            var sToId = oTable.attr("id") + '_range_to_' + i;
            var to = $('<input type="text" class="number_range_filter" id="' + sToId + '" rel="' + i + '"/>');
            th.append(to);
            th.append(_fnRangeLabelPart(2));
            th.wrapInner('<span class="filter_column filter_number_range" />');
            var index = i;
            aiCustomSearch_Indexes.push(i);



            //------------start range filtering function


            /* 	Custom filtering function which will filter data in column four between two values
            *	Author: 	Allan Jardine, Modified by Jovan Popovic
            */
            //$.fn.dataTableExt.afnFiltering.push(
            oTable.dataTableExt.afnFiltering.push(
	        function (oSettings, aData, iDataIndex) {
	            if (oTable.attr("id") != oSettings.sTableId)
	                return true;
	            // Try to handle missing nodes more gracefully
	            if (document.getElementById(sFromId) == null)
	                return true;
	            var iMin = document.getElementById(sFromId).value * 1;
	            var iMax = document.getElementById(sToId).value * 1;
	            var iValue = aData[_fnColumnIndex(index)] == "-" ? 0 : aData[_fnColumnIndex(index)] * 1;
	            if (iMin == "" && iMax == "") {
	                return true;
	            }
	            else if (iMin == "" && iValue <= iMax) {
	                return true;
	            }
	            else if (iMin <= iValue && "" == iMax) {
	                return true;
	            }
	            else if (iMin <= iValue && iValue <= iMax) {
	                return true;
	            }
	            return false;
	        }
        );
            //------------end range filtering function



            $('#' + sFromId + ',#' + sToId, th).keyup(function () {

                var iMin = document.getElementById(sFromId).value * 1;
                var iMax = document.getElementById(sToId).value * 1;
                if (iMin != 0 && iMax != 0 && iMin > iMax)
                    return;

                oTable.fnDraw();
                fnOnFiltered();
            });


        }


        function fnCreateDateRangeInput(oTable) {

            var aoFragments = sRangeFormat.split(/[}{]/);

            th.html("");
            //th.html(_fnRangeLabelPart(0));
            var sFromId = oTable.attr("id") + '_range_from_' + i;
            var from = $('<input type="text" class="date_range_filter" id="' + sFromId + '" rel="' + i + '"/>');
            from.datepicker();
            //th.append(from);
            //th.append(_fnRangeLabelPart(1));
            var sToId = oTable.attr("id") + '_range_to_' + i;
            var to = $('<input type="text" class="date_range_filter" id="' + sToId + '" rel="' + i + '"/>');
            //th.append(to);
            //th.append(_fnRangeLabelPart(2));

            for (ti = 0; ti < aoFragments.length; ti++) {

                if (aoFragments[ti] == properties.sDateFromToken) {
                    th.append(from);
                } else {
                    if (aoFragments[ti] == properties.sDateToToken) {
                        th.append(to);
                    } else {
                        th.append(aoFragments[ti]);
                    }
                }
                

            }


            th.wrapInner('<span class="filter_column filter_date_range" />');
            to.datepicker();
            var index = i;
            aiCustomSearch_Indexes.push(i);


            //------------start date range filtering function

            //$.fn.dataTableExt.afnFiltering.push(
            oTable.dataTableExt.afnFiltering.push(
	        function (oSettings, aData, iDataIndex) {
	            if (oTable.attr("id") != oSettings.sTableId)
	                return true;

	            var dStartDate = from.datepicker("getDate");

	            var dEndDate = to.datepicker("getDate");

	            if (dStartDate == null && dEndDate == null) {
	                return true;
	            }

	            var dCellDate = null;
	            try {
	                if (aData[_fnColumnIndex(index)] == null || aData[_fnColumnIndex(index)] == "")
	                    return false;
	                dCellDate = $.datepicker.parseDate($.datepicker.regional[""].dateFormat, aData[_fnColumnIndex(index)]);
	            } catch (ex) {
	                return false;
	            }
	            if (dCellDate == null)
	                return false;


	            if (dStartDate == null && dCellDate <= dEndDate) {
	                return true;
	            }
	            else if (dStartDate <= dCellDate && dEndDate == null) {
	                return true;
	            }
	            else if (dStartDate <= dCellDate && dCellDate <= dEndDate) {
	                return true;
	            }
	            return false;
	        }
        );
            //------------end date range filtering function

            $('#' + sFromId + ',#' + sToId, th).change(function () {
                oTable.fnDraw();
                fnOnFiltered();
            });


        }

        function fnCreateColumnSelect(oTable, aData, iColumn, nTh, sLabel, bRegex, oSelected) {
            if (aData == null)
                aData = _fnGetColumnValues(oTable.fnSettings(), iColumn, true, false, true);
            var index = iColumn;
            var currentFilter = oTable.fnSettings().aoPreSearchCols[i].sSearch;
            if (currentFilter == null || currentFilter == "")//Issue 81
                currentFilter = oSelected;

            var r = '<select class="search_init select_filter"><option value="" class="search_init">' + sLabel + '</option>';
            var j = 0;
            var iLen = aData.length;
            for (j = 0; j < iLen; j++) {
                if (typeof (aData[j]) != 'object') {
                    var selected = '';
                    if (escape(aData[j]) == currentFilter
                        || escape(aData[j]) == escape(currentFilter)
                        )
                        selected = 'selected '
                    r += '<option ' + selected + ' value="' + escape(aData[j]) + '">' + aData[j] + '</option>';
                }
                else {
                    var selected = '';
                    if (bRegex) {
                        //Do not escape values if they are explicitely set to avoid escaping special characters in the regexp
                        if (aData[j].value == currentFilter) selected = 'selected ';
                        r += '<option ' + selected + 'value="' + aData[j].value + '">' + aData[j].label + '</option>';
                    } else {
                        if (escape(aData[j].value) == currentFilter) selected = 'selected ';
                        r += '<option ' + selected + 'value="' + escape(aData[j].value) + '">' + aData[j].label + '</option>';
                    }
                }
            }

            var select = $(r + '</select>');
            nTh.html(select);
            nTh.wrapInner('<span class="filter_column filter_select" />');
            select.change(function () {
                //var val = $(this).val();
                if ($(this).val() != "") {
                    $(this).removeClass("search_init");
                } else {
                    $(this).addClass("search_init");
                }
                if (bRegex)
                    oTable.fnFilter($(this).val(), iColumn, bRegex); //Issue 41
                else
                    oTable.fnFilter(unescape($(this).val()), iColumn); //Issue 25
                fnOnFiltered();
            });
            if (currentFilter != null && currentFilter != "")//Issue 81
                oTable.fnFilter(unescape(currentFilter), iColumn);
        }

        function fnCreateSelect(oTable, aData, bRegex, oSelected) {
            var oSettings = oTable.fnSettings();
            if (aData == null && oSettings.sAjaxSource != "" && !oSettings.oFeatures.bServerSide) {
                // Add a function to the draw callback, which will check for the Ajax data having 
                // been loaded. Use a closure for the individual column elements that are used to 
                // built the column filter, since 'i' and 'th' (etc) are locally "global".
                oSettings.aoDrawCallback.push({
                    "fn": (function (iColumn, nTh, sLabel) {
                        return function () {
                            // Only rebuild the select on the second draw - i.e. when the Ajax
                            // data has been loaded.
                            if (oSettings.iDraw == 2 && oSettings.sAjaxSource != null && oSettings.sAjaxSource != "" && !oSettings.oFeatures.bServerSide) {
                                return fnCreateColumnSelect(oTable, null, _fnColumnIndex(iColumn), nTh, sLabel, bRegex, oSelected); //Issue 37
                            }
                        };
                    })(i, th, label),
                    "sName": "column_filter_" + i
                });
            }
            // Regardless of the Ajax state, build the select on first pass
            fnCreateColumnSelect(oTable, aData, _fnColumnIndex(i), th, label, bRegex, oSelected); //Issue 37

        }

		function fnCreateDropdown(aData) {
			var index = i;
			var r = '<div class="dropdown select_filter"><a class="dropdown-toggle" data-toggle="dropdown" href="#">' + label + '<b class="caret"></b></a><ul class="dropdown-menu" role="menu"><li data-value=""><a>Show All</a></li>', j, iLen = aData.length;

			for (j = 0; j < iLen; j++) {
				r += '<li data-value="' + aData[j] + '"><a>' + aData[j] + '</a></li>';
			}
			var select = $(r + '</ul></div>');
			th.html(select);
			th.wrapInner('<span class="filterColumn filter_select" />');
			select.find('li').click(function () {
				oTable.fnFilter($(this).data('value'), index);
			});
		}
		
		
        function fnCreateCheckbox(oTable, aData) {

            if (aData == null)
                aData = _fnGetColumnValues(oTable.fnSettings(), i, true, true, true);
            var index = i;

            var r = '', j, iLen = aData.length;

            //clean the string
            var localLabel = label.replace('%', 'Perc').replace("&", "AND").replace("$", "DOL").replace("£", "STERL").replace("@", "AT").replace(/\s/g, "_");
            localLabel = localLabel.replace(/[^a-zA-Z 0-9]+/g, '');
            //clean the string

            //button label override
            var labelBtn = label;
            if (properties.sFilterButtonText != null || properties.sFilterButtonText != undefined) {
                labelBtn = properties.sFilterButtonText;
            }

            var relativeDivWidthToggleSize = 10;
            var numRow = 12; //numero di checkbox per colonna
            var numCol = Math.floor(iLen / numRow);
            if (iLen % numRow > 0) {
                numCol = numCol + 1;
            };

            //count how many column should be generated and split the div size
            var divWidth = 100 / numCol - 2;

            var divWidthToggle = relativeDivWidthToggleSize * numCol;

            if (numCol == 1) {
                divWidth = 20;
            }

            var divRowDef = '<div style="float:left; min-width: ' + divWidth + '%; " >';
            var divClose = '</div>';

            var uniqueId = oTable.attr("id") + localLabel;
            var buttonId = "chkBtnOpen" + uniqueId;
            var checkToggleDiv = uniqueId + "-flt-toggle";
            r += '<button id="' + buttonId + '" class="checkbox_filter" > ' + labelBtn + '</button>'; //filter button witch open dialog
            r += '<div id="' + checkToggleDiv + '" '
            	+ 'title="' + label + '" '
            	+ 'class="toggle-check ui-widget-content ui-corner-all"  style="width: ' + (divWidthToggle) + '%; " >'; //dialog div
            //r+= '<div align="center" style="margin-top: 5px; "> <button id="'+buttonId+'Reset" class="checkbox_filter" > reset </button> </div>'; //reset button and its div
            r += divRowDef;

            for (j = 0; j < iLen; j++) {

                //if last check close div
                if (j % numRow == 0 && j != 0) {
                    r += divClose + divRowDef;
                }

                //check button
                r += '<input class="search_init checkbox_filter" type="checkbox" id= "' + aData[j] + '" name= "' + localLabel + '" value="' + aData[j] + '" >' + aData[j] + '<br/>';

                var checkbox = $(r);
                th.html(checkbox);
                th.wrapInner('<span class="filter_column filter_checkbox" />');
                //on every checkbox selection
                checkbox.change(function () {

                    var search = '';
                    var or = '|'; //var for select checks in 'or' into the regex
                    var resSize = $('input:checkbox[name="' + localLabel + '"]:checked').size();
                    $('input:checkbox[name="' + localLabel + '"]:checked').each(function (index) {

                        //search = search + ' ' + $(this).val();
                        //concatenation for selected checks in or
                        if ((index == 0 && resSize == 1)
                				|| (index != 0 && index == resSize - 1)) {
                            or = '';
                        }
                        //trim
                        search = search.replace(/^\s+|\s+$/g, "");
                        search = search + $(this).val() + or;
                        or = '|';

                    });

                    for (var jj = 0; jj < iLen; jj++) {
                        if (search != "") {
                            $('#' + aData[jj]).removeClass("search_init");
                        } else {
                            $('#' + aData[jj]).addClass("search_init");
                        }
                    }

                    //execute search
                    oTable.fnFilter(search, index, true, false);
                    fnOnFiltered();
                });
            }

            //filter button
            $('#' + buttonId).button();
            //dialog
            $('#' + checkToggleDiv).dialog({
                //height: 140,
                autoOpen: false,
                //show: "blind",
                hide: "blind",
                buttons: [{
                    text: "Reset",
                    click: function () {
                        //$('#'+buttonId).removeClass("filter_selected"); //LM remove border if filter selected
                        $('input:checkbox[name="' + localLabel + '"]:checked').each(function (index3) {
                            $(this).attr('checked', false);
                            $(this).addClass("search_init");
                        });
                        oTable.fnFilter('', index, true, false);
                        fnOnFiltered();
                        return false;
                    }
                },
							{
							    text: "Close",
							    click: function () { $(this).dialog("close"); }
							}
						]
            });


            $('#' + buttonId).click(function () {

                $('#' + checkToggleDiv).dialog('open');
                var target = $(this);
                $('#' + checkToggleDiv).dialog("widget").position({ my: 'top',
                    at: 'bottom',
                    of: target
                });

                return false;
            });

            var fnOnFilteredCurrent = fnOnFiltered;

            fnOnFiltered = function () {
                var target = $('#' + buttonId);
                $('#' + checkToggleDiv).dialog("widget").position({ my: 'top',
                    at: 'bottom',
                    of: target
                });
                fnOnFilteredCurrent();
            };
            //reset
            /*
            $('#'+buttonId+"Reset").button();
            $('#'+buttonId+"Reset").click(function(){
            $('#'+buttonId).removeClass("filter_selected"); //LM remove border if filter selected
            $('input:checkbox[name="'+localLabel+'"]:checked').each(function(index3) {
            $(this).attr('checked', false);
            $(this).addClass("search_init");
            });
            oTable.fnFilter('', index, true, false);
            return false;
            }); 
            */
        }




        function _fnRangeLabelPart(iPlace) {
            switch (iPlace) {
                case 0:
                    return sRangeFormat.substring(0, sRangeFormat.indexOf("{from}"));
                case 1:
                    return sRangeFormat.substring(sRangeFormat.indexOf("{from}") + 6, sRangeFormat.indexOf("{to}"));
                default:
                    return sRangeFormat.substring(sRangeFormat.indexOf("{to}") + 4);
            }
        }




        var oTable = this;

        var defaults = {
            sPlaceHolder: "foot",
            sRangeSeparator: "~",
            iFilteringDelay: 500,
            aoColumns: null,
            sRangeFormat: "From {from} to {to}",
            sDateFromToken: "from",
            sDateToToken: "to"
        };

        var properties = $.extend(defaults, options);

        return this.each(function () {

            if (!oTable.fnSettings().oFeatures.bFilter)
                return;
            asInitVals = new Array();

            var aoFilterCells = oTable.fnSettings().aoFooter[0];

            var oHost = oTable.fnSettings().nTFoot; //Before fix for ColVis
            var sFilterRow = "tr"; //Before fix for ColVis

            if (properties.sPlaceHolder == "head:after") {
                var tr = $("tr:first", oTable.fnSettings().nTHead).detach();
                //tr.appendTo($(oTable.fnSettings().nTHead));
                if (oTable.fnSettings().bSortCellsTop) {
                    tr.prependTo($(oTable.fnSettings().nTHead));
                    //tr.appendTo($("thead", oTable));
                    aoFilterCells = oTable.fnSettings().aoHeader[1];
                }
                else {
                    tr.appendTo($(oTable.fnSettings().nTHead));
                    //tr.prependTo($("thead", oTable));
                    aoFilterCells = oTable.fnSettings().aoHeader[0];
                }

                sFilterRow = "tr:last";
                oHost = oTable.fnSettings().nTHead;

            } else if (properties.sPlaceHolder == "head:before") {

                if (oTable.fnSettings().bSortCellsTop) {
                    var tr = $("tr:first", oTable.fnSettings().nTHead).detach();
                    tr.appendTo($(oTable.fnSettings().nTHead));
                    aoFilterCells = oTable.fnSettings().aoHeader[1];
                } else {
                    aoFilterCells = oTable.fnSettings().aoHeader[0];
                }
                /*else {
                //tr.prependTo($("thead", oTable));
                sFilterRow = "tr:first";
                }*/

                sFilterRow = "tr:first";

                oHost = oTable.fnSettings().nTHead;

                
            }

            //$(sFilterRow + " th", oHost).each(function (index) {//bug with ColVis
            $(aoFilterCells).each(function (index) {//fix for ColVis
                i = index;
                var aoColumn = { type: "text",
                    bRegex: false,
                    bSmart: true,
                    iMaxLenght: -1,
                    iFilterLength: 0
                };
                if (properties.aoColumns != null) {
                    if (properties.aoColumns.length < i || properties.aoColumns[i] == null)
                        return;
                    aoColumn = properties.aoColumns[i];
                }
                //label = $(this).text(); //Before fix for ColVis
                label = $($(this)[0].cell).text(); //Fix for ColVis
                if (aoColumn.sSelector == null) {
                    //th = $($(this)[0]);//Before fix for ColVis
                    th = $($(this)[0].cell); //Fix for ColVis
                }
                else {
                    th = $(aoColumn.sSelector);
                    if (th.length == 0)
                        th = $($(this)[0].cell);
                }

                if (aoColumn != null) {
                    if (aoColumn.sRangeFormat != null)
                        sRangeFormat = aoColumn.sRangeFormat;
                    else
                        sRangeFormat = properties.sRangeFormat;
                    switch (aoColumn.type) {
                        case "null":
                            break;
                        case "number":
                            fnCreateInput(oTable, true, false, true, aoColumn.iFilterLength, aoColumn.iMaxLenght);
                            break;
                        case "select":
                            if (aoColumn.bRegex != true)
                                aoColumn.bRegex = false;
                            fnCreateSelect(oTable, aoColumn.values, aoColumn.bRegex, aoColumn.selected);
                            break;
                        case "number-range":
                            fnCreateRangeInput(oTable);
                            break;
                        case "date-range":
                            fnCreateDateRangeInput(oTable);
                            break;
                        case "checkbox":
                            fnCreateCheckbox(oTable, aoColumn.values);
                            break;
						case "twitter-dropdown":
						case "dropdown":
                            fnCreateDropdown(aoColumn.values);
                            break;
                        case "text":
                        default:
                            bRegex = (aoColumn.bRegex == null ? false : aoColumn.bRegex);
                            bSmart = (aoColumn.bSmart == null ? false : aoColumn.bSmart);
                            fnCreateInput(oTable, bRegex, bSmart, false, aoColumn.iFilterLength, aoColumn.iMaxLenght);
                            break;

                    }
                }
            });

            for (j = 0; j < aiCustomSearch_Indexes.length; j++) {
                //var index = aiCustomSearch_Indexes[j];
                var fnSearch_ = function () {
                    var id = oTable.attr("id");
                    return $("#" + id + "_range_from_" + aiCustomSearch_Indexes[j]).val() + properties.sRangeSeparator + $("#" + id + "_range_to_" + aiCustomSearch_Indexes[j]).val()
                }
                afnSearch_.push(fnSearch_);
            }

            if (oTable.fnSettings().oFeatures.bServerSide) {

                var fnServerDataOriginal = oTable.fnSettings().fnServerData;

                oTable.fnSettings().fnServerData = function (sSource, aoData, fnCallback) {

                    for (j = 0; j < aiCustomSearch_Indexes.length; j++) {
                        var index = aiCustomSearch_Indexes[j];

                        for (k = 0; k < aoData.length; k++) {
                            if (aoData[k].name == "sSearch_" + index)
                                aoData[k].value = afnSearch_[j]();
                        }
                    }
                    aoData.push({ "name": "sRangeSeparator", "value": properties.sRangeSeparator });

                    if (fnServerDataOriginal != null) {
                        try {
                            fnServerDataOriginal(sSource, aoData, fnCallback, oTable.fnSettings()); //TODO: See Issue 18
                        } catch (ex) {
                            fnServerDataOriginal(sSource, aoData, fnCallback);
                        }
                    }
                    else {
                        $.getJSON(sSource, aoData, function (json) {
                            fnCallback(json)
                        });
                    }
                };

            }

        });

    };




})(jQuery);
Iris.define("columnfilter", ["datatables"], function(){});

Iris.define('renderers/table',["jquery", "underscore", "iris", "datatables", "columnfilter"],
    function (JQ, _, iris) {
    /**
     * @class Table
     * A table with sort, filter, and search
     * 
     * @extends Renderer
     */
    var Table = iris.Renderer.extend({
        defaults: {
            scrollY: 300,
            element: "body",
            rowCallback: function () {}
        },
        initialize: function () {
            this.filterExclude = [];
        },
        /**
         * @method setData
         * Sets data. If the data is an {#link Array}, converts
         * @inheritdoc Renderer#setData
         */
        setData: function (data) {
            if (_.isArray(data)) {
                this.columns = _.first(data);
                this.data = _.rest(data);
            } else {
                this.columns = data.columns;
                this.data = data.data;
            }
            if (this.columns === undefined)
                this.columns = [];
            this.datafilter = this.datafilter || [];
            for (var i = 0; i < this.columns.length; i++) {
                if (!_.contains(this.datafilter, this.columns[i])) {
                    this.filterExclude.push(i);
                }
            }
        },
        /**
         * @method render
         * @inheritdoc Renderer#render
         */
        render: function (args) {
            var self = this;
            args = args ? _.clone(args) : {};
            var options = self.options;
            var $element = JQ(options.element);
            var elementOffset = $element.offset();
            var $table = JQ("<table>").addClass('table table-striped table-bordered');
            $element.empty().append($table);
            var cols = _.map(self.columns, function (d) {
                return { sTitle: d, type: "string" };
            });
            options.scrollY = Math.max($element.height()-100, options.scrollY);
            dataTableBehavior();
            $table.dataTable({
                sInfo: "muted",
                aaData: self.data,
                aoColumns: cols,
                sPaginationType: "bootstrap",
                bAutoWidth: true,
                sScrollY: options.scrollY,
                sScrollX: "100%",
                bPaginate: false,
                oLanguage: {
                    sLengthMenu: "_MENU_ per page",
                    sInfoThousands: ","
                },
                fnRowCallback: function (tr, data) {
                    options.rowCallback.call(tr, data);
                },
                fnDrawCallback: args.success
            });
            var thead = $table.parent().prev().find("thead");
            var theadRow = thead.find("tr");
            var clone    = JQ("<tr>");
            theadRow.children().each(function () {
                clone.append(JQ(this).clone());
            });
            thead.append(clone);
            $table.columnFilter({
                sPlaceHolder: "head:after",
                aoColumns: _.map(cols, function (d) {
                    return { type: "text", bRegex: true }
                })
            });
            thead.find("input").addClass("form-control input-xs");

            thead.find("tr").filter(":last").children().each(function () {
                var attributes = this.attributes;
                var i = attributes.length;
                while (i--)
                    this.removeAttributeNode(attributes[i]);
            });

            $table.on("filter", function (event, tbl) {
                var filtered = _.map(tbl.aiDisplay, function (index) {
                    return self.data[index];
                });
                self.trigger("table:filter", [ filtered ]);
            });
        }
    });
    
    function dataTableBehavior() {
        /* Set the defaults for DataTables initialization */
        JQ.extend(true, JQ.fn.dataTable.defaults, {
            sDom: "<'dt-top'Wlfr>" +
                 "<'table-wrapper't><'dt-bottom'ip>",
            fnInitComplete: function (table) {
                JQ('.dataTables_length').find("select").addClass("col-md-2");
                JQ('.dataTables_filter').find(":input")
                    .addClass("input-small search-query")
                    .attr("placeholder", "Search");
                JQ('.dataTables_length > label').contents().filter(function() {
                    return this.nodeType != 1;
                }).wrap("<span class='mini help-inline'>");
            },
            sPaginationType: "bootstrap",
            oLanguage: {
                sLengthMenu: "_MENU_ records per page",
                sInfo: "<b>_START_-_END_</b> of <b>_TOTAL_</b> entries",
                sSearch: ""
            }
        });


        /* Default class modification */
        JQ.extend(JQ.fn.dataTableExt.oStdClasses, {
            sWrapper: "dataTables_wrapper form-inline",
            sInfo: "mini muted dt-info"
        });

        /* API method to get paging information */
        JQ.fn.dataTableExt.oApi.fnPagingInfo = function (opts) {
            return {
                iStart:         opts._iDisplayStart,
                iEnd:           opts.fnDisplayEnd(),
                iLength:        opts._iDisplayLength,
                iTotal:         opts.fnRecordsTotal(),
                iFilteredTotal: opts.fnRecordsDisplay(),
                iPage:
                    Math.ceil(opts._iDisplayStart / opts._iDisplayLength),
                iTotalPages:
                    Math.ceil(opts.fnRecordsDisplay() / opts._iDisplayLength)
            };
        };


        /* Bootstrap style pagination control */
        JQ.extend(JQ.fn.dataTableExt.oPagination, {
            bootstrap: {
                fnInit: function (opts, nPaging, fnDraw) {
                    var oLang = opts.oLanguage.oPaginate;
                    var fnClickHandler = function (e) {
                        e.preventDefault();
                        if (opts.oApi._fnPageChange(opts, e.data.action)) {
                            fnDraw(opts);
                        }
                    };
                    JQ(nPaging).addClass('pagination pagination-mini').append(_.template(
                        '<ul>' +
                            '<li class="prev disabled">' +
                            '<a href="#">&larr;</a></li>'+
                            '<li class="next disabled">'+
                            '<a href="#">&rarr;</a></li>'+
                        '</ul>', { prev: oLang.sPrevious, next: oLang.sNext })
                    );
                    var els = JQ('a', nPaging);
                    JQ(els[0]).bind('click.DT',
                        { action: "previous" }, fnClickHandler);
                    JQ(els[1]).bind('click.DT',
                        { action: "next" }, fnClickHandler);
                },
                fnUpdate: function (opts, fnDraw) {
                    var iListLength = 5;
                    var oPaging = opts.oInstance.fnPagingInfo();
                    var an = opts.aanFeatures.p;
                    var i, j, sClass, iStart, iEnd, iHalf=Math.floor(iListLength/2);

                    if ( oPaging.iTotalPages < iListLength) {
                        iStart = 1;
                        iEnd = oPaging.iTotalPages;
                    }
                    else if (oPaging.iPage <= iHalf) {
                        iStart = 1;
                        iEnd = iListLength;
                    } else if (oPaging.iPage >= (oPaging.iTotalPages-iHalf)) {
                        iStart = oPaging.iTotalPages - iListLength + 1;
                        iEnd = oPaging.iTotalPages;
                    } else {
                        iStart = oPaging.iPage - iHalf + 1;
                        iEnd = iStart + iListLength - 1;
                    }

                    for (i=0, iLen=an.length ; i<iLen ; i++) {
                        // Remove the middle elements
                        JQ('li:gt(0)', an[i]).filter(':not(:last)').remove();

                        // Add the new list items and their event handlers
                        for (j=iStart ;j<=iEnd ;j++) {
                            sClass = (j==oPaging.iPage+1) ? 'class="active"' : '';
                            JQ('<li '+sClass+'><a href="#">'+j+'</a></li>')
                                .insertBefore(JQ('li:last', an[i])[0])
                                .bind('click', function (e) {
                                    e.preventDefault();
                                    opts._iDisplayStart = (parseInt(JQ('a', this).text(),10)-1) * oPaging.iLength;
                                    fnDraw(opts);
                                } );
                        }

                        // Add / remove disabled classes from the static elements
                        if (oPaging.iPage === 0) {
                            JQ('li:first', an[i]).addClass('disabled');
                        } else {
                            JQ('li:first', an[i]).removeClass('disabled');
                        }

                        if (oPaging.iPage === oPaging.iTotalPages-1 || oPaging.iTotalPages === 0) {
                            JQ('li:last', an[i]).addClass('disabled');
                        } else {
                            JQ('li:last', an[i]).removeClass('disabled');
                        }
                    }
                }
            }
        });


        /*
         * TableTools Bootstrap compatibility
         * Required TableTools 2.1+
         */
        if (JQ.fn.DataTable.TableTools) {
            // Set the classes that TableTools uses to something suitable for Bootstrap
            JQ.extend(true, JQ.fn.DataTable.TableTools.classes, {
                container: "DTTT btn-group",
                buttons: {
                    normal: "btn",
                    disabled: "disabled"
                },
                collection: {
                    container: "DTTT_dropdown dropdown-menu",
                    buttons: {
                        normal: "",
                        disabled: "disabled"
                    }
                },
                print: {
                    info: "DTTT_print_info modal"
                },
                select: {
                    row: "active"
                }
            });

            // Have the collection use a bootstrap compatible dropdown
            JQ.extend(true, JQ.fn.DataTable.TableTools.DEFAULTS.oTags, {
                collection: {
                    container: "ul",
                    button: "li",
                    liner: "a"
                }
            });
        }
    }
    
    iris.Renderer.register("Table", Table);
    return Table;
});
Iris.define('charts/bar',["iris", "jquery", "d3", "underscore"], function (Iris, JQ, d3, _) {
    function labelFontHeight(svg) {
        var text = svg.append("g").attr("class", "x axis")
            .append("svg:text").text("M");
        var height = text.node().getBBox().height;
        text.remove();
        return height;
    }

    /**
     * @class BarChart
     * A standard bar chart
     * 
     * @extends Renderer
     */
    var BarChart = Iris.Renderer.extend({
        defaults: {
            yTitle: 'Y Axis',
            axisLabelFontSize: 10,
            padding: 10,
            margin: { top: 20, right: 20, bottom: 40, left: 40 }
        },
        /**
         * @method setData
         * @inheritdoc Renderer#setData
         */
        setData: function (inData) {
            if (typeof inData === "object") {
                this.data = [];
                for (var key in inData) {
                    this.data.push(inData[key]);
                }
            } else {
                // It's a plain list
                this.data = inData;
            }
            return this;
        },
        /**
         * @method render
         * @inheritdoc Renderer#render
         */
        render: function () {
            var self = this;
            var margin = self.options.margin;
            var padding = self.options.padding;
            var $el = JQ(self.options.element);
            var width  = $el.width()  - margin.left - margin.right - padding;
            var height = $el.height() - margin.top  - margin.bottom - padding;
            $el.empty();

            var format = d3.format(".0");

            var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);
            var y = d3.scale.linear().range([height, 0]);

            var xAxis = d3.svg.axis().scale(x).orient("bottom");
            var yAxis =
                 d3.svg.axis().scale(y).orient("left").tickFormat(format);

            var svg = d3.select($el[0])
                .append("svg")
                .attr("width", $el.width() - padding)
                .attr("height", height)
                .style("margin", padding / 2)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");


            x.domain(_.map(self.data, function (d) {return d.x; }));
            y.domain([0, d3.max(self.data, function (d) { return d.y; }) ]);

            function drawXAxis(elem) {
                if (x.rangeBand() > labelFontHeight(svg)) {
                    elem.call(xAxis)
                        .selectAll("text")
                        .attr("transform", function (d) {
                            var bbox = this.getBBox();
                            return ["translate(",
                                -bbox.height, ",",
                                bbox.width / 2 + 5, ")",
                                "rotate(-90)"].join("");
                        });
                }
                return elem;
            }

            drawXAxis(svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height +")"))

            svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text(self.options.yTitle);

            svg.selectAll(".bar")
                .data(self.data)
                .enter()
                .append("rect")
                .attr("class", "bar")
                .attr("x", function (d) { return x(d.x); })
                .attr("width", x.rangeBand())
                .attr("y", function (d) { return y(d.y); })
                .attr("height", function (d) { return height - y(d.y); })
                .append("title").text(function (d) { return d.title });

            svg.on("click", change);

            function change() {
                var clone = _.clone(self.data);
                var x0 = x.domain(_.chain(clone).sort(this.checked
                    ? function(a, b) { return d3.ascending(a.x, b.x); }
                    : function(a, b) { return b.y - a.y; })
                    .map(function(d) { return d.x; })
                    .value());

                var transition = svg.transition()
                    .duration(750),
                    delay = function(d, i) {return i * 50; };

                transition.selectAll(".bar")
                    .delay(delay)
                    .attr("x", function(d) {
                    return x0(d.x);
                });

                drawXAxis(transition.select(".x.axis"))
                    .selectAll("g")
                    .delay(delay);
                    
                this.checked = !this.checked;
            }
            return self;
        }
    });
    Iris.Renderer.register("BarChart", BarChart);
    return BarChart;
})
;
// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).
var colorbrewer = {YlGn: {
3: ["#f7fcb9","#addd8e","#31a354"],
4: ["#ffffcc","#c2e699","#78c679","#238443"],
5: ["#ffffcc","#c2e699","#78c679","#31a354","#006837"],
6: ["#ffffcc","#d9f0a3","#addd8e","#78c679","#31a354","#006837"],
7: ["#ffffcc","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#005a32"],
8: ["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#005a32"],
9: ["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"]
},YlGnBu: {
3: ["#edf8b1","#7fcdbb","#2c7fb8"],
4: ["#ffffcc","#a1dab4","#41b6c4","#225ea8"],
5: ["#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494"],
6: ["#ffffcc","#c7e9b4","#7fcdbb","#41b6c4","#2c7fb8","#253494"],
7: ["#ffffcc","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#0c2c84"],
8: ["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#0c2c84"],
9: ["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"]
},GnBu: {
3: ["#e0f3db","#a8ddb5","#43a2ca"],
4: ["#f0f9e8","#bae4bc","#7bccc4","#2b8cbe"],
5: ["#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac"],
6: ["#f0f9e8","#ccebc5","#a8ddb5","#7bccc4","#43a2ca","#0868ac"],
7: ["#f0f9e8","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#08589e"],
8: ["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#08589e"],
9: ["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"]
},BuGn: {
3: ["#e5f5f9","#99d8c9","#2ca25f"],
4: ["#edf8fb","#b2e2e2","#66c2a4","#238b45"],
5: ["#edf8fb","#b2e2e2","#66c2a4","#2ca25f","#006d2c"],
6: ["#edf8fb","#ccece6","#99d8c9","#66c2a4","#2ca25f","#006d2c"],
7: ["#edf8fb","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#005824"],
8: ["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#005824"],
9: ["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"]
},PuBuGn: {
3: ["#ece2f0","#a6bddb","#1c9099"],
4: ["#f6eff7","#bdc9e1","#67a9cf","#02818a"],
5: ["#f6eff7","#bdc9e1","#67a9cf","#1c9099","#016c59"],
6: ["#f6eff7","#d0d1e6","#a6bddb","#67a9cf","#1c9099","#016c59"],
7: ["#f6eff7","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016450"],
8: ["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016450"],
9: ["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"]
},PuBu: {
3: ["#ece7f2","#a6bddb","#2b8cbe"],
4: ["#f1eef6","#bdc9e1","#74a9cf","#0570b0"],
5: ["#f1eef6","#bdc9e1","#74a9cf","#2b8cbe","#045a8d"],
6: ["#f1eef6","#d0d1e6","#a6bddb","#74a9cf","#2b8cbe","#045a8d"],
7: ["#f1eef6","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#034e7b"],
8: ["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#034e7b"],
9: ["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"]
},BuPu: {
3: ["#e0ecf4","#9ebcda","#8856a7"],
4: ["#edf8fb","#b3cde3","#8c96c6","#88419d"],
5: ["#edf8fb","#b3cde3","#8c96c6","#8856a7","#810f7c"],
6: ["#edf8fb","#bfd3e6","#9ebcda","#8c96c6","#8856a7","#810f7c"],
7: ["#edf8fb","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#6e016b"],
8: ["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#6e016b"],
9: ["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"]
},RdPu: {
3: ["#fde0dd","#fa9fb5","#c51b8a"],
4: ["#feebe2","#fbb4b9","#f768a1","#ae017e"],
5: ["#feebe2","#fbb4b9","#f768a1","#c51b8a","#7a0177"],
6: ["#feebe2","#fcc5c0","#fa9fb5","#f768a1","#c51b8a","#7a0177"],
7: ["#feebe2","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177"],
8: ["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177"],
9: ["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"]
},PuRd: {
3: ["#e7e1ef","#c994c7","#dd1c77"],
4: ["#f1eef6","#d7b5d8","#df65b0","#ce1256"],
5: ["#f1eef6","#d7b5d8","#df65b0","#dd1c77","#980043"],
6: ["#f1eef6","#d4b9da","#c994c7","#df65b0","#dd1c77","#980043"],
7: ["#f1eef6","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#91003f"],
8: ["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#91003f"],
9: ["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"]
},OrRd: {
3: ["#fee8c8","#fdbb84","#e34a33"],
4: ["#fef0d9","#fdcc8a","#fc8d59","#d7301f"],
5: ["#fef0d9","#fdcc8a","#fc8d59","#e34a33","#b30000"],
6: ["#fef0d9","#fdd49e","#fdbb84","#fc8d59","#e34a33","#b30000"],
7: ["#fef0d9","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#990000"],
8: ["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#990000"],
9: ["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"]
},YlOrRd: {
3: ["#ffeda0","#feb24c","#f03b20"],
4: ["#ffffb2","#fecc5c","#fd8d3c","#e31a1c"],
5: ["#ffffb2","#fecc5c","#fd8d3c","#f03b20","#bd0026"],
6: ["#ffffb2","#fed976","#feb24c","#fd8d3c","#f03b20","#bd0026"],
7: ["#ffffb2","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#b10026"],
8: ["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#b10026"],
9: ["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"]
},YlOrBr: {
3: ["#fff7bc","#fec44f","#d95f0e"],
4: ["#ffffd4","#fed98e","#fe9929","#cc4c02"],
5: ["#ffffd4","#fed98e","#fe9929","#d95f0e","#993404"],
6: ["#ffffd4","#fee391","#fec44f","#fe9929","#d95f0e","#993404"],
7: ["#ffffd4","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#8c2d04"],
8: ["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#8c2d04"],
9: ["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"]
},Purples: {
3: ["#efedf5","#bcbddc","#756bb1"],
4: ["#f2f0f7","#cbc9e2","#9e9ac8","#6a51a3"],
5: ["#f2f0f7","#cbc9e2","#9e9ac8","#756bb1","#54278f"],
6: ["#f2f0f7","#dadaeb","#bcbddc","#9e9ac8","#756bb1","#54278f"],
7: ["#f2f0f7","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#4a1486"],
8: ["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#4a1486"],
9: ["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"]
},Blues: {
3: ["#deebf7","#9ecae1","#3182bd"],
4: ["#eff3ff","#bdd7e7","#6baed6","#2171b5"],
5: ["#eff3ff","#bdd7e7","#6baed6","#3182bd","#08519c"],
6: ["#eff3ff","#c6dbef","#9ecae1","#6baed6","#3182bd","#08519c"],
7: ["#eff3ff","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#084594"],
8: ["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#084594"],
9: ["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"]
},Greens: {
3: ["#e5f5e0","#a1d99b","#31a354"],
4: ["#edf8e9","#bae4b3","#74c476","#238b45"],
5: ["#edf8e9","#bae4b3","#74c476","#31a354","#006d2c"],
6: ["#edf8e9","#c7e9c0","#a1d99b","#74c476","#31a354","#006d2c"],
7: ["#edf8e9","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#005a32"],
8: ["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#005a32"],
9: ["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"]
},Oranges: {
3: ["#fee6ce","#fdae6b","#e6550d"],
4: ["#feedde","#fdbe85","#fd8d3c","#d94701"],
5: ["#feedde","#fdbe85","#fd8d3c","#e6550d","#a63603"],
6: ["#feedde","#fdd0a2","#fdae6b","#fd8d3c","#e6550d","#a63603"],
7: ["#feedde","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#8c2d04"],
8: ["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#8c2d04"],
9: ["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"]
},Reds: {
3: ["#fee0d2","#fc9272","#de2d26"],
4: ["#fee5d9","#fcae91","#fb6a4a","#cb181d"],
5: ["#fee5d9","#fcae91","#fb6a4a","#de2d26","#a50f15"],
6: ["#fee5d9","#fcbba1","#fc9272","#fb6a4a","#de2d26","#a50f15"],
7: ["#fee5d9","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#99000d"],
8: ["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#99000d"],
9: ["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"]
},Greys: {
3: ["#f0f0f0","#bdbdbd","#636363"],
4: ["#f7f7f7","#cccccc","#969696","#525252"],
5: ["#f7f7f7","#cccccc","#969696","#636363","#252525"],
6: ["#f7f7f7","#d9d9d9","#bdbdbd","#969696","#636363","#252525"],
7: ["#f7f7f7","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525"],
8: ["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525"],
9: ["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"]
},PuOr: {
3: ["#f1a340","#f7f7f7","#998ec3"],
4: ["#e66101","#fdb863","#b2abd2","#5e3c99"],
5: ["#e66101","#fdb863","#f7f7f7","#b2abd2","#5e3c99"],
6: ["#b35806","#f1a340","#fee0b6","#d8daeb","#998ec3","#542788"],
7: ["#b35806","#f1a340","#fee0b6","#f7f7f7","#d8daeb","#998ec3","#542788"],
8: ["#b35806","#e08214","#fdb863","#fee0b6","#d8daeb","#b2abd2","#8073ac","#542788"],
9: ["#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788"],
10: ["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],
11: ["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"]
},BrBG: {
3: ["#d8b365","#f5f5f5","#5ab4ac"],
4: ["#a6611a","#dfc27d","#80cdc1","#018571"],
5: ["#a6611a","#dfc27d","#f5f5f5","#80cdc1","#018571"],
6: ["#8c510a","#d8b365","#f6e8c3","#c7eae5","#5ab4ac","#01665e"],
7: ["#8c510a","#d8b365","#f6e8c3","#f5f5f5","#c7eae5","#5ab4ac","#01665e"],
8: ["#8c510a","#bf812d","#dfc27d","#f6e8c3","#c7eae5","#80cdc1","#35978f","#01665e"],
9: ["#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e"],
10: ["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],
11: ["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"]
},PRGn: {
3: ["#af8dc3","#f7f7f7","#7fbf7b"],
4: ["#7b3294","#c2a5cf","#a6dba0","#008837"],
5: ["#7b3294","#c2a5cf","#f7f7f7","#a6dba0","#008837"],
6: ["#762a83","#af8dc3","#e7d4e8","#d9f0d3","#7fbf7b","#1b7837"],
7: ["#762a83","#af8dc3","#e7d4e8","#f7f7f7","#d9f0d3","#7fbf7b","#1b7837"],
8: ["#762a83","#9970ab","#c2a5cf","#e7d4e8","#d9f0d3","#a6dba0","#5aae61","#1b7837"],
9: ["#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837"],
10: ["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],
11: ["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"]
},PiYG: {
3: ["#e9a3c9","#f7f7f7","#a1d76a"],
4: ["#d01c8b","#f1b6da","#b8e186","#4dac26"],
5: ["#d01c8b","#f1b6da","#f7f7f7","#b8e186","#4dac26"],
6: ["#c51b7d","#e9a3c9","#fde0ef","#e6f5d0","#a1d76a","#4d9221"],
7: ["#c51b7d","#e9a3c9","#fde0ef","#f7f7f7","#e6f5d0","#a1d76a","#4d9221"],
8: ["#c51b7d","#de77ae","#f1b6da","#fde0ef","#e6f5d0","#b8e186","#7fbc41","#4d9221"],
9: ["#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221"],
10: ["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],
11: ["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"]
},RdBu: {
3: ["#ef8a62","#f7f7f7","#67a9cf"],
4: ["#ca0020","#f4a582","#92c5de","#0571b0"],
5: ["#ca0020","#f4a582","#f7f7f7","#92c5de","#0571b0"],
6: ["#b2182b","#ef8a62","#fddbc7","#d1e5f0","#67a9cf","#2166ac"],
7: ["#b2182b","#ef8a62","#fddbc7","#f7f7f7","#d1e5f0","#67a9cf","#2166ac"],
8: ["#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0","#92c5de","#4393c3","#2166ac"],
9: ["#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac"],
10: ["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],
11: ["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"]
},RdGy: {
3: ["#ef8a62","#ffffff","#999999"],
4: ["#ca0020","#f4a582","#bababa","#404040"],
5: ["#ca0020","#f4a582","#ffffff","#bababa","#404040"],
6: ["#b2182b","#ef8a62","#fddbc7","#e0e0e0","#999999","#4d4d4d"],
7: ["#b2182b","#ef8a62","#fddbc7","#ffffff","#e0e0e0","#999999","#4d4d4d"],
8: ["#b2182b","#d6604d","#f4a582","#fddbc7","#e0e0e0","#bababa","#878787","#4d4d4d"],
9: ["#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d"],
10: ["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],
11: ["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"]
},RdYlBu: {
3: ["#fc8d59","#ffffbf","#91bfdb"],
4: ["#d7191c","#fdae61","#abd9e9","#2c7bb6"],
5: ["#d7191c","#fdae61","#ffffbf","#abd9e9","#2c7bb6"],
6: ["#d73027","#fc8d59","#fee090","#e0f3f8","#91bfdb","#4575b4"],
7: ["#d73027","#fc8d59","#fee090","#ffffbf","#e0f3f8","#91bfdb","#4575b4"],
8: ["#d73027","#f46d43","#fdae61","#fee090","#e0f3f8","#abd9e9","#74add1","#4575b4"],
9: ["#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4"],
10: ["#a50026","#d73027","#f46d43","#fdae61","#fee090","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],
11: ["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"]
},Spectral: {
3: ["#fc8d59","#ffffbf","#99d594"],
4: ["#d7191c","#fdae61","#abdda4","#2b83ba"],
5: ["#d7191c","#fdae61","#ffffbf","#abdda4","#2b83ba"],
6: ["#d53e4f","#fc8d59","#fee08b","#e6f598","#99d594","#3288bd"],
7: ["#d53e4f","#fc8d59","#fee08b","#ffffbf","#e6f598","#99d594","#3288bd"],
8: ["#d53e4f","#f46d43","#fdae61","#fee08b","#e6f598","#abdda4","#66c2a5","#3288bd"],
9: ["#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd"],
10: ["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],
11: ["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"]
},RdYlGn: {
3: ["#fc8d59","#ffffbf","#91cf60"],
4: ["#d7191c","#fdae61","#a6d96a","#1a9641"],
5: ["#d7191c","#fdae61","#ffffbf","#a6d96a","#1a9641"],
6: ["#d73027","#fc8d59","#fee08b","#d9ef8b","#91cf60","#1a9850"],
7: ["#d73027","#fc8d59","#fee08b","#ffffbf","#d9ef8b","#91cf60","#1a9850"],
8: ["#d73027","#f46d43","#fdae61","#fee08b","#d9ef8b","#a6d96a","#66bd63","#1a9850"],
9: ["#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850"],
10: ["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],
11: ["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"]
},Accent: {
3: ["#7fc97f","#beaed4","#fdc086"],
4: ["#7fc97f","#beaed4","#fdc086","#ffff99"],
5: ["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0"],
6: ["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f"],
7: ["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17"],
8: ["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"]
},Dark2: {
3: ["#1b9e77","#d95f02","#7570b3"],
4: ["#1b9e77","#d95f02","#7570b3","#e7298a"],
5: ["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e"],
6: ["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02"],
7: ["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d"],
8: ["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"]
},Paired: {
3: ["#a6cee3","#1f78b4","#b2df8a"],
4: ["#a6cee3","#1f78b4","#b2df8a","#33a02c"],
5: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99"],
6: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c"],
7: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f"],
8: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00"],
9: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6"],
10: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a"],
11: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99"],
12: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"]
},Pastel1: {
3: ["#fbb4ae","#b3cde3","#ccebc5"],
4: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4"],
5: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6"],
6: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc"],
7: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd"],
8: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec"],
9: ["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]
},Pastel2: {
3: ["#b3e2cd","#fdcdac","#cbd5e8"],
4: ["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4"],
5: ["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9"],
6: ["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae"],
7: ["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc"],
8: ["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"]
},Set1: {
3: ["#e41a1c","#377eb8","#4daf4a"],
4: ["#e41a1c","#377eb8","#4daf4a","#984ea3"],
5: ["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00"],
6: ["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33"],
7: ["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628"],
8: ["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf"],
9: ["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"]
},Set2: {
3: ["#66c2a5","#fc8d62","#8da0cb"],
4: ["#66c2a5","#fc8d62","#8da0cb","#e78ac3"],
5: ["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854"],
6: ["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f"],
7: ["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494"],
8: ["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"]
},Set3: {
3: ["#8dd3c7","#ffffb3","#bebada"],
4: ["#8dd3c7","#ffffb3","#bebada","#fb8072"],
5: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3"],
6: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462"],
7: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69"],
8: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5"],
9: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9"],
10: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd"],
11: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5"],
12: ["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"]
}};

Iris.define("colorbrewer", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.colorbrewer;
    };
}(this)));

Iris.define('charts/pie',['jquery', 'd3', 'colorbrewer'], function (JQ, d3, colorbrewer) {
    function PieChart(options) {
        var self = this;
        options = options ? _.clone(options) : {};
        options.padding = (options.padding || 20);
        options.categories = (options.categories || 9);
        options.colorscheme = (options.colorscheme || 'Spectral'); 
        
        var $el = JQ(options.element);
        var data;
        self.setData = function (inData) {
            data = inData;
        };
        self.getData = function () {
            return data;
        };
        self.render = function () {
            var w = $el.width() - options.padding / 2;
            var h = $el.height() - options.padding / 2;
            $el.empty();
            var r = Math.min(w, h) / 2 - options.padding;
            var color = d3.scale.ordinal().range(
                colorbrewer[options.colorscheme][options.categories]);
            
            var piedata = [];
            for (i = 0; i < data.length; i++) {
                piedata.push({
                    label: data[i][0],
                    value: data[i][1]
                });
            }
            piedata.sort(function (a, b) { return a.value - b.value; });
            var vis = d3.select($el[0])
                .append("svg:svg").data([piedata])
                    .attr("width", w)
                    .attr("height", h)
                .append("svg:g")
                    .attr("transform", "translate(" + w/2 + "," + h/2 + ")");

            var arc = d3.svg.arc().outerRadius(r);

            var pie = d3.layout.pie().value(function(d) {
                return d.value;
            });

            var arcs = vis.selectAll("g.slice")
                .data(pie).enter().append("svg:g")
                .attr("class", "slice");

            arcs.append("svg:path").attr("fill", function (d, i) {
                return color(i);
            }).attr("d", arc);

            arcs.append("svg:text")
                .attr("transform", function (d) {
                    d.innerRadius = r - 90;
                    d.outerRadius = r;
                    d.angle = (d.endAngle + d.startAngle) / 2;
                    return "translate(" + arc.centroid(d) + ")rotate("+
                        (d.angle * 180 / Math.PI - 90)+")";
                })
                .attr("text-anchor", "middle")
                .attr("font-size", "10px")
                .text(function (d, i) { return piedata[i].label; });
            arcs.append("title").text(function (d) { return d.data.value; });
        }
    }
    return PieChart;
});

//fgnass.github.com/spin.js#v1.3.2

/**
 * Copyright (c) 2011-2013 Felix Gnass
 * Licensed under the MIT license
 */
(function(root, factory) {

  /* CommonJS */
  if (typeof exports == 'object')  module.exports = factory()

  /* AMD module */
  else if (typeof Iris.define == 'function' && Iris.define.amd) Iris.define('util/spin',factory)

  /* Browser global */
  else root.Spinner = factory()
}
(this, function() {
  

  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */
    , animations = {} /* Animation rules keyed by their name */
    , useCssAnimations /* Whether to use CSS animations or setTimeout */

  /**
   * Utility function to create elements. If no tag name is given,
   * a DIV is created. Optionally properties can be passed.
   */
  function createEl(tag, prop) {
    var el = document.createElement(tag || 'div')
      , n

    for(n in prop) el[n] = prop[n]
    return el
  }

  /**
   * Appends children and returns the parent.
   */
  function ins(parent /* child1, child2, ...*/) {
    for (var i=1, n=arguments.length; i<n; i++)
      parent.appendChild(arguments[i])

    return parent
  }

  /**
   * Insert a new stylesheet to hold the @keyframe or VML rules.
   */
  var sheet = (function() {
    var el = createEl('style', {type : 'text/css'})
    ins(document.getElementsByTagName('head')[0], el)
    return el.sheet || el.styleSheet
  }())

  /**
   * Creates an opacity keyframe animation rule and returns its name.
   * Since most mobile Webkits have timing issues with animation-delay,
   * we create separate rules for each line/segment.
   */
  function addAnimation(alpha, trail, i, lines) {
    var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-')
      , start = 0.01 + i/lines * 100
      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)
      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()
      , pre = prefix && '-' + prefix + '-' || ''

    if (!animations[name]) {
      sheet.insertRule(
        '@' + pre + 'keyframes ' + name + '{' +
        '0%{opacity:' + z + '}' +
        start + '%{opacity:' + alpha + '}' +
        (start+0.01) + '%{opacity:1}' +
        (start+trail) % 100 + '%{opacity:' + alpha + '}' +
        '100%{opacity:' + z + '}' +
        '}', sheet.cssRules.length)

      animations[name] = 1
    }

    return name
  }

  /**
   * Tries various vendor prefixes and returns the first supported property.
   */
  function vendor(el, prop) {
    var s = el.style
      , pp
      , i

    prop = prop.charAt(0).toUpperCase() + prop.slice(1)
    for(i=0; i<prefixes.length; i++) {
      pp = prefixes[i]+prop
      if(s[pp] !== undefined) return pp
    }
    if(s[prop] !== undefined) return prop
  }

  /**
   * Sets multiple style properties at once.
   */
  function css(el, prop) {
    for (var n in prop)
      el.style[vendor(el, n)||n] = prop[n]

    return el
  }

  /**
   * Fills in default values.
   */
  function merge(obj) {
    for (var i=1; i < arguments.length; i++) {
      var def = arguments[i]
      for (var n in def)
        if (obj[n] === undefined) obj[n] = def[n]
    }
    return obj
  }

  /**
   * Returns the absolute page-offset of the given element.
   */
  function pos(el) {
    var o = { x:el.offsetLeft, y:el.offsetTop }
    while((el = el.offsetParent))
      o.x+=el.offsetLeft, o.y+=el.offsetTop

    return o
  }

  /**
   * Returns the line color from the given string or array.
   */
  function getColor(color, idx) {
    return typeof color == 'string' ? color : color[idx % color.length]
  }

  // Built-in defaults

  var defaults = {
    lines: 12,            // The number of lines to draw
    length: 7,            // The length of each line
    width: 5,             // The line thickness
    radius: 10,           // The radius of the inner circle
    rotate: 0,            // Rotation offset
    corners: 1,           // Roundness (0..1)
    color: '#000',        // #rgb or #rrggbb
    direction: 1,         // 1: clockwise, -1: counterclockwise
    speed: 1,             // Rounds per second
    trail: 100,           // Afterglow percentage
    opacity: 1/4,         // Opacity of the lines
    fps: 20,              // Frames per second when using setTimeout()
    zIndex: 2e9,          // Use a high z-index by default
    className: 'spinner', // CSS class to assign to the element
    top: 'auto',          // center vertically
    left: 'auto',         // center horizontally
    position: 'relative'  // element position
  }

  /** The constructor */
  function Spinner(o) {
    if (typeof this == 'undefined') return new Spinner(o)
    this.opts = merge(o || {}, Spinner.defaults, defaults)
  }

  // Global defaults that override the built-ins:
  Spinner.defaults = {}

  merge(Spinner.prototype, {

    /**
     * Adds the spinner to the given target element. If this instance is already
     * spinning, it is automatically removed from its previous target b calling
     * stop() internally.
     */
    spin: function(target) {
      this.stop()

      var self = this
        , o = self.opts
        , el = self.el = css(createEl(0, {className: o.className}), {position: o.position, width: 0, zIndex: o.zIndex})
        , mid = o.radius+o.length+o.width
        , ep // element position
        , tp // target position

      if (target) {
        target.insertBefore(el, target.firstChild||null)
        tp = pos(target)
        ep = pos(el)
        css(el, {
          left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : parseInt(o.left, 10) + mid) + 'px',
          top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : parseInt(o.top, 10) + mid)  + 'px'
        })
      }

      el.setAttribute('role', 'progressbar')
      self.lines(el, self.opts)

      if (!useCssAnimations) {
        // No CSS animation support, use setTimeout() instead
        var i = 0
          , start = (o.lines - 1) * (1 - o.direction) / 2
          , alpha
          , fps = o.fps
          , f = fps/o.speed
          , ostep = (1-o.opacity) / (f*o.trail / 100)
          , astep = f/o.lines

        ;(function anim() {
          i++;
          for (var j = 0; j < o.lines; j++) {
            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)

            self.opacity(el, j * o.direction + start, alpha, o)
          }
          self.timeout = self.el && setTimeout(anim, ~~(1000/fps))
        })()
      }
      return self
    },

    /**
     * Stops and removes the Spinner.
     */
    stop: function() {
      var el = this.el
      if (el) {
        clearTimeout(this.timeout)
        if (el.parentNode) el.parentNode.removeChild(el)
        this.el = undefined
      }
      return this
    },

    /**
     * Internal method that draws the individual lines. Will be overwritten
     * in VML fallback mode below.
     */
    lines: function(el, o) {
      var i = 0
        , start = (o.lines - 1) * (1 - o.direction) / 2
        , seg

      function fill(color, shadow) {
        return css(createEl(), {
          position: 'absolute',
          width: (o.length+o.width) + 'px',
          height: o.width + 'px',
          background: color,
          boxShadow: shadow,
          transformOrigin: 'left',
          transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',
          borderRadius: (o.corners * o.width>>1) + 'px'
        })
      }

      for (; i < o.lines; i++) {
        seg = css(createEl(), {
          position: 'absolute',
          top: 1+~(o.width/2) + 'px',
          transform: o.hwaccel ? 'translate3d(0,0,0)' : '',
          opacity: o.opacity,
          animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1/o.speed + 's linear infinite'
        })

        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}))
        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))
      }
      return el
    },

    /**
     * Internal method that adjusts the opacity of a single line.
     * Will be overwritten in VML fallback mode below.
     */
    opacity: function(el, i, val) {
      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val
    }

  })


  function initVML() {

    /* Utility function to create a VML tag */
    function vml(tag, attr) {
      return createEl('<' + tag + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', attr)
    }

    // No CSS transforms but VML support, add a CSS rule for VML elements:
    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')

    Spinner.prototype.lines = function(el, o) {
      var r = o.length+o.width
        , s = 2*r

      function grp() {
        return css(
          vml('group', {
            coordsize: s + ' ' + s,
            coordorigin: -r + ' ' + -r
          }),
          { width: s, height: s }
        )
      }

      var margin = -(o.width+o.length)*2 + 'px'
        , g = css(grp(), {position: 'absolute', top: margin, left: margin})
        , i

      function seg(i, dx, filter) {
        ins(g,
          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),
            ins(css(vml('roundrect', {arcsize: o.corners}), {
                width: r,
                height: o.width,
                left: o.radius,
                top: -o.width>>1,
                filter: filter
              }),
              vml('fill', {color: getColor(o.color, i), opacity: o.opacity}),
              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change
            )
          )
        )
      }

      if (o.shadow)
        for (i = 1; i <= o.lines; i++)
          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')

      for (i = 1; i <= o.lines; i++) seg(i)
      return ins(el, g)
    }

    Spinner.prototype.opacity = function(el, i, val, o) {
      var c = el.firstChild
      o = o.shadow && o.lines || 0
      if (c && i+o < c.childNodes.length) {
        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild
        if (c) c.opacity = val
      }
    }
  }

  var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})

  if (!vendor(probe, 'transform') && probe.adj) initVML()
  else useCssAnimations = vendor(probe, 'animation')

  return Spinner

}));

Iris.define('util/progress',['jquery', 'underscore', 'util/spin'], function (JQ, _, Spinner) {
    var _BAR = "bar", _SPIN = "spin";
    var defaults = {
        fade: true,
        spinner: {},
        progress: {},
        type: _SPIN,
        initialWidth: "100%"
    };
    var spinnerDefaults = {
        length: 5,
        width: 2,
        radius: 5,
        corners: 1,
        rotate: 69,
        color: '#666',
        speed: 1.3,
        trail: 42
    };
    var progressCounter = 0;
    function create(options, id) {
        if (options.type == Progress.SPIN) {
            var spinner = new Spinner(options.spinner);
            return {
                show: function (container) { spinner.spin(container[0]) },
                hide: function () {
                    spinner.stop();
                    if (options.fade) JQ("#" + id).remove();
                }
            };
        } else {
            var div = JQ("<div>")
                .addClass("progress progress-striped active")
                .css("display", "none")
                .append(JQ("<div>").addClass("bar")
                    .css("width", options.width));
            return {
                show: function (container, message) {
                    container.append(div);
                    if (message) {
                        div.find("#progress-message").remove();
                        div.append(JQ("<span>")
                            .attr("id", "progress-message")
                            .text(message)
                        );
                    }
                    div.fadeIn();
                },
                hide: function () {
                    div.fadeOut(function () {
                        if (options.fade) JQ("#" + id).remove();
                    });
                },
                width: function (percent) {
                    div.find(".bar").css("width", percent);
                }
            };
        }
    }
    function Progress(options) {
        progressCounter++;
        options = options ? _.clone(options) : {};
        _.defaults(options, defaults);
        _.defaults(options.spinner, spinnerDefaults);
        options.width = options.initialWidth;
        var $el = JQ(options.element);
        var _id = "progress-container-" + progressCounter;
        var indicator;
        this.show = function (message) {
            var container;
            if (options.fade) {
                container = JQ("<div>")
                    .attr("id", _id)
                    .css("z-index", 30)
                    .css("background-color", "rgba(100%, 100%, 100%, 0.8)")
                    .css("position", "absolute")
                    .css("top", 0)
                    .css("left", 0)
                    .height($el.height())
                    .width($el.width());
                $el.append(container);
            } else {
                container = $el;
            }
            if (!indicator) {
                indicator = create(options, _id);
            }
            indicator.show(container, message);
        };
        this.progress = function (percent) {
            if (options.type == Progress.BAR) {
                if (!indicator) {
                    indicator = create(options);
                }
                indicator.width(percent);
            }
        };
        this.dismiss = function () {
            if (indicator) indicator.hide();
        };
        return this;
    }
    Progress.BAR  = _BAR;
    Progress.SPIN = _SPIN;
    return Progress;
});
Iris.define('util/dropdown',["jquery", "backbone", "underscore", "util/progress"],
function(JQ, Backbone, _, Progress) {
    var defaults = {
        container:    "body",
        listTemplate: "#ddListTemplate",
        itemTemplate: "#ddItemTemplate",
        copyTemplate: "#ddCopyTemplate",
        copyTarget:   null
    };
    
    function DropDownMenu(options) {
        var self = this;
        options = options ? _.clone(options) : {};
        _.defaults(options, defaults);
        options.container    = JQ(options.container);
        options.listTemplate = JQ(options.listTemplate);
        options.itemTemplate = JQ(options.itemTemplate);
        options.copyTemplate = JQ(options.copyTemplate);
        options.parseItem = (options.parseItem || function (data, item) {
            item.id    = data[0];
            item.title = data[1];
        });
        options.itemLink  = (options.itemLink  || function (item) {
            return "#" + item.id;
        });
        
        if (!options.itemTemplate.html()) {
            options.itemTemplate =
                JQ("<script>").attr("type", "text/template").html(
                    '<a href="<%= link %>"><%= title %></a>'
                );
        }
        if (!options.listTemplate.html()) {
            options.listTemplate = JQ("<script>")
                .attr("type", "text/template").html(
                '<li class="dropdown">' +
                '<a class="dropdown-toggle" id="<%= label %>" ' +
                'data-toggle="dropdown"data-target="#" href="#">' +
                '<%= title %> <b class="caret"></b></a>' +
                '<ul id="<%= listId %>" class="dropdown-menu" ' + 
                'role="menu" aria-labelledby="<%= label %>"></ul></li>');
        }
        if (!options.copyTemplate.html()) {
            options.copyTemplate = JQ("<script>").attr("type", "text/template")
                .html('<br/><small id="copy" class="muted"></small>');
        }
        var DDItem = Backbone.Model.extend({
            defaults: {
                title: null,
                link: null
            },
            parse: function (data) {
                this.parseItem(data, this);
                this.link = options.itemLink(this);
                return data;
            },
            parseItem: options.parseItem
        });
        var DDItemView = Backbone.View.extend({
            tagName: "li",
            template: _.template(options.itemTemplate.html()),
            events: {
                "click": "selectItem"
            },
            selectItem: function () {
                this.$el.parent().children().removeClass('active');
                this.$el.addClass('active');
                JQ(this.options.copyTarget).text(this.$el.text());
            },
            render: function() {
                this.$el.append(this.template(this.model));
                if (this.model.link == null) {
                    this.$el.addClass("disabled");
                }
                return this;
            }
        });

        var DDListView = Backbone.View.extend({
            el: options.container,
            itemView: DDItemView,
            template: _.template(options.listTemplate.html()),
            initialize: function() {
                this.collection.bind("sync", this.renderItems, this);
                if (this.options.copyTarget == null) {
                    JQ("#" + this.options.label)
                        .append(_.template(options.copyTemplate.html())());
                    this.options.copyTarget =
                        JQ("#" + this.options.label).find("#copy");
                }
                this.render();
            },
            render: function() {
                this.container = JQ(this.template({
                    label:  this.options.label,
                    listId: this.options.listId,
                    title:  this.options.title
                }));
                this.$el.append(this.container);
            },
            updateCopy: function (text) {
                JQ(this.options.copyTarget).text(text);
            },
            renderItems: function () {
                var $topics = this.$el.find("#" + this.options.listId);
                $topics.empty();
                if (this.collection.length) {
                    var items = options.sortBy
                        ? _.sortBy(this.collection.models, options.sortBy)
                        : this.collection.models;
                    _.each(items, function (item) {
                        var itemView = new this.itemView({
                            model: item, copyTarget: this.options.copyTarget
                        });
                        $topics.append(itemView.render().el);
                    }, this);
                } else {
                    $topics.append(JQ("<li>")
                        .css("padding", "5px")
                        .addClass("text-warning")
                        .text('No ' + this.options.name));
                }
            }
        });

        self.create = function (args) {
            args = args ? _.clone(args) : {};
            args.label = (args.label || args.name + "-label");
            args.title = (args.title || args.name);
            
            var itemParams = { type: args.itemType };
            if (args.parseItem) { itemParams.parseItem = args.parseItem; }
            var TypedDDItem = DDItem.extend(itemParams);
            TypedDDItem.type = args.itemType;
            
            var listParams = { model: TypedDDItem };
            listParams.parse = function (response) {
                if (args.listParse) { response = args.listParse(response) }
                return args.array && response != null
                    ? response[args.array] : response;
            }
            var ddList = new (Backbone.Collection.extend(listParams));
            var copyTarget = args.copyTarget || options.copyTarget;
            ddList.url = args.url;
            var ddListView = new DDListView({
                collection: ddList,
                label:      args.label,
                title:      args.title,
                name:       args.name,
                listId:     args.name + '-select',
                copyTarget: copyTarget
                
            });
            ddListView.fetch = function (options) {
                options = options ? _.clone(options) : {};
                var fetched = false;
                var spinTarget =
                    ddListView.$el.find("#" + this.options.listId).parent();
                var progress = new Progress({ element: spinTarget });
                setTimeout(function () {
                    if (!fetched) progress.show();
                }, 500);
                for (var opt in options.data) {
                    ddList[opt] = options.data[opt];
                }
                ddList.fetch({
                    success: function (collection, response, opts) {
                        progress.dismiss();
                        fetched = true;
                        if (options.success) {
                            options.success(collection, response, opts)
                        };
                        return collection;
                    },
                    error: function (collection, xhr) {
                        progress.dismiss();
                        throw new Error(xhr.responseText);
                    },
                    data: args.fetchData
                });
                return this;
            };
            ddListView.select = function (selected) {
                function doSelect() {
                    var item = ddList.get(selected);
                    if (item) 
                        ddListView.updateCopy(item.title);
                }
                doSelect();
                ddList.once("all", doSelect);
                return this;
            };
            return ddListView;
        }
    }
    return DropDownMenu;
});

Iris.define('util/syntax',[],function () {
	var Syntax = function (json) {
	    if (typeof json != 'string') {
	         json = JSON.stringify(json, undefined, 2);
	    }
	    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
	    return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
	        var cls = 'number';
	        if (/^"/.test(match)) {
	            if (/:$/.test(match)) {
	                cls = 'key';
	            } else {
	                cls = 'string';
	            }
	        } else if (/true|false/.test(match)) {
	            cls = 'boolean';
	        } else if (/null/.test(match)) {
	            cls = 'null';
	        }
	        return '<span class="' + cls + '">' + match + '</span>';
	    });
	}
    return Syntax;
});
Iris.define('text!templates/modal.html',[],function () { return '<div class="modal fade" style="z-index: <%= z %>" id="<%= id %>">\n    <div class="modal-dialog">\n        <div class="modal-content">\n            <% if (title) { %>\n                <div class="modal-header">\n                    <h3><%= title %></h3>\n                </div>\n            <% } %>\n            <div class="modal-body" id="<%= contentId %>">\n                <%= content %>\n            </div>\n            <div class="modal-footer">\n                <%= footer %>\n                <button class="btn" type="button" data-dismiss="modal" aria-hidden>Close</button>\n            </div>\n        </div>\n    </div>\n</div>\n        ';});

/**
* bootstrap.js v3.0.0 by @fat and @mdo
* Copyright 2013 Twitter Inc.
* http://www.apache.org/licenses/LICENSE-2.0
*/
if (!jQuery) { throw new Error("Bootstrap requires jQuery") }

/* ========================================================================
 * Bootstrap: transition.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#transitions
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      'WebkitTransition' : 'webkitTransitionEnd'
    , 'MozTransition'    : 'transitionend'
    , 'OTransition'      : 'oTransitionEnd otransitionend'
    , 'transition'       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this
    $(this).one($.support.transition.end, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#alerts
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.hasClass('alert') ? $this : $this.parent()
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      $parent.trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one($.support.transition.end, removeElement)
        .emulateTransitionEnd(150) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  var old = $.fn.alert

  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(window.jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#buttons
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element = $(element)
    this.options  = $.extend({}, Button.DEFAULTS, options)
  }

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state = state + 'Text'

    if (!data.resetText) $el.data('resetText', $el[val]())

    $el[val](data[state] || this.options[state])

    // push to event loop to allow forms to submit
    setTimeout(function () {
      state == 'loadingText' ?
        $el.addClass(d).attr(d, d) :
        $el.removeClass(d).removeAttr(d);
    }, 0)
  }

  Button.prototype.toggle = function () {
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
        .prop('checked', !this.$element.hasClass('active'))
        .trigger('change')
      if ($input.prop('type') === 'radio') $parent.find('.active').removeClass('active')
    }

    this.$element.toggleClass('active')
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  var old = $.fn.button

  $.fn.button = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document).on('click.bs.button.data-api', '[data-toggle^=button]', function (e) {
    var $btn = $(e.target)
    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
    $btn.button('toggle')
    e.preventDefault()
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#carousel
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      =
    this.sliding     =
    this.interval    =
    this.$active     =
    this.$items      = null

    this.options.pause == 'hover' && this.$element
      .on('mouseenter', $.proxy(this.pause, this))
      .on('mouseleave', $.proxy(this.cycle, this))
  }

  Carousel.DEFAULTS = {
    interval: 5000
  , pause: 'hover'
  , wrap: true
  }

  Carousel.prototype.cycle =  function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getActiveIndex = function () {
    this.$active = this.$element.find('.item.active')
    this.$items  = this.$active.parent().children()

    return this.$items.index(this.$active)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getActiveIndex()

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid', function () { that.to(pos) })
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition.end) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || $active[type]()
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var fallback  = type == 'next' ? 'first' : 'last'
    var that      = this

    if (!$next.length) {
      if (!this.options.wrap) return
      $next = this.$element.find('.item')[fallback]()
    }

    this.sliding = true

    isCycling && this.pause()

    var e = $.Event('slide.bs.carousel', { relatedTarget: $next[0], direction: direction })

    if ($next.hasClass('active')) return

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      this.$element.one('slid', function () {
        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])
        $nextIndicator && $nextIndicator.addClass('active')
      })
    }

    if ($.support.transition && this.$element.hasClass('slide')) {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one($.support.transition.end, function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () { that.$element.trigger('slid') }, 0)
        })
        .emulateTransitionEnd(600)
    } else {
      this.$element.trigger(e)
      if (e.isDefaultPrevented()) return
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger('slid')
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  var old = $.fn.carousel

  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {
    var $this   = $(this), href
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    $target.carousel(options)

    if (slideIndex = $this.attr('data-slide-to')) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  })

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      $carousel.carousel($carousel.data())
    })
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#collapse
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.transitioning = null

    if (this.options.parent) this.$parent = $(this.options.parent)
    if (this.options.toggle) this.toggle()
  }

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var actives = this.$parent && this.$parent.find('> .panel > .in')

    if (actives && actives.length) {
      var hasData = actives.data('bs.collapse')
      if (hasData && hasData.transitioning) return
      actives.collapse('hide')
      hasData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')
      [dimension](0)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('in')
        [dimension]('auto')
      this.transitioning = 0
      this.$element.trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
      [dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element
      [dimension](this.$element[dimension]())
      [0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse')
      .removeClass('in')

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .trigger('hidden.bs.collapse')
        .removeClass('collapsing')
        .addClass('collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one($.support.transition.end, $.proxy(complete, this))
      .emulateTransitionEnd(350)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  var old = $.fn.collapse

  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {
    var $this   = $(this), href
    var target  = $this.attr('data-target')
        || e.preventDefault()
        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7
    var $target = $(target)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()
    var parent  = $this.attr('data-parent')
    var $parent = parent && $(parent)

    if (!data || !data.transitioning) {
      if ($parent) $parent.find('[data-toggle=collapse][data-parent="' + parent + '"]').not($this).addClass('collapsed')
      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')
    }

    $target.collapse(option)
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#dropdowns
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle=dropdown]'
  var Dropdown = function (element) {
    var $el = $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we we use a backdrop because click events don't delegate
        $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
      }

      $parent.trigger(e = $.Event('show.bs.dropdown'))

      if (e.isDefaultPrevented()) return

      $parent
        .toggleClass('open')
        .trigger('shown.bs.dropdown')

      $this.focus()
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27)/.test(e.keyCode)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive || (isActive && e.keyCode == 27)) {
      if (e.which == 27) $parent.find(toggle).focus()
      return $this.click()
    }

    var $items = $('[role=menu] li:not(.divider):visible a', $parent)

    if (!$items.length) return

    var index = $items.index($items.filter(':focus'))

    if (e.keyCode == 38 && index > 0)                 index--                        // up
    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
    if (!~index)                                      index=0

    $items.eq(index).focus()
  }

  function clearMenus() {
    $(backdrop).remove()
    $(toggle).each(function (e) {
      var $parent = getParent($(this))
      if (!$parent.hasClass('open')) return
      $parent.trigger(e = $.Event('hide.bs.dropdown'))
      if (e.isDefaultPrevented()) return
      $parent.removeClass('open').trigger('hidden.bs.dropdown')
    })
  }

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  var old = $.fn.dropdown

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('dropdown')

      if (!data) $this.data('dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)

}(window.jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#modals
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options   = options
    this.$element  = $(element)
    this.$backdrop =
    this.isShown   = null

    if (this.options.remote) this.$element.load(this.options.remote)
  }

  Modal.DEFAULTS = {
      backdrop: true
    , keyboard: true
    , show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this[!this.isShown ? 'show' : 'hide'](_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.escape()

    this.$element.on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(document.body) // don't move modals dom position
      }

      that.$element.show()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element
        .addClass('in')
        .attr('aria-hidden', false)

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$element.find('.modal-dialog') // wait for modal to slide in
          .one($.support.transition.end, function () {
            that.$element.focus().trigger(e)
          })
          .emulateTransitionEnd(300) :
        that.$element.focus().trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .attr('aria-hidden', true)
      .off('click.dismiss.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one($.support.transition.end, $.proxy(this.hideModal, this))
        .emulateTransitionEnd(300) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
          this.$element.focus()
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keyup.dismiss.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.removeBackdrop()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that    = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
        .appendTo(document.body)

      this.$element.on('click.dismiss.modal', $.proxy(function (e) {
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus.call(this.$element[0])
          : this.hide.call(this)
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      $.support.transition && this.$element.hasClass('fade')?
        this.$backdrop
          .one($.support.transition.end, callback)
          .emulateTransitionEnd(150) :
        callback()

    } else if (callback) {
      callback()
    }
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  var old = $.fn.modal

  $.fn.modal = function (option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) //strip for ie7
    var option  = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    e.preventDefault()

    $target
      .modal(option, this)
      .one('hide', function () {
        $this.is(':visible') && $this.focus()
      })
  })

  $(document)
    .on('show.bs.modal',  '.modal', function () { $(document.body).addClass('modal-open') })
    .on('hidden.bs.modal', '.modal', function () { $(document.body).removeClass('modal-open') })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(window.jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#popovers
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.DEFAULTS = $.extend({} , $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right'
  , trigger: 'click'
  , content: ''
  , template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.arrow')
  }

  Popover.prototype.tip = function () {
    if (!this.$tip) this.$tip = $(this.options.template)
    return this.$tip
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  var old = $.fn.popover

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(window.jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#scrollspy
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    var href
    var process  = $.proxy(this.process, this)

    this.$element       = $(element).is('body') ? $(window) : $(element)
    this.$body          = $('body')
    this.$scrollElement = this.$element.on('scroll.bs.scroll-spy.data-api', process)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target
      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) //strip for ie7
      || '') + ' .nav li > a'
    this.offsets        = $([])
    this.targets        = $([])
    this.activeTarget   = null

    this.refresh()
    this.process()
  }

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.refresh = function () {
    var offsetMethod = this.$element[0] == window ? 'offset' : 'position'

    this.offsets = $([])
    this.targets = $([])

    var self     = this
    var $targets = this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#\w/.test(href) && $(href)

        return ($href
          && $href.length
          && [[ $href[offsetMethod]().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        self.offsets.push(this[0])
        self.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight
    var maxScroll    = scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets.last()[0]) && this.activate(i)
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])
        && this.activate( targets[i] )
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    $(this.selector)
      .parents('.active')
      .removeClass('active')

    var selector = this.selector
      + '[data-target="' + target + '"],'
      + this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length)  {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  var old = $.fn.scrollspy

  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      $spy.scrollspy($spy.data())
    })
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#tabs
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var previous = $ul.find('.active:last a')[0]
    var e        = $.Event('show.bs.tab', {
      relatedTarget: previous
    })

    $this.trigger(e)

    if (e.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.parent('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $this.trigger({
        type: 'shown.bs.tab'
      , relatedTarget: previous
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && $active.hasClass('fade')

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
        .removeClass('active')

      element.addClass('active')

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu')) {
        element.closest('li.dropdown').addClass('active')
      }

      callback && callback()
    }

    transition ?
      $active
        .one($.support.transition.end, next)
        .emulateTransitionEnd(150) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  var old = $.fn.tab

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  $(document).on('click.bs.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
    e.preventDefault()
    $(this).tab('show')
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.0.0
 * http://twbs.github.com/bootstrap/javascript.html#affix
 * ========================================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


+function ($) { 

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)
    this.$window = $(window)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element = $(element)
    this.affixed  =
    this.unpin    = null

    this.checkPosition()
  }

  Affix.RESET = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
    var scrollTop    = this.$window.scrollTop()
    var position     = this.$element.offset()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top()
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()

    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :
                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' :
                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false

    if (this.affixed === affix) return
    if (this.unpin) this.$element.css('top', '')

    this.affixed = affix
    this.unpin   = affix == 'bottom' ? position.top - scrollTop : null

    this.$element.removeClass(Affix.RESET).addClass('affix' + (affix ? '-' + affix : ''))

    if (affix == 'bottom') {
      this.$element.offset({ top: document.body.offsetHeight - offsetBottom - this.$element.height() })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom) data.offset.bottom = data.offsetBottom
      if (data.offsetTop)    data.offset.top    = data.offsetTop

      $spy.affix(data)
    })
  })

}(window.jQuery);

Iris.define("bootstrap", ["jquery"], function(){});

Iris.define('util/modal',["jquery", "underscore", "text!templates/modal.html", "bootstrap"],
function (JQ, _, html) {
    var defaults = {
        element: "body",
        z: 3000,
        title: null,
        content: "",
        footer: "",
        backdrop: true
    };
    var template = _.template(html);
    var modalCounter = 1;
    function Modal(options) {
        options = options ? _.clone(options) : {};
        _.defaults(options, defaults);
        if (options.id == null) {
            options.id = "modal-" + modalCounter;
        }
        if (options.contentId == null) {
            options.contentId = options.id + "-content";
        }
        modalCounter++;
        var modal = JQ(template(options));
        var modalBody   = modal.find(".modal-body");
        var modalFooter = modal.find(".modal-footer");
        var modalHeader = modal.find(".modal-header");
        var dialog      = modal.find(".modal-dialog");
        modal.footer = function (content) {
            if (content) {
                modalFooter.prepend(content);
            }
            return modalFooter;
        }
        modal.body = function (content) {
            if (content) {
                modalBody.empty().append(content);
            }
            return modalBody;
        }
        modal.emptyBody = function () {
            modalBody.empty();
        }
        modal.init = function () {
            if (options.element === undefined) {
                throw new Error("Nothing to which to append modal");
            }
            JQ(options.element).append(modal);
            if (options.width)  {
                dialog.width(options.width);
            }
            if (options.height) {
                var top = (JQ("body").height() - options.height);
                dialog.outerHeight(options.height);
                modalBody.outerHeight(dialog.innerHeight()
                    - modalHeader.outerHeight()
                    - modalFooter.outerHeight()
                    - top);
            }
        }
        modal.show = function () {
            modal.modal({ backdrop: options.backdrop });
        }
        modal.toggle = function () {
            modal.modal("toggle");
        }
        return modal;
    }
    return Modal;
});
Iris.define('util/viewport',[
    "jquery",
    "underscore",
    "util/progress",
    "util/syntax",
    "util/modal",
    "iris"
], function (JQ, _, Progress, Syntax, Modal, Iris) {
    var viewportCounter = 1;
    var defaults = {
        height: 400,
        parent: "body",
        title: "Viewport",
        toolbox: true,
        maximize: true,
        resizable: false,
        toolboxHides: false,
        sortContainer: null
    };
    var MaximizeModal = new Modal({
        backdrop: true,
        height: JQ(document).height() - 100,
        width:  JQ(document).width()  - 100
    });
    MaximizeModal.init();
    var ExportModal = new Modal({
        title: "Data Export",
        contentId: "export-content"
    });
    ExportModal.footer(
        JQ("<a>", { href: "#", download: "export.json" })
            .addClass("btn btn-primary")
            .append(JQ("<i>").addClass("fa fa-download-alt"))
            .append(" Download").click(function (e) {
                e.preventDefault();
                var uriContent =
                    "data:application/json," +
                    encodeURIComponent(JQ("#export-content").text());
                window.open(uriContent, "export.json");
                return false;
            }
        )
    );
    ExportModal.init();
    JQ(".viewport")
        .attr('unselectable', 'on')
        .css('user-select', 'none')
        .on('selectstart', false);

    /**
     * @class Viewport
     * A visual container for graphic elements. Includes a configurable toolbox
     * with various default functions, like maximization.
     * 
     * @constructor
     * 
     * @param {String|Number} id
     * @param {String|Object} parent
     * @param {String} title
     * @param {String} classes
     * @param {String|Number} height
     * @param {String|Number} width
     */
    function Viewport(options) {
        var self = this;
        options = options ? _.clone(options) : {};
        options.parent = JQ(options.parent);
        _.defaults(options, defaults);
        options.id = options.id || ["viewport", viewportCounter].join("-");
        viewportCounter++;
        
        var $viewport = JQ("<div>")
            .addClass("viewport")
            .attr("data-title", options.title)
            .attr("id", options.id + "-wrapper")
            .css("min-height", options.height)
            .css("min-width", options.width);
        if (options.classes !== undefined) {
            $viewport.addClass(options.classes);
        }
        var content = JQ("<div>")
            .addClass("viewport-content")
            .attr("id", options.id);
        content.progress = new Progress({ element: content });
        options.parent.append($viewport);
        $viewport.append(content);
        content
            .css("min-height", $viewport.height())
            .css("min-width", $viewport.width());
        $viewport.css("width", "99%");
        $viewport.css("height", "99%");

        if (options.toolbox) {
            self.toolbox = createToolbox(options);
            $viewport.append(self.toolbox);
            if (options.toolboxHides) {
                self.toolbox.hide();
                $viewport.on("mouseenter", function (e) {
                    e.preventDefault();
                    if (self.toolbox._isShown) return;
                    self.toolbox._isShown = true;
                    self.toolbox.show('fast');
                }).on("mouseleave", function (e) {
                    e.preventDefault();
                    self.toolbox._isShown = false;
                    self.toolbox.hide('fast');
                }).on("click", function (e) {
                    JQ(this).find(".dropdown-menu").toggle();
                    e.stopPropagation();
                });
            }
            if (options.sortContainer !== null) {
                var target = JQ(options.sortContainer);
                // target.sortable({
                //     containment: target,
                //     handle: ".drag-button",
                //     cancel: "",
                //     tolerance: "pointer",
                //     helper: "clone"
                // });
                // target.disableSelection();
            }
        }
        content.showError = function (params) {
            params = params ? _.clone(params) : {};
            params.message = params.message || "Viewport error";
            content.empty();
            content.append(JQ("<div>").addClass("alert alert-error")
                .append(JQ("<h3>").text("Error"))
                .append(JQ("<span>").html(params.message)));
        };
        content.addTool = function (tool) {
            return self.toolbox.find("#viewport-toolbox").append(
                JQ("<li>").append(tool)
            );
        };
        content.renderer = function (r) {
            if (r !== undefined) {
                self.renderer = r;
            }
            return self.renderer;
        };
        content.toolbox = function () {
            return self.toolbox;
        };
        var viewportState;
        MaximizeModal.on("shown.bs.modal", function () {
            var placeholder = JQ("<div>", { style: "display:none"});
            $viewport.before(placeholder);
            viewportState = {
                placeholder: placeholder,
                height:      $viewport.height(),
                width:       $viewport.width()
            };
            $viewport.height(MaximizeModal.body().height() - 42);
            MaximizeModal.body($viewport);
            self.toolbox.find("#btn-maximize").find("i")
                .removeClass().addClass("fa fa-expand");
            resetRendererBounds();
        });
        MaximizeModal.on("hidden.bs.modal", function () {
            $viewport.width(viewportState.width);
            $viewport.height(viewportState.height);
            viewportState.placeholder.before($viewport);
            viewportState.placeholder.remove();
            MaximizeModal.emptyBody();
            self.toolbox.find("#btn-maximize").find("i")
                .removeClass().addClass("fa fa-expand");
            resetRendererBounds();
        });
        
        function createToolbox(options) {
            var $toolbox = JQ("<div>")
                .addClass("viewport-toolbox btn-group btn-group-sm");
            $toolbox.append(JQ("<div>").addClass("btn-group btn-group-sm")
                .append(JQ("<a>", { href: "#", "data-toggle": "dropdown" })
                    .addClass("btn btn-default")
                    .html(JQ("<i>", { class: "fa fa-cog" }))
                    .dropdown()
                ).append(JQ("<ul>", {
                    id: "viewport-toolbox",
                    class: "dropdown-menu"
                }).append(JQ("<li>")
                    .append(JQ("<a>", { href: "#" + window.location.hash })
                        .html(JQ("<i>", { class: "fa fa-download" })
                            .append(" Export data")))
                    .click(function (event) {
                        event.preventDefault();
                        if (self.renderer === null) { return; }
                        var exportData = Syntax(self.renderer.getData());
                        JQ("#export-content").empty().append(JQ("<pre>")
                            .html(exportData)
                        );
                        ExportModal.show();
                        return false;
                    }))
                )
            );
            if (options.maximize) {
                $toolbox.append(JQ("<div>", { id: "btn-maximize" })
                    .addClass("btn btn-default")
                    .html(JQ("<i>", { class: "fa fa-expand" }))
                    .click(function () {
                        MaximizeModal.toggle();
                    }));
            }
            if (options.sortContainer !== null) {
                $toolbox.append(JQ("<div>")
                    .addClass("btn btn-default drag-button")
                    .html(JQ("<i>", { class: "fa fa-arrows" })));
            }
            return $toolbox;
        }
        function resetRendererBounds() {
            if (self.renderer) {
                content.outerHeight($viewport.height());
                content.outerWidth($viewport.width());
                self.renderer.render();
            }
        }
        return content;
    }
    return Viewport;
});


Iris.define('util/graph',['require'],function (require) {
    function Node(graph, meta) {
    	var _meta = {};
    	this.neighbors = function () {
			return graph.neighbors(this);
		};
        this.link = function (neighbor) {
			graph.link(this, neighbor);
            return this;
		};
        this.attribute = function (key, val) {
			_meta[key] = val;
            return this;
		};
        this.meta = function (input) {
            if (input) {
                for (var prop in input) {
                    _meta[prop] = input[prop];
                }
                return this;
            }
            return _meta;
        };
        this.get = function (key) { return _meta[key] },
        this.set = this.attribute;
        if (meta) this.meta(meta);
        return this;
    }
    function isNode(obj) {
        return obj instanceof Node;
    }
    
    function Edge(params) {
        params = params || {};
        this.source = params.source;
        this.target = params.target;
        this.meta   = params.meta;
        this.json   = function () {
            return {
                source: this.source,
                target: this.target,
                meta:   this.meta
            }
        }
    }

    function isInt(val) {
        return !isNaN(parseInt(val)) && (parseFloat(val) == parseInt(val)); 
    }

    var _INDEXED = new Object(1);
    var Graph = function (data, type) {
        var self = this;
        var idSequence = 0;
        var nodes = {};
        var edges = {};
        var lookup = {}; // Used for client node lookup by external ID
        
        self.link = function (n1, n2, meta) {
            function findId(obj) {
                if (isNode(obj)) { return obj._id }
                var n = lookup[obj];
                return n ? n._id : null;
            }
            n1 = findId(n1);
            n2 = findId(n2);
            var key = [n1, n2].sort().join(" ");
            return edges[key] = new Edge({
                source: nodes[n1],
                target: nodes[n2],
                meta: meta
            });
        }
        self.addNode = function (obj) {
            var node;
            if (isNode(obj)) {
                node = new Node(this, obj.meta());
                if (obj.get('id')) {
                    lookup[obj.get('id')] = node;
                }
            } else {
                node = new Node(this);
                if (typeof obj === "object") { // We're passed an assoc. list
                    node.meta(obj);
                } else if (obj != null) { // obj is an id (some scalar)
                    lookup[obj] = node;
                    node.set("id", obj);
                }
            }
            node._id = idSequence;
            nodes[idSequence++] = node;
            return node;
        }
        self.addEdge = function (edge) {
            if (edge instanceof Edge) { // Reassign source/target
                var source = this.findNode(edge.source.meta());
                var target = this.findNode(edge.target.meta());
                if (source != null && target != null) {
                    return self.link(source, target, edge.meta);
                }
                return null;
            }
            var meta = edge;
            return type == _INDEXED
                ? self.link(nodes[edge.source], nodes[edge.target], meta)
                : self.link(edge.source, edge.target, meta);
        }
        self.neighbors = function (node) {
            var arr = [];
            for (var key in edges) {
                var nodeId = node._id;
                var edge = edges[key];
                if (edge.source._id == nodeId)
                    arr.push(edge.target);
                else if (edge.target._id == nodeId)
                    arr.push(edge.source);
            }
            return arr;
        }
        self.nodes = function () {
            var arr = [];
            for (var k in nodes) { arr.push(nodes[k]); }
            return arr;
        }
        self.edges = function () {
            var arr = [];
            for (var k in edges) { arr.push(edges[k]); }
            return arr;
        }
        self.json = function () {
            var jsonNodes = [];
            var jsonEdges = [];
            var nodeIndex = {};
            for (var k in nodes) {
                var node = nodes[k];
                var meta = node.meta();
                var nodeId = node._id;
                nodeIndex[nodeId] = jsonNodes.length;
                jsonNodes.push(meta);
            }
            for (var key in edges) {
                var edge = edges[key];
                var attributes = {};
                for (var a in edge.meta) {
                    if (edge.meta.hasOwnProperty(a)) {
                        attributes[a] = edge.meta[a];
                    }
                }
                attributes.source = nodeIndex[edge.source._id],
                attributes.target = nodeIndex[edge.target._id]
                jsonEdges.push(attributes);
            }
            return { nodes: jsonNodes, edges: jsonEdges };
        }
        self.eachNode = function (callback) {
            for (var i in nodes) {
                callback(nodes[i]);
            }
        }
        self.findNode = function (meta) {
            for (var i in nodes) {
                var node = nodes[i];
                found = true;
                for (var prop in meta) {
                    if (node.get(prop) != meta[prop])
                        found = false;
                }
                if (found) {
                    return node;
                }
            }
            return null;
        }
        self.findEdge = function (meta1, meta2) {
            var n1 = isNode(meta1) ? meta1 : self.findNode(meta1);
            var n2 = isNode(meta2) ? meta2 : self.findNode(meta2);
            if (n1 != null && n2 != null) {
                for (var key in edges) {
                    var edge = edges[key];
                    if ((edge.source == n1 && edge.target == n2) ||
                        (edge.target == n1 && edge.source == n2)) 
                        return edge;
                }
            }
            return null;
        }

        function initializeData(graph) {
            if (graph.nodes) {
                graph.nodes.forEach(function (meta) {
                    self.addNode(meta);
                })
            }
            if (graph.edges) {
                graph.edges.forEach(function (edge) {
                    self.addEdge(edge);
                })
            }
        }
        if (data) initializeData(data);
        return self;
    }
    Graph.INDEXED = _INDEXED;

    return Graph;
});
Iris.define("iris", function(){});
    var wrapper = function (callback) {
        wrapper.require   = Iris.require;
        wrapper.requirejs = Iris.requirejs;
        wrapper.define    = Iris.define;
        Iris.require([
            'iris/root', 'iris/renderer', 'iris/widget',
            'util/viewport', 'charts/bar', 'renderers/table'
        ], function (Root, Renderer, Widget, Viewport) {
             wrapper.Widget   = Widget;
             wrapper.Renderer = Renderer;
             wrapper.Viewport = Viewport;
             wrapper.Root     = Root;
             callback(wrapper);
        });
    };
    window.Iris = wrapper;
    jQuery.noConflict(true);
 }());